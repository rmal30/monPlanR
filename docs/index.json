{
  "stats": {
    "suites": 87,
    "tests": 124,
    "passes": 124,
    "pending": 0,
    "failures": 0,
    "start": "2017-02-12T21:49:48.621Z",
    "end": "2017-02-12T21:49:50.174Z",
    "duration": 1553,
    "testsRegistered": 124,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "COMPONENT: Notification",
        "suites": [],
        "tests": [
          {
            "title": "Should render a notification title and a message",
            "fullTitle": "COMPONENT: Notification Should render a notification title and a message",
            "timedOut": false,
            "duration": 102,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, {\n    title: \"This is a test\",\n    message: \"Some message goes over here\"\n}));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(\"This is a test\");\nexpect(wrapper.text().replace(\"This is a test\", \"\").trim()).to.equal(\"Some message goes over here\");",
            "err": {},
            "isRoot": false,
            "uuid": "09f8e0d8-28f6-4558-846f-347963a02608",
            "parentUUID": "95991d16-ee51-4655-a359-d08698318fc7",
            "skipped": false
          },
          {
            "title": "Should have a default level to be info if it is not specified",
            "fullTitle": "COMPONENT: Notification Should have a default level to be info if it is not specified",
            "timedOut": false,
            "duration": 36,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, null)).find(\".info.message\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "7c27588b-bc6f-49aa-9079-d603ce169aa3",
            "parentUUID": "95991d16-ee51-4655-a359-d08698318fc7",
            "skipped": false
          },
          {
            "title": "Should follow a specified level",
            "fullTitle": "COMPONENT: Notification Should follow a specified level",
            "timedOut": false,
            "duration": 93,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"info\" })).find(\".info.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"warning\" })).find(\".warning.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"error\" })).find(\".negative.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"success\" })).find(\".positive.message\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "e59a825d-fbde-41ce-8c85-917a5d3a75e6",
            "parentUUID": "95991d16-ee51-4655-a359-d08698318fc7",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/components/Notifications/Notification.spec.jsx",
        "uuid": "95991d16-ee51-4655-a359-d08698318fc7",
        "fullFile": "/home/staff01/Documents/monPlanR/test/components/Notifications/Notification.spec.jsx",
        "passes": [
          {
            "title": "Should render a notification title and a message",
            "fullTitle": "COMPONENT: Notification Should render a notification title and a message",
            "timedOut": false,
            "duration": 102,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, {\n    title: \"This is a test\",\n    message: \"Some message goes over here\"\n}));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(\"This is a test\");\nexpect(wrapper.text().replace(\"This is a test\", \"\").trim()).to.equal(\"Some message goes over here\");",
            "err": {},
            "isRoot": false,
            "uuid": "09f8e0d8-28f6-4558-846f-347963a02608",
            "parentUUID": "95991d16-ee51-4655-a359-d08698318fc7",
            "skipped": false
          },
          {
            "title": "Should have a default level to be info if it is not specified",
            "fullTitle": "COMPONENT: Notification Should have a default level to be info if it is not specified",
            "timedOut": false,
            "duration": 36,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, null)).find(\".info.message\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "7c27588b-bc6f-49aa-9079-d603ce169aa3",
            "parentUUID": "95991d16-ee51-4655-a359-d08698318fc7",
            "skipped": false
          },
          {
            "title": "Should follow a specified level",
            "fullTitle": "COMPONENT: Notification Should follow a specified level",
            "timedOut": false,
            "duration": 93,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"info\" })).find(\".info.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"warning\" })).find(\".warning.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"error\" })).find(\".negative.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"success\" })).find(\".positive.message\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "e59a825d-fbde-41ce-8c85-917a5d3a75e6",
            "parentUUID": "95991d16-ee51-4655-a359-d08698318fc7",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 3,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 231
      },
      {
        "title": "COMPONENT: InsertTeachingPeriodButton",
        "suites": [
          {
            "title": "#addSemester()",
            "suites": [],
            "tests": [
              {
                "title": "should be called exactly once when main button has been clicked",
                "fullTitle": "COMPONENT: InsertTeachingPeriodButton #addSemester() should be called exactly once when main button has been clicked",
                "timedOut": false,
                "duration": 83,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var addSemester = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: identity,\n    addSemester: addSemester }));\nwrapper.find(\"Button\").simulate(\"click\");\nexpect(addSemester).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "8b969b9b-14eb-49b2-b404-d1f2a55f817c",
                "parentUUID": "490da6f7-ce42-47ef-8ac1-aed18affe2f9",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/components/TeachingPeriod/InsertTeachingPeriodButton.spec.jsx",
            "uuid": "490da6f7-ce42-47ef-8ac1-aed18affe2f9",
            "fullFile": "/home/staff01/Documents/monPlanR/test/components/TeachingPeriod/InsertTeachingPeriodButton.spec.jsx",
            "passes": [
              {
                "title": "should be called exactly once when main button has been clicked",
                "fullTitle": "COMPONENT: InsertTeachingPeriodButton #addSemester() should be called exactly once when main button has been clicked",
                "timedOut": false,
                "duration": 83,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var addSemester = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: identity,\n    addSemester: addSemester }));\nwrapper.find(\"Button\").simulate(\"click\");\nexpect(addSemester).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "8b969b9b-14eb-49b2-b404-d1f2a55f817c",
                "parentUUID": "490da6f7-ce42-47ef-8ac1-aed18affe2f9",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 83
          },
          {
            "title": "#insert()",
            "suites": [],
            "tests": [
              {
                "title": "should be called as many times as the number of insert teaching periods options upon click",
                "fullTitle": "COMPONENT: InsertTeachingPeriodButton #insert() should be called as many times as the number of insert teaching periods options upon click",
                "timedOut": false,
                "duration": 153,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var insert = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: insert,\n    addSemester: identity }));\nvar dropdownItems = wrapper.find(\".item\");\ndropdownItems.forEach(function (node) {\n    return node.simulate(\"click\");\n});\nexpect(insert).to.have.callCount(dropdownItems.length);",
                "err": {},
                "isRoot": false,
                "uuid": "daf37200-7e1b-4c90-9a19-e00c7f97c348",
                "parentUUID": "a03b9467-e6a4-4540-9f88-d6dcd8c8939b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/components/TeachingPeriod/InsertTeachingPeriodButton.spec.jsx",
            "uuid": "a03b9467-e6a4-4540-9f88-d6dcd8c8939b",
            "fullFile": "/home/staff01/Documents/monPlanR/test/components/TeachingPeriod/InsertTeachingPeriodButton.spec.jsx",
            "passes": [
              {
                "title": "should be called as many times as the number of insert teaching periods options upon click",
                "fullTitle": "COMPONENT: InsertTeachingPeriodButton #insert() should be called as many times as the number of insert teaching periods options upon click",
                "timedOut": false,
                "duration": 153,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var insert = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: insert,\n    addSemester: identity }));\nvar dropdownItems = wrapper.find(\".item\");\ndropdownItems.forEach(function (node) {\n    return node.simulate(\"click\");\n});\nexpect(insert).to.have.callCount(dropdownItems.length);",
                "err": {},
                "isRoot": false,
                "uuid": "daf37200-7e1b-4c90-9a19-e00c7f97c348",
                "parentUUID": "a03b9467-e6a4-4540-9f88-d6dcd8c8939b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 153
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/components/TeachingPeriod/InsertTeachingPeriodButton.spec.jsx",
        "uuid": "8421b8f2-7116-42b8-b718-4b8404609528",
        "fullFile": "/home/staff01/Documents/monPlanR/test/components/TeachingPeriod/InsertTeachingPeriodButton.spec.jsx",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "COMPONENT: SetuRating",
        "suites": [],
        "tests": [
          {
            "title": "should render two ratings",
            "fullTitle": "COMPONENT: SetuRating should render two ratings",
            "timedOut": false,
            "duration": 102,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, null)).find(\".rating\")).to.have.length(2);",
            "err": {},
            "isRoot": false,
            "uuid": "264645a7-195d-4544-aba5-0978766f629c",
            "parentUUID": "1c7c2caf-59e5-429f-8a98-2c2637448b94",
            "skipped": false
          },
          {
            "title": "should render a book if learning ratings is >=2.5",
            "fullTitle": "COMPONENT: SetuRating should render a book if learning ratings is >=2.5",
            "timedOut": false,
            "duration": 107,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 4.13 })).find(\".book\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.50 })).find(\".book\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "b4469331-4bd3-4eea-b8b1-3b0638b5022e",
            "parentUUID": "1c7c2caf-59e5-429f-8a98-2c2637448b94",
            "skipped": false
          },
          {
            "title": "should render a remove circle if learning ratings is <2.5",
            "fullTitle": "COMPONENT: SetuRating should render a remove circle if learning ratings is <2.5",
            "timedOut": false,
            "duration": 124,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 1.51 })).find(\".remove.circle\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.49 })).find(\".remove.circle\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "0ed11ed0-27fb-4438-9970-19441a699635",
            "parentUUID": "1c7c2caf-59e5-429f-8a98-2c2637448b94",
            "skipped": false
          },
          {
            "title": "should render a thumbs up if enjoyment ratings is >=2.5",
            "fullTitle": "COMPONENT: SetuRating should render a thumbs up if enjoyment ratings is >=2.5",
            "timedOut": false,
            "duration": 116,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 4.13 })).find(\".thumbs.up\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.50 })).find(\".thumbs.up\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "291dd865-7d6f-4bb9-9faf-b113bffe9f78",
            "parentUUID": "1c7c2caf-59e5-429f-8a98-2c2637448b94",
            "skipped": false
          },
          {
            "title": "should render a thumbs down if enjoyment ratings is <2.5",
            "fullTitle": "COMPONENT: SetuRating should render a thumbs down if enjoyment ratings is <2.5",
            "timedOut": false,
            "duration": 100,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 1.51 })).find(\".thumbs.down\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.49 })).find(\".thumbs.down\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "1f519b3f-6961-418d-a669-04e348229232",
            "parentUUID": "1c7c2caf-59e5-429f-8a98-2c2637448b94",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/components/Unit/SetuRating.spec.jsx",
        "uuid": "1c7c2caf-59e5-429f-8a98-2c2637448b94",
        "fullFile": "/home/staff01/Documents/monPlanR/test/components/Unit/SetuRating.spec.jsx",
        "passes": [
          {
            "title": "should render two ratings",
            "fullTitle": "COMPONENT: SetuRating should render two ratings",
            "timedOut": false,
            "duration": 102,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, null)).find(\".rating\")).to.have.length(2);",
            "err": {},
            "isRoot": false,
            "uuid": "264645a7-195d-4544-aba5-0978766f629c",
            "parentUUID": "1c7c2caf-59e5-429f-8a98-2c2637448b94",
            "skipped": false
          },
          {
            "title": "should render a book if learning ratings is >=2.5",
            "fullTitle": "COMPONENT: SetuRating should render a book if learning ratings is >=2.5",
            "timedOut": false,
            "duration": 107,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 4.13 })).find(\".book\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.50 })).find(\".book\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "b4469331-4bd3-4eea-b8b1-3b0638b5022e",
            "parentUUID": "1c7c2caf-59e5-429f-8a98-2c2637448b94",
            "skipped": false
          },
          {
            "title": "should render a remove circle if learning ratings is <2.5",
            "fullTitle": "COMPONENT: SetuRating should render a remove circle if learning ratings is <2.5",
            "timedOut": false,
            "duration": 124,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 1.51 })).find(\".remove.circle\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.49 })).find(\".remove.circle\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "0ed11ed0-27fb-4438-9970-19441a699635",
            "parentUUID": "1c7c2caf-59e5-429f-8a98-2c2637448b94",
            "skipped": false
          },
          {
            "title": "should render a thumbs up if enjoyment ratings is >=2.5",
            "fullTitle": "COMPONENT: SetuRating should render a thumbs up if enjoyment ratings is >=2.5",
            "timedOut": false,
            "duration": 116,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 4.13 })).find(\".thumbs.up\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.50 })).find(\".thumbs.up\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "291dd865-7d6f-4bb9-9faf-b113bffe9f78",
            "parentUUID": "1c7c2caf-59e5-429f-8a98-2c2637448b94",
            "skipped": false
          },
          {
            "title": "should render a thumbs down if enjoyment ratings is <2.5",
            "fullTitle": "COMPONENT: SetuRating should render a thumbs down if enjoyment ratings is <2.5",
            "timedOut": false,
            "duration": 100,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 1.51 })).find(\".thumbs.down\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.49 })).find(\".thumbs.down\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "1f519b3f-6961-418d-a669-04e348229232",
            "parentUUID": "1c7c2caf-59e5-429f-8a98-2c2637448b94",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 5,
        "totalPasses": 5,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 549
      },
      {
        "title": "COMPONENT: UnitMessage",
        "suites": [],
        "tests": [
          {
            "title": "should only render a unit code and a unit name",
            "fullTitle": "COMPONENT: UnitMessage should only render a unit code and a unit name",
            "timedOut": false,
            "duration": 49,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var unitCode = \"ABC1234\";\nvar unitName = \"Example unit\";\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: unitCode,\n    name: unitName }));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(unitCode);\nexpect(wrapper.find(\".message\").text().replace(unitCode, \"\").trim()).to.equal(unitName);",
            "err": {},
            "isRoot": false,
            "uuid": "d28b5e81-f272-477f-a816-8f2e980588e6",
            "parentUUID": "380765bc-063e-4ae6-8a54-70f341e0847d",
            "skipped": false
          },
          {
            "title": "should render a close button only when mouse is over the unit",
            "fullTitle": "COMPONENT: UnitMessage should render a close button only when mouse is over the unit",
            "timedOut": false,
            "duration": 97,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    hovering: false }));\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");\nwrapper.setProps({\n    hovering: true\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"visible\");\nwrapper.setProps({\n    hovering: false\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");",
            "err": {},
            "isRoot": false,
            "uuid": "50236723-2e47-4b9f-8db9-bdfcb3f1c4ba",
            "parentUUID": "380765bc-063e-4ae6-8a54-70f341e0847d",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/components/Unit/UnitMessage.spec.jsx",
        "uuid": "380765bc-063e-4ae6-8a54-70f341e0847d",
        "fullFile": "/home/staff01/Documents/monPlanR/test/components/Unit/UnitMessage.spec.jsx",
        "passes": [
          {
            "title": "should only render a unit code and a unit name",
            "fullTitle": "COMPONENT: UnitMessage should only render a unit code and a unit name",
            "timedOut": false,
            "duration": 49,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var unitCode = \"ABC1234\";\nvar unitName = \"Example unit\";\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: unitCode,\n    name: unitName }));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(unitCode);\nexpect(wrapper.find(\".message\").text().replace(unitCode, \"\").trim()).to.equal(unitName);",
            "err": {},
            "isRoot": false,
            "uuid": "d28b5e81-f272-477f-a816-8f2e980588e6",
            "parentUUID": "380765bc-063e-4ae6-8a54-70f341e0847d",
            "skipped": false
          },
          {
            "title": "should render a close button only when mouse is over the unit",
            "fullTitle": "COMPONENT: UnitMessage should render a close button only when mouse is over the unit",
            "timedOut": false,
            "duration": 97,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    hovering: false }));\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");\nwrapper.setProps({\n    hovering: true\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"visible\");\nwrapper.setProps({\n    hovering: false\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");",
            "err": {},
            "isRoot": false,
            "uuid": "50236723-2e47-4b9f-8db9-bdfcb3f1c4ba",
            "parentUUID": "380765bc-063e-4ae6-8a54-70f341e0847d",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 2,
        "totalPasses": 2,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 146
      },
      {
        "title": "REDUCER: Counter",
        "suites": [
          {
            "title": "ACTION: INCREMENT_CREDIT_POINTS",
            "suites": [],
            "tests": [
              {
                "title": "Should increment the credit point state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: INCREMENT_CREDIT_POINTS Should increment the credit point state by a given value",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 2, creditPoints: 0 };\nvar action = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 2,\n    creditPoints: 1\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "3ffc6ad4-5b5c-4dea-8f03-f57b2791383f",
                "parentUUID": "014026d3-5067-41be-9722-b353775ad2be",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "014026d3-5067-41be-9722-b353775ad2be",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should increment the credit point state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: INCREMENT_CREDIT_POINTS Should increment the credit point state by a given value",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 2, creditPoints: 0 };\nvar action = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 2,\n    creditPoints: 1\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "3ffc6ad4-5b5c-4dea-8f03-f57b2791383f",
                "parentUUID": "014026d3-5067-41be-9722-b353775ad2be",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 8
          },
          {
            "title": "ACTION: DECREMENT_CREDIT_POINTS",
            "suites": [],
            "tests": [
              {
                "title": "Should decrement the credit point state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state by a given value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "da8e7584-51a3-4e6f-9f82-7457c5a572fd",
                "parentUUID": "3d925d24-74d6-41f8-b36b-93021832d64d",
                "skipped": false
              },
              {
                "title": "Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 0\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "beb089e9-0a22-47e8-a373-9328171edf77",
                "parentUUID": "3d925d24-74d6-41f8-b36b-93021832d64d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "3d925d24-74d6-41f8-b36b-93021832d64d",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should decrement the credit point state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state by a given value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "da8e7584-51a3-4e6f-9f82-7457c5a572fd",
                "parentUUID": "3d925d24-74d6-41f8-b36b-93021832d64d",
                "skipped": false
              },
              {
                "title": "Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 0\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "beb089e9-0a22-47e8-a373-9328171edf77",
                "parentUUID": "3d925d24-74d6-41f8-b36b-93021832d64d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: INCREMENT_COST",
            "suites": [],
            "tests": [
              {
                "title": "Should increment the cost state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: INCREMENT_COST Should increment the cost state by a given value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 20, creditPoints: 13 };\nvar action = {\n    type: \"INCREMENT_COST\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 21,\n    creditPoints: 13\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "678a3ba8-f32c-4caf-bdae-29e7f1077746",
                "parentUUID": "9ff5fb25-cf01-4fe5-98f0-20b3498666f1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "9ff5fb25-cf01-4fe5-98f0-20b3498666f1",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should increment the cost state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: INCREMENT_COST Should increment the cost state by a given value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 20, creditPoints: 13 };\nvar action = {\n    type: \"INCREMENT_COST\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 21,\n    creditPoints: 13\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "678a3ba8-f32c-4caf-bdae-29e7f1077746",
                "parentUUID": "9ff5fb25-cf01-4fe5-98f0-20b3498666f1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: DECREMENT_COST",
            "suites": [],
            "tests": [
              {
                "title": "Should decrement the cost state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_COST Should decrement the cost state by a given value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "57413771-3320-4127-87f5-adfc94e057dd",
                "parentUUID": "e02f4248-c6e3-4509-8422-9a8c6d1ee015",
                "skipped": false
              },
              {
                "title": "Should decrement the cost state to 0 if a value given is larger than the current credit point value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_COST Should decrement the cost state to 0 if a value given is larger than the current credit point value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 0,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "07af734c-94e9-4de8-90e1-12c497a48e48",
                "parentUUID": "e02f4248-c6e3-4509-8422-9a8c6d1ee015",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "e02f4248-c6e3-4509-8422-9a8c6d1ee015",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should decrement the cost state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_COST Should decrement the cost state by a given value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "57413771-3320-4127-87f5-adfc94e057dd",
                "parentUUID": "e02f4248-c6e3-4509-8422-9a8c6d1ee015",
                "skipped": false
              },
              {
                "title": "Should decrement the cost state to 0 if a value given is larger than the current credit point value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_COST Should decrement the cost state to 0 if a value given is larger than the current credit point value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 0,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "07af734c-94e9-4de8-90e1-12c497a48e48",
                "parentUUID": "e02f4248-c6e3-4509-8422-9a8c6d1ee015",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: CLEAR_COURSE",
            "suites": [],
            "tests": [
              {
                "title": "Should reset the cost and credit point counters to 0",
                "fullTitle": "REDUCER: Counter ACTION: CLEAR_COURSE Should reset the cost and credit point counters to 0",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d800cd00-db27-469d-9dd2-00fead9cdf24",
                "parentUUID": "217aaeb5-12f9-454f-a0ea-80b13ed704fe",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "217aaeb5-12f9-454f-a0ea-80b13ed704fe",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should reset the cost and credit point counters to 0",
                "fullTitle": "REDUCER: Counter ACTION: CLEAR_COURSE Should reset the cost and credit point counters to 0",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d800cd00-db27-469d-9dd2-00fead9cdf24",
                "parentUUID": "217aaeb5-12f9-454f-a0ea-80b13ed704fe",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: REMOVE_TEACHING_PERIOD",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly go through and decrement the counters for each value ",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_TEACHING_PERIOD Should correctly go through and decrement the counters for each value ",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { Cost: 2, CreditPoints: 20 }, { Cost: 5, CreditPoints: 10 }, null]\n};\nvar stateAfter = { cost: 43, creditPoints: 10 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "2a39af0d-294d-4089-9b67-5600100078b6",
                "parentUUID": "85d87a15-7689-4d45-8a5c-f11e4e4b8055",
                "skipped": false
              },
              {
                "title": "Should not decrement the counters below 0 ",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_TEACHING_PERIOD Should not decrement the counters below 0 ",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { Cost: 25, CreditPoints: 20 }, { Cost: 30, CreditPoints: 30 }, { Cost: 0, CreditPoints: 10 }]\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "df32ae21-28b0-467a-a138-d5acb4578dd7",
                "parentUUID": "85d87a15-7689-4d45-8a5c-f11e4e4b8055",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "85d87a15-7689-4d45-8a5c-f11e4e4b8055",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should correctly go through and decrement the counters for each value ",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_TEACHING_PERIOD Should correctly go through and decrement the counters for each value ",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { Cost: 2, CreditPoints: 20 }, { Cost: 5, CreditPoints: 10 }, null]\n};\nvar stateAfter = { cost: 43, creditPoints: 10 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "2a39af0d-294d-4089-9b67-5600100078b6",
                "parentUUID": "85d87a15-7689-4d45-8a5c-f11e4e4b8055",
                "skipped": false
              },
              {
                "title": "Should not decrement the counters below 0 ",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_TEACHING_PERIOD Should not decrement the counters below 0 ",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { Cost: 25, CreditPoints: 20 }, { Cost: 30, CreditPoints: 30 }, { Cost: 0, CreditPoints: 10 }]\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "df32ae21-28b0-467a-a138-d5acb4578dd7",
                "parentUUID": "85d87a15-7689-4d45-8a5c-f11e4e4b8055",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: REMOVE_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly decrement the counters based on the given units creditpoints and cost",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_UNIT Should correctly decrement the counters based on the given units creditpoints and cost",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 20 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "81a3a4b2-57bc-4ec0-be28-6d89044f2b0a",
                "parentUUID": "09279a07-ae4c-4f59-85cd-6c6e011c0fdb",
                "skipped": false
              },
              {
                "title": "Should not decrement the counters below 0",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_UNIT Should not decrement the counters below 0",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "8e677542-0474-4573-8893-658902a659df",
                "parentUUID": "09279a07-ae4c-4f59-85cd-6c6e011c0fdb",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "09279a07-ae4c-4f59-85cd-6c6e011c0fdb",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should correctly decrement the counters based on the given units creditpoints and cost",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_UNIT Should correctly decrement the counters based on the given units creditpoints and cost",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 20 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "81a3a4b2-57bc-4ec0-be28-6d89044f2b0a",
                "parentUUID": "09279a07-ae4c-4f59-85cd-6c6e011c0fdb",
                "skipped": false
              },
              {
                "title": "Should not decrement the counters below 0",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_UNIT Should not decrement the counters below 0",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "8e677542-0474-4573-8893-658902a659df",
                "parentUUID": "09279a07-ae4c-4f59-85cd-6c6e011c0fdb",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: ADD_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly increment the counters when a unit is added to the plan",
                "fullTitle": "REDUCER: Counter ACTION: ADD_UNIT Should correctly increment the counters when a unit is added to the plan",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"ADD_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 30 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0ad4918a-fc8b-4760-9e4c-68bbbc1279d5",
                "parentUUID": "ac282028-23ae-4b9e-9be3-2615ac829494",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "ac282028-23ae-4b9e-9be3-2615ac829494",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should correctly increment the counters when a unit is added to the plan",
                "fullTitle": "REDUCER: Counter ACTION: ADD_UNIT Should correctly increment the counters when a unit is added to the plan",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"ADD_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 30 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0ad4918a-fc8b-4760-9e4c-68bbbc1279d5",
                "parentUUID": "ac282028-23ae-4b9e-9be3-2615ac829494",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: DECREASE_STUDY_LOAD",
            "suites": [],
            "tests": [
              {
                "title": "Should not decrease counters if there are no units in the overload column",
                "fullTitle": "REDUCER: Counter ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units in the overload column",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: []\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "59d2febd-19ff-4470-8a6e-eb49f85db9d9",
                "parentUUID": "824b1dca-1716-48a2-98e4-b1c8b497d7b7",
                "skipped": false
              },
              {
                "title": "Should not decrease counters if there are no units which have values in the overload column",
                "fullTitle": "REDUCER: Counter ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units which have values in the overload column",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [null, {}]\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "ad48bd0f-7648-4bba-af00-af712ee9e1e7",
                "parentUUID": "824b1dca-1716-48a2-98e4-b1c8b497d7b7",
                "skipped": false
              },
              {
                "title": "Should decrease counters correctly for units in the overload column",
                "fullTitle": "REDUCER: Counter ACTION: DECREASE_STUDY_LOAD Should decrease counters correctly for units in the overload column",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [{\n        CreditPoints: 6,\n        Cost: 1134\n    }, {\n        CreditPoints: 12,\n        Cost: 2256\n    }]\n};\nvar stateAfter = { cost: 36610, creditPoints: 126 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "fc021b0f-7e6c-4899-b08f-cc687183d178",
                "parentUUID": "824b1dca-1716-48a2-98e4-b1c8b497d7b7",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "824b1dca-1716-48a2-98e4-b1c8b497d7b7",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should not decrease counters if there are no units in the overload column",
                "fullTitle": "REDUCER: Counter ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units in the overload column",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: []\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "59d2febd-19ff-4470-8a6e-eb49f85db9d9",
                "parentUUID": "824b1dca-1716-48a2-98e4-b1c8b497d7b7",
                "skipped": false
              },
              {
                "title": "Should not decrease counters if there are no units which have values in the overload column",
                "fullTitle": "REDUCER: Counter ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units which have values in the overload column",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [null, {}]\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "ad48bd0f-7648-4bba-af00-af712ee9e1e7",
                "parentUUID": "824b1dca-1716-48a2-98e4-b1c8b497d7b7",
                "skipped": false
              },
              {
                "title": "Should decrease counters correctly for units in the overload column",
                "fullTitle": "REDUCER: Counter ACTION: DECREASE_STUDY_LOAD Should decrease counters correctly for units in the overload column",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [{\n        CreditPoints: 6,\n        Cost: 1134\n    }, {\n        CreditPoints: 12,\n        Cost: 2256\n    }]\n};\nvar stateAfter = { cost: 36610, creditPoints: 126 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "fc021b0f-7e6c-4899-b08f-cc687183d178",
                "parentUUID": "824b1dca-1716-48a2-98e4-b1c8b497d7b7",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "DEFAULT",
            "suites": [],
            "tests": [
              {
                "title": "Should not change state if it does not recognise an action",
                "fullTitle": "REDUCER: Counter DEFAULT Should not change state if it does not recognise an action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "30924402-b062-49f7-86c7-e8a692fcc11d",
                "parentUUID": "eb9ba4be-8ffe-483d-8c0b-1d1c6b30762c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "eb9ba4be-8ffe-483d-8c0b-1d1c6b30762c",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should not change state if it does not recognise an action",
                "fullTitle": "REDUCER: Counter DEFAULT Should not change state if it does not recognise an action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "30924402-b062-49f7-86c7-e8a692fcc11d",
                "parentUUID": "eb9ba4be-8ffe-483d-8c0b-1d1c6b30762c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/reducers/Counter.spec.js",
        "uuid": "ef401468-0195-4f84-978d-e6c3e6767363",
        "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "REDUCER: CourseStructure",
        "suites": [
          {
            "title": "ACTION: INSERT_TEACHING_PERIOD",
            "suites": [],
            "tests": [
              {
                "title": "Should insert a teaching period with the given info correctly into middle of array",
                "fullTitle": "REDUCER: CourseStructure ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into middle of array",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2018,\n    code: \"S2-01\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e3fc2471-c4cb-4fa3-945c-ea9cfa5f1c6d",
                "parentUUID": "26a28bea-1e90-49b7-bcc9-72f333f66589",
                "skipped": false
              },
              {
                "title": "Should insert a teaching period with the given info correctly into start of array",
                "fullTitle": "REDUCER: CourseStructure ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into start of array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2016,\n    code: \"S2-01\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2016, code: \"S2-01\", units: [null, null, null, null] }, { year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7ad5a59c-0b51-4c39-841b-0887636641f9",
                "parentUUID": "26a28bea-1e90-49b7-bcc9-72f333f66589",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "26a28bea-1e90-49b7-bcc9-72f333f66589",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should insert a teaching period with the given info correctly into middle of array",
                "fullTitle": "REDUCER: CourseStructure ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into middle of array",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2018,\n    code: \"S2-01\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e3fc2471-c4cb-4fa3-945c-ea9cfa5f1c6d",
                "parentUUID": "26a28bea-1e90-49b7-bcc9-72f333f66589",
                "skipped": false
              },
              {
                "title": "Should insert a teaching period with the given info correctly into start of array",
                "fullTitle": "REDUCER: CourseStructure ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into start of array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2016,\n    code: \"S2-01\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2016, code: \"S2-01\", units: [null, null, null, null] }, { year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7ad5a59c-0b51-4c39-841b-0887636641f9",
                "parentUUID": "26a28bea-1e90-49b7-bcc9-72f333f66589",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 6
          },
          {
            "title": "ACTION: REMOVE_TEACHING_PERIOD",
            "suites": [],
            "tests": [
              {
                "title": "Should remove a teaching period at the given index",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the given index",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b78c4d70-45cc-4b26-881c-ac6a20706cbd",
                "parentUUID": "9c669b13-3a18-4d88-bc78-1fcc02b6f20f",
                "skipped": false
              },
              {
                "title": "Should remove a teaching period at the start of the array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the start of the array",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "83695818-ad28-443b-8986-1481c10a1cb3",
                "parentUUID": "9c669b13-3a18-4d88-bc78-1fcc02b6f20f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "9c669b13-3a18-4d88-bc78-1fcc02b6f20f",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should remove a teaching period at the given index",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the given index",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b78c4d70-45cc-4b26-881c-ac6a20706cbd",
                "parentUUID": "9c669b13-3a18-4d88-bc78-1fcc02b6f20f",
                "skipped": false
              },
              {
                "title": "Should remove a teaching period at the start of the array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the start of the array",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "83695818-ad28-443b-8986-1481c10a1cb3",
                "parentUUID": "9c669b13-3a18-4d88-bc78-1fcc02b6f20f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 9
          },
          {
            "title": "ACTION: APPEND_TEACHING_PERIOD",
            "suites": [],
            "tests": [
              {
                "title": "Should add the given teaching period to the end of the array",
                "fullTitle": "REDUCER: CourseStructure ACTION: APPEND_TEACHING_PERIOD Should add the given teaching period to the end of the array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"APPEND_TEACHING_PERIOD\",\n    year: 2020,\n    code: \"S2-01\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }, { year: 2020, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "39712f23-f1ef-4f64-9104-c6c215764992",
                "parentUUID": "ca4c689a-7cae-4796-8004-f772fcd01600",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "ca4c689a-7cae-4796-8004-f772fcd01600",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should add the given teaching period to the end of the array",
                "fullTitle": "REDUCER: CourseStructure ACTION: APPEND_TEACHING_PERIOD Should add the given teaching period to the end of the array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"APPEND_TEACHING_PERIOD\",\n    year: 2020,\n    code: \"S2-01\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }, { year: 2020, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "39712f23-f1ef-4f64-9104-c6c215764992",
                "parentUUID": "ca4c689a-7cae-4796-8004-f772fcd01600",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: INCREASE_STUDY_LOAD",
            "suites": [],
            "tests": [
              {
                "title": "Should increase the study load if the study load is less than 4",
                "fullTitle": "REDUCER: CourseStructure ACTION: INCREASE_STUDY_LOAD Should increase the study load if the study load is less than 4",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "733f774c-a1bf-434f-a5f1-505737f09823",
                "parentUUID": "0f0da17d-fbdc-45ae-a291-8dd2e5fd8e7a",
                "skipped": false
              },
              {
                "title": "Should not increase the study load if the study load is 6 or greater",
                "fullTitle": "REDUCER: CourseStructure ACTION: INCREASE_STUDY_LOAD Should not increase the study load if the study load is 6 or greater",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null, null] }],\n    numberOfUnits: 6\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null, null] }],\n    numberOfUnits: 6\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "3ca1eb57-8bf4-42d4-8e93-5ef3912feed8",
                "parentUUID": "0f0da17d-fbdc-45ae-a291-8dd2e5fd8e7a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "0f0da17d-fbdc-45ae-a291-8dd2e5fd8e7a",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should increase the study load if the study load is less than 4",
                "fullTitle": "REDUCER: CourseStructure ACTION: INCREASE_STUDY_LOAD Should increase the study load if the study load is less than 4",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "733f774c-a1bf-434f-a5f1-505737f09823",
                "parentUUID": "0f0da17d-fbdc-45ae-a291-8dd2e5fd8e7a",
                "skipped": false
              },
              {
                "title": "Should not increase the study load if the study load is 6 or greater",
                "fullTitle": "REDUCER: CourseStructure ACTION: INCREASE_STUDY_LOAD Should not increase the study load if the study load is 6 or greater",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null, null] }],\n    numberOfUnits: 6\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null, null] }],\n    numberOfUnits: 6\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "3ca1eb57-8bf4-42d4-8e93-5ef3912feed8",
                "parentUUID": "0f0da17d-fbdc-45ae-a291-8dd2e5fd8e7a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: DECREASE_STUDY_LOAD",
            "suites": [],
            "tests": [
              {
                "title": "Should decrease the study load if the study load is greater than 4",
                "fullTitle": "REDUCER: CourseStructure ACTION: DECREASE_STUDY_LOAD Should decrease the study load if the study load is greater than 4",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "889855b9-c240-43a7-8c2f-8d0aecfccd78",
                "parentUUID": "f3fdbc2e-a399-4ade-95cc-c767132a749f",
                "skipped": false
              },
              {
                "title": "Should not decrease the study load if the study load is 4 or less",
                "fullTitle": "REDUCER: CourseStructure ACTION: DECREASE_STUDY_LOAD Should not decrease the study load if the study load is 4 or less",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "99197c1e-0180-4f3e-af9a-f7b0d9538193",
                "parentUUID": "f3fdbc2e-a399-4ade-95cc-c767132a749f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "f3fdbc2e-a399-4ade-95cc-c767132a749f",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should decrease the study load if the study load is greater than 4",
                "fullTitle": "REDUCER: CourseStructure ACTION: DECREASE_STUDY_LOAD Should decrease the study load if the study load is greater than 4",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "889855b9-c240-43a7-8c2f-8d0aecfccd78",
                "parentUUID": "f3fdbc2e-a399-4ade-95cc-c767132a749f",
                "skipped": false
              },
              {
                "title": "Should not decrease the study load if the study load is 4 or less",
                "fullTitle": "REDUCER: CourseStructure ACTION: DECREASE_STUDY_LOAD Should not decrease the study load if the study load is 4 or less",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "99197c1e-0180-4f3e-af9a-f7b0d9538193",
                "parentUUID": "f3fdbc2e-a399-4ade-95cc-c767132a749f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 4
          },
          {
            "title": "ACTION: CLEAR_COURSE",
            "suites": [],
            "tests": [
              {
                "title": "Should remove all teaching periods and set the amount of units to 4",
                "fullTitle": "REDUCER: CourseStructure ACTION: CLEAR_COURSE Should remove all teaching periods and set the amount of units to 4",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ea2ae37a-feb1-4b63-8eaa-b43bd139e923",
                "parentUUID": "69d55aeb-3a5a-45b3-bf39-ba51ec2ef06c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "69d55aeb-3a5a-45b3-bf39-ba51ec2ef06c",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should remove all teaching periods and set the amount of units to 4",
                "fullTitle": "REDUCER: CourseStructure ACTION: CLEAR_COURSE Should remove all teaching periods and set the amount of units to 4",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ea2ae37a-feb1-4b63-8eaa-b43bd139e923",
                "parentUUID": "69d55aeb-3a5a-45b3-bf39-ba51ec2ef06c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: ADD_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should add a unit correctly to the start of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: ADD_UNIT Should add a unit correctly to the start of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\"\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e20cb9b4-21d1-4b23-899f-4fe491aa193a",
                "parentUUID": "2001f9db-bfde-468f-8791-b99014b345a6",
                "skipped": false
              },
              {
                "title": "Should add a unit correctly to the middle of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: ADD_UNIT Should add a unit correctly to the middle of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\"\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "cbb74ccd-780e-4e0d-8e23-76093c83349e",
                "parentUUID": "2001f9db-bfde-468f-8791-b99014b345a6",
                "skipped": false
              },
              {
                "title": "Should add a unit correctly to the end of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: ADD_UNIT Should add a unit correctly to the end of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\"\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b3a1f5fa-48b7-4306-9bb9-d93c8c20acb8",
                "parentUUID": "2001f9db-bfde-468f-8791-b99014b345a6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "2001f9db-bfde-468f-8791-b99014b345a6",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should add a unit correctly to the start of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: ADD_UNIT Should add a unit correctly to the start of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\"\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e20cb9b4-21d1-4b23-899f-4fe491aa193a",
                "parentUUID": "2001f9db-bfde-468f-8791-b99014b345a6",
                "skipped": false
              },
              {
                "title": "Should add a unit correctly to the middle of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: ADD_UNIT Should add a unit correctly to the middle of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\"\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "cbb74ccd-780e-4e0d-8e23-76093c83349e",
                "parentUUID": "2001f9db-bfde-468f-8791-b99014b345a6",
                "skipped": false
              },
              {
                "title": "Should add a unit correctly to the end of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: ADD_UNIT Should add a unit correctly to the end of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\"\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b3a1f5fa-48b7-4306-9bb9-d93c8c20acb8",
                "parentUUID": "2001f9db-bfde-468f-8791-b99014b345a6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          },
          {
            "title": "ACTION: REMOVE_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should remove a unit correctly frpm the start of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_UNIT Should remove a unit correctly frpm the start of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ec7ca685-da98-4627-8087-53a887dd4ce6",
                "parentUUID": "eadeb608-bd37-47ae-aa1d-f48c21625534",
                "skipped": false
              },
              {
                "title": "Should remove a unit correctly from the middle of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_UNIT Should remove a unit correctly from the middle of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "70b77d95-b177-40a8-b768-fb5481aa8511",
                "parentUUID": "eadeb608-bd37-47ae-aa1d-f48c21625534",
                "skipped": false
              },
              {
                "title": "Should remove a unit correctly from the end of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_UNIT Should remove a unit correctly from the end of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b25c60e4-9088-4f91-a595-cc1ab3b1244e",
                "parentUUID": "eadeb608-bd37-47ae-aa1d-f48c21625534",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "eadeb608-bd37-47ae-aa1d-f48c21625534",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should remove a unit correctly frpm the start of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_UNIT Should remove a unit correctly frpm the start of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ec7ca685-da98-4627-8087-53a887dd4ce6",
                "parentUUID": "eadeb608-bd37-47ae-aa1d-f48c21625534",
                "skipped": false
              },
              {
                "title": "Should remove a unit correctly from the middle of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_UNIT Should remove a unit correctly from the middle of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "70b77d95-b177-40a8-b768-fb5481aa8511",
                "parentUUID": "eadeb608-bd37-47ae-aa1d-f48c21625534",
                "skipped": false
              },
              {
                "title": "Should remove a unit correctly from the end of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_UNIT Should remove a unit correctly from the end of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b25c60e4-9088-4f91-a595-cc1ab3b1244e",
                "parentUUID": "eadeb608-bd37-47ae-aa1d-f48c21625534",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          },
          {
            "title": "ACTION: GENERATE_COURSE",
            "suites": [],
            "tests": [
              {
                "title": "Should generate a course structure with valid start and end years",
                "fullTitle": "REDUCER: CourseStructure ACTION: GENERATE_COURSE Should generate a course structure with valid start and end years",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2014,\n    endYear: 2016\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "00bbf42b-2c8a-4e9e-a83d-48f2e0de3463",
                "parentUUID": "f45ee117-223d-4c51-867a-de0e2b46941a",
                "skipped": false
              },
              {
                "title": "Should return an empty course structure with invalid start and end years.",
                "fullTitle": "REDUCER: CourseStructure ACTION: GENERATE_COURSE Should return an empty course structure with invalid start and end years.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2017,\n    endYear: 2013\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "66681871-d9e9-4170-8ffc-dfdabda6bd7d",
                "parentUUID": "f45ee117-223d-4c51-867a-de0e2b46941a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "f45ee117-223d-4c51-867a-de0e2b46941a",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should generate a course structure with valid start and end years",
                "fullTitle": "REDUCER: CourseStructure ACTION: GENERATE_COURSE Should generate a course structure with valid start and end years",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2014,\n    endYear: 2016\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "00bbf42b-2c8a-4e9e-a83d-48f2e0de3463",
                "parentUUID": "f45ee117-223d-4c51-867a-de0e2b46941a",
                "skipped": false
              },
              {
                "title": "Should return an empty course structure with invalid start and end years.",
                "fullTitle": "REDUCER: CourseStructure ACTION: GENERATE_COURSE Should return an empty course structure with invalid start and end years.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2017,\n    endYear: 2013\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "66681871-d9e9-4170-8ffc-dfdabda6bd7d",
                "parentUUID": "f45ee117-223d-4c51-867a-de0e2b46941a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_COURSE_INFO_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show that the course info is loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_INFO_PENDING Should correctly show that the course info is loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f5df97c1-eb21-4429-ac03-2a4a22bda727",
                "parentUUID": "91eea27b-0751-4b8a-8588-5cd56b3ce165",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "91eea27b-0751-4b8a-8588-5cd56b3ce165",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly show that the course info is loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_INFO_PENDING Should correctly show that the course info is loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f5df97c1-eb21-4429-ac03-2a4a22bda727",
                "parentUUID": "91eea27b-0751-4b8a-8588-5cd56b3ce165",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_COURSE_INFO_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly return the payload and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    focusedCourse: null,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_FULFILLED\",\n    payload: { data: {\n            courseName: \"Test Course\",\n            mangFac: \"Test Faculty\",\n            creditPoints: 100,\n            courseDescrip: \"Test Description\",\n            courseDuration: \"Test Duration\",\n            modeLoc: \"Test mode and location\",\n            courseAward: \"Test awards\",\n            abrevTitle: \"Test abreviated title\"\n        } },\n    courseCode: \"COURSE101\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: {\n        courseName: \"Test Course\",\n        faculty: \"Test Faculty\",\n        creditPoints: 100,\n        courseDescription: \"Test Description\",\n        durationStr: \"Test Duration\",\n        modeAndLocation: \"Test mode and location\",\n        awards: \"Test awards\",\n        abrTitle: \"Test abreviated title\"\n    },\n    focusedCourse: \"COURSE101\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "558e5fca-775c-4540-b846-8e4ebe790885",
                "parentUUID": "8ce1272a-bb1e-4b70-93a8-f226adad954b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "8ce1272a-bb1e-4b70-93a8-f226adad954b",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly return the payload and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    focusedCourse: null,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_FULFILLED\",\n    payload: { data: {\n            courseName: \"Test Course\",\n            mangFac: \"Test Faculty\",\n            creditPoints: 100,\n            courseDescrip: \"Test Description\",\n            courseDuration: \"Test Duration\",\n            modeLoc: \"Test mode and location\",\n            courseAward: \"Test awards\",\n            abrevTitle: \"Test abreviated title\"\n        } },\n    courseCode: \"COURSE101\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: {\n        courseName: \"Test Course\",\n        faculty: \"Test Faculty\",\n        creditPoints: 100,\n        courseDescription: \"Test Description\",\n        durationStr: \"Test Duration\",\n        modeAndLocation: \"Test mode and location\",\n        awards: \"Test awards\",\n        abrTitle: \"Test abreviated title\"\n    },\n    focusedCourse: \"COURSE101\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "558e5fca-775c-4540-b846-8e4ebe790885",
                "parentUUID": "8ce1272a-bb1e-4b70-93a8-f226adad954b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_COURSE_INFO_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show that the course info fetch failed and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_INFO_REJECTED Should correctly show that the course info fetch failed and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: true,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b58cd9f4-2ccf-4a9c-a95a-42346c4d26c7",
                "parentUUID": "1294c774-811a-4469-9d34-13a26193fd96",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "1294c774-811a-4469-9d34-13a26193fd96",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly show that the course info fetch failed and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_INFO_REJECTED Should correctly show that the course info fetch failed and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: true,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b58cd9f4-2ccf-4a9c-a95a-42346c4d26c7",
                "parentUUID": "1294c774-811a-4469-9d34-13a26193fd96",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_COURSE_TEMPLATE_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show that the course template is loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_TEMPLATE_PENDING Should correctly show that the course template is loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "db63913d-3661-47df-9d29-61822a058105",
                "parentUUID": "dc9cadda-0584-4925-a06f-fb47fef3eb52",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "dc9cadda-0584-4925-a06f-fb47fef3eb52",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly show that the course template is loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_TEMPLATE_PENDING Should correctly show that the course template is loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "db63913d-3661-47df-9d29-61822a058105",
                "parentUUID": "dc9cadda-0584-4925-a06f-fb47fef3eb52",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_COURSE_TEMPLATE_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly return the payload and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_TEMPLATE_FULFILLED Should correctly return the payload and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_FULFILLED\",\n    payload: { data: \"Fake Course Template\" }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: \"Fake Course Template\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7db4fea9-a158-4915-b18e-73fc0a88be05",
                "parentUUID": "30567f4b-16d7-474d-b6d0-b2dcb73d664e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "30567f4b-16d7-474d-b6d0-b2dcb73d664e",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly return the payload and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_TEMPLATE_FULFILLED Should correctly return the payload and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_FULFILLED\",\n    payload: { data: \"Fake Course Template\" }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: \"Fake Course Template\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7db4fea9-a158-4915-b18e-73fc0a88be05",
                "parentUUID": "30567f4b-16d7-474d-b6d0-b2dcb73d664e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_COURSE_TEMPLATE_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show that the course template fetch failed and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_TEMPLATE_REJECTED Should correctly show that the course template fetch failed and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: true,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ec816766-424d-47fb-ac07-189239ed0e49",
                "parentUUID": "265f8708-6477-4739-b3b2-78a93bb9263d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "265f8708-6477-4739-b3b2-78a93bb9263d",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly show that the course template fetch failed and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_TEMPLATE_REJECTED Should correctly show that the course template fetch failed and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: true,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ec816766-424d-47fb-ac07-189239ed0e49",
                "parentUUID": "265f8708-6477-4739-b3b2-78a93bb9263d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_UNIT_INFO_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show that the unit info is loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_UNIT_INFO_PENDING Should correctly show that the unit info is loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: {\n        Cost: 0,\n        CreditPoints: 0,\n        Faculty: \"\",\n        likeScore: 0,\n        Synopsis: \"\",\n        UnitName: \"\",\n        usefulnessScore: 0,\n        prereqs: \"\",\n        prohibs: \"\",\n        offeringArray: \"\",\n        learnResponseCount: 0,\n        enjoyResponseCount: 0,\n        SCABand: 0\n    },\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: {\n        Cost: 0,\n        CreditPoints: 0,\n        Faculty: \"\",\n        likeScore: 0,\n        Synopsis: \"\",\n        UnitName: \"\",\n        usefulnessScore: 0,\n        prereqs: \"\",\n        prohibs: \"\",\n        offeringArray: \"\",\n        learnResponseCount: 0,\n        enjoyResponseCount: 0,\n        SCABand: 0\n    },\n    focusedUnitCode: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "cda8a9d7-fb79-4546-841a-1cd49cebcd7b",
                "parentUUID": "698c817c-d155-47da-8794-8e2798407eae",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "698c817c-d155-47da-8794-8e2798407eae",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly show that the unit info is loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_UNIT_INFO_PENDING Should correctly show that the unit info is loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: {\n        Cost: 0,\n        CreditPoints: 0,\n        Faculty: \"\",\n        likeScore: 0,\n        Synopsis: \"\",\n        UnitName: \"\",\n        usefulnessScore: 0,\n        prereqs: \"\",\n        prohibs: \"\",\n        offeringArray: \"\",\n        learnResponseCount: 0,\n        enjoyResponseCount: 0,\n        SCABand: 0\n    },\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: {\n        Cost: 0,\n        CreditPoints: 0,\n        Faculty: \"\",\n        likeScore: 0,\n        Synopsis: \"\",\n        UnitName: \"\",\n        usefulnessScore: 0,\n        prereqs: \"\",\n        prohibs: \"\",\n        offeringArray: \"\",\n        learnResponseCount: 0,\n        enjoyResponseCount: 0,\n        SCABand: 0\n    },\n    focusedUnitCode: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "cda8a9d7-fb79-4546-841a-1cd49cebcd7b",
                "parentUUID": "698c817c-d155-47da-8794-8e2798407eae",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_UNIT_INFO_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly return the payload and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_UNIT_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_FULFILLED\",\n    payload: { data: \"Fake Unit Info\" },\n    unitCode: \"FAKE1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: \"Fake Unit Info\",\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7f082106-13e6-4abe-9d31-0a022628aaf8",
                "parentUUID": "a4fc394b-3c58-4cb5-b325-45c4d5795f04",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "a4fc394b-3c58-4cb5-b325-45c4d5795f04",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly return the payload and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_UNIT_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_FULFILLED\",\n    payload: { data: \"Fake Unit Info\" },\n    unitCode: \"FAKE1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: \"Fake Unit Info\",\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7f082106-13e6-4abe-9d31-0a022628aaf8",
                "parentUUID": "a4fc394b-3c58-4cb5-b325-45c4d5795f04",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_UNIT_INFO_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show that the unit info fetch failed and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_UNIT_INFO_REJECTED Should correctly show that the unit info fetch failed and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_REJECTED\",\n    payload: \"Error Msg\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: true,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c9fca240-9106-481e-a1f2-f015e01a4766",
                "parentUUID": "e52d64fb-a9c4-4056-ab49-fa992962abd5",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "e52d64fb-a9c4-4056-ab49-fa992962abd5",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly show that the unit info fetch failed and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_UNIT_INFO_REJECTED Should correctly show that the unit info fetch failed and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_REJECTED\",\n    payload: \"Error Msg\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: true,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c9fca240-9106-481e-a1f2-f015e01a4766",
                "parentUUID": "e52d64fb-a9c4-4056-ab49-fa992962abd5",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: SUBMIT_COURSE_FORM",
            "suites": [],
            "tests": [
              {
                "title": "Should accurately set the start year and the focused course on submission",
                "fullTitle": "REDUCER: CourseStructure ACTION: SUBMIT_COURSE_FORM Should accurately set the start year and the focused course on submission",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_COURSE_FORM\",\n    startYear: 2020,\n    courseCode: \"TEST1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: \"TEST1001\",\n    startYear: 2020,\n    endYear: 2020\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "faccf286-365e-43a8-ad77-110aa654022d",
                "parentUUID": "2b6a0a49-8024-4dd4-8ebf-e94c037f8f4e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "2b6a0a49-8024-4dd4-8ebf-e94c037f8f4e",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should accurately set the start year and the focused course on submission",
                "fullTitle": "REDUCER: CourseStructure ACTION: SUBMIT_COURSE_FORM Should accurately set the start year and the focused course on submission",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_COURSE_FORM\",\n    startYear: 2020,\n    courseCode: \"TEST1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: \"TEST1001\",\n    startYear: 2020,\n    endYear: 2020\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "faccf286-365e-43a8-ad77-110aa654022d",
                "parentUUID": "2b6a0a49-8024-4dd4-8ebf-e94c037f8f4e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: SUBMIT_YEAR_FORM",
            "suites": [],
            "tests": [
              {
                "title": "Should accurately set the start year and end year on submission",
                "fullTitle": "REDUCER: CourseStructure ACTION: SUBMIT_YEAR_FORM Should accurately set the start year and end year on submission",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_YEAR_FORM\",\n    startYear: 2020,\n    endYear: 2025\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2020,\n    endYear: 2025\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "3c0804c1-8295-40de-923f-52f91dc0cb83",
                "parentUUID": "45377fc2-cca5-4114-b048-843cc8fcfdfa",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "45377fc2-cca5-4114-b048-843cc8fcfdfa",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should accurately set the start year and end year on submission",
                "fullTitle": "REDUCER: CourseStructure ACTION: SUBMIT_YEAR_FORM Should accurately set the start year and end year on submission",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_YEAR_FORM\",\n    startYear: 2020,\n    endYear: 2025\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2020,\n    endYear: 2025\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "3c0804c1-8295-40de-923f-52f91dc0cb83",
                "parentUUID": "45377fc2-cca5-4114-b048-843cc8fcfdfa",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_TEACHING_PERIODS_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly handle  of teaching periods data",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_TEACHING_PERIODS_PENDING Should correctly handle  of teaching periods data",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c371d935-73d6-4f71-a96e-3f11a11ace4a",
                "parentUUID": "08112010-25e4-48de-944b-7c401bc94f69",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "08112010-25e4-48de-944b-7c401bc94f69",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly handle  of teaching periods data",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_TEACHING_PERIODS_PENDING Should correctly handle  of teaching periods data",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c371d935-73d6-4f71-a96e-3f11a11ace4a",
                "parentUUID": "08112010-25e4-48de-944b-7c401bc94f69",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_TEACHING_PERIODS_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly handle  of teaching periods data",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_TEACHING_PERIODS_FULFILLED Should correctly handle  of teaching periods data",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_FULFILLED\",\n    payload: \"Teaching period strings\"\n};\nvar stateAfter = {\n    teachingPeriodData: \"Teaching period strings\",\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0e9c34a7-f957-4f2f-8eda-c51b004e29d0",
                "parentUUID": "9163ca50-6c50-409e-9a39-30b6e5843af6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "9163ca50-6c50-409e-9a39-30b6e5843af6",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly handle  of teaching periods data",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_TEACHING_PERIODS_FULFILLED Should correctly handle  of teaching periods data",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_FULFILLED\",\n    payload: \"Teaching period strings\"\n};\nvar stateAfter = {\n    teachingPeriodData: \"Teaching period strings\",\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0e9c34a7-f957-4f2f-8eda-c51b004e29d0",
                "parentUUID": "9163ca50-6c50-409e-9a39-30b6e5843af6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_TEACHING_PERIODS_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly handle  of teaching periods data",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_TEACHING_PERIODS_REJECTED Should correctly handle  of teaching periods data",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ba4ac56f-103b-4f67-a392-0538c60f5564",
                "parentUUID": "3d5f70c8-3050-43f1-909c-48cb4bbbd8e8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "3d5f70c8-3050-43f1-909c-48cb4bbbd8e8",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly handle  of teaching periods data",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_TEACHING_PERIODS_REJECTED Should correctly handle  of teaching periods data",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ba4ac56f-103b-4f67-a392-0538c60f5564",
                "parentUUID": "3d5f70c8-3050-43f1-909c-48cb4bbbd8e8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: SHOW_INSERT_TEACHING_PERIOD_UI",
            "suites": [],
            "tests": [
              {
                "title": "Should set the teaching period code to insert value correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should set the teaching period code to insert value correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodCodeToInsert: null,\n    testParam1: 1,\n    testParam2: \"test\"\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"S1-02\"\n};\nvar stateAfter = {\n    teachingPeriodCodeToInsert: \"S1-02\",\n    testParam1: 1,\n    testParam2: \"test\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d22a3463-82b6-4aba-b431-dfacc06909b0",
                "parentUUID": "84f57d57-5a2a-47ed-9634-ff0f27d60fea",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "84f57d57-5a2a-47ed-9634-ff0f27d60fea",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should set the teaching period code to insert value correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should set the teaching period code to insert value correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodCodeToInsert: null,\n    testParam1: 1,\n    testParam2: \"test\"\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"S1-02\"\n};\nvar stateAfter = {\n    teachingPeriodCodeToInsert: \"S1-02\",\n    testParam1: 1,\n    testParam2: \"test\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d22a3463-82b6-4aba-b431-dfacc06909b0",
                "parentUUID": "84f57d57-5a2a-47ed-9634-ff0f27d60fea",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: UPLOAD_COURSE_SNAPSHOT_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should handle the initiation of a course snapshot upload correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPLOAD_COURSE_SNAPSHOT_PENDING Should handle the initiation of a course snapshot upload correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: true\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "59daf855-6a4a-4505-90f5-61e13f13a204",
                "parentUUID": "0e732e3c-f537-4014-a63b-eff8efe03a23",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "0e732e3c-f537-4014-a63b-eff8efe03a23",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should handle the initiation of a course snapshot upload correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPLOAD_COURSE_SNAPSHOT_PENDING Should handle the initiation of a course snapshot upload correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: true\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "59daf855-6a4a-4505-90f5-61e13f13a204",
                "parentUUID": "0e732e3c-f537-4014-a63b-eff8efe03a23",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: UPLOAD_COURSE_SNAPSHOT_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should handle the successful upload of a course snapshot correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPLOAD_COURSE_SNAPSHOT_FULFILLED Should handle the successful upload of a course snapshot correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"upload string\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: \"upload string\",\n    courseSnapshotUploadSucessful: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "4fa9879e-65c7-4877-bb2b-6a333c8570d3",
                "parentUUID": "12605172-c053-4de9-a128-3f20765d1c68",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "12605172-c053-4de9-a128-3f20765d1c68",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should handle the successful upload of a course snapshot correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPLOAD_COURSE_SNAPSHOT_FULFILLED Should handle the successful upload of a course snapshot correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"upload string\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: \"upload string\",\n    courseSnapshotUploadSucessful: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "4fa9879e-65c7-4877-bb2b-6a333c8570d3",
                "parentUUID": "12605172-c053-4de9-a128-3f20765d1c68",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: UPLOAD_COURSE_SNAPSHOT_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should do handle the rejected upload of a course snapshot correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPLOAD_COURSE_SNAPSHOT_REJECTED Should do handle the rejected upload of a course snapshot correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ea9a6e65-697c-40ef-8e50-5726f4ce39e8",
                "parentUUID": "00dfc6ea-c22f-43f1-96d7-e522577dc2bf",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "00dfc6ea-c22f-43f1-96d7-e522577dc2bf",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should do handle the rejected upload of a course snapshot correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPLOAD_COURSE_SNAPSHOT_REJECTED Should do handle the rejected upload of a course snapshot correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ea9a6e65-697c-40ef-8e50-5726f4ce39e8",
                "parentUUID": "00dfc6ea-c22f-43f1-96d7-e522577dc2bf",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_COURSE_SNAPSHOT_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should begin fetching a course snapshot correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_SNAPSHOT_PENDING Should begin fetching a course snapshot correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c2c9c49d-c3cd-44af-9fe0-1a46e66464ab",
                "parentUUID": "2de7c48f-15e0-4e82-b8e5-bb64a1b1b9e3",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "2de7c48f-15e0-4e82-b8e5-bb64a1b1b9e3",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should begin fetching a course snapshot correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_SNAPSHOT_PENDING Should begin fetching a course snapshot correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c2c9c49d-c3cd-44af-9fe0-1a46e66464ab",
                "parentUUID": "2de7c48f-15e0-4e82-b8e5-bb64a1b1b9e3",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_COURSE_SNAPSHOT_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should handle a successful course snapshot fetch correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_SNAPSHOT_FULFILLED Should handle a successful course snapshot fetch correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"Snap data\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: \"Snap data\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "310e1fb0-4c70-4d81-9a73-fc6d99bc15f8",
                "parentUUID": "3820d16d-ff1e-491c-8cad-af2588429946",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "3820d16d-ff1e-491c-8cad-af2588429946",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should handle a successful course snapshot fetch correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_SNAPSHOT_FULFILLED Should handle a successful course snapshot fetch correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"Snap data\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: \"Snap data\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "310e1fb0-4c70-4d81-9a73-fc6d99bc15f8",
                "parentUUID": "3820d16d-ff1e-491c-8cad-af2588429946",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_COURSE_SNAPSHOT_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should handle a rejected course snapshot fetch correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_SNAPSHOT_REJECTED Should handle a rejected course snapshot fetch correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e92bb1fe-4424-4640-a947-e3a2605a48a6",
                "parentUUID": "c257347a-002f-4bd7-bcb0-2c6cf0f70c32",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "c257347a-002f-4bd7-bcb0-2c6cf0f70c32",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should handle a rejected course snapshot fetch correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_SNAPSHOT_REJECTED Should handle a rejected course snapshot fetch correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e92bb1fe-4424-4640-a947-e3a2605a48a6",
                "parentUUID": "c257347a-002f-4bd7-bcb0-2c6cf0f70c32",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: UPDATE_AFFECTED_UNITS",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly update the affected units value to the given array",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_AFFECTED_UNITS Should correctly update the affected units value to the given array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: []\n};\nvar action = {\n    type: \"UPDATE_AFFECTED_UNITS\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "cf84acd7-fe09-4e14-b7ad-b959ea0fe47c",
                "parentUUID": "57ec6e59-dd49-4c01-a7f1-6cb8e35a776f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "57ec6e59-dd49-4c01-a7f1-6cb8e35a776f",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly update the affected units value to the given array",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_AFFECTED_UNITS Should correctly update the affected units value to the given array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: []\n};\nvar action = {\n    type: \"UPDATE_AFFECTED_UNITS\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "cf84acd7-fe09-4e14-b7ad-b959ea0fe47c",
                "parentUUID": "57ec6e59-dd49-4c01-a7f1-6cb8e35a776f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: UPDATE_INDEX_OF_TP_TO_REMOVE",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly update the index of tp to remove value to the given value",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_INDEX_OF_TP_TO_REMOVE Should correctly update the index of tp to remove value to the given value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 0\n};\nvar action = {\n    type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\",\n    index: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 1\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0b557c96-7e71-4eb0-a9da-b5acab015d86",
                "parentUUID": "5e6760f7-6b6d-45be-811a-e66165f62151",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "5e6760f7-6b6d-45be-811a-e66165f62151",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly update the index of tp to remove value to the given value",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_INDEX_OF_TP_TO_REMOVE Should correctly update the index of tp to remove value to the given value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 0\n};\nvar action = {\n    type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\",\n    index: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 1\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0b557c96-7e71-4eb0-a9da-b5acab015d86",
                "parentUUID": "5e6760f7-6b6d-45be-811a-e66165f62151",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: UPDATE_UNIT_TO_ADD",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set the unit to add to the new unit",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_UNIT_TO_ADD Should correctly set the unit to add to the new unit",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitInfo: \"TestUnit\",\n    unitToAdd: undefined\n};\nvar action = {\n    type: \"UPDATE_UNIT_TO_ADD\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitInfo: \"TestUnit\",\n    unitToAdd: \"TestUnit\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e77edf5a-10c8-4364-afd3-f776c522da5c",
                "parentUUID": "a8a3d036-fbe9-41e0-bd90-9da410bbf2de",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "a8a3d036-fbe9-41e0-bd90-9da410bbf2de",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly set the unit to add to the new unit",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_UNIT_TO_ADD Should correctly set the unit to add to the new unit",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitInfo: \"TestUnit\",\n    unitToAdd: undefined\n};\nvar action = {\n    type: \"UPDATE_UNIT_TO_ADD\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitInfo: \"TestUnit\",\n    unitToAdd: \"TestUnit\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e77edf5a-10c8-4364-afd3-f776c522da5c",
                "parentUUID": "a8a3d036-fbe9-41e0-bd90-9da410bbf2de",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: UPDATE_UNIT_IS_BEING_DRAGGED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set a non-dragging unit being dragged",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_UNIT_IS_BEING_DRAGGED Should correctly set a non-dragging unit being dragged",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: false\n};\nvar action = {\n    type: \"UPDATE_UNIT_IS_BEING_DRAGGED\",\n    isDragging: true\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "cddad4b1-9f9e-42e2-af8f-6c8fec0b7714",
                "parentUUID": "a81a8b76-c59a-420d-bc73-67a395fc3c1d",
                "skipped": false
              },
              {
                "title": "Should correctly set a dragging unit to be not dragged",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_UNIT_IS_BEING_DRAGGED Should correctly set a dragging unit to be not dragged",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: true\n};\nvar action = {\n    type: \"UPDATE_UNIT_IS_BEING_DRAGGED\",\n    isDragging: false\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c9be5f26-911e-4db8-8998-f14557124727",
                "parentUUID": "a81a8b76-c59a-420d-bc73-67a395fc3c1d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "a81a8b76-c59a-420d-bc73-67a395fc3c1d",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly set a non-dragging unit being dragged",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_UNIT_IS_BEING_DRAGGED Should correctly set a non-dragging unit being dragged",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: false\n};\nvar action = {\n    type: \"UPDATE_UNIT_IS_BEING_DRAGGED\",\n    isDragging: true\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "cddad4b1-9f9e-42e2-af8f-6c8fec0b7714",
                "parentUUID": "a81a8b76-c59a-420d-bc73-67a395fc3c1d",
                "skipped": false
              },
              {
                "title": "Should correctly set a dragging unit to be not dragged",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_UNIT_IS_BEING_DRAGGED Should correctly set a dragging unit to be not dragged",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: true\n};\nvar action = {\n    type: \"UPDATE_UNIT_IS_BEING_DRAGGED\",\n    isDragging: false\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c9be5f26-911e-4db8-8998-f14557124727",
                "parentUUID": "a81a8b76-c59a-420d-bc73-67a395fc3c1d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: MOVING_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly begin moving a unit",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVING_UNIT Should correctly begin moving a unit",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0\n};\nvar action = {\n    type: \"MOVING_UNIT\",\n    unit: \"TEST-UNIT\",\n    unitIndex: 3,\n    tpIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TEST-UNIT\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 3\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "29b22b2c-ec6b-4307-af14-b6814dc480f5",
                "parentUUID": "483f1516-2bc0-49ac-90bd-ac4a9c366e2e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "483f1516-2bc0-49ac-90bd-ac4a9c366e2e",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly begin moving a unit",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVING_UNIT Should correctly begin moving a unit",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0\n};\nvar action = {\n    type: \"MOVING_UNIT\",\n    unit: \"TEST-UNIT\",\n    unitIndex: 3,\n    tpIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TEST-UNIT\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 3\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "29b22b2c-ec6b-4307-af14-b6814dc480f5",
                "parentUUID": "483f1516-2bc0-49ac-90bd-ac4a9c366e2e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: MOVE_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly handle moving a unit to a teaching period earlier than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period earlier than it",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9342a0fb-9342-4ca0-8883-1d3ed9ad651a",
                "parentUUID": "16be306e-dcf3-43fe-acf7-ddb09727ab9e",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to a teaching period later than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period later than it",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a1724c97-5f6c-41d5-869e-ad1b4d447523",
                "parentUUID": "16be306e-dcf3-43fe-acf7-ddb09727ab9e",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to the same teaching period but earlier position",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but earlier position",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "521783f6-01b3-4e70-bcfc-097eb4d1befb",
                "parentUUID": "16be306e-dcf3-43fe-acf7-ddb09727ab9e",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to the same teaching period but later position",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but later position",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, \"PlaceToMoveTo\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "30d0b9f5-8cd9-47b2-9d46-b9906cf46f3a",
                "parentUUID": "16be306e-dcf3-43fe-acf7-ddb09727ab9e",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to the same teaching period and exact same position",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period and exact same position",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "4424810b-cb65-47a5-826c-c9cca7c89ff0",
                "parentUUID": "16be306e-dcf3-43fe-acf7-ddb09727ab9e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "16be306e-dcf3-43fe-acf7-ddb09727ab9e",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly handle moving a unit to a teaching period earlier than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period earlier than it",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9342a0fb-9342-4ca0-8883-1d3ed9ad651a",
                "parentUUID": "16be306e-dcf3-43fe-acf7-ddb09727ab9e",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to a teaching period later than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period later than it",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a1724c97-5f6c-41d5-869e-ad1b4d447523",
                "parentUUID": "16be306e-dcf3-43fe-acf7-ddb09727ab9e",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to the same teaching period but earlier position",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but earlier position",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "521783f6-01b3-4e70-bcfc-097eb4d1befb",
                "parentUUID": "16be306e-dcf3-43fe-acf7-ddb09727ab9e",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to the same teaching period but later position",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but later position",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, \"PlaceToMoveTo\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "30d0b9f5-8cd9-47b2-9d46-b9906cf46f3a",
                "parentUUID": "16be306e-dcf3-43fe-acf7-ddb09727ab9e",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to the same teaching period and exact same position",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period and exact same position",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "4424810b-cb65-47a5-826c-c9cca7c89ff0",
                "parentUUID": "16be306e-dcf3-43fe-acf7-ddb09727ab9e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          },
          {
            "title": "ACTION: CANCEL_MOVING_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "should cancel moving unit",
                "fullTitle": "REDUCER: CourseStructure ACTION: CANCEL_MOVING_UNIT should cancel moving unit",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: \"TestUnit2\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: undefined,\n    unitsIndexOfUnitToBeMoved: undefined\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "66c9586f-6686-45ef-8a4f-4cb968fc5b18",
                "parentUUID": "f78a2bdd-0d75-4798-8a1d-1c794a58bdc1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "f78a2bdd-0d75-4798-8a1d-1c794a58bdc1",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "should cancel moving unit",
                "fullTitle": "REDUCER: CourseStructure ACTION: CANCEL_MOVING_UNIT should cancel moving unit",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: \"TestUnit2\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: undefined,\n    unitsIndexOfUnitToBeMoved: undefined\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "66c9586f-6686-45ef-8a4f-4cb968fc5b18",
                "parentUUID": "f78a2bdd-0d75-4798-8a1d-1c794a58bdc1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: SWAP_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly handle swaping a unit to a teaching period earlier than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period earlier than it",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "42cca7ad-3291-4e57-b2fa-1d97cdc2748f",
                "parentUUID": "d5b29dd3-87dc-46ee-b75d-e42f17c1846c",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to a teaching period later than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period later than it",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9654f765-4916-4a0d-8748-e76386a1c9e9",
                "parentUUID": "d5b29dd3-87dc-46ee-b75d-e42f17c1846c",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to the same teaching period but earlier position",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but earlier position",
                "timedOut": false,
                "duration": 10,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7f2d6078-7612-48e9-8b08-f921b1e5b555",
                "parentUUID": "d5b29dd3-87dc-46ee-b75d-e42f17c1846c",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to the same teaching period but later position",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but later position",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, \"PlaceToMoveTo\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", null, \"TestUnit\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ea38d03a-f883-4816-acb3-759e0c8846d0",
                "parentUUID": "d5b29dd3-87dc-46ee-b75d-e42f17c1846c",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to the same teaching period and exact same position",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period and exact same position",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "cfe7f5fd-a89e-40e0-81a5-ca4c1d57da78",
                "parentUUID": "d5b29dd3-87dc-46ee-b75d-e42f17c1846c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "d5b29dd3-87dc-46ee-b75d-e42f17c1846c",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly handle swaping a unit to a teaching period earlier than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period earlier than it",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "42cca7ad-3291-4e57-b2fa-1d97cdc2748f",
                "parentUUID": "d5b29dd3-87dc-46ee-b75d-e42f17c1846c",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to a teaching period later than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period later than it",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9654f765-4916-4a0d-8748-e76386a1c9e9",
                "parentUUID": "d5b29dd3-87dc-46ee-b75d-e42f17c1846c",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to the same teaching period but earlier position",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but earlier position",
                "timedOut": false,
                "duration": 10,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7f2d6078-7612-48e9-8b08-f921b1e5b555",
                "parentUUID": "d5b29dd3-87dc-46ee-b75d-e42f17c1846c",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to the same teaching period but later position",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but later position",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, \"PlaceToMoveTo\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", null, \"TestUnit\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ea38d03a-f883-4816-acb3-759e0c8846d0",
                "parentUUID": "d5b29dd3-87dc-46ee-b75d-e42f17c1846c",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to the same teaching period and exact same position",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period and exact same position",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "cfe7f5fd-a89e-40e0-81a5-ca4c1d57da78",
                "parentUUID": "d5b29dd3-87dc-46ee-b75d-e42f17c1846c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 12
          },
          {
            "title": "ACTION: VALIDATE_COURSE",
            "suites": [],
            "tests": [
              {
                "title": "should give no errors for an empty course plan.",
                "fullTitle": "REDUCER: CourseStructure ACTION: VALIDATE_COURSE should give no errors for an empty course plan.",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan.\"\n    }]\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    courseErrors: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "2076b296-d490-486e-afd1-6f9a93af4b86",
                "parentUUID": "31a3956a-3593-4f11-ba03-c17df11ac25d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "31a3956a-3593-4f11-ba03-c17df11ac25d",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "should give no errors for an empty course plan.",
                "fullTitle": "REDUCER: CourseStructure ACTION: VALIDATE_COURSE should give no errors for an empty course plan.",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan.\"\n    }]\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    courseErrors: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "2076b296-d490-486e-afd1-6f9a93af4b86",
                "parentUUID": "31a3956a-3593-4f11-ba03-c17df11ac25d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "DEFAULT",
            "suites": [],
            "tests": [
              {
                "title": "should not change the state if it receives an unknown action",
                "fullTitle": "REDUCER: CourseStructure DEFAULT should not change the state if it receives an unknown action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "0e2d0ebe-3e94-4960-9c0e-96707676e06f",
                "parentUUID": "69487392-c465-4d3f-9780-55e289471a9c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "69487392-c465-4d3f-9780-55e289471a9c",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "should not change the state if it receives an unknown action",
                "fullTitle": "REDUCER: CourseStructure DEFAULT should not change the state if it receives an unknown action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "0e2d0ebe-3e94-4960-9c0e-96707676e06f",
                "parentUUID": "69487392-c465-4d3f-9780-55e289471a9c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/reducers/CourseStructure.spec.js",
        "uuid": "5c7ed365-dcf7-4fde-9e8b-58144739b624",
        "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "REDUCER: Notifications",
        "suites": [
          {
            "title": "ACTION: ADD_NOTIFICATION",
            "suites": [],
            "tests": [
              {
                "title": "should insert a notification from an empty list",
                "fullTitle": "REDUCER: Notifications ACTION: ADD_NOTIFICATION should insert a notification from an empty list",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: []\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "48513ede-6558-4bdf-b6b7-11336104744a",
                "parentUUID": "5a4723eb-9433-42b1-8651-0942ef633c8e",
                "skipped": false
              },
              {
                "title": "should prepend a notification into an list of a few existing notifications.",
                "fullTitle": "REDUCER: Notifications ACTION: ADD_NOTIFICATION should prepend a notification into an list of a few existing notifications.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "8b1539c8-4abc-4619-a656-a5e23ebb6cde",
                "parentUUID": "5a4723eb-9433-42b1-8651-0942ef633c8e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Notifications.spec.js",
            "uuid": "5a4723eb-9433-42b1-8651-0942ef633c8e",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Notifications.spec.js",
            "passes": [
              {
                "title": "should insert a notification from an empty list",
                "fullTitle": "REDUCER: Notifications ACTION: ADD_NOTIFICATION should insert a notification from an empty list",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: []\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "48513ede-6558-4bdf-b6b7-11336104744a",
                "parentUUID": "5a4723eb-9433-42b1-8651-0942ef633c8e",
                "skipped": false
              },
              {
                "title": "should prepend a notification into an list of a few existing notifications.",
                "fullTitle": "REDUCER: Notifications ACTION: ADD_NOTIFICATION should prepend a notification into an list of a few existing notifications.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "8b1539c8-4abc-4619-a656-a5e23ebb6cde",
                "parentUUID": "5a4723eb-9433-42b1-8651-0942ef633c8e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: REMOVE_NOTIFICATION",
            "suites": [],
            "tests": [
              {
                "title": "Should remove a notification given its ID",
                "fullTitle": "REDUCER: Notifications ACTION: REMOVE_NOTIFICATION Should remove a notification given its ID",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    id: \"CONNECTION_LOST\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e8df74bd-f3d6-4f8a-81e0-d83eaa171f00",
                "parentUUID": "132c1069-c613-4949-bf71-d5b7775038f2",
                "skipped": false
              },
              {
                "title": "Should remove a notification given its index",
                "fullTitle": "REDUCER: Notifications ACTION: REMOVE_NOTIFICATION Should remove a notification given its index",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    index: 1\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9148be3a-db55-4d06-9fde-ce8887d1e9e7",
                "parentUUID": "132c1069-c613-4949-bf71-d5b7775038f2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Notifications.spec.js",
            "uuid": "132c1069-c613-4949-bf71-d5b7775038f2",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Notifications.spec.js",
            "passes": [
              {
                "title": "Should remove a notification given its ID",
                "fullTitle": "REDUCER: Notifications ACTION: REMOVE_NOTIFICATION Should remove a notification given its ID",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    id: \"CONNECTION_LOST\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e8df74bd-f3d6-4f8a-81e0-d83eaa171f00",
                "parentUUID": "132c1069-c613-4949-bf71-d5b7775038f2",
                "skipped": false
              },
              {
                "title": "Should remove a notification given its index",
                "fullTitle": "REDUCER: Notifications ACTION: REMOVE_NOTIFICATION Should remove a notification given its index",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    index: 1\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9148be3a-db55-4d06-9fde-ce8887d1e9e7",
                "parentUUID": "132c1069-c613-4949-bf71-d5b7775038f2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "DEFAULT",
            "suites": [],
            "tests": [
              {
                "title": "Should not change state if it does not recognise an action",
                "fullTitle": "REDUCER: Notifications DEFAULT Should not change state if it does not recognise an action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Notifications2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "c47a0512-e27d-44af-af77-28534bacb299",
                "parentUUID": "7b153c19-3ff1-4310-b94a-a220199ccd9e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Notifications.spec.js",
            "uuid": "7b153c19-3ff1-4310-b94a-a220199ccd9e",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Notifications.spec.js",
            "passes": [
              {
                "title": "Should not change state if it does not recognise an action",
                "fullTitle": "REDUCER: Notifications DEFAULT Should not change state if it does not recognise an action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Notifications2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "c47a0512-e27d-44af-af77-28534bacb299",
                "parentUUID": "7b153c19-3ff1-4310-b94a-a220199ccd9e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/reducers/Notifications.spec.js",
        "uuid": "bb582545-473c-4162-aca9-226c73f50517",
        "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Notifications.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "REDUCER: UI",
        "suites": [
          {
            "title": "ACTION: SHOW_INSERT_TEACHING_PERIOD_UI",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly toggle the insert teaching period UI boolean",
                "fullTitle": "REDUCER: UI ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: true,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "10b2927a-403c-46ec-8cb7-0ce710b1c021",
                "parentUUID": "3f64525d-65ff-416e-8edf-b1526c898d36",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "3f64525d-65ff-416e-8edf-b1526c898d36",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly toggle the insert teaching period UI boolean",
                "fullTitle": "REDUCER: UI ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: true,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "10b2927a-403c-46ec-8cb7-0ce710b1c021",
                "parentUUID": "3f64525d-65ff-416e-8edf-b1526c898d36",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: HIDE_INSERT_TEACHING_PERIOD_UI",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly toggle the insert teaching period UI boolean",
                "fullTitle": "REDUCER: UI ACTION: HIDE_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: true,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false\n};\nvar action = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "6b48a751-f5e2-4fb3-ae81-42789405f736",
                "parentUUID": "afdaadf3-e7c7-4dc2-be40-3f805735fdf3",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "afdaadf3-e7c7-4dc2-be40-3f805735fdf3",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly toggle the insert teaching period UI boolean",
                "fullTitle": "REDUCER: UI ACTION: HIDE_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: true,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false\n};\nvar action = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "6b48a751-f5e2-4fb3-ae81-42789405f736",
                "parentUUID": "afdaadf3-e7c7-4dc2-be40-3f805735fdf3",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: SHOW_ADD_UNIT_UI",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly toggle the add unit UI boolean",
                "fullTitle": "REDUCER: UI ACTION: SHOW_ADD_UNIT_UI Should correctly toggle the add unit UI boolean",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false\n};\nvar action = {\n    type: \"SHOW_ADD_UNIT_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "506893f0-b4fe-40f8-8f21-764ff33ba756",
                "parentUUID": "c7025b68-2807-4b55-a4a2-6c8d57f3c32a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "c7025b68-2807-4b55-a4a2-6c8d57f3c32a",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly toggle the add unit UI boolean",
                "fullTitle": "REDUCER: UI ACTION: SHOW_ADD_UNIT_UI Should correctly toggle the add unit UI boolean",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false\n};\nvar action = {\n    type: \"SHOW_ADD_UNIT_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "506893f0-b4fe-40f8-8f21-764ff33ba756",
                "parentUUID": "c7025b68-2807-4b55-a4a2-6c8d57f3c32a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: HIDE_ADD_UNIT_UI",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly toggle the add unit UI boolean",
                "fullTitle": "REDUCER: UI ACTION: HIDE_ADD_UNIT_UI Should correctly toggle the add unit UI boolean",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: true\n};\nvar action = {\n    type: \"HIDE_ADD_UNIT_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "8da6ae3a-3a00-4d34-9fce-20ff9bbe19af",
                "parentUUID": "0ac7a04d-6fc1-4e53-9ca6-a76364e43baa",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "0ac7a04d-6fc1-4e53-9ca6-a76364e43baa",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly toggle the add unit UI boolean",
                "fullTitle": "REDUCER: UI ACTION: HIDE_ADD_UNIT_UI Should correctly toggle the add unit UI boolean",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: true\n};\nvar action = {\n    type: \"HIDE_ADD_UNIT_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "8da6ae3a-3a00-4d34-9fce-20ff9bbe19af",
                "parentUUID": "0ac7a04d-6fc1-4e53-9ca6-a76364e43baa",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: SHOW_MOVE_UNIT_UI",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly toggle the move unit UI boolean",
                "fullTitle": "REDUCER: UI ACTION: SHOW_MOVE_UNIT_UI Should correctly toggle the move unit UI boolean",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false\n};\nvar action = {\n    type: \"SHOW_MOVE_UNIT_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: true,\n    showAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "4d5d4fe4-4e31-4319-afce-8e224c463489",
                "parentUUID": "81484ea9-282e-4163-b827-8805179ee9ca",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "81484ea9-282e-4163-b827-8805179ee9ca",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly toggle the move unit UI boolean",
                "fullTitle": "REDUCER: UI ACTION: SHOW_MOVE_UNIT_UI Should correctly toggle the move unit UI boolean",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false\n};\nvar action = {\n    type: \"SHOW_MOVE_UNIT_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: true,\n    showAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "4d5d4fe4-4e31-4319-afce-8e224c463489",
                "parentUUID": "81484ea9-282e-4163-b827-8805179ee9ca",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: HIDE_MOVE_UNIT_UI",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly toggle the move unit UI boolean",
                "fullTitle": "REDUCER: UI ACTION: HIDE_MOVE_UNIT_UI Should correctly toggle the move unit UI boolean",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: true,\n    showAddingUnitUI: false\n};\nvar action = {\n    type: \"HIDE_MOVE_UNIT_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a512d373-7aa8-4ecc-941e-d27088400521",
                "parentUUID": "36a8d2cd-aac9-4edf-91b1-a37cc85c5a72",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "36a8d2cd-aac9-4edf-91b1-a37cc85c5a72",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly toggle the move unit UI boolean",
                "fullTitle": "REDUCER: UI ACTION: HIDE_MOVE_UNIT_UI Should correctly toggle the move unit UI boolean",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: true,\n    showAddingUnitUI: false\n};\nvar action = {\n    type: \"HIDE_MOVE_UNIT_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a512d373-7aa8-4ecc-941e-d27088400521",
                "parentUUID": "36a8d2cd-aac9-4edf-91b1-a37cc85c5a72",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: SET_COURSE_READ_ONLY",
            "suites": [],
            "tests": [
              {
                "title": "Should set the course to read only correctly",
                "fullTitle": "REDUCER: UI ACTION: SET_COURSE_READ_ONLY Should set the course to read only correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    readOnly: false\n};\nvar action = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    readOnly: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f501bf19-1096-4b47-8a85-9e0cf3e69aa1",
                "parentUUID": "3b0d7bec-cef7-4b05-abe6-a235b536b183",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "3b0d7bec-cef7-4b05-abe6-a235b536b183",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should set the course to read only correctly",
                "fullTitle": "REDUCER: UI ACTION: SET_COURSE_READ_ONLY Should set the course to read only correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    readOnly: false\n};\nvar action = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    readOnly: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f501bf19-1096-4b47-8a85-9e0cf3e69aa1",
                "parentUUID": "3b0d7bec-cef7-4b05-abe6-a235b536b183",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: SET_COURSE_READ_AND_WRITE",
            "suites": [],
            "tests": [
              {
                "title": "Should set the course to allow edits correctly",
                "fullTitle": "REDUCER: UI ACTION: SET_COURSE_READ_AND_WRITE Should set the course to allow edits correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    readOnly: true\n};\nvar action = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    readOnly: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "4b08c726-80a9-49fa-a0a7-46fb5afa4b86",
                "parentUUID": "aaaabf4d-adce-4755-8e30-be088908713a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "aaaabf4d-adce-4755-8e30-be088908713a",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should set the course to allow edits correctly",
                "fullTitle": "REDUCER: UI ACTION: SET_COURSE_READ_AND_WRITE Should set the course to allow edits correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    readOnly: true\n};\nvar action = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    readOnly: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "4b08c726-80a9-49fa-a0a7-46fb5afa4b86",
                "parentUUID": "aaaabf4d-adce-4755-8e30-be088908713a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly toggle the confirm delete teaching period modal UI to show",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to show",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0c0eda6c-2cbf-4a5b-b086-1b98d989ebc2",
                "parentUUID": "c1c2c2d1-cafd-4124-89dc-a94c83c303d8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "c1c2c2d1-cafd-4124-89dc-a94c83c303d8",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly toggle the confirm delete teaching period modal UI to show",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to show",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0c0eda6c-2cbf-4a5b-b086-1b98d989ebc2",
                "parentUUID": "c1c2c2d1-cafd-4124-89dc-a94c83c303d8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly toggle the confirm delete teaching period modal UI to hide",
                "fullTitle": "REDUCER: UI ACTION: HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to hide",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "45cd9222-7e8a-458e-98ca-034949c0e26d",
                "parentUUID": "c3c2271f-e806-49b0-bab1-b1ff99c51679",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "c3c2271f-e806-49b0-bab1-b1ff99c51679",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly toggle the confirm delete teaching period modal UI to hide",
                "fullTitle": "REDUCER: UI ACTION: HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to hide",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "45cd9222-7e8a-458e-98ca-034949c0e26d",
                "parentUUID": "c3c2271f-e806-49b0-bab1-b1ff99c51679",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly toggle the confirm decrease study load modal UI to show",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to show",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "80bf0b45-b8cb-4c10-b290-35e4f66ae9e3",
                "parentUUID": "7a47c85b-57c7-4f56-845a-9cf7259dfff2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "7a47c85b-57c7-4f56-845a-9cf7259dfff2",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly toggle the confirm decrease study load modal UI to show",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to show",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "80bf0b45-b8cb-4c10-b290-35e4f66ae9e3",
                "parentUUID": "7a47c85b-57c7-4f56-845a-9cf7259dfff2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly toggle the confirm decrease study load modal UI to hide",
                "fullTitle": "REDUCER: UI ACTION: HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to hide",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d5e30a55-2c08-453a-b4ed-b64456c4e163",
                "parentUUID": "94ad3eb9-cd82-43e7-a25a-7290e743c216",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "94ad3eb9-cd82-43e7-a25a-7290e743c216",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly toggle the confirm decrease study load modal UI to hide",
                "fullTitle": "REDUCER: UI ACTION: HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to hide",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d5e30a55-2c08-453a-b4ed-b64456c4e163",
                "parentUUID": "94ad3eb9-cd82-43e7-a25a-7290e743c216",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: SHOW_CUSTOM_UNIT_MODAL",
            "suites": [],
            "tests": [
              {
                "title": "Should set show flag for custom unit modal to be true",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be true",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "03532202-63c3-4241-8ec9-b9d209f60784",
                "parentUUID": "9252c5af-3eb6-48f1-8cba-ec4cf444d1f8",
                "skipped": false
              },
              {
                "title": "Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CUSTOM_UNIT_MODAL Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"ABC1234\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: \"ABC1234\",\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "3eb91126-c0de-4ce1-9075-8bb21d726084",
                "parentUUID": "9252c5af-3eb6-48f1-8cba-ec4cf444d1f8",
                "skipped": false
              },
              {
                "title": "Should set unit code and position if it exists on top of setting show flag for custom unit modal to be true",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CUSTOM_UNIT_MODAL Should set unit code and position if it exists on top of setting show flag for custom unit modal to be true",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"ABC1234\",\n    tpIndex: 0,\n    unitIndex: 2\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: \"ABC1234\",\n    customTpIndex: 0,\n    customUnitIndex: 2\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d4ffef9b-3bd3-49ad-b588-7e1132fd7262",
                "parentUUID": "9252c5af-3eb6-48f1-8cba-ec4cf444d1f8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "9252c5af-3eb6-48f1-8cba-ec4cf444d1f8",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should set show flag for custom unit modal to be true",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be true",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "03532202-63c3-4241-8ec9-b9d209f60784",
                "parentUUID": "9252c5af-3eb6-48f1-8cba-ec4cf444d1f8",
                "skipped": false
              },
              {
                "title": "Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CUSTOM_UNIT_MODAL Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"ABC1234\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: \"ABC1234\",\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "3eb91126-c0de-4ce1-9075-8bb21d726084",
                "parentUUID": "9252c5af-3eb6-48f1-8cba-ec4cf444d1f8",
                "skipped": false
              },
              {
                "title": "Should set unit code and position if it exists on top of setting show flag for custom unit modal to be true",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CUSTOM_UNIT_MODAL Should set unit code and position if it exists on top of setting show flag for custom unit modal to be true",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"ABC1234\",\n    tpIndex: 0,\n    unitIndex: 2\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: \"ABC1234\",\n    customTpIndex: 0,\n    customUnitIndex: 2\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d4ffef9b-3bd3-49ad-b588-7e1132fd7262",
                "parentUUID": "9252c5af-3eb6-48f1-8cba-ec4cf444d1f8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: HIDE_CUSTOM_UNIT_MODAL",
            "suites": [],
            "tests": [
              {
                "title": "Should set show flag for custom unit modal to be false",
                "fullTitle": "REDUCER: UI ACTION: HIDE_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: true\n};\nvar action = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "835192de-41cf-4077-bd5a-4093cbf99094",
                "parentUUID": "adf95483-6110-4865-b9b5-c581ec7f2d8c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "adf95483-6110-4865-b9b5-c581ec7f2d8c",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should set show flag for custom unit modal to be false",
                "fullTitle": "REDUCER: UI ACTION: HIDE_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: true\n};\nvar action = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "835192de-41cf-4077-bd5a-4093cbf99094",
                "parentUUID": "adf95483-6110-4865-b9b5-c581ec7f2d8c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: SHOW_SIDEBAR",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show the sidebar when called",
                "fullTitle": "REDUCER: UI ACTION: SHOW_SIDEBAR Should correctly show the sidebar when called",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingSidebar: false\n};\nvar action = {\n    type: \"SHOW_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingSidebar: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d4315ebe-0016-45a8-b1b9-0487644e8280",
                "parentUUID": "4f32a927-8818-44c6-9690-c375e566cea3",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "4f32a927-8818-44c6-9690-c375e566cea3",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly show the sidebar when called",
                "fullTitle": "REDUCER: UI ACTION: SHOW_SIDEBAR Should correctly show the sidebar when called",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingSidebar: false\n};\nvar action = {\n    type: \"SHOW_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingSidebar: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d4315ebe-0016-45a8-b1b9-0487644e8280",
                "parentUUID": "4f32a927-8818-44c6-9690-c375e566cea3",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: HIDE_SIDEBAR",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly hide the sidebar when called",
                "fullTitle": "REDUCER: UI ACTION: HIDE_SIDEBAR Should correctly hide the sidebar when called",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"HIDE_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ef04142a-5a32-42ee-8083-2142daeefe64",
                "parentUUID": "480873de-5077-4f0a-912f-844d67f08681",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "480873de-5077-4f0a-912f-844d67f08681",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly hide the sidebar when called",
                "fullTitle": "REDUCER: UI ACTION: HIDE_SIDEBAR Should correctly hide the sidebar when called",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"HIDE_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ef04142a-5a32-42ee-8083-2142daeefe64",
                "parentUUID": "480873de-5077-4f0a-912f-844d67f08681",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: ADDING_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly hide the sidebar when a unit is being added",
                "fullTitle": "REDUCER: UI ACTION: ADDING_UNIT Should correctly hide the sidebar when a unit is being added",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "180ef4e7-ecd1-43b8-a72c-28e3b230e503",
                "parentUUID": "738e6c79-c67d-403d-87d8-626d9071a64b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "738e6c79-c67d-403d-87d8-626d9071a64b",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly hide the sidebar when a unit is being added",
                "fullTitle": "REDUCER: UI ACTION: ADDING_UNIT Should correctly hide the sidebar when a unit is being added",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "180ef4e7-ecd1-43b8-a72c-28e3b230e503",
                "parentUUID": "738e6c79-c67d-403d-87d8-626d9071a64b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "DEFAULT",
            "suites": [],
            "tests": [
              {
                "title": "Should not change state if it does not recognise the action",
                "fullTitle": "REDUCER: UI DEFAULT Should not change state if it does not recognise the action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_UI2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "aafb4224-f56e-4dd1-ae0b-dcf5b582d18a",
                "parentUUID": "266c70f2-e20d-4658-94b8-8962ac03fd6e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "266c70f2-e20d-4658-94b8-8962ac03fd6e",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should not change state if it does not recognise the action",
                "fullTitle": "REDUCER: UI DEFAULT Should not change state if it does not recognise the action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_UI2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "aafb4224-f56e-4dd1-ae0b-dcf5b582d18a",
                "parentUUID": "266c70f2-e20d-4658-94b8-8962ac03fd6e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/reducers/UI.spec.js",
        "uuid": "6605a106-d8f7-4852-8e64-0e2cb6918a30",
        "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "UTILS: CostCalc",
        "suites": [],
        "tests": [
          {
            "title": "Should return a non-negative number",
            "fullTitle": "UTILS: CostCalc Should return a non-negative number",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_CostCalc2.default.calculateCost(0, 0)).to.be.gte(0);\nexpect(_CostCalc2.default.calculateCost(2, 6)).to.be.gte(0);",
            "err": {},
            "isRoot": false,
            "uuid": "c1ae7851-4f33-485b-a448-27bf92bcc3ec",
            "parentUUID": "a6c3393b-e421-466d-ae99-e32218ba73bb",
            "skipped": false
          },
          {
            "title": "Should multiply SCA band cost with credit points",
            "fullTitle": "UTILS: CostCalc Should multiply SCA band cost with credit points",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var scaBand = 3;\nvar creditPoints = 6;\nvar scaBandCost = _CostCalc2.default.calculateCost(scaBand, 1);\nexpect(_CostCalc2.default.calculateCost(scaBand, creditPoints)).to.equal(scaBandCost * creditPoints);",
            "err": {},
            "isRoot": false,
            "uuid": "9675cd24-f2c6-4f48-9822-b871dd4ae5e9",
            "parentUUID": "a6c3393b-e421-466d-ae99-e32218ba73bb",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/utils/CostCalc.spec.js",
        "uuid": "a6c3393b-e421-466d-ae99-e32218ba73bb",
        "fullFile": "/home/staff01/Documents/monPlanR/test/utils/CostCalc.spec.js",
        "passes": [
          {
            "title": "Should return a non-negative number",
            "fullTitle": "UTILS: CostCalc Should return a non-negative number",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_CostCalc2.default.calculateCost(0, 0)).to.be.gte(0);\nexpect(_CostCalc2.default.calculateCost(2, 6)).to.be.gte(0);",
            "err": {},
            "isRoot": false,
            "uuid": "c1ae7851-4f33-485b-a448-27bf92bcc3ec",
            "parentUUID": "a6c3393b-e421-466d-ae99-e32218ba73bb",
            "skipped": false
          },
          {
            "title": "Should multiply SCA band cost with credit points",
            "fullTitle": "UTILS: CostCalc Should multiply SCA band cost with credit points",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var scaBand = 3;\nvar creditPoints = 6;\nvar scaBandCost = _CostCalc2.default.calculateCost(scaBand, 1);\nexpect(_CostCalc2.default.calculateCost(scaBand, creditPoints)).to.equal(scaBandCost * creditPoints);",
            "err": {},
            "isRoot": false,
            "uuid": "9675cd24-f2c6-4f48-9822-b871dd4ae5e9",
            "parentUUID": "a6c3393b-e421-466d-ae99-e32218ba73bb",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 2,
        "totalPasses": 2,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "UTILS: NextSemesterString",
        "suites": [
          {
            "title": "nextSemester",
            "suites": [],
            "tests": [
              {
                "title": "Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([], 2011, [])).to.deep.equal({\n    index: 0,\n    year: 2011,\n    code: \"S1-01\",\n    teachingPeriodData: []\n});",
                "err": {},
                "isRoot": false,
                "uuid": "658188a7-b563-41ab-97c5-65c59e7a4c5e",
                "parentUUID": "96b4b797-0550-4673-80d5-d8e49a8b5b46",
                "skipped": false
              },
              {
                "title": "Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([], 2029, sortedTeachingPeriodData)).to.deep.equal({\n    index: 0,\n    year: 2029,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
                "err": {},
                "isRoot": false,
                "uuid": "d4dedd13-ca6f-4e24-839c-4e1ef999dd7b",
                "parentUUID": "96b4b797-0550-4673-80d5-d8e49a8b5b46",
                "skipped": false
              },
              {
                "title": "Should return semester two if the last teaching period is in semester one, with the same year",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should return semester two if the last teaching period is in semester one, with the same year",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2025,\n    code: \"S1-01\"\n}, {\n    year: 2025,\n    code: \"S2-01\"\n}, {\n    year: 2026,\n    code: \"S1-01\"\n}, {\n    year: 2026,\n    code: \"S2-01\"\n}, {\n    year: 2027,\n    code: \"S1-01\"\n}], 2023, sortedTeachingPeriodData)).to.deep.equal({\n    index: 5,\n    year: 2027,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
                "err": {},
                "isRoot": false,
                "uuid": "eaa893f7-5dfe-43ab-9b4f-e12844665d40",
                "parentUUID": "96b4b797-0550-4673-80d5-d8e49a8b5b46",
                "skipped": false
              },
              {
                "title": "Should return semester one next year if the last teaching period is in semester two",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should return semester one next year if the last teaching period is in semester two",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2015,\n    code: \"FY-01\"\n}, {\n    year: 2017,\n    code: \"S2-01\"\n}], 2015, sortedTeachingPeriodData)).to.deep.equal({\n    index: 2,\n    year: 2018,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
                "err": {},
                "isRoot": false,
                "uuid": "1595ea11-01db-49c2-968d-1cfe4ddd67ac",
                "parentUUID": "96b4b797-0550-4673-80d5-d8e49a8b5b46",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/utils/NextSemesterString.spec.js",
            "uuid": "96b4b797-0550-4673-80d5-d8e49a8b5b46",
            "fullFile": "/home/staff01/Documents/monPlanR/test/utils/NextSemesterString.spec.js",
            "passes": [
              {
                "title": "Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([], 2011, [])).to.deep.equal({\n    index: 0,\n    year: 2011,\n    code: \"S1-01\",\n    teachingPeriodData: []\n});",
                "err": {},
                "isRoot": false,
                "uuid": "658188a7-b563-41ab-97c5-65c59e7a4c5e",
                "parentUUID": "96b4b797-0550-4673-80d5-d8e49a8b5b46",
                "skipped": false
              },
              {
                "title": "Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([], 2029, sortedTeachingPeriodData)).to.deep.equal({\n    index: 0,\n    year: 2029,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
                "err": {},
                "isRoot": false,
                "uuid": "d4dedd13-ca6f-4e24-839c-4e1ef999dd7b",
                "parentUUID": "96b4b797-0550-4673-80d5-d8e49a8b5b46",
                "skipped": false
              },
              {
                "title": "Should return semester two if the last teaching period is in semester one, with the same year",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should return semester two if the last teaching period is in semester one, with the same year",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2025,\n    code: \"S1-01\"\n}, {\n    year: 2025,\n    code: \"S2-01\"\n}, {\n    year: 2026,\n    code: \"S1-01\"\n}, {\n    year: 2026,\n    code: \"S2-01\"\n}, {\n    year: 2027,\n    code: \"S1-01\"\n}], 2023, sortedTeachingPeriodData)).to.deep.equal({\n    index: 5,\n    year: 2027,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
                "err": {},
                "isRoot": false,
                "uuid": "eaa893f7-5dfe-43ab-9b4f-e12844665d40",
                "parentUUID": "96b4b797-0550-4673-80d5-d8e49a8b5b46",
                "skipped": false
              },
              {
                "title": "Should return semester one next year if the last teaching period is in semester two",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should return semester one next year if the last teaching period is in semester two",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2015,\n    code: \"FY-01\"\n}, {\n    year: 2017,\n    code: \"S2-01\"\n}], 2015, sortedTeachingPeriodData)).to.deep.equal({\n    index: 2,\n    year: 2018,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
                "err": {},
                "isRoot": false,
                "uuid": "1595ea11-01db-49c2-968d-1cfe4ddd67ac",
                "parentUUID": "96b4b797-0550-4673-80d5-d8e49a8b5b46",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "getSemesterString",
            "suites": [],
            "tests": [
              {
                "title": "Should render a semester string",
                "fullTitle": "UTILS: NextSemesterString getSemesterString Should render a semester string",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2019,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n})).to.equal(\"Semester 2, 2019\");",
                "err": {},
                "isRoot": false,
                "uuid": "98317ac3-cc79-4a3f-b187-b16d4d696df5",
                "parentUUID": "30860cc2-33ca-4eda-8cd3-63b28ff49fa2",
                "skipped": false
              },
              {
                "title": "Should revert back to semester codes if teachingPeriodData is not available",
                "fullTitle": "UTILS: NextSemesterString getSemesterString Should revert back to semester codes if teachingPeriodData is not available",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2015,\n    code: \"S1-01\"\n})).to.equal(\"S1-01, 2015\");",
                "err": {},
                "isRoot": false,
                "uuid": "25548294-d048-4530-a29b-359dd54a729d",
                "parentUUID": "30860cc2-33ca-4eda-8cd3-63b28ff49fa2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/utils/NextSemesterString.spec.js",
            "uuid": "30860cc2-33ca-4eda-8cd3-63b28ff49fa2",
            "fullFile": "/home/staff01/Documents/monPlanR/test/utils/NextSemesterString.spec.js",
            "passes": [
              {
                "title": "Should render a semester string",
                "fullTitle": "UTILS: NextSemesterString getSemesterString Should render a semester string",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2019,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n})).to.equal(\"Semester 2, 2019\");",
                "err": {},
                "isRoot": false,
                "uuid": "98317ac3-cc79-4a3f-b187-b16d4d696df5",
                "parentUUID": "30860cc2-33ca-4eda-8cd3-63b28ff49fa2",
                "skipped": false
              },
              {
                "title": "Should revert back to semester codes if teachingPeriodData is not available",
                "fullTitle": "UTILS: NextSemesterString getSemesterString Should revert back to semester codes if teachingPeriodData is not available",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2015,\n    code: \"S1-01\"\n})).to.equal(\"S1-01, 2015\");",
                "err": {},
                "isRoot": false,
                "uuid": "25548294-d048-4530-a29b-359dd54a729d",
                "parentUUID": "30860cc2-33ca-4eda-8cd3-63b28ff49fa2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/utils/NextSemesterString.spec.js",
        "uuid": "c7dcf29f-b35b-4f91-ac0a-b290b803b59b",
        "fullFile": "/home/staff01/Documents/monPlanR/test/utils/NextSemesterString.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "UTILS: ShowYear",
        "suites": [],
        "tests": [
          {
            "title": "Should return the right year based off current month",
            "fullTitle": "UTILS: ShowYear Should return the right year based off current month",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "if (new Date().getMonth() + 1 >= 11) {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear() + 1);\n} else {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear());\n}",
            "err": {},
            "isRoot": false,
            "uuid": "5801c98b-8451-4f46-8779-abdaa9ded62d",
            "parentUUID": "2d76faa8-d578-4067-9663-743de45fc3b3",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/utils/ShowYear.spec.js",
        "uuid": "2d76faa8-d578-4067-9663-743de45fc3b3",
        "fullFile": "/home/staff01/Documents/monPlanR/test/utils/ShowYear.spec.js",
        "passes": [
          {
            "title": "Should return the right year based off current month",
            "fullTitle": "UTILS: ShowYear Should return the right year based off current month",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "if (new Date().getMonth() + 1 >= 11) {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear() + 1);\n} else {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear());\n}",
            "err": {},
            "isRoot": false,
            "uuid": "5801c98b-8451-4f46-8779-abdaa9ded62d",
            "parentUUID": "2d76faa8-d578-4067-9663-743de45fc3b3",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "UTILS: YearCalc",
        "suites": [],
        "tests": [
          {
            "title": "Should contain the same year as it was specified",
            "fullTitle": "UTILS: YearCalc Should contain the same year as it was specified",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getStartYearVals(2016).find(function (year) {\n    return year.value === 2016;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2017).find(function (year) {\n    return year.value === 2017;\n})).to.be.ok;",
            "err": {},
            "isRoot": false,
            "uuid": "6d333525-3a22-4bca-91fe-e3caf878f963",
            "parentUUID": "7aee1108-a579-4504-bebb-1a4cd2643835",
            "skipped": false
          },
          {
            "title": "Should contain a year that is ten years from now",
            "fullTitle": "UTILS: YearCalc Should contain a year that is ten years from now",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getStartYearVals(2019).find(function (year) {\n    return year.value === 2029;\n})).to.be.ok;\nexpect(_YearCalc2.default.getStartYearVals(2012).find(function (year) {\n    return year.value === 2002;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2028;\n})).to.be.ok;",
            "err": {},
            "isRoot": false,
            "uuid": "676a139e-15c8-4b39-a79c-da958ff8a27c",
            "parentUUID": "7aee1108-a579-4504-bebb-1a4cd2643835",
            "skipped": false
          },
          {
            "title": "Should not contain any past year when computing end years",
            "fullTitle": "UTILS: YearCalc Should not contain any past year when computing end years",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2017;\n})).to.be.not.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2008;\n})).to.be.not.ok;",
            "err": {},
            "isRoot": false,
            "uuid": "91b7a276-5445-4db5-a02b-c510ddaf337a",
            "parentUUID": "7aee1108-a579-4504-bebb-1a4cd2643835",
            "skipped": false
          },
          {
            "title": "Should have starting years go in decreasing order from one year ahead to the minimum",
            "fullTitle": "UTILS: YearCalc Should have starting years go in decreasing order from one year ahead to the minimum",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getStartYearVals(2019).slice(0, 12)).to.deep.equal([{\n    text: \"2020\",\n    value: 2020\n}, {\n    text: \"2019\",\n    value: 2019\n}, {\n    text: \"2018\",\n    value: 2018\n}, {\n    text: \"2017\",\n    value: 2017\n}, {\n    text: \"2016\",\n    value: 2016\n}, {\n    text: \"2015\",\n    value: 2015\n}, {\n    text: \"2014\",\n    value: 2014\n}, {\n    text: \"2013\",\n    value: 2013\n}, {\n    text: \"2012\",\n    value: 2012\n}, {\n    text: \"2011\",\n    value: 2011\n}, {\n    text: \"2010\",\n    value: 2010\n}, {\n    text: \"2009\",\n    value: 2009\n}]);",
            "err": {},
            "isRoot": false,
            "uuid": "5b045ccb-411a-4099-b0d2-0772ff15912f",
            "parentUUID": "7aee1108-a579-4504-bebb-1a4cd2643835",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/utils/YearCalc.spec.js",
        "uuid": "7aee1108-a579-4504-bebb-1a4cd2643835",
        "fullFile": "/home/staff01/Documents/monPlanR/test/utils/YearCalc.spec.js",
        "passes": [
          {
            "title": "Should contain the same year as it was specified",
            "fullTitle": "UTILS: YearCalc Should contain the same year as it was specified",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getStartYearVals(2016).find(function (year) {\n    return year.value === 2016;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2017).find(function (year) {\n    return year.value === 2017;\n})).to.be.ok;",
            "err": {},
            "isRoot": false,
            "uuid": "6d333525-3a22-4bca-91fe-e3caf878f963",
            "parentUUID": "7aee1108-a579-4504-bebb-1a4cd2643835",
            "skipped": false
          },
          {
            "title": "Should contain a year that is ten years from now",
            "fullTitle": "UTILS: YearCalc Should contain a year that is ten years from now",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getStartYearVals(2019).find(function (year) {\n    return year.value === 2029;\n})).to.be.ok;\nexpect(_YearCalc2.default.getStartYearVals(2012).find(function (year) {\n    return year.value === 2002;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2028;\n})).to.be.ok;",
            "err": {},
            "isRoot": false,
            "uuid": "676a139e-15c8-4b39-a79c-da958ff8a27c",
            "parentUUID": "7aee1108-a579-4504-bebb-1a4cd2643835",
            "skipped": false
          },
          {
            "title": "Should not contain any past year when computing end years",
            "fullTitle": "UTILS: YearCalc Should not contain any past year when computing end years",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2017;\n})).to.be.not.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2008;\n})).to.be.not.ok;",
            "err": {},
            "isRoot": false,
            "uuid": "91b7a276-5445-4db5-a02b-c510ddaf337a",
            "parentUUID": "7aee1108-a579-4504-bebb-1a4cd2643835",
            "skipped": false
          },
          {
            "title": "Should have starting years go in decreasing order from one year ahead to the minimum",
            "fullTitle": "UTILS: YearCalc Should have starting years go in decreasing order from one year ahead to the minimum",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getStartYearVals(2019).slice(0, 12)).to.deep.equal([{\n    text: \"2020\",\n    value: 2020\n}, {\n    text: \"2019\",\n    value: 2019\n}, {\n    text: \"2018\",\n    value: 2018\n}, {\n    text: \"2017\",\n    value: 2017\n}, {\n    text: \"2016\",\n    value: 2016\n}, {\n    text: \"2015\",\n    value: 2015\n}, {\n    text: \"2014\",\n    value: 2014\n}, {\n    text: \"2013\",\n    value: 2013\n}, {\n    text: \"2012\",\n    value: 2012\n}, {\n    text: \"2011\",\n    value: 2011\n}, {\n    text: \"2010\",\n    value: 2010\n}, {\n    text: \"2009\",\n    value: 2009\n}]);",
            "err": {},
            "isRoot": false,
            "uuid": "5b045ccb-411a-4099-b0d2-0772ff15912f",
            "parentUUID": "7aee1108-a579-4504-bebb-1a4cd2643835",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 4,
        "totalPasses": 4,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "488282ea-f551-4345-834c-1f647b1f0093",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "Should render a notification title and a message",
      "fullTitle": "COMPONENT: Notification Should render a notification title and a message",
      "timedOut": false,
      "duration": 102,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, {\n    title: \"This is a test\",\n    message: \"Some message goes over here\"\n}));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(\"This is a test\");\nexpect(wrapper.text().replace(\"This is a test\", \"\").trim()).to.equal(\"Some message goes over here\");",
      "err": {},
      "isRoot": false,
      "uuid": "09f8e0d8-28f6-4558-846f-347963a02608",
      "parentUUID": "95991d16-ee51-4655-a359-d08698318fc7",
      "skipped": false
    },
    {
      "title": "Should have a default level to be info if it is not specified",
      "fullTitle": "COMPONENT: Notification Should have a default level to be info if it is not specified",
      "timedOut": false,
      "duration": 36,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, null)).find(\".info.message\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "7c27588b-bc6f-49aa-9079-d603ce169aa3",
      "parentUUID": "95991d16-ee51-4655-a359-d08698318fc7",
      "skipped": false
    },
    {
      "title": "Should follow a specified level",
      "fullTitle": "COMPONENT: Notification Should follow a specified level",
      "timedOut": false,
      "duration": 93,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"info\" })).find(\".info.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"warning\" })).find(\".warning.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"error\" })).find(\".negative.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"success\" })).find(\".positive.message\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "e59a825d-fbde-41ce-8c85-917a5d3a75e6",
      "parentUUID": "95991d16-ee51-4655-a359-d08698318fc7",
      "skipped": false
    },
    {
      "title": "should be called exactly once when main button has been clicked",
      "fullTitle": "#addSemester() should be called exactly once when main button has been clicked",
      "timedOut": false,
      "duration": 83,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var addSemester = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: identity,\n    addSemester: addSemester }));\nwrapper.find(\"Button\").simulate(\"click\");\nexpect(addSemester).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "8b969b9b-14eb-49b2-b404-d1f2a55f817c",
      "parentUUID": "490da6f7-ce42-47ef-8ac1-aed18affe2f9",
      "skipped": false
    },
    {
      "title": "should be called as many times as the number of insert teaching periods options upon click",
      "fullTitle": "#insert() should be called as many times as the number of insert teaching periods options upon click",
      "timedOut": false,
      "duration": 153,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var insert = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: insert,\n    addSemester: identity }));\nvar dropdownItems = wrapper.find(\".item\");\ndropdownItems.forEach(function (node) {\n    return node.simulate(\"click\");\n});\nexpect(insert).to.have.callCount(dropdownItems.length);",
      "err": {},
      "isRoot": false,
      "uuid": "daf37200-7e1b-4c90-9a19-e00c7f97c348",
      "parentUUID": "a03b9467-e6a4-4540-9f88-d6dcd8c8939b",
      "skipped": false
    },
    {
      "title": "should render two ratings",
      "fullTitle": "COMPONENT: SetuRating should render two ratings",
      "timedOut": false,
      "duration": 102,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, null)).find(\".rating\")).to.have.length(2);",
      "err": {},
      "isRoot": false,
      "uuid": "264645a7-195d-4544-aba5-0978766f629c",
      "parentUUID": "1c7c2caf-59e5-429f-8a98-2c2637448b94",
      "skipped": false
    },
    {
      "title": "should render a book if learning ratings is >=2.5",
      "fullTitle": "COMPONENT: SetuRating should render a book if learning ratings is >=2.5",
      "timedOut": false,
      "duration": 107,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 4.13 })).find(\".book\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.50 })).find(\".book\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "b4469331-4bd3-4eea-b8b1-3b0638b5022e",
      "parentUUID": "1c7c2caf-59e5-429f-8a98-2c2637448b94",
      "skipped": false
    },
    {
      "title": "should render a remove circle if learning ratings is <2.5",
      "fullTitle": "COMPONENT: SetuRating should render a remove circle if learning ratings is <2.5",
      "timedOut": false,
      "duration": 124,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 1.51 })).find(\".remove.circle\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.49 })).find(\".remove.circle\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "0ed11ed0-27fb-4438-9970-19441a699635",
      "parentUUID": "1c7c2caf-59e5-429f-8a98-2c2637448b94",
      "skipped": false
    },
    {
      "title": "should render a thumbs up if enjoyment ratings is >=2.5",
      "fullTitle": "COMPONENT: SetuRating should render a thumbs up if enjoyment ratings is >=2.5",
      "timedOut": false,
      "duration": 116,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 4.13 })).find(\".thumbs.up\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.50 })).find(\".thumbs.up\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "291dd865-7d6f-4bb9-9faf-b113bffe9f78",
      "parentUUID": "1c7c2caf-59e5-429f-8a98-2c2637448b94",
      "skipped": false
    },
    {
      "title": "should render a thumbs down if enjoyment ratings is <2.5",
      "fullTitle": "COMPONENT: SetuRating should render a thumbs down if enjoyment ratings is <2.5",
      "timedOut": false,
      "duration": 100,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 1.51 })).find(\".thumbs.down\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.49 })).find(\".thumbs.down\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "1f519b3f-6961-418d-a669-04e348229232",
      "parentUUID": "1c7c2caf-59e5-429f-8a98-2c2637448b94",
      "skipped": false
    },
    {
      "title": "should only render a unit code and a unit name",
      "fullTitle": "COMPONENT: UnitMessage should only render a unit code and a unit name",
      "timedOut": false,
      "duration": 49,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var unitCode = \"ABC1234\";\nvar unitName = \"Example unit\";\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: unitCode,\n    name: unitName }));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(unitCode);\nexpect(wrapper.find(\".message\").text().replace(unitCode, \"\").trim()).to.equal(unitName);",
      "err": {},
      "isRoot": false,
      "uuid": "d28b5e81-f272-477f-a816-8f2e980588e6",
      "parentUUID": "380765bc-063e-4ae6-8a54-70f341e0847d",
      "skipped": false
    },
    {
      "title": "should render a close button only when mouse is over the unit",
      "fullTitle": "COMPONENT: UnitMessage should render a close button only when mouse is over the unit",
      "timedOut": false,
      "duration": 97,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    hovering: false }));\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");\nwrapper.setProps({\n    hovering: true\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"visible\");\nwrapper.setProps({\n    hovering: false\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");",
      "err": {},
      "isRoot": false,
      "uuid": "50236723-2e47-4b9f-8db9-bdfcb3f1c4ba",
      "parentUUID": "380765bc-063e-4ae6-8a54-70f341e0847d",
      "skipped": false
    },
    {
      "title": "Should increment the credit point state by a given value",
      "fullTitle": "ACTION: INCREMENT_CREDIT_POINTS Should increment the credit point state by a given value",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 2, creditPoints: 0 };\nvar action = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 2,\n    creditPoints: 1\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "3ffc6ad4-5b5c-4dea-8f03-f57b2791383f",
      "parentUUID": "014026d3-5067-41be-9722-b353775ad2be",
      "skipped": false
    },
    {
      "title": "Should decrement the credit point state by a given value",
      "fullTitle": "ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state by a given value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "da8e7584-51a3-4e6f-9f82-7457c5a572fd",
      "parentUUID": "3d925d24-74d6-41f8-b36b-93021832d64d",
      "skipped": false
    },
    {
      "title": "Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
      "fullTitle": "ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 0\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "beb089e9-0a22-47e8-a373-9328171edf77",
      "parentUUID": "3d925d24-74d6-41f8-b36b-93021832d64d",
      "skipped": false
    },
    {
      "title": "Should increment the cost state by a given value",
      "fullTitle": "ACTION: INCREMENT_COST Should increment the cost state by a given value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 20, creditPoints: 13 };\nvar action = {\n    type: \"INCREMENT_COST\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 21,\n    creditPoints: 13\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "678a3ba8-f32c-4caf-bdae-29e7f1077746",
      "parentUUID": "9ff5fb25-cf01-4fe5-98f0-20b3498666f1",
      "skipped": false
    },
    {
      "title": "Should decrement the cost state by a given value",
      "fullTitle": "ACTION: DECREMENT_COST Should decrement the cost state by a given value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "57413771-3320-4127-87f5-adfc94e057dd",
      "parentUUID": "e02f4248-c6e3-4509-8422-9a8c6d1ee015",
      "skipped": false
    },
    {
      "title": "Should decrement the cost state to 0 if a value given is larger than the current credit point value",
      "fullTitle": "ACTION: DECREMENT_COST Should decrement the cost state to 0 if a value given is larger than the current credit point value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 0,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "07af734c-94e9-4de8-90e1-12c497a48e48",
      "parentUUID": "e02f4248-c6e3-4509-8422-9a8c6d1ee015",
      "skipped": false
    },
    {
      "title": "Should reset the cost and credit point counters to 0",
      "fullTitle": "ACTION: CLEAR_COURSE Should reset the cost and credit point counters to 0",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d800cd00-db27-469d-9dd2-00fead9cdf24",
      "parentUUID": "217aaeb5-12f9-454f-a0ea-80b13ed704fe",
      "skipped": false
    },
    {
      "title": "Should correctly go through and decrement the counters for each value ",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should correctly go through and decrement the counters for each value ",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { Cost: 2, CreditPoints: 20 }, { Cost: 5, CreditPoints: 10 }, null]\n};\nvar stateAfter = { cost: 43, creditPoints: 10 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "2a39af0d-294d-4089-9b67-5600100078b6",
      "parentUUID": "85d87a15-7689-4d45-8a5c-f11e4e4b8055",
      "skipped": false
    },
    {
      "title": "Should not decrement the counters below 0 ",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should not decrement the counters below 0 ",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { Cost: 25, CreditPoints: 20 }, { Cost: 30, CreditPoints: 30 }, { Cost: 0, CreditPoints: 10 }]\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "df32ae21-28b0-467a-a138-d5acb4578dd7",
      "parentUUID": "85d87a15-7689-4d45-8a5c-f11e4e4b8055",
      "skipped": false
    },
    {
      "title": "Should correctly decrement the counters based on the given units creditpoints and cost",
      "fullTitle": "ACTION: REMOVE_UNIT Should correctly decrement the counters based on the given units creditpoints and cost",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 20 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "81a3a4b2-57bc-4ec0-be28-6d89044f2b0a",
      "parentUUID": "09279a07-ae4c-4f59-85cd-6c6e011c0fdb",
      "skipped": false
    },
    {
      "title": "Should not decrement the counters below 0",
      "fullTitle": "ACTION: REMOVE_UNIT Should not decrement the counters below 0",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "8e677542-0474-4573-8893-658902a659df",
      "parentUUID": "09279a07-ae4c-4f59-85cd-6c6e011c0fdb",
      "skipped": false
    },
    {
      "title": "Should correctly increment the counters when a unit is added to the plan",
      "fullTitle": "ACTION: ADD_UNIT Should correctly increment the counters when a unit is added to the plan",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"ADD_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 30 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0ad4918a-fc8b-4760-9e4c-68bbbc1279d5",
      "parentUUID": "ac282028-23ae-4b9e-9be3-2615ac829494",
      "skipped": false
    },
    {
      "title": "Should not decrease counters if there are no units in the overload column",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units in the overload column",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: []\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "59d2febd-19ff-4470-8a6e-eb49f85db9d9",
      "parentUUID": "824b1dca-1716-48a2-98e4-b1c8b497d7b7",
      "skipped": false
    },
    {
      "title": "Should not decrease counters if there are no units which have values in the overload column",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units which have values in the overload column",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [null, {}]\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "ad48bd0f-7648-4bba-af00-af712ee9e1e7",
      "parentUUID": "824b1dca-1716-48a2-98e4-b1c8b497d7b7",
      "skipped": false
    },
    {
      "title": "Should decrease counters correctly for units in the overload column",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should decrease counters correctly for units in the overload column",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [{\n        CreditPoints: 6,\n        Cost: 1134\n    }, {\n        CreditPoints: 12,\n        Cost: 2256\n    }]\n};\nvar stateAfter = { cost: 36610, creditPoints: 126 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "fc021b0f-7e6c-4899-b08f-cc687183d178",
      "parentUUID": "824b1dca-1716-48a2-98e4-b1c8b497d7b7",
      "skipped": false
    },
    {
      "title": "Should not change state if it does not recognise an action",
      "fullTitle": "DEFAULT Should not change state if it does not recognise an action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "30924402-b062-49f7-86c7-e8a692fcc11d",
      "parentUUID": "eb9ba4be-8ffe-483d-8c0b-1d1c6b30762c",
      "skipped": false
    },
    {
      "title": "Should insert a teaching period with the given info correctly into middle of array",
      "fullTitle": "ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into middle of array",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2018,\n    code: \"S2-01\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e3fc2471-c4cb-4fa3-945c-ea9cfa5f1c6d",
      "parentUUID": "26a28bea-1e90-49b7-bcc9-72f333f66589",
      "skipped": false
    },
    {
      "title": "Should insert a teaching period with the given info correctly into start of array",
      "fullTitle": "ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into start of array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2016,\n    code: \"S2-01\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2016, code: \"S2-01\", units: [null, null, null, null] }, { year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7ad5a59c-0b51-4c39-841b-0887636641f9",
      "parentUUID": "26a28bea-1e90-49b7-bcc9-72f333f66589",
      "skipped": false
    },
    {
      "title": "Should remove a teaching period at the given index",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the given index",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b78c4d70-45cc-4b26-881c-ac6a20706cbd",
      "parentUUID": "9c669b13-3a18-4d88-bc78-1fcc02b6f20f",
      "skipped": false
    },
    {
      "title": "Should remove a teaching period at the start of the array",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the start of the array",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "83695818-ad28-443b-8986-1481c10a1cb3",
      "parentUUID": "9c669b13-3a18-4d88-bc78-1fcc02b6f20f",
      "skipped": false
    },
    {
      "title": "Should add the given teaching period to the end of the array",
      "fullTitle": "ACTION: APPEND_TEACHING_PERIOD Should add the given teaching period to the end of the array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"APPEND_TEACHING_PERIOD\",\n    year: 2020,\n    code: \"S2-01\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }, { year: 2020, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "39712f23-f1ef-4f64-9104-c6c215764992",
      "parentUUID": "ca4c689a-7cae-4796-8004-f772fcd01600",
      "skipped": false
    },
    {
      "title": "Should increase the study load if the study load is less than 4",
      "fullTitle": "ACTION: INCREASE_STUDY_LOAD Should increase the study load if the study load is less than 4",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "733f774c-a1bf-434f-a5f1-505737f09823",
      "parentUUID": "0f0da17d-fbdc-45ae-a291-8dd2e5fd8e7a",
      "skipped": false
    },
    {
      "title": "Should not increase the study load if the study load is 6 or greater",
      "fullTitle": "ACTION: INCREASE_STUDY_LOAD Should not increase the study load if the study load is 6 or greater",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null, null] }],\n    numberOfUnits: 6\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null, null] }],\n    numberOfUnits: 6\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "3ca1eb57-8bf4-42d4-8e93-5ef3912feed8",
      "parentUUID": "0f0da17d-fbdc-45ae-a291-8dd2e5fd8e7a",
      "skipped": false
    },
    {
      "title": "Should decrease the study load if the study load is greater than 4",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should decrease the study load if the study load is greater than 4",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "889855b9-c240-43a7-8c2f-8d0aecfccd78",
      "parentUUID": "f3fdbc2e-a399-4ade-95cc-c767132a749f",
      "skipped": false
    },
    {
      "title": "Should not decrease the study load if the study load is 4 or less",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should not decrease the study load if the study load is 4 or less",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "99197c1e-0180-4f3e-af9a-f7b0d9538193",
      "parentUUID": "f3fdbc2e-a399-4ade-95cc-c767132a749f",
      "skipped": false
    },
    {
      "title": "Should remove all teaching periods and set the amount of units to 4",
      "fullTitle": "ACTION: CLEAR_COURSE Should remove all teaching periods and set the amount of units to 4",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ea2ae37a-feb1-4b63-8eaa-b43bd139e923",
      "parentUUID": "69d55aeb-3a5a-45b3-bf39-ba51ec2ef06c",
      "skipped": false
    },
    {
      "title": "Should add a unit correctly to the start of an array",
      "fullTitle": "ACTION: ADD_UNIT Should add a unit correctly to the start of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\"\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e20cb9b4-21d1-4b23-899f-4fe491aa193a",
      "parentUUID": "2001f9db-bfde-468f-8791-b99014b345a6",
      "skipped": false
    },
    {
      "title": "Should add a unit correctly to the middle of an array",
      "fullTitle": "ACTION: ADD_UNIT Should add a unit correctly to the middle of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\"\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "cbb74ccd-780e-4e0d-8e23-76093c83349e",
      "parentUUID": "2001f9db-bfde-468f-8791-b99014b345a6",
      "skipped": false
    },
    {
      "title": "Should add a unit correctly to the end of an array",
      "fullTitle": "ACTION: ADD_UNIT Should add a unit correctly to the end of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\"\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b3a1f5fa-48b7-4306-9bb9-d93c8c20acb8",
      "parentUUID": "2001f9db-bfde-468f-8791-b99014b345a6",
      "skipped": false
    },
    {
      "title": "Should remove a unit correctly frpm the start of an array",
      "fullTitle": "ACTION: REMOVE_UNIT Should remove a unit correctly frpm the start of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ec7ca685-da98-4627-8087-53a887dd4ce6",
      "parentUUID": "eadeb608-bd37-47ae-aa1d-f48c21625534",
      "skipped": false
    },
    {
      "title": "Should remove a unit correctly from the middle of an array",
      "fullTitle": "ACTION: REMOVE_UNIT Should remove a unit correctly from the middle of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "70b77d95-b177-40a8-b768-fb5481aa8511",
      "parentUUID": "eadeb608-bd37-47ae-aa1d-f48c21625534",
      "skipped": false
    },
    {
      "title": "Should remove a unit correctly from the end of an array",
      "fullTitle": "ACTION: REMOVE_UNIT Should remove a unit correctly from the end of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b25c60e4-9088-4f91-a595-cc1ab3b1244e",
      "parentUUID": "eadeb608-bd37-47ae-aa1d-f48c21625534",
      "skipped": false
    },
    {
      "title": "Should generate a course structure with valid start and end years",
      "fullTitle": "ACTION: GENERATE_COURSE Should generate a course structure with valid start and end years",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2014,\n    endYear: 2016\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "00bbf42b-2c8a-4e9e-a83d-48f2e0de3463",
      "parentUUID": "f45ee117-223d-4c51-867a-de0e2b46941a",
      "skipped": false
    },
    {
      "title": "Should return an empty course structure with invalid start and end years.",
      "fullTitle": "ACTION: GENERATE_COURSE Should return an empty course structure with invalid start and end years.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2017,\n    endYear: 2013\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "66681871-d9e9-4170-8ffc-dfdabda6bd7d",
      "parentUUID": "f45ee117-223d-4c51-867a-de0e2b46941a",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course info is loading",
      "fullTitle": "ACTION: FETCH_COURSE_INFO_PENDING Should correctly show that the course info is loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f5df97c1-eb21-4429-ac03-2a4a22bda727",
      "parentUUID": "91eea27b-0751-4b8a-8588-5cd56b3ce165",
      "skipped": false
    },
    {
      "title": "Should correctly return the payload and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    focusedCourse: null,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_FULFILLED\",\n    payload: { data: {\n            courseName: \"Test Course\",\n            mangFac: \"Test Faculty\",\n            creditPoints: 100,\n            courseDescrip: \"Test Description\",\n            courseDuration: \"Test Duration\",\n            modeLoc: \"Test mode and location\",\n            courseAward: \"Test awards\",\n            abrevTitle: \"Test abreviated title\"\n        } },\n    courseCode: \"COURSE101\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: {\n        courseName: \"Test Course\",\n        faculty: \"Test Faculty\",\n        creditPoints: 100,\n        courseDescription: \"Test Description\",\n        durationStr: \"Test Duration\",\n        modeAndLocation: \"Test mode and location\",\n        awards: \"Test awards\",\n        abrTitle: \"Test abreviated title\"\n    },\n    focusedCourse: \"COURSE101\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "558e5fca-775c-4540-b846-8e4ebe790885",
      "parentUUID": "8ce1272a-bb1e-4b70-93a8-f226adad954b",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course info fetch failed and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_INFO_REJECTED Should correctly show that the course info fetch failed and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: true,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b58cd9f4-2ccf-4a9c-a95a-42346c4d26c7",
      "parentUUID": "1294c774-811a-4469-9d34-13a26193fd96",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course template is loading",
      "fullTitle": "ACTION: FETCH_COURSE_TEMPLATE_PENDING Should correctly show that the course template is loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "db63913d-3661-47df-9d29-61822a058105",
      "parentUUID": "dc9cadda-0584-4925-a06f-fb47fef3eb52",
      "skipped": false
    },
    {
      "title": "Should correctly return the payload and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_TEMPLATE_FULFILLED Should correctly return the payload and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_FULFILLED\",\n    payload: { data: \"Fake Course Template\" }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: \"Fake Course Template\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7db4fea9-a158-4915-b18e-73fc0a88be05",
      "parentUUID": "30567f4b-16d7-474d-b6d0-b2dcb73d664e",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course template fetch failed and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_TEMPLATE_REJECTED Should correctly show that the course template fetch failed and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: true,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ec816766-424d-47fb-ac07-189239ed0e49",
      "parentUUID": "265f8708-6477-4739-b3b2-78a93bb9263d",
      "skipped": false
    },
    {
      "title": "Should correctly show that the unit info is loading",
      "fullTitle": "ACTION: FETCH_UNIT_INFO_PENDING Should correctly show that the unit info is loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: {\n        Cost: 0,\n        CreditPoints: 0,\n        Faculty: \"\",\n        likeScore: 0,\n        Synopsis: \"\",\n        UnitName: \"\",\n        usefulnessScore: 0,\n        prereqs: \"\",\n        prohibs: \"\",\n        offeringArray: \"\",\n        learnResponseCount: 0,\n        enjoyResponseCount: 0,\n        SCABand: 0\n    },\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: {\n        Cost: 0,\n        CreditPoints: 0,\n        Faculty: \"\",\n        likeScore: 0,\n        Synopsis: \"\",\n        UnitName: \"\",\n        usefulnessScore: 0,\n        prereqs: \"\",\n        prohibs: \"\",\n        offeringArray: \"\",\n        learnResponseCount: 0,\n        enjoyResponseCount: 0,\n        SCABand: 0\n    },\n    focusedUnitCode: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "cda8a9d7-fb79-4546-841a-1cd49cebcd7b",
      "parentUUID": "698c817c-d155-47da-8794-8e2798407eae",
      "skipped": false
    },
    {
      "title": "Should correctly return the payload and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_UNIT_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_FULFILLED\",\n    payload: { data: \"Fake Unit Info\" },\n    unitCode: \"FAKE1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: \"Fake Unit Info\",\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7f082106-13e6-4abe-9d31-0a022628aaf8",
      "parentUUID": "a4fc394b-3c58-4cb5-b325-45c4d5795f04",
      "skipped": false
    },
    {
      "title": "Should correctly show that the unit info fetch failed and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_UNIT_INFO_REJECTED Should correctly show that the unit info fetch failed and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_REJECTED\",\n    payload: \"Error Msg\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: true,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c9fca240-9106-481e-a1f2-f015e01a4766",
      "parentUUID": "e52d64fb-a9c4-4056-ab49-fa992962abd5",
      "skipped": false
    },
    {
      "title": "Should accurately set the start year and the focused course on submission",
      "fullTitle": "ACTION: SUBMIT_COURSE_FORM Should accurately set the start year and the focused course on submission",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_COURSE_FORM\",\n    startYear: 2020,\n    courseCode: \"TEST1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: \"TEST1001\",\n    startYear: 2020,\n    endYear: 2020\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "faccf286-365e-43a8-ad77-110aa654022d",
      "parentUUID": "2b6a0a49-8024-4dd4-8ebf-e94c037f8f4e",
      "skipped": false
    },
    {
      "title": "Should accurately set the start year and end year on submission",
      "fullTitle": "ACTION: SUBMIT_YEAR_FORM Should accurately set the start year and end year on submission",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_YEAR_FORM\",\n    startYear: 2020,\n    endYear: 2025\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2020,\n    endYear: 2025\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "3c0804c1-8295-40de-923f-52f91dc0cb83",
      "parentUUID": "45377fc2-cca5-4114-b048-843cc8fcfdfa",
      "skipped": false
    },
    {
      "title": "Should correctly handle  of teaching periods data",
      "fullTitle": "ACTION: FETCH_TEACHING_PERIODS_PENDING Should correctly handle  of teaching periods data",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c371d935-73d6-4f71-a96e-3f11a11ace4a",
      "parentUUID": "08112010-25e4-48de-944b-7c401bc94f69",
      "skipped": false
    },
    {
      "title": "Should correctly handle  of teaching periods data",
      "fullTitle": "ACTION: FETCH_TEACHING_PERIODS_FULFILLED Should correctly handle  of teaching periods data",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_FULFILLED\",\n    payload: \"Teaching period strings\"\n};\nvar stateAfter = {\n    teachingPeriodData: \"Teaching period strings\",\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0e9c34a7-f957-4f2f-8eda-c51b004e29d0",
      "parentUUID": "9163ca50-6c50-409e-9a39-30b6e5843af6",
      "skipped": false
    },
    {
      "title": "Should correctly handle  of teaching periods data",
      "fullTitle": "ACTION: FETCH_TEACHING_PERIODS_REJECTED Should correctly handle  of teaching periods data",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ba4ac56f-103b-4f67-a392-0538c60f5564",
      "parentUUID": "3d5f70c8-3050-43f1-909c-48cb4bbbd8e8",
      "skipped": false
    },
    {
      "title": "Should set the teaching period code to insert value correctly",
      "fullTitle": "ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should set the teaching period code to insert value correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodCodeToInsert: null,\n    testParam1: 1,\n    testParam2: \"test\"\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"S1-02\"\n};\nvar stateAfter = {\n    teachingPeriodCodeToInsert: \"S1-02\",\n    testParam1: 1,\n    testParam2: \"test\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d22a3463-82b6-4aba-b431-dfacc06909b0",
      "parentUUID": "84f57d57-5a2a-47ed-9634-ff0f27d60fea",
      "skipped": false
    },
    {
      "title": "Should handle the initiation of a course snapshot upload correctly",
      "fullTitle": "ACTION: UPLOAD_COURSE_SNAPSHOT_PENDING Should handle the initiation of a course snapshot upload correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: true\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "59daf855-6a4a-4505-90f5-61e13f13a204",
      "parentUUID": "0e732e3c-f537-4014-a63b-eff8efe03a23",
      "skipped": false
    },
    {
      "title": "Should handle the successful upload of a course snapshot correctly",
      "fullTitle": "ACTION: UPLOAD_COURSE_SNAPSHOT_FULFILLED Should handle the successful upload of a course snapshot correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"upload string\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: \"upload string\",\n    courseSnapshotUploadSucessful: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4fa9879e-65c7-4877-bb2b-6a333c8570d3",
      "parentUUID": "12605172-c053-4de9-a128-3f20765d1c68",
      "skipped": false
    },
    {
      "title": "Should do handle the rejected upload of a course snapshot correctly",
      "fullTitle": "ACTION: UPLOAD_COURSE_SNAPSHOT_REJECTED Should do handle the rejected upload of a course snapshot correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ea9a6e65-697c-40ef-8e50-5726f4ce39e8",
      "parentUUID": "00dfc6ea-c22f-43f1-96d7-e522577dc2bf",
      "skipped": false
    },
    {
      "title": "Should begin fetching a course snapshot correctly",
      "fullTitle": "ACTION: FETCH_COURSE_SNAPSHOT_PENDING Should begin fetching a course snapshot correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c2c9c49d-c3cd-44af-9fe0-1a46e66464ab",
      "parentUUID": "2de7c48f-15e0-4e82-b8e5-bb64a1b1b9e3",
      "skipped": false
    },
    {
      "title": "Should handle a successful course snapshot fetch correctly",
      "fullTitle": "ACTION: FETCH_COURSE_SNAPSHOT_FULFILLED Should handle a successful course snapshot fetch correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"Snap data\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: \"Snap data\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "310e1fb0-4c70-4d81-9a73-fc6d99bc15f8",
      "parentUUID": "3820d16d-ff1e-491c-8cad-af2588429946",
      "skipped": false
    },
    {
      "title": "Should handle a rejected course snapshot fetch correctly",
      "fullTitle": "ACTION: FETCH_COURSE_SNAPSHOT_REJECTED Should handle a rejected course snapshot fetch correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e92bb1fe-4424-4640-a947-e3a2605a48a6",
      "parentUUID": "c257347a-002f-4bd7-bcb0-2c6cf0f70c32",
      "skipped": false
    },
    {
      "title": "Should correctly update the affected units value to the given array",
      "fullTitle": "ACTION: UPDATE_AFFECTED_UNITS Should correctly update the affected units value to the given array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: []\n};\nvar action = {\n    type: \"UPDATE_AFFECTED_UNITS\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "cf84acd7-fe09-4e14-b7ad-b959ea0fe47c",
      "parentUUID": "57ec6e59-dd49-4c01-a7f1-6cb8e35a776f",
      "skipped": false
    },
    {
      "title": "Should correctly update the index of tp to remove value to the given value",
      "fullTitle": "ACTION: UPDATE_INDEX_OF_TP_TO_REMOVE Should correctly update the index of tp to remove value to the given value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 0\n};\nvar action = {\n    type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\",\n    index: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 1\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0b557c96-7e71-4eb0-a9da-b5acab015d86",
      "parentUUID": "5e6760f7-6b6d-45be-811a-e66165f62151",
      "skipped": false
    },
    {
      "title": "Should correctly set the unit to add to the new unit",
      "fullTitle": "ACTION: UPDATE_UNIT_TO_ADD Should correctly set the unit to add to the new unit",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitInfo: \"TestUnit\",\n    unitToAdd: undefined\n};\nvar action = {\n    type: \"UPDATE_UNIT_TO_ADD\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitInfo: \"TestUnit\",\n    unitToAdd: \"TestUnit\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e77edf5a-10c8-4364-afd3-f776c522da5c",
      "parentUUID": "a8a3d036-fbe9-41e0-bd90-9da410bbf2de",
      "skipped": false
    },
    {
      "title": "Should correctly set a non-dragging unit being dragged",
      "fullTitle": "ACTION: UPDATE_UNIT_IS_BEING_DRAGGED Should correctly set a non-dragging unit being dragged",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: false\n};\nvar action = {\n    type: \"UPDATE_UNIT_IS_BEING_DRAGGED\",\n    isDragging: true\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "cddad4b1-9f9e-42e2-af8f-6c8fec0b7714",
      "parentUUID": "a81a8b76-c59a-420d-bc73-67a395fc3c1d",
      "skipped": false
    },
    {
      "title": "Should correctly set a dragging unit to be not dragged",
      "fullTitle": "ACTION: UPDATE_UNIT_IS_BEING_DRAGGED Should correctly set a dragging unit to be not dragged",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: true\n};\nvar action = {\n    type: \"UPDATE_UNIT_IS_BEING_DRAGGED\",\n    isDragging: false\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c9be5f26-911e-4db8-8998-f14557124727",
      "parentUUID": "a81a8b76-c59a-420d-bc73-67a395fc3c1d",
      "skipped": false
    },
    {
      "title": "Should correctly begin moving a unit",
      "fullTitle": "ACTION: MOVING_UNIT Should correctly begin moving a unit",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0\n};\nvar action = {\n    type: \"MOVING_UNIT\",\n    unit: \"TEST-UNIT\",\n    unitIndex: 3,\n    tpIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TEST-UNIT\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 3\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "29b22b2c-ec6b-4307-af14-b6814dc480f5",
      "parentUUID": "483f1516-2bc0-49ac-90bd-ac4a9c366e2e",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to a teaching period earlier than it",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period earlier than it",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9342a0fb-9342-4ca0-8883-1d3ed9ad651a",
      "parentUUID": "16be306e-dcf3-43fe-acf7-ddb09727ab9e",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to a teaching period later than it",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period later than it",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a1724c97-5f6c-41d5-869e-ad1b4d447523",
      "parentUUID": "16be306e-dcf3-43fe-acf7-ddb09727ab9e",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to the same teaching period but earlier position",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but earlier position",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "521783f6-01b3-4e70-bcfc-097eb4d1befb",
      "parentUUID": "16be306e-dcf3-43fe-acf7-ddb09727ab9e",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to the same teaching period but later position",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but later position",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, \"PlaceToMoveTo\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "30d0b9f5-8cd9-47b2-9d46-b9906cf46f3a",
      "parentUUID": "16be306e-dcf3-43fe-acf7-ddb09727ab9e",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to the same teaching period and exact same position",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period and exact same position",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4424810b-cb65-47a5-826c-c9cca7c89ff0",
      "parentUUID": "16be306e-dcf3-43fe-acf7-ddb09727ab9e",
      "skipped": false
    },
    {
      "title": "should cancel moving unit",
      "fullTitle": "ACTION: CANCEL_MOVING_UNIT should cancel moving unit",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: \"TestUnit2\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: undefined,\n    unitsIndexOfUnitToBeMoved: undefined\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "66c9586f-6686-45ef-8a4f-4cb968fc5b18",
      "parentUUID": "f78a2bdd-0d75-4798-8a1d-1c794a58bdc1",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to a teaching period earlier than it",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period earlier than it",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "42cca7ad-3291-4e57-b2fa-1d97cdc2748f",
      "parentUUID": "d5b29dd3-87dc-46ee-b75d-e42f17c1846c",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to a teaching period later than it",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period later than it",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9654f765-4916-4a0d-8748-e76386a1c9e9",
      "parentUUID": "d5b29dd3-87dc-46ee-b75d-e42f17c1846c",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to the same teaching period but earlier position",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but earlier position",
      "timedOut": false,
      "duration": 10,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7f2d6078-7612-48e9-8b08-f921b1e5b555",
      "parentUUID": "d5b29dd3-87dc-46ee-b75d-e42f17c1846c",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to the same teaching period but later position",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but later position",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, \"PlaceToMoveTo\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", null, \"TestUnit\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ea38d03a-f883-4816-acb3-759e0c8846d0",
      "parentUUID": "d5b29dd3-87dc-46ee-b75d-e42f17c1846c",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to the same teaching period and exact same position",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period and exact same position",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "cfe7f5fd-a89e-40e0-81a5-ca4c1d57da78",
      "parentUUID": "d5b29dd3-87dc-46ee-b75d-e42f17c1846c",
      "skipped": false
    },
    {
      "title": "should give no errors for an empty course plan.",
      "fullTitle": "ACTION: VALIDATE_COURSE should give no errors for an empty course plan.",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan.\"\n    }]\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    courseErrors: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "2076b296-d490-486e-afd1-6f9a93af4b86",
      "parentUUID": "31a3956a-3593-4f11-ba03-c17df11ac25d",
      "skipped": false
    },
    {
      "title": "should not change the state if it receives an unknown action",
      "fullTitle": "DEFAULT should not change the state if it receives an unknown action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "0e2d0ebe-3e94-4960-9c0e-96707676e06f",
      "parentUUID": "69487392-c465-4d3f-9780-55e289471a9c",
      "skipped": false
    },
    {
      "title": "should insert a notification from an empty list",
      "fullTitle": "ACTION: ADD_NOTIFICATION should insert a notification from an empty list",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: []\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "48513ede-6558-4bdf-b6b7-11336104744a",
      "parentUUID": "5a4723eb-9433-42b1-8651-0942ef633c8e",
      "skipped": false
    },
    {
      "title": "should prepend a notification into an list of a few existing notifications.",
      "fullTitle": "ACTION: ADD_NOTIFICATION should prepend a notification into an list of a few existing notifications.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "8b1539c8-4abc-4619-a656-a5e23ebb6cde",
      "parentUUID": "5a4723eb-9433-42b1-8651-0942ef633c8e",
      "skipped": false
    },
    {
      "title": "Should remove a notification given its ID",
      "fullTitle": "ACTION: REMOVE_NOTIFICATION Should remove a notification given its ID",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    id: \"CONNECTION_LOST\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e8df74bd-f3d6-4f8a-81e0-d83eaa171f00",
      "parentUUID": "132c1069-c613-4949-bf71-d5b7775038f2",
      "skipped": false
    },
    {
      "title": "Should remove a notification given its index",
      "fullTitle": "ACTION: REMOVE_NOTIFICATION Should remove a notification given its index",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    index: 1\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9148be3a-db55-4d06-9fde-ce8887d1e9e7",
      "parentUUID": "132c1069-c613-4949-bf71-d5b7775038f2",
      "skipped": false
    },
    {
      "title": "Should not change state if it does not recognise an action",
      "fullTitle": "DEFAULT Should not change state if it does not recognise an action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Notifications2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "c47a0512-e27d-44af-af77-28534bacb299",
      "parentUUID": "7b153c19-3ff1-4310-b94a-a220199ccd9e",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the insert teaching period UI boolean",
      "fullTitle": "ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: true,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "10b2927a-403c-46ec-8cb7-0ce710b1c021",
      "parentUUID": "3f64525d-65ff-416e-8edf-b1526c898d36",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the insert teaching period UI boolean",
      "fullTitle": "ACTION: HIDE_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: true,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false\n};\nvar action = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "6b48a751-f5e2-4fb3-ae81-42789405f736",
      "parentUUID": "afdaadf3-e7c7-4dc2-be40-3f805735fdf3",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the add unit UI boolean",
      "fullTitle": "ACTION: SHOW_ADD_UNIT_UI Should correctly toggle the add unit UI boolean",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false\n};\nvar action = {\n    type: \"SHOW_ADD_UNIT_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "506893f0-b4fe-40f8-8f21-764ff33ba756",
      "parentUUID": "c7025b68-2807-4b55-a4a2-6c8d57f3c32a",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the add unit UI boolean",
      "fullTitle": "ACTION: HIDE_ADD_UNIT_UI Should correctly toggle the add unit UI boolean",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: true\n};\nvar action = {\n    type: \"HIDE_ADD_UNIT_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "8da6ae3a-3a00-4d34-9fce-20ff9bbe19af",
      "parentUUID": "0ac7a04d-6fc1-4e53-9ca6-a76364e43baa",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the move unit UI boolean",
      "fullTitle": "ACTION: SHOW_MOVE_UNIT_UI Should correctly toggle the move unit UI boolean",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false\n};\nvar action = {\n    type: \"SHOW_MOVE_UNIT_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: true,\n    showAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4d5d4fe4-4e31-4319-afce-8e224c463489",
      "parentUUID": "81484ea9-282e-4163-b827-8805179ee9ca",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the move unit UI boolean",
      "fullTitle": "ACTION: HIDE_MOVE_UNIT_UI Should correctly toggle the move unit UI boolean",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: true,\n    showAddingUnitUI: false\n};\nvar action = {\n    type: \"HIDE_MOVE_UNIT_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a512d373-7aa8-4ecc-941e-d27088400521",
      "parentUUID": "36a8d2cd-aac9-4edf-91b1-a37cc85c5a72",
      "skipped": false
    },
    {
      "title": "Should set the course to read only correctly",
      "fullTitle": "ACTION: SET_COURSE_READ_ONLY Should set the course to read only correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    readOnly: false\n};\nvar action = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    readOnly: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f501bf19-1096-4b47-8a85-9e0cf3e69aa1",
      "parentUUID": "3b0d7bec-cef7-4b05-abe6-a235b536b183",
      "skipped": false
    },
    {
      "title": "Should set the course to allow edits correctly",
      "fullTitle": "ACTION: SET_COURSE_READ_AND_WRITE Should set the course to allow edits correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    readOnly: true\n};\nvar action = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    readOnly: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4b08c726-80a9-49fa-a0a7-46fb5afa4b86",
      "parentUUID": "aaaabf4d-adce-4755-8e30-be088908713a",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm delete teaching period modal UI to show",
      "fullTitle": "ACTION: SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to show",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0c0eda6c-2cbf-4a5b-b086-1b98d989ebc2",
      "parentUUID": "c1c2c2d1-cafd-4124-89dc-a94c83c303d8",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm delete teaching period modal UI to hide",
      "fullTitle": "ACTION: HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to hide",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "45cd9222-7e8a-458e-98ca-034949c0e26d",
      "parentUUID": "c3c2271f-e806-49b0-bab1-b1ff99c51679",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm decrease study load modal UI to show",
      "fullTitle": "ACTION: SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to show",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "80bf0b45-b8cb-4c10-b290-35e4f66ae9e3",
      "parentUUID": "7a47c85b-57c7-4f56-845a-9cf7259dfff2",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm decrease study load modal UI to hide",
      "fullTitle": "ACTION: HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to hide",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d5e30a55-2c08-453a-b4ed-b64456c4e163",
      "parentUUID": "94ad3eb9-cd82-43e7-a25a-7290e743c216",
      "skipped": false
    },
    {
      "title": "Should set show flag for custom unit modal to be true",
      "fullTitle": "ACTION: SHOW_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "03532202-63c3-4241-8ec9-b9d209f60784",
      "parentUUID": "9252c5af-3eb6-48f1-8cba-ec4cf444d1f8",
      "skipped": false
    },
    {
      "title": "Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
      "fullTitle": "ACTION: SHOW_CUSTOM_UNIT_MODAL Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"ABC1234\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: \"ABC1234\",\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "3eb91126-c0de-4ce1-9075-8bb21d726084",
      "parentUUID": "9252c5af-3eb6-48f1-8cba-ec4cf444d1f8",
      "skipped": false
    },
    {
      "title": "Should set unit code and position if it exists on top of setting show flag for custom unit modal to be true",
      "fullTitle": "ACTION: SHOW_CUSTOM_UNIT_MODAL Should set unit code and position if it exists on top of setting show flag for custom unit modal to be true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"ABC1234\",\n    tpIndex: 0,\n    unitIndex: 2\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: \"ABC1234\",\n    customTpIndex: 0,\n    customUnitIndex: 2\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d4ffef9b-3bd3-49ad-b588-7e1132fd7262",
      "parentUUID": "9252c5af-3eb6-48f1-8cba-ec4cf444d1f8",
      "skipped": false
    },
    {
      "title": "Should set show flag for custom unit modal to be false",
      "fullTitle": "ACTION: HIDE_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: true\n};\nvar action = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "835192de-41cf-4077-bd5a-4093cbf99094",
      "parentUUID": "adf95483-6110-4865-b9b5-c581ec7f2d8c",
      "skipped": false
    },
    {
      "title": "Should correctly show the sidebar when called",
      "fullTitle": "ACTION: SHOW_SIDEBAR Should correctly show the sidebar when called",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingSidebar: false\n};\nvar action = {\n    type: \"SHOW_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingSidebar: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d4315ebe-0016-45a8-b1b9-0487644e8280",
      "parentUUID": "4f32a927-8818-44c6-9690-c375e566cea3",
      "skipped": false
    },
    {
      "title": "Should correctly hide the sidebar when called",
      "fullTitle": "ACTION: HIDE_SIDEBAR Should correctly hide the sidebar when called",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"HIDE_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ef04142a-5a32-42ee-8083-2142daeefe64",
      "parentUUID": "480873de-5077-4f0a-912f-844d67f08681",
      "skipped": false
    },
    {
      "title": "Should correctly hide the sidebar when a unit is being added",
      "fullTitle": "ACTION: ADDING_UNIT Should correctly hide the sidebar when a unit is being added",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "180ef4e7-ecd1-43b8-a72c-28e3b230e503",
      "parentUUID": "738e6c79-c67d-403d-87d8-626d9071a64b",
      "skipped": false
    },
    {
      "title": "Should not change state if it does not recognise the action",
      "fullTitle": "DEFAULT Should not change state if it does not recognise the action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_UI2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "aafb4224-f56e-4dd1-ae0b-dcf5b582d18a",
      "parentUUID": "266c70f2-e20d-4658-94b8-8962ac03fd6e",
      "skipped": false
    },
    {
      "title": "Should return a non-negative number",
      "fullTitle": "UTILS: CostCalc Should return a non-negative number",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_CostCalc2.default.calculateCost(0, 0)).to.be.gte(0);\nexpect(_CostCalc2.default.calculateCost(2, 6)).to.be.gte(0);",
      "err": {},
      "isRoot": false,
      "uuid": "c1ae7851-4f33-485b-a448-27bf92bcc3ec",
      "parentUUID": "a6c3393b-e421-466d-ae99-e32218ba73bb",
      "skipped": false
    },
    {
      "title": "Should multiply SCA band cost with credit points",
      "fullTitle": "UTILS: CostCalc Should multiply SCA band cost with credit points",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var scaBand = 3;\nvar creditPoints = 6;\nvar scaBandCost = _CostCalc2.default.calculateCost(scaBand, 1);\nexpect(_CostCalc2.default.calculateCost(scaBand, creditPoints)).to.equal(scaBandCost * creditPoints);",
      "err": {},
      "isRoot": false,
      "uuid": "9675cd24-f2c6-4f48-9822-b871dd4ae5e9",
      "parentUUID": "a6c3393b-e421-466d-ae99-e32218ba73bb",
      "skipped": false
    },
    {
      "title": "Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
      "fullTitle": "nextSemester Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([], 2011, [])).to.deep.equal({\n    index: 0,\n    year: 2011,\n    code: \"S1-01\",\n    teachingPeriodData: []\n});",
      "err": {},
      "isRoot": false,
      "uuid": "658188a7-b563-41ab-97c5-65c59e7a4c5e",
      "parentUUID": "96b4b797-0550-4673-80d5-d8e49a8b5b46",
      "skipped": false
    },
    {
      "title": "Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
      "fullTitle": "nextSemester Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([], 2029, sortedTeachingPeriodData)).to.deep.equal({\n    index: 0,\n    year: 2029,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
      "err": {},
      "isRoot": false,
      "uuid": "d4dedd13-ca6f-4e24-839c-4e1ef999dd7b",
      "parentUUID": "96b4b797-0550-4673-80d5-d8e49a8b5b46",
      "skipped": false
    },
    {
      "title": "Should return semester two if the last teaching period is in semester one, with the same year",
      "fullTitle": "nextSemester Should return semester two if the last teaching period is in semester one, with the same year",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2025,\n    code: \"S1-01\"\n}, {\n    year: 2025,\n    code: \"S2-01\"\n}, {\n    year: 2026,\n    code: \"S1-01\"\n}, {\n    year: 2026,\n    code: \"S2-01\"\n}, {\n    year: 2027,\n    code: \"S1-01\"\n}], 2023, sortedTeachingPeriodData)).to.deep.equal({\n    index: 5,\n    year: 2027,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
      "err": {},
      "isRoot": false,
      "uuid": "eaa893f7-5dfe-43ab-9b4f-e12844665d40",
      "parentUUID": "96b4b797-0550-4673-80d5-d8e49a8b5b46",
      "skipped": false
    },
    {
      "title": "Should return semester one next year if the last teaching period is in semester two",
      "fullTitle": "nextSemester Should return semester one next year if the last teaching period is in semester two",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2015,\n    code: \"FY-01\"\n}, {\n    year: 2017,\n    code: \"S2-01\"\n}], 2015, sortedTeachingPeriodData)).to.deep.equal({\n    index: 2,\n    year: 2018,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
      "err": {},
      "isRoot": false,
      "uuid": "1595ea11-01db-49c2-968d-1cfe4ddd67ac",
      "parentUUID": "96b4b797-0550-4673-80d5-d8e49a8b5b46",
      "skipped": false
    },
    {
      "title": "Should render a semester string",
      "fullTitle": "getSemesterString Should render a semester string",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2019,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n})).to.equal(\"Semester 2, 2019\");",
      "err": {},
      "isRoot": false,
      "uuid": "98317ac3-cc79-4a3f-b187-b16d4d696df5",
      "parentUUID": "30860cc2-33ca-4eda-8cd3-63b28ff49fa2",
      "skipped": false
    },
    {
      "title": "Should revert back to semester codes if teachingPeriodData is not available",
      "fullTitle": "getSemesterString Should revert back to semester codes if teachingPeriodData is not available",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2015,\n    code: \"S1-01\"\n})).to.equal(\"S1-01, 2015\");",
      "err": {},
      "isRoot": false,
      "uuid": "25548294-d048-4530-a29b-359dd54a729d",
      "parentUUID": "30860cc2-33ca-4eda-8cd3-63b28ff49fa2",
      "skipped": false
    },
    {
      "title": "Should return the right year based off current month",
      "fullTitle": "UTILS: ShowYear Should return the right year based off current month",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "if (new Date().getMonth() + 1 >= 11) {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear() + 1);\n} else {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear());\n}",
      "err": {},
      "isRoot": false,
      "uuid": "5801c98b-8451-4f46-8779-abdaa9ded62d",
      "parentUUID": "2d76faa8-d578-4067-9663-743de45fc3b3",
      "skipped": false
    },
    {
      "title": "Should contain the same year as it was specified",
      "fullTitle": "UTILS: YearCalc Should contain the same year as it was specified",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getStartYearVals(2016).find(function (year) {\n    return year.value === 2016;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2017).find(function (year) {\n    return year.value === 2017;\n})).to.be.ok;",
      "err": {},
      "isRoot": false,
      "uuid": "6d333525-3a22-4bca-91fe-e3caf878f963",
      "parentUUID": "7aee1108-a579-4504-bebb-1a4cd2643835",
      "skipped": false
    },
    {
      "title": "Should contain a year that is ten years from now",
      "fullTitle": "UTILS: YearCalc Should contain a year that is ten years from now",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getStartYearVals(2019).find(function (year) {\n    return year.value === 2029;\n})).to.be.ok;\nexpect(_YearCalc2.default.getStartYearVals(2012).find(function (year) {\n    return year.value === 2002;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2028;\n})).to.be.ok;",
      "err": {},
      "isRoot": false,
      "uuid": "676a139e-15c8-4b39-a79c-da958ff8a27c",
      "parentUUID": "7aee1108-a579-4504-bebb-1a4cd2643835",
      "skipped": false
    },
    {
      "title": "Should not contain any past year when computing end years",
      "fullTitle": "UTILS: YearCalc Should not contain any past year when computing end years",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2017;\n})).to.be.not.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2008;\n})).to.be.not.ok;",
      "err": {},
      "isRoot": false,
      "uuid": "91b7a276-5445-4db5-a02b-c510ddaf337a",
      "parentUUID": "7aee1108-a579-4504-bebb-1a4cd2643835",
      "skipped": false
    },
    {
      "title": "Should have starting years go in decreasing order from one year ahead to the minimum",
      "fullTitle": "UTILS: YearCalc Should have starting years go in decreasing order from one year ahead to the minimum",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getStartYearVals(2019).slice(0, 12)).to.deep.equal([{\n    text: \"2020\",\n    value: 2020\n}, {\n    text: \"2019\",\n    value: 2019\n}, {\n    text: \"2018\",\n    value: 2018\n}, {\n    text: \"2017\",\n    value: 2017\n}, {\n    text: \"2016\",\n    value: 2016\n}, {\n    text: \"2015\",\n    value: 2015\n}, {\n    text: \"2014\",\n    value: 2014\n}, {\n    text: \"2013\",\n    value: 2013\n}, {\n    text: \"2012\",\n    value: 2012\n}, {\n    text: \"2011\",\n    value: 2011\n}, {\n    text: \"2010\",\n    value: 2010\n}, {\n    text: \"2009\",\n    value: 2009\n}]);",
      "err": {},
      "isRoot": false,
      "uuid": "5b045ccb-411a-4099-b0d2-0772ff15912f",
      "parentUUID": "7aee1108-a579-4504-bebb-1a4cd2643835",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "Should render a notification title and a message",
      "fullTitle": "COMPONENT: Notification Should render a notification title and a message",
      "timedOut": false,
      "duration": 102,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, {\n    title: \"This is a test\",\n    message: \"Some message goes over here\"\n}));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(\"This is a test\");\nexpect(wrapper.text().replace(\"This is a test\", \"\").trim()).to.equal(\"Some message goes over here\");",
      "err": {},
      "isRoot": false,
      "uuid": "09f8e0d8-28f6-4558-846f-347963a02608",
      "parentUUID": "95991d16-ee51-4655-a359-d08698318fc7",
      "skipped": false
    },
    {
      "title": "Should have a default level to be info if it is not specified",
      "fullTitle": "COMPONENT: Notification Should have a default level to be info if it is not specified",
      "timedOut": false,
      "duration": 36,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, null)).find(\".info.message\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "7c27588b-bc6f-49aa-9079-d603ce169aa3",
      "parentUUID": "95991d16-ee51-4655-a359-d08698318fc7",
      "skipped": false
    },
    {
      "title": "Should follow a specified level",
      "fullTitle": "COMPONENT: Notification Should follow a specified level",
      "timedOut": false,
      "duration": 93,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"info\" })).find(\".info.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"warning\" })).find(\".warning.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"error\" })).find(\".negative.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"success\" })).find(\".positive.message\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "e59a825d-fbde-41ce-8c85-917a5d3a75e6",
      "parentUUID": "95991d16-ee51-4655-a359-d08698318fc7",
      "skipped": false
    },
    {
      "title": "should be called exactly once when main button has been clicked",
      "fullTitle": "#addSemester() should be called exactly once when main button has been clicked",
      "timedOut": false,
      "duration": 83,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var addSemester = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: identity,\n    addSemester: addSemester }));\nwrapper.find(\"Button\").simulate(\"click\");\nexpect(addSemester).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "8b969b9b-14eb-49b2-b404-d1f2a55f817c",
      "parentUUID": "490da6f7-ce42-47ef-8ac1-aed18affe2f9",
      "skipped": false
    },
    {
      "title": "should be called as many times as the number of insert teaching periods options upon click",
      "fullTitle": "#insert() should be called as many times as the number of insert teaching periods options upon click",
      "timedOut": false,
      "duration": 153,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var insert = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: insert,\n    addSemester: identity }));\nvar dropdownItems = wrapper.find(\".item\");\ndropdownItems.forEach(function (node) {\n    return node.simulate(\"click\");\n});\nexpect(insert).to.have.callCount(dropdownItems.length);",
      "err": {},
      "isRoot": false,
      "uuid": "daf37200-7e1b-4c90-9a19-e00c7f97c348",
      "parentUUID": "a03b9467-e6a4-4540-9f88-d6dcd8c8939b",
      "skipped": false
    },
    {
      "title": "should render two ratings",
      "fullTitle": "COMPONENT: SetuRating should render two ratings",
      "timedOut": false,
      "duration": 102,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, null)).find(\".rating\")).to.have.length(2);",
      "err": {},
      "isRoot": false,
      "uuid": "264645a7-195d-4544-aba5-0978766f629c",
      "parentUUID": "1c7c2caf-59e5-429f-8a98-2c2637448b94",
      "skipped": false
    },
    {
      "title": "should render a book if learning ratings is >=2.5",
      "fullTitle": "COMPONENT: SetuRating should render a book if learning ratings is >=2.5",
      "timedOut": false,
      "duration": 107,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 4.13 })).find(\".book\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.50 })).find(\".book\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "b4469331-4bd3-4eea-b8b1-3b0638b5022e",
      "parentUUID": "1c7c2caf-59e5-429f-8a98-2c2637448b94",
      "skipped": false
    },
    {
      "title": "should render a remove circle if learning ratings is <2.5",
      "fullTitle": "COMPONENT: SetuRating should render a remove circle if learning ratings is <2.5",
      "timedOut": false,
      "duration": 124,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 1.51 })).find(\".remove.circle\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.49 })).find(\".remove.circle\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "0ed11ed0-27fb-4438-9970-19441a699635",
      "parentUUID": "1c7c2caf-59e5-429f-8a98-2c2637448b94",
      "skipped": false
    },
    {
      "title": "should render a thumbs up if enjoyment ratings is >=2.5",
      "fullTitle": "COMPONENT: SetuRating should render a thumbs up if enjoyment ratings is >=2.5",
      "timedOut": false,
      "duration": 116,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 4.13 })).find(\".thumbs.up\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.50 })).find(\".thumbs.up\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "291dd865-7d6f-4bb9-9faf-b113bffe9f78",
      "parentUUID": "1c7c2caf-59e5-429f-8a98-2c2637448b94",
      "skipped": false
    },
    {
      "title": "should render a thumbs down if enjoyment ratings is <2.5",
      "fullTitle": "COMPONENT: SetuRating should render a thumbs down if enjoyment ratings is <2.5",
      "timedOut": false,
      "duration": 100,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 1.51 })).find(\".thumbs.down\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.49 })).find(\".thumbs.down\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "1f519b3f-6961-418d-a669-04e348229232",
      "parentUUID": "1c7c2caf-59e5-429f-8a98-2c2637448b94",
      "skipped": false
    },
    {
      "title": "should only render a unit code and a unit name",
      "fullTitle": "COMPONENT: UnitMessage should only render a unit code and a unit name",
      "timedOut": false,
      "duration": 49,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var unitCode = \"ABC1234\";\nvar unitName = \"Example unit\";\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: unitCode,\n    name: unitName }));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(unitCode);\nexpect(wrapper.find(\".message\").text().replace(unitCode, \"\").trim()).to.equal(unitName);",
      "err": {},
      "isRoot": false,
      "uuid": "d28b5e81-f272-477f-a816-8f2e980588e6",
      "parentUUID": "380765bc-063e-4ae6-8a54-70f341e0847d",
      "skipped": false
    },
    {
      "title": "should render a close button only when mouse is over the unit",
      "fullTitle": "COMPONENT: UnitMessage should render a close button only when mouse is over the unit",
      "timedOut": false,
      "duration": 97,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    hovering: false }));\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");\nwrapper.setProps({\n    hovering: true\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"visible\");\nwrapper.setProps({\n    hovering: false\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");",
      "err": {},
      "isRoot": false,
      "uuid": "50236723-2e47-4b9f-8db9-bdfcb3f1c4ba",
      "parentUUID": "380765bc-063e-4ae6-8a54-70f341e0847d",
      "skipped": false
    },
    {
      "title": "Should increment the credit point state by a given value",
      "fullTitle": "ACTION: INCREMENT_CREDIT_POINTS Should increment the credit point state by a given value",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 2, creditPoints: 0 };\nvar action = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 2,\n    creditPoints: 1\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "3ffc6ad4-5b5c-4dea-8f03-f57b2791383f",
      "parentUUID": "014026d3-5067-41be-9722-b353775ad2be",
      "skipped": false
    },
    {
      "title": "Should decrement the credit point state by a given value",
      "fullTitle": "ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state by a given value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "da8e7584-51a3-4e6f-9f82-7457c5a572fd",
      "parentUUID": "3d925d24-74d6-41f8-b36b-93021832d64d",
      "skipped": false
    },
    {
      "title": "Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
      "fullTitle": "ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 0\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "beb089e9-0a22-47e8-a373-9328171edf77",
      "parentUUID": "3d925d24-74d6-41f8-b36b-93021832d64d",
      "skipped": false
    },
    {
      "title": "Should increment the cost state by a given value",
      "fullTitle": "ACTION: INCREMENT_COST Should increment the cost state by a given value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 20, creditPoints: 13 };\nvar action = {\n    type: \"INCREMENT_COST\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 21,\n    creditPoints: 13\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "678a3ba8-f32c-4caf-bdae-29e7f1077746",
      "parentUUID": "9ff5fb25-cf01-4fe5-98f0-20b3498666f1",
      "skipped": false
    },
    {
      "title": "Should decrement the cost state by a given value",
      "fullTitle": "ACTION: DECREMENT_COST Should decrement the cost state by a given value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "57413771-3320-4127-87f5-adfc94e057dd",
      "parentUUID": "e02f4248-c6e3-4509-8422-9a8c6d1ee015",
      "skipped": false
    },
    {
      "title": "Should decrement the cost state to 0 if a value given is larger than the current credit point value",
      "fullTitle": "ACTION: DECREMENT_COST Should decrement the cost state to 0 if a value given is larger than the current credit point value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 0,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "07af734c-94e9-4de8-90e1-12c497a48e48",
      "parentUUID": "e02f4248-c6e3-4509-8422-9a8c6d1ee015",
      "skipped": false
    },
    {
      "title": "Should reset the cost and credit point counters to 0",
      "fullTitle": "ACTION: CLEAR_COURSE Should reset the cost and credit point counters to 0",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d800cd00-db27-469d-9dd2-00fead9cdf24",
      "parentUUID": "217aaeb5-12f9-454f-a0ea-80b13ed704fe",
      "skipped": false
    },
    {
      "title": "Should correctly go through and decrement the counters for each value ",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should correctly go through and decrement the counters for each value ",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { Cost: 2, CreditPoints: 20 }, { Cost: 5, CreditPoints: 10 }, null]\n};\nvar stateAfter = { cost: 43, creditPoints: 10 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "2a39af0d-294d-4089-9b67-5600100078b6",
      "parentUUID": "85d87a15-7689-4d45-8a5c-f11e4e4b8055",
      "skipped": false
    },
    {
      "title": "Should not decrement the counters below 0 ",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should not decrement the counters below 0 ",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { Cost: 25, CreditPoints: 20 }, { Cost: 30, CreditPoints: 30 }, { Cost: 0, CreditPoints: 10 }]\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "df32ae21-28b0-467a-a138-d5acb4578dd7",
      "parentUUID": "85d87a15-7689-4d45-8a5c-f11e4e4b8055",
      "skipped": false
    },
    {
      "title": "Should correctly decrement the counters based on the given units creditpoints and cost",
      "fullTitle": "ACTION: REMOVE_UNIT Should correctly decrement the counters based on the given units creditpoints and cost",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 20 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "81a3a4b2-57bc-4ec0-be28-6d89044f2b0a",
      "parentUUID": "09279a07-ae4c-4f59-85cd-6c6e011c0fdb",
      "skipped": false
    },
    {
      "title": "Should not decrement the counters below 0",
      "fullTitle": "ACTION: REMOVE_UNIT Should not decrement the counters below 0",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "8e677542-0474-4573-8893-658902a659df",
      "parentUUID": "09279a07-ae4c-4f59-85cd-6c6e011c0fdb",
      "skipped": false
    },
    {
      "title": "Should correctly increment the counters when a unit is added to the plan",
      "fullTitle": "ACTION: ADD_UNIT Should correctly increment the counters when a unit is added to the plan",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"ADD_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 30 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0ad4918a-fc8b-4760-9e4c-68bbbc1279d5",
      "parentUUID": "ac282028-23ae-4b9e-9be3-2615ac829494",
      "skipped": false
    },
    {
      "title": "Should not decrease counters if there are no units in the overload column",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units in the overload column",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: []\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "59d2febd-19ff-4470-8a6e-eb49f85db9d9",
      "parentUUID": "824b1dca-1716-48a2-98e4-b1c8b497d7b7",
      "skipped": false
    },
    {
      "title": "Should not decrease counters if there are no units which have values in the overload column",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units which have values in the overload column",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [null, {}]\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "ad48bd0f-7648-4bba-af00-af712ee9e1e7",
      "parentUUID": "824b1dca-1716-48a2-98e4-b1c8b497d7b7",
      "skipped": false
    },
    {
      "title": "Should decrease counters correctly for units in the overload column",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should decrease counters correctly for units in the overload column",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [{\n        CreditPoints: 6,\n        Cost: 1134\n    }, {\n        CreditPoints: 12,\n        Cost: 2256\n    }]\n};\nvar stateAfter = { cost: 36610, creditPoints: 126 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "fc021b0f-7e6c-4899-b08f-cc687183d178",
      "parentUUID": "824b1dca-1716-48a2-98e4-b1c8b497d7b7",
      "skipped": false
    },
    {
      "title": "Should not change state if it does not recognise an action",
      "fullTitle": "DEFAULT Should not change state if it does not recognise an action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "30924402-b062-49f7-86c7-e8a692fcc11d",
      "parentUUID": "eb9ba4be-8ffe-483d-8c0b-1d1c6b30762c",
      "skipped": false
    },
    {
      "title": "Should insert a teaching period with the given info correctly into middle of array",
      "fullTitle": "ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into middle of array",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2018,\n    code: \"S2-01\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e3fc2471-c4cb-4fa3-945c-ea9cfa5f1c6d",
      "parentUUID": "26a28bea-1e90-49b7-bcc9-72f333f66589",
      "skipped": false
    },
    {
      "title": "Should insert a teaching period with the given info correctly into start of array",
      "fullTitle": "ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into start of array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2016,\n    code: \"S2-01\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2016, code: \"S2-01\", units: [null, null, null, null] }, { year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7ad5a59c-0b51-4c39-841b-0887636641f9",
      "parentUUID": "26a28bea-1e90-49b7-bcc9-72f333f66589",
      "skipped": false
    },
    {
      "title": "Should remove a teaching period at the given index",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the given index",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b78c4d70-45cc-4b26-881c-ac6a20706cbd",
      "parentUUID": "9c669b13-3a18-4d88-bc78-1fcc02b6f20f",
      "skipped": false
    },
    {
      "title": "Should remove a teaching period at the start of the array",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the start of the array",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "83695818-ad28-443b-8986-1481c10a1cb3",
      "parentUUID": "9c669b13-3a18-4d88-bc78-1fcc02b6f20f",
      "skipped": false
    },
    {
      "title": "Should add the given teaching period to the end of the array",
      "fullTitle": "ACTION: APPEND_TEACHING_PERIOD Should add the given teaching period to the end of the array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"APPEND_TEACHING_PERIOD\",\n    year: 2020,\n    code: \"S2-01\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }, { year: 2020, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "39712f23-f1ef-4f64-9104-c6c215764992",
      "parentUUID": "ca4c689a-7cae-4796-8004-f772fcd01600",
      "skipped": false
    },
    {
      "title": "Should increase the study load if the study load is less than 4",
      "fullTitle": "ACTION: INCREASE_STUDY_LOAD Should increase the study load if the study load is less than 4",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "733f774c-a1bf-434f-a5f1-505737f09823",
      "parentUUID": "0f0da17d-fbdc-45ae-a291-8dd2e5fd8e7a",
      "skipped": false
    },
    {
      "title": "Should not increase the study load if the study load is 6 or greater",
      "fullTitle": "ACTION: INCREASE_STUDY_LOAD Should not increase the study load if the study load is 6 or greater",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null, null] }],\n    numberOfUnits: 6\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null, null] }],\n    numberOfUnits: 6\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "3ca1eb57-8bf4-42d4-8e93-5ef3912feed8",
      "parentUUID": "0f0da17d-fbdc-45ae-a291-8dd2e5fd8e7a",
      "skipped": false
    },
    {
      "title": "Should decrease the study load if the study load is greater than 4",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should decrease the study load if the study load is greater than 4",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "889855b9-c240-43a7-8c2f-8d0aecfccd78",
      "parentUUID": "f3fdbc2e-a399-4ade-95cc-c767132a749f",
      "skipped": false
    },
    {
      "title": "Should not decrease the study load if the study load is 4 or less",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should not decrease the study load if the study load is 4 or less",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "99197c1e-0180-4f3e-af9a-f7b0d9538193",
      "parentUUID": "f3fdbc2e-a399-4ade-95cc-c767132a749f",
      "skipped": false
    },
    {
      "title": "Should remove all teaching periods and set the amount of units to 4",
      "fullTitle": "ACTION: CLEAR_COURSE Should remove all teaching periods and set the amount of units to 4",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ea2ae37a-feb1-4b63-8eaa-b43bd139e923",
      "parentUUID": "69d55aeb-3a5a-45b3-bf39-ba51ec2ef06c",
      "skipped": false
    },
    {
      "title": "Should add a unit correctly to the start of an array",
      "fullTitle": "ACTION: ADD_UNIT Should add a unit correctly to the start of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\"\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e20cb9b4-21d1-4b23-899f-4fe491aa193a",
      "parentUUID": "2001f9db-bfde-468f-8791-b99014b345a6",
      "skipped": false
    },
    {
      "title": "Should add a unit correctly to the middle of an array",
      "fullTitle": "ACTION: ADD_UNIT Should add a unit correctly to the middle of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\"\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "cbb74ccd-780e-4e0d-8e23-76093c83349e",
      "parentUUID": "2001f9db-bfde-468f-8791-b99014b345a6",
      "skipped": false
    },
    {
      "title": "Should add a unit correctly to the end of an array",
      "fullTitle": "ACTION: ADD_UNIT Should add a unit correctly to the end of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\"\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b3a1f5fa-48b7-4306-9bb9-d93c8c20acb8",
      "parentUUID": "2001f9db-bfde-468f-8791-b99014b345a6",
      "skipped": false
    },
    {
      "title": "Should remove a unit correctly frpm the start of an array",
      "fullTitle": "ACTION: REMOVE_UNIT Should remove a unit correctly frpm the start of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ec7ca685-da98-4627-8087-53a887dd4ce6",
      "parentUUID": "eadeb608-bd37-47ae-aa1d-f48c21625534",
      "skipped": false
    },
    {
      "title": "Should remove a unit correctly from the middle of an array",
      "fullTitle": "ACTION: REMOVE_UNIT Should remove a unit correctly from the middle of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "70b77d95-b177-40a8-b768-fb5481aa8511",
      "parentUUID": "eadeb608-bd37-47ae-aa1d-f48c21625534",
      "skipped": false
    },
    {
      "title": "Should remove a unit correctly from the end of an array",
      "fullTitle": "ACTION: REMOVE_UNIT Should remove a unit correctly from the end of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b25c60e4-9088-4f91-a595-cc1ab3b1244e",
      "parentUUID": "eadeb608-bd37-47ae-aa1d-f48c21625534",
      "skipped": false
    },
    {
      "title": "Should generate a course structure with valid start and end years",
      "fullTitle": "ACTION: GENERATE_COURSE Should generate a course structure with valid start and end years",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2014,\n    endYear: 2016\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "00bbf42b-2c8a-4e9e-a83d-48f2e0de3463",
      "parentUUID": "f45ee117-223d-4c51-867a-de0e2b46941a",
      "skipped": false
    },
    {
      "title": "Should return an empty course structure with invalid start and end years.",
      "fullTitle": "ACTION: GENERATE_COURSE Should return an empty course structure with invalid start and end years.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2017,\n    endYear: 2013\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "66681871-d9e9-4170-8ffc-dfdabda6bd7d",
      "parentUUID": "f45ee117-223d-4c51-867a-de0e2b46941a",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course info is loading",
      "fullTitle": "ACTION: FETCH_COURSE_INFO_PENDING Should correctly show that the course info is loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f5df97c1-eb21-4429-ac03-2a4a22bda727",
      "parentUUID": "91eea27b-0751-4b8a-8588-5cd56b3ce165",
      "skipped": false
    },
    {
      "title": "Should correctly return the payload and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    focusedCourse: null,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_FULFILLED\",\n    payload: { data: {\n            courseName: \"Test Course\",\n            mangFac: \"Test Faculty\",\n            creditPoints: 100,\n            courseDescrip: \"Test Description\",\n            courseDuration: \"Test Duration\",\n            modeLoc: \"Test mode and location\",\n            courseAward: \"Test awards\",\n            abrevTitle: \"Test abreviated title\"\n        } },\n    courseCode: \"COURSE101\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: {\n        courseName: \"Test Course\",\n        faculty: \"Test Faculty\",\n        creditPoints: 100,\n        courseDescription: \"Test Description\",\n        durationStr: \"Test Duration\",\n        modeAndLocation: \"Test mode and location\",\n        awards: \"Test awards\",\n        abrTitle: \"Test abreviated title\"\n    },\n    focusedCourse: \"COURSE101\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "558e5fca-775c-4540-b846-8e4ebe790885",
      "parentUUID": "8ce1272a-bb1e-4b70-93a8-f226adad954b",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course info fetch failed and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_INFO_REJECTED Should correctly show that the course info fetch failed and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: true,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b58cd9f4-2ccf-4a9c-a95a-42346c4d26c7",
      "parentUUID": "1294c774-811a-4469-9d34-13a26193fd96",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course template is loading",
      "fullTitle": "ACTION: FETCH_COURSE_TEMPLATE_PENDING Should correctly show that the course template is loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "db63913d-3661-47df-9d29-61822a058105",
      "parentUUID": "dc9cadda-0584-4925-a06f-fb47fef3eb52",
      "skipped": false
    },
    {
      "title": "Should correctly return the payload and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_TEMPLATE_FULFILLED Should correctly return the payload and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_FULFILLED\",\n    payload: { data: \"Fake Course Template\" }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: \"Fake Course Template\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7db4fea9-a158-4915-b18e-73fc0a88be05",
      "parentUUID": "30567f4b-16d7-474d-b6d0-b2dcb73d664e",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course template fetch failed and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_TEMPLATE_REJECTED Should correctly show that the course template fetch failed and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: true,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ec816766-424d-47fb-ac07-189239ed0e49",
      "parentUUID": "265f8708-6477-4739-b3b2-78a93bb9263d",
      "skipped": false
    },
    {
      "title": "Should correctly show that the unit info is loading",
      "fullTitle": "ACTION: FETCH_UNIT_INFO_PENDING Should correctly show that the unit info is loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: {\n        Cost: 0,\n        CreditPoints: 0,\n        Faculty: \"\",\n        likeScore: 0,\n        Synopsis: \"\",\n        UnitName: \"\",\n        usefulnessScore: 0,\n        prereqs: \"\",\n        prohibs: \"\",\n        offeringArray: \"\",\n        learnResponseCount: 0,\n        enjoyResponseCount: 0,\n        SCABand: 0\n    },\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: {\n        Cost: 0,\n        CreditPoints: 0,\n        Faculty: \"\",\n        likeScore: 0,\n        Synopsis: \"\",\n        UnitName: \"\",\n        usefulnessScore: 0,\n        prereqs: \"\",\n        prohibs: \"\",\n        offeringArray: \"\",\n        learnResponseCount: 0,\n        enjoyResponseCount: 0,\n        SCABand: 0\n    },\n    focusedUnitCode: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "cda8a9d7-fb79-4546-841a-1cd49cebcd7b",
      "parentUUID": "698c817c-d155-47da-8794-8e2798407eae",
      "skipped": false
    },
    {
      "title": "Should correctly return the payload and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_UNIT_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_FULFILLED\",\n    payload: { data: \"Fake Unit Info\" },\n    unitCode: \"FAKE1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: \"Fake Unit Info\",\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7f082106-13e6-4abe-9d31-0a022628aaf8",
      "parentUUID": "a4fc394b-3c58-4cb5-b325-45c4d5795f04",
      "skipped": false
    },
    {
      "title": "Should correctly show that the unit info fetch failed and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_UNIT_INFO_REJECTED Should correctly show that the unit info fetch failed and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_REJECTED\",\n    payload: \"Error Msg\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: true,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c9fca240-9106-481e-a1f2-f015e01a4766",
      "parentUUID": "e52d64fb-a9c4-4056-ab49-fa992962abd5",
      "skipped": false
    },
    {
      "title": "Should accurately set the start year and the focused course on submission",
      "fullTitle": "ACTION: SUBMIT_COURSE_FORM Should accurately set the start year and the focused course on submission",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_COURSE_FORM\",\n    startYear: 2020,\n    courseCode: \"TEST1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: \"TEST1001\",\n    startYear: 2020,\n    endYear: 2020\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "faccf286-365e-43a8-ad77-110aa654022d",
      "parentUUID": "2b6a0a49-8024-4dd4-8ebf-e94c037f8f4e",
      "skipped": false
    },
    {
      "title": "Should accurately set the start year and end year on submission",
      "fullTitle": "ACTION: SUBMIT_YEAR_FORM Should accurately set the start year and end year on submission",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_YEAR_FORM\",\n    startYear: 2020,\n    endYear: 2025\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2020,\n    endYear: 2025\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "3c0804c1-8295-40de-923f-52f91dc0cb83",
      "parentUUID": "45377fc2-cca5-4114-b048-843cc8fcfdfa",
      "skipped": false
    },
    {
      "title": "Should correctly handle  of teaching periods data",
      "fullTitle": "ACTION: FETCH_TEACHING_PERIODS_PENDING Should correctly handle  of teaching periods data",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c371d935-73d6-4f71-a96e-3f11a11ace4a",
      "parentUUID": "08112010-25e4-48de-944b-7c401bc94f69",
      "skipped": false
    },
    {
      "title": "Should correctly handle  of teaching periods data",
      "fullTitle": "ACTION: FETCH_TEACHING_PERIODS_FULFILLED Should correctly handle  of teaching periods data",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_FULFILLED\",\n    payload: \"Teaching period strings\"\n};\nvar stateAfter = {\n    teachingPeriodData: \"Teaching period strings\",\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0e9c34a7-f957-4f2f-8eda-c51b004e29d0",
      "parentUUID": "9163ca50-6c50-409e-9a39-30b6e5843af6",
      "skipped": false
    },
    {
      "title": "Should correctly handle  of teaching periods data",
      "fullTitle": "ACTION: FETCH_TEACHING_PERIODS_REJECTED Should correctly handle  of teaching periods data",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ba4ac56f-103b-4f67-a392-0538c60f5564",
      "parentUUID": "3d5f70c8-3050-43f1-909c-48cb4bbbd8e8",
      "skipped": false
    },
    {
      "title": "Should set the teaching period code to insert value correctly",
      "fullTitle": "ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should set the teaching period code to insert value correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodCodeToInsert: null,\n    testParam1: 1,\n    testParam2: \"test\"\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"S1-02\"\n};\nvar stateAfter = {\n    teachingPeriodCodeToInsert: \"S1-02\",\n    testParam1: 1,\n    testParam2: \"test\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d22a3463-82b6-4aba-b431-dfacc06909b0",
      "parentUUID": "84f57d57-5a2a-47ed-9634-ff0f27d60fea",
      "skipped": false
    },
    {
      "title": "Should handle the initiation of a course snapshot upload correctly",
      "fullTitle": "ACTION: UPLOAD_COURSE_SNAPSHOT_PENDING Should handle the initiation of a course snapshot upload correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: true\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "59daf855-6a4a-4505-90f5-61e13f13a204",
      "parentUUID": "0e732e3c-f537-4014-a63b-eff8efe03a23",
      "skipped": false
    },
    {
      "title": "Should handle the successful upload of a course snapshot correctly",
      "fullTitle": "ACTION: UPLOAD_COURSE_SNAPSHOT_FULFILLED Should handle the successful upload of a course snapshot correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"upload string\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: \"upload string\",\n    courseSnapshotUploadSucessful: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4fa9879e-65c7-4877-bb2b-6a333c8570d3",
      "parentUUID": "12605172-c053-4de9-a128-3f20765d1c68",
      "skipped": false
    },
    {
      "title": "Should do handle the rejected upload of a course snapshot correctly",
      "fullTitle": "ACTION: UPLOAD_COURSE_SNAPSHOT_REJECTED Should do handle the rejected upload of a course snapshot correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ea9a6e65-697c-40ef-8e50-5726f4ce39e8",
      "parentUUID": "00dfc6ea-c22f-43f1-96d7-e522577dc2bf",
      "skipped": false
    },
    {
      "title": "Should begin fetching a course snapshot correctly",
      "fullTitle": "ACTION: FETCH_COURSE_SNAPSHOT_PENDING Should begin fetching a course snapshot correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c2c9c49d-c3cd-44af-9fe0-1a46e66464ab",
      "parentUUID": "2de7c48f-15e0-4e82-b8e5-bb64a1b1b9e3",
      "skipped": false
    },
    {
      "title": "Should handle a successful course snapshot fetch correctly",
      "fullTitle": "ACTION: FETCH_COURSE_SNAPSHOT_FULFILLED Should handle a successful course snapshot fetch correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"Snap data\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: \"Snap data\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "310e1fb0-4c70-4d81-9a73-fc6d99bc15f8",
      "parentUUID": "3820d16d-ff1e-491c-8cad-af2588429946",
      "skipped": false
    },
    {
      "title": "Should handle a rejected course snapshot fetch correctly",
      "fullTitle": "ACTION: FETCH_COURSE_SNAPSHOT_REJECTED Should handle a rejected course snapshot fetch correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e92bb1fe-4424-4640-a947-e3a2605a48a6",
      "parentUUID": "c257347a-002f-4bd7-bcb0-2c6cf0f70c32",
      "skipped": false
    },
    {
      "title": "Should correctly update the affected units value to the given array",
      "fullTitle": "ACTION: UPDATE_AFFECTED_UNITS Should correctly update the affected units value to the given array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: []\n};\nvar action = {\n    type: \"UPDATE_AFFECTED_UNITS\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "cf84acd7-fe09-4e14-b7ad-b959ea0fe47c",
      "parentUUID": "57ec6e59-dd49-4c01-a7f1-6cb8e35a776f",
      "skipped": false
    },
    {
      "title": "Should correctly update the index of tp to remove value to the given value",
      "fullTitle": "ACTION: UPDATE_INDEX_OF_TP_TO_REMOVE Should correctly update the index of tp to remove value to the given value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 0\n};\nvar action = {\n    type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\",\n    index: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 1\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0b557c96-7e71-4eb0-a9da-b5acab015d86",
      "parentUUID": "5e6760f7-6b6d-45be-811a-e66165f62151",
      "skipped": false
    },
    {
      "title": "Should correctly set the unit to add to the new unit",
      "fullTitle": "ACTION: UPDATE_UNIT_TO_ADD Should correctly set the unit to add to the new unit",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitInfo: \"TestUnit\",\n    unitToAdd: undefined\n};\nvar action = {\n    type: \"UPDATE_UNIT_TO_ADD\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitInfo: \"TestUnit\",\n    unitToAdd: \"TestUnit\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e77edf5a-10c8-4364-afd3-f776c522da5c",
      "parentUUID": "a8a3d036-fbe9-41e0-bd90-9da410bbf2de",
      "skipped": false
    },
    {
      "title": "Should correctly set a non-dragging unit being dragged",
      "fullTitle": "ACTION: UPDATE_UNIT_IS_BEING_DRAGGED Should correctly set a non-dragging unit being dragged",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: false\n};\nvar action = {\n    type: \"UPDATE_UNIT_IS_BEING_DRAGGED\",\n    isDragging: true\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "cddad4b1-9f9e-42e2-af8f-6c8fec0b7714",
      "parentUUID": "a81a8b76-c59a-420d-bc73-67a395fc3c1d",
      "skipped": false
    },
    {
      "title": "Should correctly set a dragging unit to be not dragged",
      "fullTitle": "ACTION: UPDATE_UNIT_IS_BEING_DRAGGED Should correctly set a dragging unit to be not dragged",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: true\n};\nvar action = {\n    type: \"UPDATE_UNIT_IS_BEING_DRAGGED\",\n    isDragging: false\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c9be5f26-911e-4db8-8998-f14557124727",
      "parentUUID": "a81a8b76-c59a-420d-bc73-67a395fc3c1d",
      "skipped": false
    },
    {
      "title": "Should correctly begin moving a unit",
      "fullTitle": "ACTION: MOVING_UNIT Should correctly begin moving a unit",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0\n};\nvar action = {\n    type: \"MOVING_UNIT\",\n    unit: \"TEST-UNIT\",\n    unitIndex: 3,\n    tpIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TEST-UNIT\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 3\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "29b22b2c-ec6b-4307-af14-b6814dc480f5",
      "parentUUID": "483f1516-2bc0-49ac-90bd-ac4a9c366e2e",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to a teaching period earlier than it",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period earlier than it",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9342a0fb-9342-4ca0-8883-1d3ed9ad651a",
      "parentUUID": "16be306e-dcf3-43fe-acf7-ddb09727ab9e",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to a teaching period later than it",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period later than it",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a1724c97-5f6c-41d5-869e-ad1b4d447523",
      "parentUUID": "16be306e-dcf3-43fe-acf7-ddb09727ab9e",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to the same teaching period but earlier position",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but earlier position",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "521783f6-01b3-4e70-bcfc-097eb4d1befb",
      "parentUUID": "16be306e-dcf3-43fe-acf7-ddb09727ab9e",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to the same teaching period but later position",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but later position",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, \"PlaceToMoveTo\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "30d0b9f5-8cd9-47b2-9d46-b9906cf46f3a",
      "parentUUID": "16be306e-dcf3-43fe-acf7-ddb09727ab9e",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to the same teaching period and exact same position",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period and exact same position",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4424810b-cb65-47a5-826c-c9cca7c89ff0",
      "parentUUID": "16be306e-dcf3-43fe-acf7-ddb09727ab9e",
      "skipped": false
    },
    {
      "title": "should cancel moving unit",
      "fullTitle": "ACTION: CANCEL_MOVING_UNIT should cancel moving unit",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: \"TestUnit2\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: undefined,\n    unitsIndexOfUnitToBeMoved: undefined\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "66c9586f-6686-45ef-8a4f-4cb968fc5b18",
      "parentUUID": "f78a2bdd-0d75-4798-8a1d-1c794a58bdc1",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to a teaching period earlier than it",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period earlier than it",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "42cca7ad-3291-4e57-b2fa-1d97cdc2748f",
      "parentUUID": "d5b29dd3-87dc-46ee-b75d-e42f17c1846c",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to a teaching period later than it",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period later than it",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9654f765-4916-4a0d-8748-e76386a1c9e9",
      "parentUUID": "d5b29dd3-87dc-46ee-b75d-e42f17c1846c",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to the same teaching period but earlier position",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but earlier position",
      "timedOut": false,
      "duration": 10,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7f2d6078-7612-48e9-8b08-f921b1e5b555",
      "parentUUID": "d5b29dd3-87dc-46ee-b75d-e42f17c1846c",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to the same teaching period but later position",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but later position",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, \"PlaceToMoveTo\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", null, \"TestUnit\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ea38d03a-f883-4816-acb3-759e0c8846d0",
      "parentUUID": "d5b29dd3-87dc-46ee-b75d-e42f17c1846c",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to the same teaching period and exact same position",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period and exact same position",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "cfe7f5fd-a89e-40e0-81a5-ca4c1d57da78",
      "parentUUID": "d5b29dd3-87dc-46ee-b75d-e42f17c1846c",
      "skipped": false
    },
    {
      "title": "should give no errors for an empty course plan.",
      "fullTitle": "ACTION: VALIDATE_COURSE should give no errors for an empty course plan.",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan.\"\n    }]\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    courseErrors: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "2076b296-d490-486e-afd1-6f9a93af4b86",
      "parentUUID": "31a3956a-3593-4f11-ba03-c17df11ac25d",
      "skipped": false
    },
    {
      "title": "should not change the state if it receives an unknown action",
      "fullTitle": "DEFAULT should not change the state if it receives an unknown action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "0e2d0ebe-3e94-4960-9c0e-96707676e06f",
      "parentUUID": "69487392-c465-4d3f-9780-55e289471a9c",
      "skipped": false
    },
    {
      "title": "should insert a notification from an empty list",
      "fullTitle": "ACTION: ADD_NOTIFICATION should insert a notification from an empty list",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: []\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "48513ede-6558-4bdf-b6b7-11336104744a",
      "parentUUID": "5a4723eb-9433-42b1-8651-0942ef633c8e",
      "skipped": false
    },
    {
      "title": "should prepend a notification into an list of a few existing notifications.",
      "fullTitle": "ACTION: ADD_NOTIFICATION should prepend a notification into an list of a few existing notifications.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "8b1539c8-4abc-4619-a656-a5e23ebb6cde",
      "parentUUID": "5a4723eb-9433-42b1-8651-0942ef633c8e",
      "skipped": false
    },
    {
      "title": "Should remove a notification given its ID",
      "fullTitle": "ACTION: REMOVE_NOTIFICATION Should remove a notification given its ID",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    id: \"CONNECTION_LOST\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e8df74bd-f3d6-4f8a-81e0-d83eaa171f00",
      "parentUUID": "132c1069-c613-4949-bf71-d5b7775038f2",
      "skipped": false
    },
    {
      "title": "Should remove a notification given its index",
      "fullTitle": "ACTION: REMOVE_NOTIFICATION Should remove a notification given its index",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    index: 1\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9148be3a-db55-4d06-9fde-ce8887d1e9e7",
      "parentUUID": "132c1069-c613-4949-bf71-d5b7775038f2",
      "skipped": false
    },
    {
      "title": "Should not change state if it does not recognise an action",
      "fullTitle": "DEFAULT Should not change state if it does not recognise an action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Notifications2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "c47a0512-e27d-44af-af77-28534bacb299",
      "parentUUID": "7b153c19-3ff1-4310-b94a-a220199ccd9e",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the insert teaching period UI boolean",
      "fullTitle": "ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: true,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "10b2927a-403c-46ec-8cb7-0ce710b1c021",
      "parentUUID": "3f64525d-65ff-416e-8edf-b1526c898d36",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the insert teaching period UI boolean",
      "fullTitle": "ACTION: HIDE_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: true,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false\n};\nvar action = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "6b48a751-f5e2-4fb3-ae81-42789405f736",
      "parentUUID": "afdaadf3-e7c7-4dc2-be40-3f805735fdf3",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the add unit UI boolean",
      "fullTitle": "ACTION: SHOW_ADD_UNIT_UI Should correctly toggle the add unit UI boolean",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false\n};\nvar action = {\n    type: \"SHOW_ADD_UNIT_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "506893f0-b4fe-40f8-8f21-764ff33ba756",
      "parentUUID": "c7025b68-2807-4b55-a4a2-6c8d57f3c32a",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the add unit UI boolean",
      "fullTitle": "ACTION: HIDE_ADD_UNIT_UI Should correctly toggle the add unit UI boolean",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: true\n};\nvar action = {\n    type: \"HIDE_ADD_UNIT_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "8da6ae3a-3a00-4d34-9fce-20ff9bbe19af",
      "parentUUID": "0ac7a04d-6fc1-4e53-9ca6-a76364e43baa",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the move unit UI boolean",
      "fullTitle": "ACTION: SHOW_MOVE_UNIT_UI Should correctly toggle the move unit UI boolean",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false\n};\nvar action = {\n    type: \"SHOW_MOVE_UNIT_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: true,\n    showAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4d5d4fe4-4e31-4319-afce-8e224c463489",
      "parentUUID": "81484ea9-282e-4163-b827-8805179ee9ca",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the move unit UI boolean",
      "fullTitle": "ACTION: HIDE_MOVE_UNIT_UI Should correctly toggle the move unit UI boolean",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: true,\n    showAddingUnitUI: false\n};\nvar action = {\n    type: \"HIDE_MOVE_UNIT_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a512d373-7aa8-4ecc-941e-d27088400521",
      "parentUUID": "36a8d2cd-aac9-4edf-91b1-a37cc85c5a72",
      "skipped": false
    },
    {
      "title": "Should set the course to read only correctly",
      "fullTitle": "ACTION: SET_COURSE_READ_ONLY Should set the course to read only correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    readOnly: false\n};\nvar action = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    readOnly: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f501bf19-1096-4b47-8a85-9e0cf3e69aa1",
      "parentUUID": "3b0d7bec-cef7-4b05-abe6-a235b536b183",
      "skipped": false
    },
    {
      "title": "Should set the course to allow edits correctly",
      "fullTitle": "ACTION: SET_COURSE_READ_AND_WRITE Should set the course to allow edits correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    readOnly: true\n};\nvar action = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    readOnly: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4b08c726-80a9-49fa-a0a7-46fb5afa4b86",
      "parentUUID": "aaaabf4d-adce-4755-8e30-be088908713a",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm delete teaching period modal UI to show",
      "fullTitle": "ACTION: SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to show",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0c0eda6c-2cbf-4a5b-b086-1b98d989ebc2",
      "parentUUID": "c1c2c2d1-cafd-4124-89dc-a94c83c303d8",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm delete teaching period modal UI to hide",
      "fullTitle": "ACTION: HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to hide",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "45cd9222-7e8a-458e-98ca-034949c0e26d",
      "parentUUID": "c3c2271f-e806-49b0-bab1-b1ff99c51679",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm decrease study load modal UI to show",
      "fullTitle": "ACTION: SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to show",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "80bf0b45-b8cb-4c10-b290-35e4f66ae9e3",
      "parentUUID": "7a47c85b-57c7-4f56-845a-9cf7259dfff2",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm decrease study load modal UI to hide",
      "fullTitle": "ACTION: HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to hide",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d5e30a55-2c08-453a-b4ed-b64456c4e163",
      "parentUUID": "94ad3eb9-cd82-43e7-a25a-7290e743c216",
      "skipped": false
    },
    {
      "title": "Should set show flag for custom unit modal to be true",
      "fullTitle": "ACTION: SHOW_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "03532202-63c3-4241-8ec9-b9d209f60784",
      "parentUUID": "9252c5af-3eb6-48f1-8cba-ec4cf444d1f8",
      "skipped": false
    },
    {
      "title": "Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
      "fullTitle": "ACTION: SHOW_CUSTOM_UNIT_MODAL Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"ABC1234\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: \"ABC1234\",\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "3eb91126-c0de-4ce1-9075-8bb21d726084",
      "parentUUID": "9252c5af-3eb6-48f1-8cba-ec4cf444d1f8",
      "skipped": false
    },
    {
      "title": "Should set unit code and position if it exists on top of setting show flag for custom unit modal to be true",
      "fullTitle": "ACTION: SHOW_CUSTOM_UNIT_MODAL Should set unit code and position if it exists on top of setting show flag for custom unit modal to be true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"ABC1234\",\n    tpIndex: 0,\n    unitIndex: 2\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: \"ABC1234\",\n    customTpIndex: 0,\n    customUnitIndex: 2\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d4ffef9b-3bd3-49ad-b588-7e1132fd7262",
      "parentUUID": "9252c5af-3eb6-48f1-8cba-ec4cf444d1f8",
      "skipped": false
    },
    {
      "title": "Should set show flag for custom unit modal to be false",
      "fullTitle": "ACTION: HIDE_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: true\n};\nvar action = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "835192de-41cf-4077-bd5a-4093cbf99094",
      "parentUUID": "adf95483-6110-4865-b9b5-c581ec7f2d8c",
      "skipped": false
    },
    {
      "title": "Should correctly show the sidebar when called",
      "fullTitle": "ACTION: SHOW_SIDEBAR Should correctly show the sidebar when called",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingSidebar: false\n};\nvar action = {\n    type: \"SHOW_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingSidebar: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d4315ebe-0016-45a8-b1b9-0487644e8280",
      "parentUUID": "4f32a927-8818-44c6-9690-c375e566cea3",
      "skipped": false
    },
    {
      "title": "Should correctly hide the sidebar when called",
      "fullTitle": "ACTION: HIDE_SIDEBAR Should correctly hide the sidebar when called",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"HIDE_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ef04142a-5a32-42ee-8083-2142daeefe64",
      "parentUUID": "480873de-5077-4f0a-912f-844d67f08681",
      "skipped": false
    },
    {
      "title": "Should correctly hide the sidebar when a unit is being added",
      "fullTitle": "ACTION: ADDING_UNIT Should correctly hide the sidebar when a unit is being added",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "180ef4e7-ecd1-43b8-a72c-28e3b230e503",
      "parentUUID": "738e6c79-c67d-403d-87d8-626d9071a64b",
      "skipped": false
    },
    {
      "title": "Should not change state if it does not recognise the action",
      "fullTitle": "DEFAULT Should not change state if it does not recognise the action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showMovingUnitUI: false,\n    showAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_UI2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "aafb4224-f56e-4dd1-ae0b-dcf5b582d18a",
      "parentUUID": "266c70f2-e20d-4658-94b8-8962ac03fd6e",
      "skipped": false
    },
    {
      "title": "Should return a non-negative number",
      "fullTitle": "UTILS: CostCalc Should return a non-negative number",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_CostCalc2.default.calculateCost(0, 0)).to.be.gte(0);\nexpect(_CostCalc2.default.calculateCost(2, 6)).to.be.gte(0);",
      "err": {},
      "isRoot": false,
      "uuid": "c1ae7851-4f33-485b-a448-27bf92bcc3ec",
      "parentUUID": "a6c3393b-e421-466d-ae99-e32218ba73bb",
      "skipped": false
    },
    {
      "title": "Should multiply SCA band cost with credit points",
      "fullTitle": "UTILS: CostCalc Should multiply SCA band cost with credit points",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var scaBand = 3;\nvar creditPoints = 6;\nvar scaBandCost = _CostCalc2.default.calculateCost(scaBand, 1);\nexpect(_CostCalc2.default.calculateCost(scaBand, creditPoints)).to.equal(scaBandCost * creditPoints);",
      "err": {},
      "isRoot": false,
      "uuid": "9675cd24-f2c6-4f48-9822-b871dd4ae5e9",
      "parentUUID": "a6c3393b-e421-466d-ae99-e32218ba73bb",
      "skipped": false
    },
    {
      "title": "Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
      "fullTitle": "nextSemester Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([], 2011, [])).to.deep.equal({\n    index: 0,\n    year: 2011,\n    code: \"S1-01\",\n    teachingPeriodData: []\n});",
      "err": {},
      "isRoot": false,
      "uuid": "658188a7-b563-41ab-97c5-65c59e7a4c5e",
      "parentUUID": "96b4b797-0550-4673-80d5-d8e49a8b5b46",
      "skipped": false
    },
    {
      "title": "Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
      "fullTitle": "nextSemester Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([], 2029, sortedTeachingPeriodData)).to.deep.equal({\n    index: 0,\n    year: 2029,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
      "err": {},
      "isRoot": false,
      "uuid": "d4dedd13-ca6f-4e24-839c-4e1ef999dd7b",
      "parentUUID": "96b4b797-0550-4673-80d5-d8e49a8b5b46",
      "skipped": false
    },
    {
      "title": "Should return semester two if the last teaching period is in semester one, with the same year",
      "fullTitle": "nextSemester Should return semester two if the last teaching period is in semester one, with the same year",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2025,\n    code: \"S1-01\"\n}, {\n    year: 2025,\n    code: \"S2-01\"\n}, {\n    year: 2026,\n    code: \"S1-01\"\n}, {\n    year: 2026,\n    code: \"S2-01\"\n}, {\n    year: 2027,\n    code: \"S1-01\"\n}], 2023, sortedTeachingPeriodData)).to.deep.equal({\n    index: 5,\n    year: 2027,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
      "err": {},
      "isRoot": false,
      "uuid": "eaa893f7-5dfe-43ab-9b4f-e12844665d40",
      "parentUUID": "96b4b797-0550-4673-80d5-d8e49a8b5b46",
      "skipped": false
    },
    {
      "title": "Should return semester one next year if the last teaching period is in semester two",
      "fullTitle": "nextSemester Should return semester one next year if the last teaching period is in semester two",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2015,\n    code: \"FY-01\"\n}, {\n    year: 2017,\n    code: \"S2-01\"\n}], 2015, sortedTeachingPeriodData)).to.deep.equal({\n    index: 2,\n    year: 2018,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
      "err": {},
      "isRoot": false,
      "uuid": "1595ea11-01db-49c2-968d-1cfe4ddd67ac",
      "parentUUID": "96b4b797-0550-4673-80d5-d8e49a8b5b46",
      "skipped": false
    },
    {
      "title": "Should render a semester string",
      "fullTitle": "getSemesterString Should render a semester string",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2019,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n})).to.equal(\"Semester 2, 2019\");",
      "err": {},
      "isRoot": false,
      "uuid": "98317ac3-cc79-4a3f-b187-b16d4d696df5",
      "parentUUID": "30860cc2-33ca-4eda-8cd3-63b28ff49fa2",
      "skipped": false
    },
    {
      "title": "Should revert back to semester codes if teachingPeriodData is not available",
      "fullTitle": "getSemesterString Should revert back to semester codes if teachingPeriodData is not available",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2015,\n    code: \"S1-01\"\n})).to.equal(\"S1-01, 2015\");",
      "err": {},
      "isRoot": false,
      "uuid": "25548294-d048-4530-a29b-359dd54a729d",
      "parentUUID": "30860cc2-33ca-4eda-8cd3-63b28ff49fa2",
      "skipped": false
    },
    {
      "title": "Should return the right year based off current month",
      "fullTitle": "UTILS: ShowYear Should return the right year based off current month",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "if (new Date().getMonth() + 1 >= 11) {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear() + 1);\n} else {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear());\n}",
      "err": {},
      "isRoot": false,
      "uuid": "5801c98b-8451-4f46-8779-abdaa9ded62d",
      "parentUUID": "2d76faa8-d578-4067-9663-743de45fc3b3",
      "skipped": false
    },
    {
      "title": "Should contain the same year as it was specified",
      "fullTitle": "UTILS: YearCalc Should contain the same year as it was specified",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getStartYearVals(2016).find(function (year) {\n    return year.value === 2016;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2017).find(function (year) {\n    return year.value === 2017;\n})).to.be.ok;",
      "err": {},
      "isRoot": false,
      "uuid": "6d333525-3a22-4bca-91fe-e3caf878f963",
      "parentUUID": "7aee1108-a579-4504-bebb-1a4cd2643835",
      "skipped": false
    },
    {
      "title": "Should contain a year that is ten years from now",
      "fullTitle": "UTILS: YearCalc Should contain a year that is ten years from now",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getStartYearVals(2019).find(function (year) {\n    return year.value === 2029;\n})).to.be.ok;\nexpect(_YearCalc2.default.getStartYearVals(2012).find(function (year) {\n    return year.value === 2002;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2028;\n})).to.be.ok;",
      "err": {},
      "isRoot": false,
      "uuid": "676a139e-15c8-4b39-a79c-da958ff8a27c",
      "parentUUID": "7aee1108-a579-4504-bebb-1a4cd2643835",
      "skipped": false
    },
    {
      "title": "Should not contain any past year when computing end years",
      "fullTitle": "UTILS: YearCalc Should not contain any past year when computing end years",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2017;\n})).to.be.not.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2008;\n})).to.be.not.ok;",
      "err": {},
      "isRoot": false,
      "uuid": "91b7a276-5445-4db5-a02b-c510ddaf337a",
      "parentUUID": "7aee1108-a579-4504-bebb-1a4cd2643835",
      "skipped": false
    },
    {
      "title": "Should have starting years go in decreasing order from one year ahead to the minimum",
      "fullTitle": "UTILS: YearCalc Should have starting years go in decreasing order from one year ahead to the minimum",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getStartYearVals(2019).slice(0, 12)).to.deep.equal([{\n    text: \"2020\",\n    value: 2020\n}, {\n    text: \"2019\",\n    value: 2019\n}, {\n    text: \"2018\",\n    value: 2018\n}, {\n    text: \"2017\",\n    value: 2017\n}, {\n    text: \"2016\",\n    value: 2016\n}, {\n    text: \"2015\",\n    value: 2015\n}, {\n    text: \"2014\",\n    value: 2014\n}, {\n    text: \"2013\",\n    value: 2013\n}, {\n    text: \"2012\",\n    value: 2012\n}, {\n    text: \"2011\",\n    value: 2011\n}, {\n    text: \"2010\",\n    value: 2010\n}, {\n    text: \"2009\",\n    value: 2009\n}]);",
      "err": {},
      "isRoot": false,
      "uuid": "5b045ccb-411a-4099-b0d2-0772ff15912f",
      "parentUUID": "7aee1108-a579-4504-bebb-1a4cd2643835",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2017
}