{
  "stats": {
    "suites": 143,
    "tests": 192,
    "passes": 192,
    "pending": 0,
    "failures": 0,
    "start": "2017-02-21T05:48:58.152Z",
    "end": "2017-02-21T05:48:59.157Z",
    "duration": 1005,
    "testsRegistered": 192,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "ACTION-CREATOR: CounterActions",
        "suites": [
          {
            "title": "AC: incrementCreditPoints",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to increment credit points counter",
                "fullTitle": "ACTION-CREATOR: CounterActions AC: incrementCreditPoints Should create an action to increment credit points counter",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 5\n};\n(0, _expect2.default)(actions.incrementCreditPoints(5)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "0d3ad61f-f37f-4080-95df-56bcc1f5ebeb",
                "parentUUID": "e3930b02-34fa-42eb-bccc-76e812c2a28d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CounterActions.spec.js",
            "uuid": "e3930b02-34fa-42eb-bccc-76e812c2a28d",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CounterActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to increment credit points counter",
                "fullTitle": "ACTION-CREATOR: CounterActions AC: incrementCreditPoints Should create an action to increment credit points counter",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 5\n};\n(0, _expect2.default)(actions.incrementCreditPoints(5)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "0d3ad61f-f37f-4080-95df-56bcc1f5ebeb",
                "parentUUID": "e3930b02-34fa-42eb-bccc-76e812c2a28d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          },
          {
            "title": "AC: decrementCreditPoints",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to decrement credit points counter",
                "fullTitle": "ACTION-CREATOR: CounterActions AC: decrementCreditPoints Should create an action to decrement credit points counter",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 5\n};\n(0, _expect2.default)(actions.decrementCreditPoints(5)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "d255c966-41d3-45a3-92e7-efd8b34e5d51",
                "parentUUID": "91b7217e-ccce-46c3-8e39-f616991d3787",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CounterActions.spec.js",
            "uuid": "91b7217e-ccce-46c3-8e39-f616991d3787",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CounterActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to decrement credit points counter",
                "fullTitle": "ACTION-CREATOR: CounterActions AC: decrementCreditPoints Should create an action to decrement credit points counter",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 5\n};\n(0, _expect2.default)(actions.decrementCreditPoints(5)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "d255c966-41d3-45a3-92e7-efd8b34e5d51",
                "parentUUID": "91b7217e-ccce-46c3-8e39-f616991d3787",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: incrementCost",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to increment cost counter",
                "fullTitle": "ACTION-CREATOR: CounterActions AC: incrementCost Should create an action to increment cost counter",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"INCREMENT_COST\",\n    value: 5\n};\n(0, _expect2.default)(actions.incrementCost(5)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "2ed22cc5-8baf-4239-ae24-bc00880d8032",
                "parentUUID": "0574123b-d30d-41d1-a543-b689b18f14f5",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CounterActions.spec.js",
            "uuid": "0574123b-d30d-41d1-a543-b689b18f14f5",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CounterActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to increment cost counter",
                "fullTitle": "ACTION-CREATOR: CounterActions AC: incrementCost Should create an action to increment cost counter",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"INCREMENT_COST\",\n    value: 5\n};\n(0, _expect2.default)(actions.incrementCost(5)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "2ed22cc5-8baf-4239-ae24-bc00880d8032",
                "parentUUID": "0574123b-d30d-41d1-a543-b689b18f14f5",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: decrementCosts",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to decrement cost counter",
                "fullTitle": "ACTION-CREATOR: CounterActions AC: decrementCosts Should create an action to decrement cost counter",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"DECREMENT_COST\",\n    value: 5\n};\n(0, _expect2.default)(actions.decrementCost(5)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "86e53cff-5860-48a6-8126-2afe12709b10",
                "parentUUID": "d711820a-db8f-439f-b9e9-d9b653f38a75",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CounterActions.spec.js",
            "uuid": "d711820a-db8f-439f-b9e9-d9b653f38a75",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CounterActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to decrement cost counter",
                "fullTitle": "ACTION-CREATOR: CounterActions AC: decrementCosts Should create an action to decrement cost counter",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"DECREMENT_COST\",\n    value: 5\n};\n(0, _expect2.default)(actions.decrementCost(5)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "86e53cff-5860-48a6-8126-2afe12709b10",
                "parentUUID": "d711820a-db8f-439f-b9e9-d9b653f38a75",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/actionCreators/CounterActions.spec.js",
        "uuid": "488d36b2-f44a-467c-ba29-4a7658baaca2",
        "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CounterActions.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "ACTION-CREATOR: CourseActions",
        "suites": [
          {
            "title": "AC: insertTeachingPeriod",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to insert a teaching period",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: insertTeachingPeriod Should create an action to insert a teaching period",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{\n    type: \"INSERT_TEACHING_PERIOD\",\n    index: 1,\n    year: 2016,\n    code: \"tpCode\"\n}, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n}];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.insertTeachingPeriod(1, 2016, \"tpCode\"));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "81fb1208-3c2a-46d2-85be-91f191e13db9",
                "parentUUID": "1c2af10d-b61d-4202-84ff-5e0511306e4d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "1c2af10d-b61d-4202-84ff-5e0511306e4d",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to insert a teaching period",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: insertTeachingPeriod Should create an action to insert a teaching period",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{\n    type: \"INSERT_TEACHING_PERIOD\",\n    index: 1,\n    year: 2016,\n    code: \"tpCode\"\n}, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n}];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.insertTeachingPeriod(1, 2016, \"tpCode\"));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "81fb1208-3c2a-46d2-85be-91f191e13db9",
                "parentUUID": "1c2af10d-b61d-4202-84ff-5e0511306e4d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "AC: removeTeachingPeriod",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to remove a teaching period",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: removeTeachingPeriod Should create an action to remove a teaching period",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1,\n    units: [\"unit1\", \"unit2\", \"unit3\", null]\n}, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n}];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.removeTeachingPeriod(1, [\"unit1\", \"unit2\", \"unit3\", null]));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "62d8d669-971c-431a-b7eb-9705e302d3ba",
                "parentUUID": "74255026-7ba2-4f38-b93c-84ce3957ed12",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "74255026-7ba2-4f38-b93c-84ce3957ed12",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to remove a teaching period",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: removeTeachingPeriod Should create an action to remove a teaching period",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1,\n    units: [\"unit1\", \"unit2\", \"unit3\", null]\n}, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n}];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.removeTeachingPeriod(1, [\"unit1\", \"unit2\", \"unit3\", null]));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "62d8d669-971c-431a-b7eb-9705e302d3ba",
                "parentUUID": "74255026-7ba2-4f38-b93c-84ce3957ed12",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: increaseStudyLoad",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to increase the study load",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: increaseStudyLoad Should create an action to increase the study load",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\n(0, _expect2.default)(actions.increaseStudyLoad()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "8bb9efe7-d047-4d37-bbcd-f94430194d95",
                "parentUUID": "d958442c-15c6-4d03-9e60-f36e098866f6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "d958442c-15c6-4d03-9e60-f36e098866f6",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to increase the study load",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: increaseStudyLoad Should create an action to increase the study load",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\n(0, _expect2.default)(actions.increaseStudyLoad()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "8bb9efe7-d047-4d37-bbcd-f94430194d95",
                "parentUUID": "d958442c-15c6-4d03-9e60-f36e098866f6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: decreaseStudyLoad",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to increase the study load with units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: decreaseStudyLoad Should create an action to increase the study load with units affected",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockTeachingPeriods = [{ year: 2018, code: \"S1-01\", units: [null, null, null, null, \"unit1\"] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }, { year: 2019, code: \"S1-01\", units: [null, null, null, null, \"unit2\"] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null, null] }];\nvar expectedAction = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [\"unit1\", \"unit2\"]\n};\n(0, _expect2.default)(actions.decreaseStudyLoad(mockTeachingPeriods, 4)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "82b3253e-fda8-4673-97d9-4b90405f7b23",
                "parentUUID": "13dec55f-b530-4b1d-84db-c764b1685b40",
                "skipped": false
              },
              {
                "title": "Should create an action to increase the study load with no units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: decreaseStudyLoad Should create an action to increase the study load with no units affected",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockTeachingPeriods = [{ year: 2018, code: \"S1-01\", units: [null, null, null, \"unit1\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }, { year: 2019, code: \"S1-01\", units: [null, null, null, \"unit2\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null, null] }];\nvar expectedAction = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: []\n};\n(0, _expect2.default)(actions.decreaseStudyLoad(mockTeachingPeriods, 4)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "7ea88bb2-7386-4d7e-be56-399ceaed3683",
                "parentUUID": "13dec55f-b530-4b1d-84db-c764b1685b40",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "13dec55f-b530-4b1d-84db-c764b1685b40",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to increase the study load with units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: decreaseStudyLoad Should create an action to increase the study load with units affected",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockTeachingPeriods = [{ year: 2018, code: \"S1-01\", units: [null, null, null, null, \"unit1\"] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }, { year: 2019, code: \"S1-01\", units: [null, null, null, null, \"unit2\"] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null, null] }];\nvar expectedAction = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [\"unit1\", \"unit2\"]\n};\n(0, _expect2.default)(actions.decreaseStudyLoad(mockTeachingPeriods, 4)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "82b3253e-fda8-4673-97d9-4b90405f7b23",
                "parentUUID": "13dec55f-b530-4b1d-84db-c764b1685b40",
                "skipped": false
              },
              {
                "title": "Should create an action to increase the study load with no units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: decreaseStudyLoad Should create an action to increase the study load with no units affected",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockTeachingPeriods = [{ year: 2018, code: \"S1-01\", units: [null, null, null, \"unit1\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }, { year: 2019, code: \"S1-01\", units: [null, null, null, \"unit2\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null, null] }];\nvar expectedAction = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: []\n};\n(0, _expect2.default)(actions.decreaseStudyLoad(mockTeachingPeriods, 4)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "7ea88bb2-7386-4d7e-be56-399ceaed3683",
                "parentUUID": "13dec55f-b530-4b1d-84db-c764b1685b40",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "AC: addUnit",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly create the actions required for the addition of a unit that is not a custom unit being dragged",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: addUnit Should correctly create the actions required for the addition of a unit that is not a custom unit being dragged",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockUnit = {\n                customUnitDragging: false,\n                cost: 200,\n                creditPoints: 6,\n                unitCode: \"TEST1001\"\n            };\n            var expectedActions = [{ type: \"ADD_UNIT\", tpIndex: 1, unitIndex: 1, unit: mockUnit, cost: 200, creditPoints: 6 }, { type: \"CLEAR_HIGHLIGHTING_INVALID_UNIT_SLOTS\" }, { type: \"VALIDATE_COURSE\" }, { type: \"MODIFIED_COURSE_PLAN\" }];\n            var store = mockStore({});\n            store.dispatch(actions.addUnit(1, 1, mockUnit));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "3a77dddd-242e-4134-b596-58c8812b18fd",
                "parentUUID": "d1207809-6363-4416-8dbf-d37a4dc075fc",
                "skipped": false
              },
              {
                "title": "Should correctly create the actions required for the addition of a unit that is a custom unit being dragged",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: addUnit Should correctly create the actions required for the addition of a unit that is a custom unit being dragged",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockUnit = {\n                customUnitDragging: true,\n                cost: 200,\n                creditPoints: 6,\n                unitCode: \"TEST1001\"\n            };\n            var expectedActions = [{\n                type: \"SHOW_CUSTOM_UNIT_MODAL\",\n                unitCode: \"TEST1001\",\n                tpIndex: 1,\n                unitIndex: 1\n            }];\n            var store = mockStore({});\n            store.dispatch(actions.addUnit(1, 1, mockUnit));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "67eced9f-8d32-46d2-8ed1-05ce73860367",
                "parentUUID": "d1207809-6363-4416-8dbf-d37a4dc075fc",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "d1207809-6363-4416-8dbf-d37a4dc075fc",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should correctly create the actions required for the addition of a unit that is not a custom unit being dragged",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: addUnit Should correctly create the actions required for the addition of a unit that is not a custom unit being dragged",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockUnit = {\n                customUnitDragging: false,\n                cost: 200,\n                creditPoints: 6,\n                unitCode: \"TEST1001\"\n            };\n            var expectedActions = [{ type: \"ADD_UNIT\", tpIndex: 1, unitIndex: 1, unit: mockUnit, cost: 200, creditPoints: 6 }, { type: \"CLEAR_HIGHLIGHTING_INVALID_UNIT_SLOTS\" }, { type: \"VALIDATE_COURSE\" }, { type: \"MODIFIED_COURSE_PLAN\" }];\n            var store = mockStore({});\n            store.dispatch(actions.addUnit(1, 1, mockUnit));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "3a77dddd-242e-4134-b596-58c8812b18fd",
                "parentUUID": "d1207809-6363-4416-8dbf-d37a4dc075fc",
                "skipped": false
              },
              {
                "title": "Should correctly create the actions required for the addition of a unit that is a custom unit being dragged",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: addUnit Should correctly create the actions required for the addition of a unit that is a custom unit being dragged",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockUnit = {\n                customUnitDragging: true,\n                cost: 200,\n                creditPoints: 6,\n                unitCode: \"TEST1001\"\n            };\n            var expectedActions = [{\n                type: \"SHOW_CUSTOM_UNIT_MODAL\",\n                unitCode: \"TEST1001\",\n                tpIndex: 1,\n                unitIndex: 1\n            }];\n            var store = mockStore({});\n            store.dispatch(actions.addUnit(1, 1, mockUnit));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "67eced9f-8d32-46d2-8ed1-05ce73860367",
                "parentUUID": "d1207809-6363-4416-8dbf-d37a4dc075fc",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "AC: removeUnit",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly create the actions required for removal of a unit",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: removeUnit Should correctly create the actions required for removal of a unit",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{ type: \"REMOVE_UNIT\", tpIndex: 1, unitIndex: 1, cost: 200, creditPoints: 6 }, { type: \"VALIDATE_COURSE\" }, { type: \"MODIFIED_COURSE_PLAN\" }];\n            var store = mockStore({});\n            store.dispatch(actions.removeUnit(1, 1, 6, 200));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "93b80e19-b4f4-4328-81e7-8008246bb99e",
                "parentUUID": "be5372b1-fc89-4475-8741-54441779f58e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "be5372b1-fc89-4475-8741-54441779f58e",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should correctly create the actions required for removal of a unit",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: removeUnit Should correctly create the actions required for removal of a unit",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{ type: \"REMOVE_UNIT\", tpIndex: 1, unitIndex: 1, cost: 200, creditPoints: 6 }, { type: \"VALIDATE_COURSE\" }, { type: \"MODIFIED_COURSE_PLAN\" }];\n            var store = mockStore({});\n            store.dispatch(actions.removeUnit(1, 1, 6, 200));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "93b80e19-b4f4-4328-81e7-8008246bb99e",
                "parentUUID": "be5372b1-fc89-4475-8741-54441779f58e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: clearCourse",
            "suites": [],
            "tests": [
              {
                "title": "Should create the actions for clearing the course",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: clearCourse Should create the actions for clearing the course",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{ type: \"CLEAR_COURSE\" }, { type: \"GET_NEXT_SEMESTER_STRING\" }, { type: \"VALIDATE_COURSE\" }];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.clearCourse());\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "989328b7-e759-4056-bde3-c760a26fa556",
                "parentUUID": "01d5110d-47b9-44b9-ae6c-c1531cedc4e1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "01d5110d-47b9-44b9-ae6c-c1531cedc4e1",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create the actions for clearing the course",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: clearCourse Should create the actions for clearing the course",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{ type: \"CLEAR_COURSE\" }, { type: \"GET_NEXT_SEMESTER_STRING\" }, { type: \"VALIDATE_COURSE\" }];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.clearCourse());\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "989328b7-e759-4056-bde3-c760a26fa556",
                "parentUUID": "01d5110d-47b9-44b9-ae6c-c1531cedc4e1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: generateCourse",
            "suites": [],
            "tests": [
              {
                "title": "Should create the action for generating the course",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: generateCourse Should create the action for generating the course",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2016,\n    endYear: 2019\n};\n(0, _expect2.default)(actions.generateCourse(2016, 2019)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "6349f193-d01a-4213-8529-24b76fc9ab2c",
                "parentUUID": "3c51bce2-4b4f-461e-8c6c-b59f86bcbaad",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "3c51bce2-4b4f-461e-8c6c-b59f86bcbaad",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create the action for generating the course",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: generateCourse Should create the action for generating the course",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2016,\n    endYear: 2019\n};\n(0, _expect2.default)(actions.generateCourse(2016, 2019)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "6349f193-d01a-4213-8529-24b76fc9ab2c",
                "parentUUID": "3c51bce2-4b4f-461e-8c6c-b59f86bcbaad",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: submitYearForm",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly create the actions required for submission of a year form",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: submitYearForm Should correctly create the actions required for submission of a year form",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{ type: \"SUBMIT_YEAR_FORM\", startYear: 2016, endYear: 2019 }, { type: \"GENERATE_COURSE\", startYear: 2016, endYear: 2019 }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\n            var store = mockStore({});\n            store.dispatch(actions.submitYearForm(2016, 2019));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "6b9e7f8f-1100-468d-9d4b-eb609b597837",
                "parentUUID": "b060c620-b443-4490-9c56-c3a9b0cb1a21",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "b060c620-b443-4490-9c56-c3a9b0cb1a21",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should correctly create the actions required for submission of a year form",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: submitYearForm Should correctly create the actions required for submission of a year form",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{ type: \"SUBMIT_YEAR_FORM\", startYear: 2016, endYear: 2019 }, { type: \"GENERATE_COURSE\", startYear: 2016, endYear: 2019 }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\n            var store = mockStore({});\n            store.dispatch(actions.submitYearForm(2016, 2019));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "6b9e7f8f-1100-468d-9d4b-eb609b597837",
                "parentUUID": "b060c620-b443-4490-9c56-c3a9b0cb1a21",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: changeStartYear",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly create actions required to change the start year",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: changeStartYear Should correctly create actions required to change the start year",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{ type: \"CHANGE_START_YEAR\", year: 2020 }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\nvar store = mockStore({});\nstore.dispatch(actions.changeStartYear(2020));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "247217ff-e824-4257-a4e0-e2a6e8256e37",
                "parentUUID": "e8722a91-cbe2-4700-99f7-e3cace279bde",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "e8722a91-cbe2-4700-99f7-e3cace279bde",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should correctly create actions required to change the start year",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: changeStartYear Should correctly create actions required to change the start year",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{ type: \"CHANGE_START_YEAR\", year: 2020 }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\nvar store = mockStore({});\nstore.dispatch(actions.changeStartYear(2020));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "247217ff-e824-4257-a4e0-e2a6e8256e37",
                "parentUUID": "e8722a91-cbe2-4700-99f7-e3cace279bde",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: getNextSemesterString",
            "suites": [],
            "tests": [
              {
                "title": "Should create the action for generating the course",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: getNextSemesterString Should create the action for generating the course",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n};\n(0, _expect2.default)(actions.getNextSemesterString()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "40236e4b-8f18-4791-bc7c-dbf6a36a151d",
                "parentUUID": "8a4be91e-f904-4405-990b-f63619ec61c6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "8a4be91e-f904-4405-990b-f63619ec61c6",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create the action for generating the course",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: getNextSemesterString Should create the action for generating the course",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n};\n(0, _expect2.default)(actions.getNextSemesterString()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "40236e4b-8f18-4791-bc7c-dbf6a36a151d",
                "parentUUID": "8a4be91e-f904-4405-990b-f63619ec61c6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: getAffectedUnitsInColumn",
            "suites": [],
            "tests": [
              {
                "title": "Should create the action for getting affected units in an overload column",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: getAffectedUnitsInColumn Should create the action for getting affected units in an overload column",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"GET_AFFECTED_UNITS_IN_OVERLOAD_COLUMN\",\n    index: 4\n};\n(0, _expect2.default)(actions.getAffectedUnitsInColumn(4)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "224859ce-ccbe-4868-92e8-2ee232b24903",
                "parentUUID": "e1677b32-2650-4e6c-937c-fd9bb19ee2cf",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "e1677b32-2650-4e6c-937c-fd9bb19ee2cf",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create the action for getting affected units in an overload column",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: getAffectedUnitsInColumn Should create the action for getting affected units in an overload column",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"GET_AFFECTED_UNITS_IN_OVERLOAD_COLUMN\",\n    index: 4\n};\n(0, _expect2.default)(actions.getAffectedUnitsInColumn(4)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "224859ce-ccbe-4868-92e8-2ee232b24903",
                "parentUUID": "e1677b32-2650-4e6c-937c-fd9bb19ee2cf",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: attemptToDeleteTeachingPeriod",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly create the actions required for deletion of a teaching period with units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: attemptToDeleteTeachingPeriod Should correctly create the actions required for deletion of a teaching period with units affected",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockUnits = [{ unitCode: \"TEST101\", unitName: \"unit1\" }, null, { unitCode: \"TEST102\", unitName: \"unit2\" }, null, null];\nvar expectedActions = [{ type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\" }, { type: \"UPDATE_AFFECTED_UNITS\", affectedUnits: [\"TEST101 - unit1\", \"TEST102 - unit2\"] }, { type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\", index: 1 }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDeleteTeachingPeriod(1, mockUnits));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "575b2b3d-337c-43ef-815c-0a03827aaef1",
                "parentUUID": "f56758b3-7b26-45b3-9b7a-33c062287531",
                "skipped": false
              },
              {
                "title": "Should correctly create the actions required for deletion of a teaching period with no units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: attemptToDeleteTeachingPeriod Should correctly create the actions required for deletion of a teaching period with no units affected",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockUnits = [null, null, null, null, null];\nvar expectedActions = [{ type: \"REMOVE_TEACHING_PERIOD\", index: 1, units: [null, null, null, null, null] }, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, { type: \"GET_NEXT_SEMESTER_STRING\" }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDeleteTeachingPeriod(1, mockUnits));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "4becc5b9-13fc-49e7-9a87-218b54cb747c",
                "parentUUID": "f56758b3-7b26-45b3-9b7a-33c062287531",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "f56758b3-7b26-45b3-9b7a-33c062287531",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should correctly create the actions required for deletion of a teaching period with units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: attemptToDeleteTeachingPeriod Should correctly create the actions required for deletion of a teaching period with units affected",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockUnits = [{ unitCode: \"TEST101\", unitName: \"unit1\" }, null, { unitCode: \"TEST102\", unitName: \"unit2\" }, null, null];\nvar expectedActions = [{ type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\" }, { type: \"UPDATE_AFFECTED_UNITS\", affectedUnits: [\"TEST101 - unit1\", \"TEST102 - unit2\"] }, { type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\", index: 1 }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDeleteTeachingPeriod(1, mockUnits));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "575b2b3d-337c-43ef-815c-0a03827aaef1",
                "parentUUID": "f56758b3-7b26-45b3-9b7a-33c062287531",
                "skipped": false
              },
              {
                "title": "Should correctly create the actions required for deletion of a teaching period with no units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: attemptToDeleteTeachingPeriod Should correctly create the actions required for deletion of a teaching period with no units affected",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockUnits = [null, null, null, null, null];\nvar expectedActions = [{ type: \"REMOVE_TEACHING_PERIOD\", index: 1, units: [null, null, null, null, null] }, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, { type: \"GET_NEXT_SEMESTER_STRING\" }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDeleteTeachingPeriod(1, mockUnits));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "4becc5b9-13fc-49e7-9a87-218b54cb747c",
                "parentUUID": "f56758b3-7b26-45b3-9b7a-33c062287531",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "AC: attemptToDecreaseStudyLoad",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly create the actions required for decrease of a study load with units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: attemptToDecreaseStudyLoad Should correctly create the actions required for decrease of a study load with units affected",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockTeachingPeriods = [{ units: [null, null, { unitCode: \"TEST10A\", unitName: \"unitA\" }, null, { unitCode: \"TEST101\", unitName: \"unit1\" }] }, { units: [null, null, { unitCode: \"TEST10B\", unitName: \"unitB\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10C\", unitName: \"unitC\" }, null, { unitCode: \"TEST102\", unitName: \"unit2\" }] }, { units: [null, null, { unitCode: \"TEST10D\", unitName: \"unitD\" }, null, null] }];\nvar expectedActions = [{ type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\" }, { type: \"UPDATE_AFFECTED_UNITS\", affectedUnits: [\"TEST101 - unit1\", \"TEST102 - unit2\"] }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDecreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "5a56ee9f-877d-4763-a87e-8dc1f9640c54",
                "parentUUID": "fff4efee-56be-4b8a-aad3-18bd34eae504",
                "skipped": false
              },
              {
                "title": "Should correctly create the actions required for decrease of a study load with no units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: attemptToDecreaseStudyLoad Should correctly create the actions required for decrease of a study load with no units affected",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockTeachingPeriods = [{ units: [null, null, { unitCode: \"TEST10A\", unitName: \"unitA\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10B\", unitName: \"unitB\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10C\", unitName: \"unitC\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10D\", unitName: \"unitD\" }, null, null] }];\nvar expectedActions = [{ type: \"DECREASE_STUDY_LOAD\", units: [] }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDecreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "5bacafd9-e6c1-4ef4-bcd1-448d89eadab8",
                "parentUUID": "fff4efee-56be-4b8a-aad3-18bd34eae504",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "fff4efee-56be-4b8a-aad3-18bd34eae504",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should correctly create the actions required for decrease of a study load with units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: attemptToDecreaseStudyLoad Should correctly create the actions required for decrease of a study load with units affected",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockTeachingPeriods = [{ units: [null, null, { unitCode: \"TEST10A\", unitName: \"unitA\" }, null, { unitCode: \"TEST101\", unitName: \"unit1\" }] }, { units: [null, null, { unitCode: \"TEST10B\", unitName: \"unitB\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10C\", unitName: \"unitC\" }, null, { unitCode: \"TEST102\", unitName: \"unit2\" }] }, { units: [null, null, { unitCode: \"TEST10D\", unitName: \"unitD\" }, null, null] }];\nvar expectedActions = [{ type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\" }, { type: \"UPDATE_AFFECTED_UNITS\", affectedUnits: [\"TEST101 - unit1\", \"TEST102 - unit2\"] }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDecreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "5a56ee9f-877d-4763-a87e-8dc1f9640c54",
                "parentUUID": "fff4efee-56be-4b8a-aad3-18bd34eae504",
                "skipped": false
              },
              {
                "title": "Should correctly create the actions required for decrease of a study load with no units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: attemptToDecreaseStudyLoad Should correctly create the actions required for decrease of a study load with no units affected",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockTeachingPeriods = [{ units: [null, null, { unitCode: \"TEST10A\", unitName: \"unitA\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10B\", unitName: \"unitB\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10C\", unitName: \"unitC\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10D\", unitName: \"unitD\" }, null, null] }];\nvar expectedActions = [{ type: \"DECREASE_STUDY_LOAD\", units: [] }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDecreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "5bacafd9-e6c1-4ef4-bcd1-448d89eadab8",
                "parentUUID": "fff4efee-56be-4b8a-aad3-18bd34eae504",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "AC: getAffectedUnitsInRow",
            "suites": [],
            "tests": [
              {
                "title": "Should create the action for getting affected units in an teaching period row",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: getAffectedUnitsInRow Should create the action for getting affected units in an teaching period row",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"GET_AFFECTED_UNITS_IN_TEACHING_PERIOD_ROW\",\n    index: 4\n};\n(0, _expect2.default)(actions.getAffectedUnitsInRow(4)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "5e330f3d-4ee8-4238-92ad-50f087f02d36",
                "parentUUID": "6683d87d-01bc-408d-8d03-844e49ee1bf5",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "6683d87d-01bc-408d-8d03-844e49ee1bf5",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create the action for getting affected units in an teaching period row",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: getAffectedUnitsInRow Should create the action for getting affected units in an teaching period row",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"GET_AFFECTED_UNITS_IN_TEACHING_PERIOD_ROW\",\n    index: 4\n};\n(0, _expect2.default)(actions.getAffectedUnitsInRow(4)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "5e330f3d-4ee8-4238-92ad-50f087f02d36",
                "parentUUID": "6683d87d-01bc-408d-8d03-844e49ee1bf5",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: validateCourse",
            "suites": [],
            "tests": [
              {
                "title": "Should create the action for validating the course",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: validateCourse Should create the action for validating the course",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"VALIDATE_COURSE\"\n};\n(0, _expect2.default)(actions.validateCourse()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "055d4cd6-20b0-4bc1-8991-b692876715d5",
                "parentUUID": "f12127e4-8b73-4ce3-bef9-7aeb1647ec5e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "f12127e4-8b73-4ce3-bef9-7aeb1647ec5e",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create the action for validating the course",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: validateCourse Should create the action for validating the course",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"VALIDATE_COURSE\"\n};\n(0, _expect2.default)(actions.validateCourse()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "055d4cd6-20b0-4bc1-8991-b692876715d5",
                "parentUUID": "f12127e4-8b73-4ce3-bef9-7aeb1647ec5e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: highlightInvalidUnitSlots",
            "suites": [],
            "tests": [
              {
                "title": "Should create the action for highlighting the invalid unit slots",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: highlightInvalidUnitSlots Should create the action for highlighting the invalid unit slots",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: \"UnitTest\",\n    ignoreCoordinate: false\n};\n(0, _expect2.default)(actions.highlightInvalidUnitSlots(\"UnitTest\", false)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "f2c72426-c527-4442-810c-ed45f948d797",
                "parentUUID": "d69746ce-cc01-4e4c-bf69-9ea40d6dcebd",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "d69746ce-cc01-4e4c-bf69-9ea40d6dcebd",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create the action for highlighting the invalid unit slots",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: highlightInvalidUnitSlots Should create the action for highlighting the invalid unit slots",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: \"UnitTest\",\n    ignoreCoordinate: false\n};\n(0, _expect2.default)(actions.highlightInvalidUnitSlots(\"UnitTest\", false)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "f2c72426-c527-4442-810c-ed45f948d797",
                "parentUUID": "d69746ce-cc01-4e4c-bf69-9ea40d6dcebd",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: clearHighlightingInvalidUnitSlots",
            "suites": [],
            "tests": [
              {
                "title": "Should create the action for clearing the highlighting for invalid unit slots",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: clearHighlightingInvalidUnitSlots Should create the action for clearing the highlighting for invalid unit slots",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"CLEAR_HIGHLIGHTING_INVALID_UNIT_SLOTS\"\n};\n(0, _expect2.default)(actions.clearHighlightingInvalidUnitSlots()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "b735e177-16bd-4a3d-93d6-560e65194d24",
                "parentUUID": "5ab85ef6-36ad-4d8a-a8d1-8a9633603a70",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "5ab85ef6-36ad-4d8a-a8d1-8a9633603a70",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create the action for clearing the highlighting for invalid unit slots",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: clearHighlightingInvalidUnitSlots Should create the action for clearing the highlighting for invalid unit slots",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"CLEAR_HIGHLIGHTING_INVALID_UNIT_SLOTS\"\n};\n(0, _expect2.default)(actions.clearHighlightingInvalidUnitSlots()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "b735e177-16bd-4a3d-93d6-560e65194d24",
                "parentUUID": "5ab85ef6-36ad-4d8a-a8d1-8a9633603a70",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/actionCreators/CourseActions.spec.js",
        "uuid": "93cc4680-be8e-41f2-ba3f-0f528dc89f01",
        "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "ACTION-CREATOR: UIActions",
        "suites": [
          {
            "title": "AC: showInsertTeachingPeriodUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to show the insert teaching period UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showInsertTeachingPeriodUI Should create an action to show the insert teaching period UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"testTPCode\"\n};\n(0, _expect2.default)(actions.showInsertTeachingPeriodUI(\"testTPCode\")).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "7298eabf-1145-4cbd-aeb8-2adf48eb8e12",
                "parentUUID": "8f0b307f-8a15-4e2b-bf8a-c6a18764f3a3",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "8f0b307f-8a15-4e2b-bf8a-c6a18764f3a3",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to show the insert teaching period UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showInsertTeachingPeriodUI Should create an action to show the insert teaching period UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"testTPCode\"\n};\n(0, _expect2.default)(actions.showInsertTeachingPeriodUI(\"testTPCode\")).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "7298eabf-1145-4cbd-aeb8-2adf48eb8e12",
                "parentUUID": "8f0b307f-8a15-4e2b-bf8a-c6a18764f3a3",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: hideInsertTeachingPeriodUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to hide the insert teaching period UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideInsertTeachingPeriodUI Should create an action to hide the insert teaching period UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\n(0, _expect2.default)(actions.hideInsertTeachingPeriodUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "f3c41e78-808b-4fc8-bbd0-d234da12f7d0",
                "parentUUID": "059a5f18-ca5f-451d-963e-e10e239139bd",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "059a5f18-ca5f-451d-963e-e10e239139bd",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to hide the insert teaching period UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideInsertTeachingPeriodUI Should create an action to hide the insert teaching period UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\n(0, _expect2.default)(actions.hideInsertTeachingPeriodUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "f3c41e78-808b-4fc8-bbd0-d234da12f7d0",
                "parentUUID": "059a5f18-ca5f-451d-963e-e10e239139bd",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: showAddingUnitUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to show the add unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showAddingUnitUI Should create an action to show the add unit UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_ADD_UNIT_UI\"\n};\n(0, _expect2.default)(actions.showAddingUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "db2e66f4-3fba-442b-a0b8-c8e63f6367ec",
                "parentUUID": "38ca2717-642a-42e6-99ef-be665d9622b8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "38ca2717-642a-42e6-99ef-be665d9622b8",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to show the add unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showAddingUnitUI Should create an action to show the add unit UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_ADD_UNIT_UI\"\n};\n(0, _expect2.default)(actions.showAddingUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "db2e66f4-3fba-442b-a0b8-c8e63f6367ec",
                "parentUUID": "38ca2717-642a-42e6-99ef-be665d9622b8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: hideAddingUnitUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to hide the add unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideAddingUnitUI Should create an action to hide the add unit UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_ADD_UNIT_UI\"\n};\n(0, _expect2.default)(actions.hideAddingUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "8fa5d6c9-79ba-428f-92b5-9732e10a48e8",
                "parentUUID": "7f589ae1-a985-416b-add5-5d3184b1bb11",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "7f589ae1-a985-416b-add5-5d3184b1bb11",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to hide the add unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideAddingUnitUI Should create an action to hide the add unit UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_ADD_UNIT_UI\"\n};\n(0, _expect2.default)(actions.hideAddingUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "8fa5d6c9-79ba-428f-92b5-9732e10a48e8",
                "parentUUID": "7f589ae1-a985-416b-add5-5d3184b1bb11",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: showMoveUnitUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to show the move unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showMoveUnitUI Should create an action to show the move unit UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_MOVE_UNIT_UI\"\n};\n(0, _expect2.default)(actions.showMoveUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "b0b37967-7d56-450b-9012-92c0e61951d5",
                "parentUUID": "f7f9e765-a4b5-4305-8e18-4ffc0ee04731",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "f7f9e765-a4b5-4305-8e18-4ffc0ee04731",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to show the move unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showMoveUnitUI Should create an action to show the move unit UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_MOVE_UNIT_UI\"\n};\n(0, _expect2.default)(actions.showMoveUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "b0b37967-7d56-450b-9012-92c0e61951d5",
                "parentUUID": "f7f9e765-a4b5-4305-8e18-4ffc0ee04731",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: hideMoveUnitUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to hide move unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideMoveUnitUI Should create an action to hide move unit UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_MOVE_UNIT_UI\"\n};\n(0, _expect2.default)(actions.hideMoveUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "3bce4206-7244-49e0-b16a-dccb2fbb03d6",
                "parentUUID": "3e64a821-dbd9-4d6a-92d4-76186943279d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "3e64a821-dbd9-4d6a-92d4-76186943279d",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to hide move unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideMoveUnitUI Should create an action to hide move unit UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_MOVE_UNIT_UI\"\n};\n(0, _expect2.default)(actions.hideMoveUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "3bce4206-7244-49e0-b16a-dccb2fbb03d6",
                "parentUUID": "3e64a821-dbd9-4d6a-92d4-76186943279d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: showConfirmDeleteTeachingPeriodUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to show confirm delete teaching period UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showConfirmDeleteTeachingPeriodUI Should create an action to show confirm delete teaching period UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\n(0, _expect2.default)(actions.showConfirmDeleteTeachingPeriodUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "14250885-257e-476e-8195-10dcbdc4d21e",
                "parentUUID": "22e8b083-e685-4761-9711-8134482e2915",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "22e8b083-e685-4761-9711-8134482e2915",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to show confirm delete teaching period UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showConfirmDeleteTeachingPeriodUI Should create an action to show confirm delete teaching period UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\n(0, _expect2.default)(actions.showConfirmDeleteTeachingPeriodUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "14250885-257e-476e-8195-10dcbdc4d21e",
                "parentUUID": "22e8b083-e685-4761-9711-8134482e2915",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: hideConfirmDeleteTeachingPeriodUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to hide confirm delete teaching period UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideConfirmDeleteTeachingPeriodUI Should create an action to hide confirm delete teaching period UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\n(0, _expect2.default)(actions.hideConfirmDeleteTeachingPeriodUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "1d8e6f57-0c5d-4e8a-8b5b-f14443457f09",
                "parentUUID": "d47a08e5-50e6-40c6-8db9-9c812542b3c5",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "d47a08e5-50e6-40c6-8db9-9c812542b3c5",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to hide confirm delete teaching period UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideConfirmDeleteTeachingPeriodUI Should create an action to hide confirm delete teaching period UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\n(0, _expect2.default)(actions.hideConfirmDeleteTeachingPeriodUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "1d8e6f57-0c5d-4e8a-8b5b-f14443457f09",
                "parentUUID": "d47a08e5-50e6-40c6-8db9-9c812542b3c5",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: showConfirmDecreaseStudyLoadUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to show confirm decrease study load UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showConfirmDecreaseStudyLoadUI Should create an action to show confirm decrease study load UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\n(0, _expect2.default)(actions.showConfirmDecreaseStudyLoadUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "1779082d-8189-4350-b9e8-89fa2abd902d",
                "parentUUID": "a2dba0c6-b427-489c-a585-83df8baf5bfc",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "a2dba0c6-b427-489c-a585-83df8baf5bfc",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to show confirm decrease study load UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showConfirmDecreaseStudyLoadUI Should create an action to show confirm decrease study load UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\n(0, _expect2.default)(actions.showConfirmDecreaseStudyLoadUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "1779082d-8189-4350-b9e8-89fa2abd902d",
                "parentUUID": "a2dba0c6-b427-489c-a585-83df8baf5bfc",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: hideConfirmDecreaseStudyLoadUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to hide confirm decrease study load UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideConfirmDecreaseStudyLoadUI Should create an action to hide confirm decrease study load UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\n(0, _expect2.default)(actions.hideConfirmDecreaseStudyLoadUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "f7045316-c79d-474c-bc9d-297e1248b0d3",
                "parentUUID": "92fa434f-b836-4005-9483-3e654fe8fc9d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "92fa434f-b836-4005-9483-3e654fe8fc9d",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to hide confirm decrease study load UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideConfirmDecreaseStudyLoadUI Should create an action to hide confirm decrease study load UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\n(0, _expect2.default)(actions.hideConfirmDecreaseStudyLoadUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "f7045316-c79d-474c-bc9d-297e1248b0d3",
                "parentUUID": "92fa434f-b836-4005-9483-3e654fe8fc9d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: showCustomUnitUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to show custum unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showCustomUnitUI Should create an action to show custum unit UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"TEST1001\"\n};\n(0, _expect2.default)(actions.showCustomUnitUI(\"TEST1001\")).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "6030e12e-ee09-43c7-b750-2056c5b2918d",
                "parentUUID": "cc06d692-c14a-48ab-8e4a-062b50efa6a5",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "cc06d692-c14a-48ab-8e4a-062b50efa6a5",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to show custum unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showCustomUnitUI Should create an action to show custum unit UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"TEST1001\"\n};\n(0, _expect2.default)(actions.showCustomUnitUI(\"TEST1001\")).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "6030e12e-ee09-43c7-b750-2056c5b2918d",
                "parentUUID": "cc06d692-c14a-48ab-8e4a-062b50efa6a5",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: hideCustomUnitUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to hide custom unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideCustomUnitUI Should create an action to hide custom unit UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\n(0, _expect2.default)(actions.hideCustomUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "415b9362-2e0c-46b0-818d-a8496c6cb642",
                "parentUUID": "f98b16db-4694-4708-b8e5-e41d3589c240",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "f98b16db-4694-4708-b8e5-e41d3589c240",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to hide custom unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideCustomUnitUI Should create an action to hide custom unit UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\n(0, _expect2.default)(actions.hideCustomUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "415b9362-2e0c-46b0-818d-a8496c6cb642",
                "parentUUID": "f98b16db-4694-4708-b8e5-e41d3589c240",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: showSidebar",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to show sidebar",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showSidebar Should create an action to show sidebar",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_SIDEBAR\"\n};\n(0, _expect2.default)(actions.showSidebar()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "3c53c416-b8fa-4b66-8315-61f510a642c3",
                "parentUUID": "ff20fb75-873f-4364-8798-93a252c98ce8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "ff20fb75-873f-4364-8798-93a252c98ce8",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to show sidebar",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showSidebar Should create an action to show sidebar",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_SIDEBAR\"\n};\n(0, _expect2.default)(actions.showSidebar()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "3c53c416-b8fa-4b66-8315-61f510a642c3",
                "parentUUID": "ff20fb75-873f-4364-8798-93a252c98ce8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: hideSidebar",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to hide sidebar",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideSidebar Should create an action to hide sidebar",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_SIDEBAR\"\n};\n(0, _expect2.default)(actions.hideSidebar()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "db73e724-169b-406f-b676-b7ba71a3db5f",
                "parentUUID": "a73cbb7e-2461-4df4-a8fc-7eda0d1bb697",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "a73cbb7e-2461-4df4-a8fc-7eda0d1bb697",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to hide sidebar",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideSidebar Should create an action to hide sidebar",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_SIDEBAR\"\n};\n(0, _expect2.default)(actions.hideSidebar()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "db73e724-169b-406f-b676-b7ba71a3db5f",
                "parentUUID": "a73cbb7e-2461-4df4-a8fc-7eda0d1bb697",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: setCourseReadOnly",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to set the course to read only",
                "fullTitle": "ACTION-CREATOR: UIActions AC: setCourseReadOnly Should create an action to set the course to read only",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\n(0, _expect2.default)(actions.setCourseReadOnly()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "43118fa8-0079-468e-8a9f-5752fecfba42",
                "parentUUID": "a5707d49-0291-4e77-acef-4944202ba2cd",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "a5707d49-0291-4e77-acef-4944202ba2cd",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to set the course to read only",
                "fullTitle": "ACTION-CREATOR: UIActions AC: setCourseReadOnly Should create an action to set the course to read only",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\n(0, _expect2.default)(actions.setCourseReadOnly()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "43118fa8-0079-468e-8a9f-5752fecfba42",
                "parentUUID": "a5707d49-0291-4e77-acef-4944202ba2cd",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: setCourseReadAndWrite",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to set the course to read and write",
                "fullTitle": "ACTION-CREATOR: UIActions AC: setCourseReadAndWrite Should create an action to set the course to read and write",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\n(0, _expect2.default)(actions.setCourseReadAndWrite()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "d731a151-a64a-4117-b635-f7226c697d0f",
                "parentUUID": "cbbe0b78-8a9a-4270-9526-c9cfad4e3c98",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "cbbe0b78-8a9a-4270-9526-c9cfad4e3c98",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to set the course to read and write",
                "fullTitle": "ACTION-CREATOR: UIActions AC: setCourseReadAndWrite Should create an action to set the course to read and write",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\n(0, _expect2.default)(actions.setCourseReadAndWrite()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "d731a151-a64a-4117-b635-f7226c697d0f",
                "parentUUID": "cbbe0b78-8a9a-4270-9526-c9cfad4e3c98",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/actionCreators/UIActions.spec.js",
        "uuid": "c16c7a04-a642-4ebb-be9b-884d291b705c",
        "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "COMPONENT: Notification",
        "suites": [],
        "tests": [
          {
            "title": "Should render a notification title and a message",
            "fullTitle": "COMPONENT: Notification Should render a notification title and a message",
            "timedOut": false,
            "duration": 50,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, {\n    title: \"This is a test\",\n    message: \"Some message goes over here\"\n}));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(\"This is a test\");\nexpect(wrapper.text().replace(\"This is a test\", \"\").trim()).to.equal(\"Some message goes over here\");",
            "err": {},
            "isRoot": false,
            "uuid": "f0159939-a8a1-4f4f-8564-1b87139b59a9",
            "parentUUID": "0346401f-3dfc-4031-afc3-3dfc9693f05f",
            "skipped": false
          },
          {
            "title": "Should have a default level to be info if it is not specified",
            "fullTitle": "COMPONENT: Notification Should have a default level to be info if it is not specified",
            "timedOut": false,
            "duration": 12,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, null)).find(\".info.message\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "61de4e62-ceb0-439b-8db1-be8ccdcf6c35",
            "parentUUID": "0346401f-3dfc-4031-afc3-3dfc9693f05f",
            "skipped": false
          },
          {
            "title": "Should follow a specified level",
            "fullTitle": "COMPONENT: Notification Should follow a specified level",
            "timedOut": false,
            "duration": 43,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"info\" })).find(\".info.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"warning\" })).find(\".warning.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"error\" })).find(\".negative.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"success\" })).find(\".positive.message\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "6a981150-0a00-448c-95da-06f1b64a9038",
            "parentUUID": "0346401f-3dfc-4031-afc3-3dfc9693f05f",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/components/Notifications/Notification.spec.jsx",
        "uuid": "0346401f-3dfc-4031-afc3-3dfc9693f05f",
        "fullFile": "/home/staff01/Documents/monPlanR/test/components/Notifications/Notification.spec.jsx",
        "passes": [
          {
            "title": "Should render a notification title and a message",
            "fullTitle": "COMPONENT: Notification Should render a notification title and a message",
            "timedOut": false,
            "duration": 50,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, {\n    title: \"This is a test\",\n    message: \"Some message goes over here\"\n}));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(\"This is a test\");\nexpect(wrapper.text().replace(\"This is a test\", \"\").trim()).to.equal(\"Some message goes over here\");",
            "err": {},
            "isRoot": false,
            "uuid": "f0159939-a8a1-4f4f-8564-1b87139b59a9",
            "parentUUID": "0346401f-3dfc-4031-afc3-3dfc9693f05f",
            "skipped": false
          },
          {
            "title": "Should have a default level to be info if it is not specified",
            "fullTitle": "COMPONENT: Notification Should have a default level to be info if it is not specified",
            "timedOut": false,
            "duration": 12,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, null)).find(\".info.message\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "61de4e62-ceb0-439b-8db1-be8ccdcf6c35",
            "parentUUID": "0346401f-3dfc-4031-afc3-3dfc9693f05f",
            "skipped": false
          },
          {
            "title": "Should follow a specified level",
            "fullTitle": "COMPONENT: Notification Should follow a specified level",
            "timedOut": false,
            "duration": 43,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"info\" })).find(\".info.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"warning\" })).find(\".warning.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"error\" })).find(\".negative.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"success\" })).find(\".positive.message\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "6a981150-0a00-448c-95da-06f1b64a9038",
            "parentUUID": "0346401f-3dfc-4031-afc3-3dfc9693f05f",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 3,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 105
      },
      {
        "title": "COMPONENT: InsertTeachingPeriodButton",
        "suites": [
          {
            "title": "#addSemester()",
            "suites": [],
            "tests": [
              {
                "title": "should be called exactly once when main button has been clicked",
                "fullTitle": "COMPONENT: InsertTeachingPeriodButton #addSemester() should be called exactly once when main button has been clicked",
                "timedOut": false,
                "duration": 22,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var addSemester = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: identity,\n    addSemester: addSemester }));\nwrapper.find(\"Button\").forEach(function (button) {\n    button.simulate(\"click\");\n});\nexpect(addSemester).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "787b604d-74d5-4cd5-8597-37d5b4f02e17",
                "parentUUID": "9a03ee6a-7240-48f9-a3e2-d4321d1985ac",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/components/TeachingPeriod/InsertTeachingPeriodButton.spec.jsx",
            "uuid": "9a03ee6a-7240-48f9-a3e2-d4321d1985ac",
            "fullFile": "/home/staff01/Documents/monPlanR/test/components/TeachingPeriod/InsertTeachingPeriodButton.spec.jsx",
            "passes": [
              {
                "title": "should be called exactly once when main button has been clicked",
                "fullTitle": "COMPONENT: InsertTeachingPeriodButton #addSemester() should be called exactly once when main button has been clicked",
                "timedOut": false,
                "duration": 22,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var addSemester = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: identity,\n    addSemester: addSemester }));\nwrapper.find(\"Button\").forEach(function (button) {\n    button.simulate(\"click\");\n});\nexpect(addSemester).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "787b604d-74d5-4cd5-8597-37d5b4f02e17",
                "parentUUID": "9a03ee6a-7240-48f9-a3e2-d4321d1985ac",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 22
          },
          {
            "title": "#insert()",
            "suites": [],
            "tests": [
              {
                "title": "should be called as many times as the number of insert teaching periods options upon click",
                "fullTitle": "COMPONENT: InsertTeachingPeriodButton #insert() should be called as many times as the number of insert teaching periods options upon click",
                "timedOut": false,
                "duration": 46,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var insert = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: insert,\n    addSemester: identity }));\nvar dropdownItems = wrapper.find(\".item\");\ndropdownItems.forEach(function (node) {\n    return node.simulate(\"click\");\n});\nexpect(insert).to.have.callCount(dropdownItems.length);",
                "err": {},
                "isRoot": false,
                "uuid": "12e73459-7284-4a88-8fdc-0fd984d3c3e6",
                "parentUUID": "dc3f3556-9706-4d66-a2f1-3e84d30ddc7e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/components/TeachingPeriod/InsertTeachingPeriodButton.spec.jsx",
            "uuid": "dc3f3556-9706-4d66-a2f1-3e84d30ddc7e",
            "fullFile": "/home/staff01/Documents/monPlanR/test/components/TeachingPeriod/InsertTeachingPeriodButton.spec.jsx",
            "passes": [
              {
                "title": "should be called as many times as the number of insert teaching periods options upon click",
                "fullTitle": "COMPONENT: InsertTeachingPeriodButton #insert() should be called as many times as the number of insert teaching periods options upon click",
                "timedOut": false,
                "duration": 46,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var insert = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: insert,\n    addSemester: identity }));\nvar dropdownItems = wrapper.find(\".item\");\ndropdownItems.forEach(function (node) {\n    return node.simulate(\"click\");\n});\nexpect(insert).to.have.callCount(dropdownItems.length);",
                "err": {},
                "isRoot": false,
                "uuid": "12e73459-7284-4a88-8fdc-0fd984d3c3e6",
                "parentUUID": "dc3f3556-9706-4d66-a2f1-3e84d30ddc7e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 46
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/components/TeachingPeriod/InsertTeachingPeriodButton.spec.jsx",
        "uuid": "7d452743-4626-4b28-9ca7-e7264991696e",
        "fullFile": "/home/staff01/Documents/monPlanR/test/components/TeachingPeriod/InsertTeachingPeriodButton.spec.jsx",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "COMPONENT: SetuRating",
        "suites": [],
        "tests": [
          {
            "title": "should render two ratings",
            "fullTitle": "COMPONENT: SetuRating should render two ratings",
            "timedOut": false,
            "duration": 48,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, null)).find(\".rating\")).to.have.length(2);",
            "err": {},
            "isRoot": false,
            "uuid": "53fcb09a-0d66-4fab-876e-c1aefba1c994",
            "parentUUID": "2d72d7a1-d87c-4726-a798-b20ac9826c5d",
            "skipped": false
          },
          {
            "title": "should render a book if learning ratings is >=2.5",
            "fullTitle": "COMPONENT: SetuRating should render a book if learning ratings is >=2.5",
            "timedOut": false,
            "duration": 62,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 4.13 })).find(\".book\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.50 })).find(\".book\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "b8c390da-eb9c-4dee-a01a-301a2797f49f",
            "parentUUID": "2d72d7a1-d87c-4726-a798-b20ac9826c5d",
            "skipped": false
          },
          {
            "title": "should render a remove circle if learning ratings is <2.5",
            "fullTitle": "COMPONENT: SetuRating should render a remove circle if learning ratings is <2.5",
            "timedOut": false,
            "duration": 50,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 1.51 })).find(\".remove.circle\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.49 })).find(\".remove.circle\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "2f05de00-bfed-4825-a950-7886ada04be8",
            "parentUUID": "2d72d7a1-d87c-4726-a798-b20ac9826c5d",
            "skipped": false
          },
          {
            "title": "should render a thumbs up if enjoyment ratings is >=2.5",
            "fullTitle": "COMPONENT: SetuRating should render a thumbs up if enjoyment ratings is >=2.5",
            "timedOut": false,
            "duration": 48,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 4.13 })).find(\".thumbs.up\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.50 })).find(\".thumbs.up\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "54b257bd-aa94-4564-8da1-52ec11f0cd0e",
            "parentUUID": "2d72d7a1-d87c-4726-a798-b20ac9826c5d",
            "skipped": false
          },
          {
            "title": "should render a thumbs down if enjoyment ratings is <2.5",
            "fullTitle": "COMPONENT: SetuRating should render a thumbs down if enjoyment ratings is <2.5",
            "timedOut": false,
            "duration": 48,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 1.51 })).find(\".thumbs.down\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.49 })).find(\".thumbs.down\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "f1836200-5517-4c7e-b4a2-325f31664eaa",
            "parentUUID": "2d72d7a1-d87c-4726-a798-b20ac9826c5d",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/components/Unit/SetuRating.spec.jsx",
        "uuid": "2d72d7a1-d87c-4726-a798-b20ac9826c5d",
        "fullFile": "/home/staff01/Documents/monPlanR/test/components/Unit/SetuRating.spec.jsx",
        "passes": [
          {
            "title": "should render two ratings",
            "fullTitle": "COMPONENT: SetuRating should render two ratings",
            "timedOut": false,
            "duration": 48,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, null)).find(\".rating\")).to.have.length(2);",
            "err": {},
            "isRoot": false,
            "uuid": "53fcb09a-0d66-4fab-876e-c1aefba1c994",
            "parentUUID": "2d72d7a1-d87c-4726-a798-b20ac9826c5d",
            "skipped": false
          },
          {
            "title": "should render a book if learning ratings is >=2.5",
            "fullTitle": "COMPONENT: SetuRating should render a book if learning ratings is >=2.5",
            "timedOut": false,
            "duration": 62,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 4.13 })).find(\".book\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.50 })).find(\".book\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "b8c390da-eb9c-4dee-a01a-301a2797f49f",
            "parentUUID": "2d72d7a1-d87c-4726-a798-b20ac9826c5d",
            "skipped": false
          },
          {
            "title": "should render a remove circle if learning ratings is <2.5",
            "fullTitle": "COMPONENT: SetuRating should render a remove circle if learning ratings is <2.5",
            "timedOut": false,
            "duration": 50,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 1.51 })).find(\".remove.circle\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.49 })).find(\".remove.circle\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "2f05de00-bfed-4825-a950-7886ada04be8",
            "parentUUID": "2d72d7a1-d87c-4726-a798-b20ac9826c5d",
            "skipped": false
          },
          {
            "title": "should render a thumbs up if enjoyment ratings is >=2.5",
            "fullTitle": "COMPONENT: SetuRating should render a thumbs up if enjoyment ratings is >=2.5",
            "timedOut": false,
            "duration": 48,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 4.13 })).find(\".thumbs.up\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.50 })).find(\".thumbs.up\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "54b257bd-aa94-4564-8da1-52ec11f0cd0e",
            "parentUUID": "2d72d7a1-d87c-4726-a798-b20ac9826c5d",
            "skipped": false
          },
          {
            "title": "should render a thumbs down if enjoyment ratings is <2.5",
            "fullTitle": "COMPONENT: SetuRating should render a thumbs down if enjoyment ratings is <2.5",
            "timedOut": false,
            "duration": 48,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 1.51 })).find(\".thumbs.down\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.49 })).find(\".thumbs.down\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "f1836200-5517-4c7e-b4a2-325f31664eaa",
            "parentUUID": "2d72d7a1-d87c-4726-a798-b20ac9826c5d",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 5,
        "totalPasses": 5,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 256
      },
      {
        "title": "COMPONENT: UnitMessage",
        "suites": [
          {
            "title": "#presentational",
            "suites": [],
            "tests": [
              {
                "title": "should only render a unit code and a unit name",
                "fullTitle": "COMPONENT: UnitMessage #presentational should only render a unit code and a unit name",
                "timedOut": false,
                "duration": 26,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var unitCode = \"ABC1234\";\nvar unitName = \"Example unit\";\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: unitCode,\n    name: unitName }));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(unitCode);\nexpect(wrapper.find(\".message\").text().replace(unitCode, \"\").trim()).to.equal(unitName);",
                "err": {},
                "isRoot": false,
                "uuid": "c6126600-0dff-4f13-a05e-ef1c0815b572",
                "parentUUID": "654d8327-c701-42d7-866a-9a3e49e56aef",
                "skipped": false
              },
              {
                "title": "should render a close button only when mouse is over the unit",
                "fullTitle": "COMPONENT: UnitMessage #presentational should render a close button only when mouse is over the unit",
                "timedOut": false,
                "duration": 64,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    hovering: false }));\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");\nwrapper.setProps({\n    hovering: true\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"visible\");\nwrapper.setProps({\n    hovering: false\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");",
                "err": {},
                "isRoot": false,
                "uuid": "9a397233-52fe-4781-8528-821e4e178b27",
                "parentUUID": "654d8327-c701-42d7-866a-9a3e49e56aef",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/components/Unit/UnitMessage.spec.jsx",
            "uuid": "654d8327-c701-42d7-866a-9a3e49e56aef",
            "fullFile": "/home/staff01/Documents/monPlanR/test/components/Unit/UnitMessage.spec.jsx",
            "passes": [
              {
                "title": "should only render a unit code and a unit name",
                "fullTitle": "COMPONENT: UnitMessage #presentational should only render a unit code and a unit name",
                "timedOut": false,
                "duration": 26,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var unitCode = \"ABC1234\";\nvar unitName = \"Example unit\";\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: unitCode,\n    name: unitName }));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(unitCode);\nexpect(wrapper.find(\".message\").text().replace(unitCode, \"\").trim()).to.equal(unitName);",
                "err": {},
                "isRoot": false,
                "uuid": "c6126600-0dff-4f13-a05e-ef1c0815b572",
                "parentUUID": "654d8327-c701-42d7-866a-9a3e49e56aef",
                "skipped": false
              },
              {
                "title": "should render a close button only when mouse is over the unit",
                "fullTitle": "COMPONENT: UnitMessage #presentational should render a close button only when mouse is over the unit",
                "timedOut": false,
                "duration": 64,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    hovering: false }));\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");\nwrapper.setProps({\n    hovering: true\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"visible\");\nwrapper.setProps({\n    hovering: false\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");",
                "err": {},
                "isRoot": false,
                "uuid": "9a397233-52fe-4781-8528-821e4e178b27",
                "parentUUID": "654d8327-c701-42d7-866a-9a3e49e56aef",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 90
          },
          {
            "title": "#events",
            "suites": [],
            "tests": [
              {
                "title": "Should call willAddUnit if unit is a newUnit and it has been clicked",
                "fullTitle": "COMPONENT: UnitMessage #events Should call willAddUnit if unit is a newUnit and it has been clicked",
                "timedOut": false,
                "duration": 36,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    newUnit: true,\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    willAddUnit: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"click\");\nexpect(eventFunc).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "3bf288b6-e29b-45f1-93a9-74a337b7f1bd",
                "parentUUID": "5766d7cb-37fc-4ba3-aef2-3a9824025035",
                "skipped": false
              },
              {
                "title": "Should call handleUnitMouseOver when mouse is over the unit",
                "fullTitle": "COMPONENT: UnitMessage #events Should call handleUnitMouseOver when mouse is over the unit",
                "timedOut": false,
                "duration": 22,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseOver: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseOver\");\nexpect(eventFunc).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "b6c92498-27d4-4be7-bca8-a2e29a5ec20d",
                "parentUUID": "5766d7cb-37fc-4ba3-aef2-3a9824025035",
                "skipped": false
              },
              {
                "title": "Should call handleUnitMouseMove when mouse moves over the unit",
                "fullTitle": "COMPONENT: UnitMessage #events Should call handleUnitMouseMove when mouse moves over the unit",
                "timedOut": false,
                "duration": 17,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseMove: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseMove\");\nexpect(eventFunc).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "312f72f4-751d-4070-a10b-0a31a55c9383",
                "parentUUID": "5766d7cb-37fc-4ba3-aef2-3a9824025035",
                "skipped": false
              },
              {
                "title": "Should call handleUnitMouseOut when mouse is over the unit",
                "fullTitle": "COMPONENT: UnitMessage #events Should call handleUnitMouseOut when mouse is over the unit",
                "timedOut": false,
                "duration": 31,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseOut: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseOut\");\nexpect(eventFunc).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "6272e79c-92b0-4df6-bbb5-162edfff9d5b",
                "parentUUID": "5766d7cb-37fc-4ba3-aef2-3a9824025035",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/components/Unit/UnitMessage.spec.jsx",
            "uuid": "5766d7cb-37fc-4ba3-aef2-3a9824025035",
            "fullFile": "/home/staff01/Documents/monPlanR/test/components/Unit/UnitMessage.spec.jsx",
            "passes": [
              {
                "title": "Should call willAddUnit if unit is a newUnit and it has been clicked",
                "fullTitle": "COMPONENT: UnitMessage #events Should call willAddUnit if unit is a newUnit and it has been clicked",
                "timedOut": false,
                "duration": 36,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    newUnit: true,\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    willAddUnit: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"click\");\nexpect(eventFunc).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "3bf288b6-e29b-45f1-93a9-74a337b7f1bd",
                "parentUUID": "5766d7cb-37fc-4ba3-aef2-3a9824025035",
                "skipped": false
              },
              {
                "title": "Should call handleUnitMouseOver when mouse is over the unit",
                "fullTitle": "COMPONENT: UnitMessage #events Should call handleUnitMouseOver when mouse is over the unit",
                "timedOut": false,
                "duration": 22,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseOver: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseOver\");\nexpect(eventFunc).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "b6c92498-27d4-4be7-bca8-a2e29a5ec20d",
                "parentUUID": "5766d7cb-37fc-4ba3-aef2-3a9824025035",
                "skipped": false
              },
              {
                "title": "Should call handleUnitMouseMove when mouse moves over the unit",
                "fullTitle": "COMPONENT: UnitMessage #events Should call handleUnitMouseMove when mouse moves over the unit",
                "timedOut": false,
                "duration": 17,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseMove: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseMove\");\nexpect(eventFunc).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "312f72f4-751d-4070-a10b-0a31a55c9383",
                "parentUUID": "5766d7cb-37fc-4ba3-aef2-3a9824025035",
                "skipped": false
              },
              {
                "title": "Should call handleUnitMouseOut when mouse is over the unit",
                "fullTitle": "COMPONENT: UnitMessage #events Should call handleUnitMouseOut when mouse is over the unit",
                "timedOut": false,
                "duration": 31,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseOut: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseOut\");\nexpect(eventFunc).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "6272e79c-92b0-4df6-bbb5-162edfff9d5b",
                "parentUUID": "5766d7cb-37fc-4ba3-aef2-3a9824025035",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 106
          },
          {
            "title": "#DnD",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly call movingUnit when it is being dragged",
                "fullTitle": "COMPONENT: UnitMessage #DnD Should correctly call movingUnit when it is being dragged",
                "timedOut": false,
                "duration": 16,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "testingBeginDrag = true;\ntestingEndDrag = false;\nbackend.simulateBeginDrag([sourceId]);\nexpect(movingUnitSpy).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "44780ba8-95cd-419e-9c8d-ec46d13cc714",
                "parentUUID": "35a75baf-30bc-41ab-9687-9b20b81973ef",
                "skipped": false
              },
              {
                "title": "Should correctylc call cancelMovingUnit ",
                "fullTitle": "COMPONENT: UnitMessage #DnD Should correctylc call cancelMovingUnit ",
                "timedOut": false,
                "duration": 21,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "testingBeginDrag = false;\ntestingEndDrag = true;\nbackend.simulateBeginDrag([sourceId]);\nbackend.simulateEndDrag(sourceId);\nexpect(cancelMovingUnitSpy).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "207107a0-8ee6-4c1a-b216-d5d0c884cdda",
                "parentUUID": "35a75baf-30bc-41ab-9687-9b20b81973ef",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/components/Unit/UnitMessage.spec.jsx",
            "uuid": "35a75baf-30bc-41ab-9687-9b20b81973ef",
            "fullFile": "/home/staff01/Documents/monPlanR/test/components/Unit/UnitMessage.spec.jsx",
            "passes": [
              {
                "title": "Should correctly call movingUnit when it is being dragged",
                "fullTitle": "COMPONENT: UnitMessage #DnD Should correctly call movingUnit when it is being dragged",
                "timedOut": false,
                "duration": 16,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "testingBeginDrag = true;\ntestingEndDrag = false;\nbackend.simulateBeginDrag([sourceId]);\nexpect(movingUnitSpy).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "44780ba8-95cd-419e-9c8d-ec46d13cc714",
                "parentUUID": "35a75baf-30bc-41ab-9687-9b20b81973ef",
                "skipped": false
              },
              {
                "title": "Should correctylc call cancelMovingUnit ",
                "fullTitle": "COMPONENT: UnitMessage #DnD Should correctylc call cancelMovingUnit ",
                "timedOut": false,
                "duration": 21,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "testingBeginDrag = false;\ntestingEndDrag = true;\nbackend.simulateBeginDrag([sourceId]);\nbackend.simulateEndDrag(sourceId);\nexpect(cancelMovingUnitSpy).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "207107a0-8ee6-4c1a-b216-d5d0c884cdda",
                "parentUUID": "35a75baf-30bc-41ab-9687-9b20b81973ef",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 37
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/components/Unit/UnitMessage.spec.jsx",
        "uuid": "447e4e84-698d-47f0-9d11-f0374588e2f5",
        "fullFile": "/home/staff01/Documents/monPlanR/test/components/Unit/UnitMessage.spec.jsx",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "REDUCER: Counter",
        "suites": [
          {
            "title": "ACTION: INCREMENT_CREDIT_POINTS",
            "suites": [],
            "tests": [
              {
                "title": "Should increment the credit point state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: INCREMENT_CREDIT_POINTS Should increment the credit point state by a given value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 2, creditPoints: 0 };\nvar action = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 2,\n    creditPoints: 1\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f8f0619e-1617-4264-857a-94164589595c",
                "parentUUID": "459069e3-6134-431b-8000-891ded6832bb",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "459069e3-6134-431b-8000-891ded6832bb",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should increment the credit point state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: INCREMENT_CREDIT_POINTS Should increment the credit point state by a given value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 2, creditPoints: 0 };\nvar action = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 2,\n    creditPoints: 1\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f8f0619e-1617-4264-857a-94164589595c",
                "parentUUID": "459069e3-6134-431b-8000-891ded6832bb",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: DECREMENT_CREDIT_POINTS",
            "suites": [],
            "tests": [
              {
                "title": "Should decrement the credit point state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state by a given value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c97df884-406b-464b-9cac-960695aef584",
                "parentUUID": "25224370-9c49-40d5-acd9-56f75f67bf93",
                "skipped": false
              },
              {
                "title": "Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 0\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d03ee03b-a12d-4d91-8b15-2141b8ff12ba",
                "parentUUID": "25224370-9c49-40d5-acd9-56f75f67bf93",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "25224370-9c49-40d5-acd9-56f75f67bf93",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should decrement the credit point state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state by a given value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c97df884-406b-464b-9cac-960695aef584",
                "parentUUID": "25224370-9c49-40d5-acd9-56f75f67bf93",
                "skipped": false
              },
              {
                "title": "Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 0\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d03ee03b-a12d-4d91-8b15-2141b8ff12ba",
                "parentUUID": "25224370-9c49-40d5-acd9-56f75f67bf93",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: INCREMENT_COST",
            "suites": [],
            "tests": [
              {
                "title": "Should increment the cost state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: INCREMENT_COST Should increment the cost state by a given value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 20, creditPoints: 13 };\nvar action = {\n    type: \"INCREMENT_COST\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 21,\n    creditPoints: 13\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "549dc8fc-ee8d-493c-9a9a-e572e05703ae",
                "parentUUID": "edc86931-9529-47f7-ac27-31ac3487c7e9",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "edc86931-9529-47f7-ac27-31ac3487c7e9",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should increment the cost state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: INCREMENT_COST Should increment the cost state by a given value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 20, creditPoints: 13 };\nvar action = {\n    type: \"INCREMENT_COST\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 21,\n    creditPoints: 13\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "549dc8fc-ee8d-493c-9a9a-e572e05703ae",
                "parentUUID": "edc86931-9529-47f7-ac27-31ac3487c7e9",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: DECREMENT_COST",
            "suites": [],
            "tests": [
              {
                "title": "Should decrement the cost state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_COST Should decrement the cost state by a given value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "40722f1e-038c-4394-a226-d4f8d1e9a23b",
                "parentUUID": "8068476f-f20e-40aa-a29c-aa9fa7139a81",
                "skipped": false
              },
              {
                "title": "Should decrement the cost state to 0 if a value given is larger than the current credit point value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_COST Should decrement the cost state to 0 if a value given is larger than the current credit point value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 0,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "be1c4f45-d877-4344-9bde-90620f3b7daa",
                "parentUUID": "8068476f-f20e-40aa-a29c-aa9fa7139a81",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "8068476f-f20e-40aa-a29c-aa9fa7139a81",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should decrement the cost state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_COST Should decrement the cost state by a given value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "40722f1e-038c-4394-a226-d4f8d1e9a23b",
                "parentUUID": "8068476f-f20e-40aa-a29c-aa9fa7139a81",
                "skipped": false
              },
              {
                "title": "Should decrement the cost state to 0 if a value given is larger than the current credit point value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_COST Should decrement the cost state to 0 if a value given is larger than the current credit point value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 0,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "be1c4f45-d877-4344-9bde-90620f3b7daa",
                "parentUUID": "8068476f-f20e-40aa-a29c-aa9fa7139a81",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "ACTION: CLEAR_COURSE",
            "suites": [],
            "tests": [
              {
                "title": "Should reset the cost and credit point counters to 0",
                "fullTitle": "REDUCER: Counter ACTION: CLEAR_COURSE Should reset the cost and credit point counters to 0",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b5b44887-29f2-4e3f-ae69-0af2d0345448",
                "parentUUID": "423f77a7-7d39-4b61-afb9-7472ab75a97d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "423f77a7-7d39-4b61-afb9-7472ab75a97d",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should reset the cost and credit point counters to 0",
                "fullTitle": "REDUCER: Counter ACTION: CLEAR_COURSE Should reset the cost and credit point counters to 0",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b5b44887-29f2-4e3f-ae69-0af2d0345448",
                "parentUUID": "423f77a7-7d39-4b61-afb9-7472ab75a97d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: REMOVE_TEACHING_PERIOD",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly go through and decrement the counters for each value ",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_TEACHING_PERIOD Should correctly go through and decrement the counters for each value ",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { cost: 2, creditPoints: 20 }, { cost: 5, creditPoints: 10 }, null]\n};\nvar stateAfter = { cost: 43, creditPoints: 10 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "285312cf-fdc7-49d3-8545-6b2130c2a7d8",
                "parentUUID": "b5179a09-1cbd-4c77-8c89-99f0182ae918",
                "skipped": false
              },
              {
                "title": "Should not decrement the counters below 0 ",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_TEACHING_PERIOD Should not decrement the counters below 0 ",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { cost: 25, creditPoints: 20 }, { cost: 30, creditPoints: 30 }, { cost: 0, creditPoints: 10 }]\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c65f47a1-6650-4ada-bee8-769cbf26df90",
                "parentUUID": "b5179a09-1cbd-4c77-8c89-99f0182ae918",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "b5179a09-1cbd-4c77-8c89-99f0182ae918",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should correctly go through and decrement the counters for each value ",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_TEACHING_PERIOD Should correctly go through and decrement the counters for each value ",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { cost: 2, creditPoints: 20 }, { cost: 5, creditPoints: 10 }, null]\n};\nvar stateAfter = { cost: 43, creditPoints: 10 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "285312cf-fdc7-49d3-8545-6b2130c2a7d8",
                "parentUUID": "b5179a09-1cbd-4c77-8c89-99f0182ae918",
                "skipped": false
              },
              {
                "title": "Should not decrement the counters below 0 ",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_TEACHING_PERIOD Should not decrement the counters below 0 ",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { cost: 25, creditPoints: 20 }, { cost: 30, creditPoints: 30 }, { cost: 0, creditPoints: 10 }]\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c65f47a1-6650-4ada-bee8-769cbf26df90",
                "parentUUID": "b5179a09-1cbd-4c77-8c89-99f0182ae918",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: REMOVE_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly decrement the counters based on the given units creditpoints and cost",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_UNIT Should correctly decrement the counters based on the given units creditpoints and cost",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 20 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ae0b666a-e50c-4040-a3dd-5716684e8a55",
                "parentUUID": "9b7a9558-3c09-4db8-9944-fa053b0158ff",
                "skipped": false
              },
              {
                "title": "Should not decrement the counters below 0",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_UNIT Should not decrement the counters below 0",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d052fc0e-5d8b-4202-a54c-aa27d1a55c6e",
                "parentUUID": "9b7a9558-3c09-4db8-9944-fa053b0158ff",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "9b7a9558-3c09-4db8-9944-fa053b0158ff",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should correctly decrement the counters based on the given units creditpoints and cost",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_UNIT Should correctly decrement the counters based on the given units creditpoints and cost",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 20 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ae0b666a-e50c-4040-a3dd-5716684e8a55",
                "parentUUID": "9b7a9558-3c09-4db8-9944-fa053b0158ff",
                "skipped": false
              },
              {
                "title": "Should not decrement the counters below 0",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_UNIT Should not decrement the counters below 0",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d052fc0e-5d8b-4202-a54c-aa27d1a55c6e",
                "parentUUID": "9b7a9558-3c09-4db8-9944-fa053b0158ff",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: ADD_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly increment the counters when a unit is added to the plan",
                "fullTitle": "REDUCER: Counter ACTION: ADD_UNIT Should correctly increment the counters when a unit is added to the plan",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"ADD_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 30 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "cef4a16e-06af-44cc-b844-cd0ff3a84db9",
                "parentUUID": "8c271cc6-1224-44c1-965a-3301527de7c1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "8c271cc6-1224-44c1-965a-3301527de7c1",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should correctly increment the counters when a unit is added to the plan",
                "fullTitle": "REDUCER: Counter ACTION: ADD_UNIT Should correctly increment the counters when a unit is added to the plan",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"ADD_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 30 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "cef4a16e-06af-44cc-b844-cd0ff3a84db9",
                "parentUUID": "8c271cc6-1224-44c1-965a-3301527de7c1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: DECREASE_STUDY_LOAD",
            "suites": [],
            "tests": [
              {
                "title": "Should not decrease counters if there are no units in the overload column",
                "fullTitle": "REDUCER: Counter ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units in the overload column",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: []\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "280156c0-161e-4eb9-a777-4736290409ed",
                "parentUUID": "9cca7867-a0e5-42e6-ad3b-e53c3bf853c9",
                "skipped": false
              },
              {
                "title": "Should not decrease counters if there are no units which have values in the overload column",
                "fullTitle": "REDUCER: Counter ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units which have values in the overload column",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [null, {}]\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "503848cb-fb93-4323-9947-fdd2018e0a22",
                "parentUUID": "9cca7867-a0e5-42e6-ad3b-e53c3bf853c9",
                "skipped": false
              },
              {
                "title": "Should decrease counters correctly for units in the overload column",
                "fullTitle": "REDUCER: Counter ACTION: DECREASE_STUDY_LOAD Should decrease counters correctly for units in the overload column",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [{\n        CreditPoints: 6,\n        Cost: 1134\n    }, {\n        CreditPoints: 12,\n        Cost: 2256\n    }]\n};\nvar stateAfter = { cost: 36610, creditPoints: 126 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1b1054d3-f28b-4203-8d90-b8b5b9eaf7b5",
                "parentUUID": "9cca7867-a0e5-42e6-ad3b-e53c3bf853c9",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "9cca7867-a0e5-42e6-ad3b-e53c3bf853c9",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should not decrease counters if there are no units in the overload column",
                "fullTitle": "REDUCER: Counter ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units in the overload column",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: []\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "280156c0-161e-4eb9-a777-4736290409ed",
                "parentUUID": "9cca7867-a0e5-42e6-ad3b-e53c3bf853c9",
                "skipped": false
              },
              {
                "title": "Should not decrease counters if there are no units which have values in the overload column",
                "fullTitle": "REDUCER: Counter ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units which have values in the overload column",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [null, {}]\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "503848cb-fb93-4323-9947-fdd2018e0a22",
                "parentUUID": "9cca7867-a0e5-42e6-ad3b-e53c3bf853c9",
                "skipped": false
              },
              {
                "title": "Should decrease counters correctly for units in the overload column",
                "fullTitle": "REDUCER: Counter ACTION: DECREASE_STUDY_LOAD Should decrease counters correctly for units in the overload column",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [{\n        CreditPoints: 6,\n        Cost: 1134\n    }, {\n        CreditPoints: 12,\n        Cost: 2256\n    }]\n};\nvar stateAfter = { cost: 36610, creditPoints: 126 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1b1054d3-f28b-4203-8d90-b8b5b9eaf7b5",
                "parentUUID": "9cca7867-a0e5-42e6-ad3b-e53c3bf853c9",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "DEFAULT",
            "suites": [],
            "tests": [
              {
                "title": "Should not change state if it does not recognise an action",
                "fullTitle": "REDUCER: Counter DEFAULT Should not change state if it does not recognise an action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "46e0e895-cc0e-4fba-a155-a59fadb8354c",
                "parentUUID": "86d4332e-a53d-49ab-880c-bbeac9e23adf",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "86d4332e-a53d-49ab-880c-bbeac9e23adf",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should not change state if it does not recognise an action",
                "fullTitle": "REDUCER: Counter DEFAULT Should not change state if it does not recognise an action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "46e0e895-cc0e-4fba-a155-a59fadb8354c",
                "parentUUID": "86d4332e-a53d-49ab-880c-bbeac9e23adf",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/reducers/Counter.spec.js",
        "uuid": "1ad62f92-20be-44e2-b1f8-2700e3f5ed9e",
        "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "REDUCER: CourseStructure",
        "suites": [
          {
            "title": "ACTION: INSERT_TEACHING_PERIOD",
            "suites": [],
            "tests": [
              {
                "title": "Should insert a teaching period with the given info correctly into middle of array",
                "fullTitle": "REDUCER: CourseStructure ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into middle of array",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2018,\n    code: \"S2-01\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c59cb4c1-0106-4d32-a0a6-f2a5af28c562",
                "parentUUID": "e5a234ae-f1b5-43cf-879f-9a133dcc206c",
                "skipped": false
              },
              {
                "title": "Should insert a teaching period with the given info correctly into start of array",
                "fullTitle": "REDUCER: CourseStructure ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into start of array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2016,\n    code: \"S2-01\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2016, code: \"S2-01\", units: [null, null, null, null] }, { year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "23ecd4b3-3c85-4216-a56d-d05fb10497d8",
                "parentUUID": "e5a234ae-f1b5-43cf-879f-9a133dcc206c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "e5a234ae-f1b5-43cf-879f-9a133dcc206c",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should insert a teaching period with the given info correctly into middle of array",
                "fullTitle": "REDUCER: CourseStructure ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into middle of array",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2018,\n    code: \"S2-01\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c59cb4c1-0106-4d32-a0a6-f2a5af28c562",
                "parentUUID": "e5a234ae-f1b5-43cf-879f-9a133dcc206c",
                "skipped": false
              },
              {
                "title": "Should insert a teaching period with the given info correctly into start of array",
                "fullTitle": "REDUCER: CourseStructure ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into start of array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2016,\n    code: \"S2-01\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2016, code: \"S2-01\", units: [null, null, null, null] }, { year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "23ecd4b3-3c85-4216-a56d-d05fb10497d8",
                "parentUUID": "e5a234ae-f1b5-43cf-879f-9a133dcc206c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 4
          },
          {
            "title": "ACTION: REMOVE_TEACHING_PERIOD",
            "suites": [],
            "tests": [
              {
                "title": "Should remove a teaching period at the given index",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the given index",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "59352da6-5533-4fa5-a5fb-0a9eed81c34f",
                "parentUUID": "09f8af85-0133-46cd-acab-022d154aae7b",
                "skipped": false
              },
              {
                "title": "Should remove a teaching period at the start of the array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the start of the array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "2c195068-d4ff-4335-bf76-5f932b051e88",
                "parentUUID": "09f8af85-0133-46cd-acab-022d154aae7b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "09f8af85-0133-46cd-acab-022d154aae7b",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should remove a teaching period at the given index",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the given index",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "59352da6-5533-4fa5-a5fb-0a9eed81c34f",
                "parentUUID": "09f8af85-0133-46cd-acab-022d154aae7b",
                "skipped": false
              },
              {
                "title": "Should remove a teaching period at the start of the array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the start of the array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "2c195068-d4ff-4335-bf76-5f932b051e88",
                "parentUUID": "09f8af85-0133-46cd-acab-022d154aae7b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: APPEND_TEACHING_PERIOD",
            "suites": [],
            "tests": [
              {
                "title": "Should add the given teaching period to the end of the array",
                "fullTitle": "REDUCER: CourseStructure ACTION: APPEND_TEACHING_PERIOD Should add the given teaching period to the end of the array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"APPEND_TEACHING_PERIOD\",\n    year: 2020,\n    code: \"S2-01\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }, { year: 2020, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f6c3d8e2-e96a-40e1-a59b-46716714276d",
                "parentUUID": "d7411a5a-14f2-419b-8b3f-49ea22061a90",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "d7411a5a-14f2-419b-8b3f-49ea22061a90",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should add the given teaching period to the end of the array",
                "fullTitle": "REDUCER: CourseStructure ACTION: APPEND_TEACHING_PERIOD Should add the given teaching period to the end of the array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"APPEND_TEACHING_PERIOD\",\n    year: 2020,\n    code: \"S2-01\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }, { year: 2020, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f6c3d8e2-e96a-40e1-a59b-46716714276d",
                "parentUUID": "d7411a5a-14f2-419b-8b3f-49ea22061a90",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: INCREASE_STUDY_LOAD",
            "suites": [],
            "tests": [
              {
                "title": "Should increase the study load if the study load is less than 4",
                "fullTitle": "REDUCER: CourseStructure ACTION: INCREASE_STUDY_LOAD Should increase the study load if the study load is less than 4",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "fd23e794-7f03-4a58-add3-aff7e51a6e66",
                "parentUUID": "936a040a-24d2-409f-ab11-374a0a40f63c",
                "skipped": false
              },
              {
                "title": "Should not increase the study load if the study load is 6 or greater",
                "fullTitle": "REDUCER: CourseStructure ACTION: INCREASE_STUDY_LOAD Should not increase the study load if the study load is 6 or greater",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null, null] }],\n    numberOfUnits: 6\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null, null] }],\n    numberOfUnits: 6\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ea84ea5d-649e-4437-9ecb-ce73a66d5428",
                "parentUUID": "936a040a-24d2-409f-ab11-374a0a40f63c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "936a040a-24d2-409f-ab11-374a0a40f63c",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should increase the study load if the study load is less than 4",
                "fullTitle": "REDUCER: CourseStructure ACTION: INCREASE_STUDY_LOAD Should increase the study load if the study load is less than 4",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "fd23e794-7f03-4a58-add3-aff7e51a6e66",
                "parentUUID": "936a040a-24d2-409f-ab11-374a0a40f63c",
                "skipped": false
              },
              {
                "title": "Should not increase the study load if the study load is 6 or greater",
                "fullTitle": "REDUCER: CourseStructure ACTION: INCREASE_STUDY_LOAD Should not increase the study load if the study load is 6 or greater",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null, null] }],\n    numberOfUnits: 6\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null, null] }],\n    numberOfUnits: 6\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ea84ea5d-649e-4437-9ecb-ce73a66d5428",
                "parentUUID": "936a040a-24d2-409f-ab11-374a0a40f63c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: DECREASE_STUDY_LOAD",
            "suites": [],
            "tests": [
              {
                "title": "Should decrease the study load if the study load is greater than 4",
                "fullTitle": "REDUCER: CourseStructure ACTION: DECREASE_STUDY_LOAD Should decrease the study load if the study load is greater than 4",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1023f0eb-d90f-4d1b-8dc9-0fb267786259",
                "parentUUID": "0f248d7f-0d45-4569-aaea-2e967faacdb5",
                "skipped": false
              },
              {
                "title": "Should not decrease the study load if the study load is 4 or less",
                "fullTitle": "REDUCER: CourseStructure ACTION: DECREASE_STUDY_LOAD Should not decrease the study load if the study load is 4 or less",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e20380f8-1ba5-4b5b-9bf0-c47f4e8b7c82",
                "parentUUID": "0f248d7f-0d45-4569-aaea-2e967faacdb5",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "0f248d7f-0d45-4569-aaea-2e967faacdb5",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should decrease the study load if the study load is greater than 4",
                "fullTitle": "REDUCER: CourseStructure ACTION: DECREASE_STUDY_LOAD Should decrease the study load if the study load is greater than 4",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1023f0eb-d90f-4d1b-8dc9-0fb267786259",
                "parentUUID": "0f248d7f-0d45-4569-aaea-2e967faacdb5",
                "skipped": false
              },
              {
                "title": "Should not decrease the study load if the study load is 4 or less",
                "fullTitle": "REDUCER: CourseStructure ACTION: DECREASE_STUDY_LOAD Should not decrease the study load if the study load is 4 or less",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e20380f8-1ba5-4b5b-9bf0-c47f4e8b7c82",
                "parentUUID": "0f248d7f-0d45-4569-aaea-2e967faacdb5",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: CLEAR_COURSE",
            "suites": [],
            "tests": [
              {
                "title": "Should remove all teaching periods and set the amount of units to 4",
                "fullTitle": "REDUCER: CourseStructure ACTION: CLEAR_COURSE Should remove all teaching periods and set the amount of units to 4",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = {\n    courseInfo: {\n        courseName: \"\",\n        faculty: \"\",\n        creditPoints: 0,\n        courseDescription: \"\",\n        durationStr: \"\",\n        modeAndLocation: \"\",\n        awards: \"\",\n        abrTitle: \"\"\n    },\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "13bc38b0-ff2e-42f2-8094-97cc5eff965b",
                "parentUUID": "02b66432-f4cc-446b-b3e3-3d78bc5aa8f1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "02b66432-f4cc-446b-b3e3-3d78bc5aa8f1",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should remove all teaching periods and set the amount of units to 4",
                "fullTitle": "REDUCER: CourseStructure ACTION: CLEAR_COURSE Should remove all teaching periods and set the amount of units to 4",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = {\n    courseInfo: {\n        courseName: \"\",\n        faculty: \"\",\n        creditPoints: 0,\n        courseDescription: \"\",\n        durationStr: \"\",\n        modeAndLocation: \"\",\n        awards: \"\",\n        abrTitle: \"\"\n    },\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "13bc38b0-ff2e-42f2-8094-97cc5eff965b",
                "parentUUID": "02b66432-f4cc-446b-b3e3-3d78bc5aa8f1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: ADD_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should add a unit correctly to the start of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: ADD_UNIT Should add a unit correctly to the start of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "908cf372-fd56-4fb0-8af7-2dd05ac80872",
                "parentUUID": "3e7d3ec0-f171-4093-9c30-e0c73b64ee89",
                "skipped": false
              },
              {
                "title": "Should add a unit correctly to the middle of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: ADD_UNIT Should add a unit correctly to the middle of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "bec37835-7d25-4590-803e-392479bd0e11",
                "parentUUID": "3e7d3ec0-f171-4093-9c30-e0c73b64ee89",
                "skipped": false
              },
              {
                "title": "Should add a unit correctly to the end of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: ADD_UNIT Should add a unit correctly to the end of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "20b45b97-736d-4e1d-8cee-b98154d9ade6",
                "parentUUID": "3e7d3ec0-f171-4093-9c30-e0c73b64ee89",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "3e7d3ec0-f171-4093-9c30-e0c73b64ee89",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should add a unit correctly to the start of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: ADD_UNIT Should add a unit correctly to the start of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "908cf372-fd56-4fb0-8af7-2dd05ac80872",
                "parentUUID": "3e7d3ec0-f171-4093-9c30-e0c73b64ee89",
                "skipped": false
              },
              {
                "title": "Should add a unit correctly to the middle of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: ADD_UNIT Should add a unit correctly to the middle of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "bec37835-7d25-4590-803e-392479bd0e11",
                "parentUUID": "3e7d3ec0-f171-4093-9c30-e0c73b64ee89",
                "skipped": false
              },
              {
                "title": "Should add a unit correctly to the end of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: ADD_UNIT Should add a unit correctly to the end of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "20b45b97-736d-4e1d-8cee-b98154d9ade6",
                "parentUUID": "3e7d3ec0-f171-4093-9c30-e0c73b64ee89",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          },
          {
            "title": "ACTION: REMOVE_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should remove a unit correctly frpm the start of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_UNIT Should remove a unit correctly frpm the start of an array",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ac3fa4eb-f61d-40af-bbc0-817cb56ab9f3",
                "parentUUID": "287b4a9e-d240-442d-90ad-902b9ef74287",
                "skipped": false
              },
              {
                "title": "Should remove a unit correctly from the middle of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_UNIT Should remove a unit correctly from the middle of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "baa9c0dc-223e-49b4-b8b3-6187c51cb02e",
                "parentUUID": "287b4a9e-d240-442d-90ad-902b9ef74287",
                "skipped": false
              },
              {
                "title": "Should remove a unit correctly from the end of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_UNIT Should remove a unit correctly from the end of an array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1711c34a-fe6f-4f93-8d7b-dcd5558082e5",
                "parentUUID": "287b4a9e-d240-442d-90ad-902b9ef74287",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "287b4a9e-d240-442d-90ad-902b9ef74287",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should remove a unit correctly frpm the start of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_UNIT Should remove a unit correctly frpm the start of an array",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ac3fa4eb-f61d-40af-bbc0-817cb56ab9f3",
                "parentUUID": "287b4a9e-d240-442d-90ad-902b9ef74287",
                "skipped": false
              },
              {
                "title": "Should remove a unit correctly from the middle of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_UNIT Should remove a unit correctly from the middle of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "baa9c0dc-223e-49b4-b8b3-6187c51cb02e",
                "parentUUID": "287b4a9e-d240-442d-90ad-902b9ef74287",
                "skipped": false
              },
              {
                "title": "Should remove a unit correctly from the end of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_UNIT Should remove a unit correctly from the end of an array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1711c34a-fe6f-4f93-8d7b-dcd5558082e5",
                "parentUUID": "287b4a9e-d240-442d-90ad-902b9ef74287",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          },
          {
            "title": "ACTION: GENERATE_COURSE",
            "suites": [],
            "tests": [
              {
                "title": "Should generate a course structure with valid start and end years",
                "fullTitle": "REDUCER: CourseStructure ACTION: GENERATE_COURSE Should generate a course structure with valid start and end years",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2014,\n    endYear: 2016\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "4a51d432-3926-4310-84de-a381e64a4500",
                "parentUUID": "fb027c5e-ccbd-4127-b5d4-f4e8b22f88c2",
                "skipped": false
              },
              {
                "title": "Should return an empty course structure with invalid start and end years.",
                "fullTitle": "REDUCER: CourseStructure ACTION: GENERATE_COURSE Should return an empty course structure with invalid start and end years.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2017,\n    endYear: 2013\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f6257594-a172-4984-b3b0-68d87ea5089e",
                "parentUUID": "fb027c5e-ccbd-4127-b5d4-f4e8b22f88c2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "fb027c5e-ccbd-4127-b5d4-f4e8b22f88c2",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should generate a course structure with valid start and end years",
                "fullTitle": "REDUCER: CourseStructure ACTION: GENERATE_COURSE Should generate a course structure with valid start and end years",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2014,\n    endYear: 2016\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "4a51d432-3926-4310-84de-a381e64a4500",
                "parentUUID": "fb027c5e-ccbd-4127-b5d4-f4e8b22f88c2",
                "skipped": false
              },
              {
                "title": "Should return an empty course structure with invalid start and end years.",
                "fullTitle": "REDUCER: CourseStructure ACTION: GENERATE_COURSE Should return an empty course structure with invalid start and end years.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2017,\n    endYear: 2013\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f6257594-a172-4984-b3b0-68d87ea5089e",
                "parentUUID": "fb027c5e-ccbd-4127-b5d4-f4e8b22f88c2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_COURSE_INFO_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show that the course info is loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_INFO_PENDING Should correctly show that the course info is loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "63f70fa5-7177-482d-a4bc-3433aee08a28",
                "parentUUID": "d9d4d36b-66bf-42b5-bd88-b184c42df481",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "d9d4d36b-66bf-42b5-bd88-b184c42df481",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly show that the course info is loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_INFO_PENDING Should correctly show that the course info is loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "63f70fa5-7177-482d-a4bc-3433aee08a28",
                "parentUUID": "d9d4d36b-66bf-42b5-bd88-b184c42df481",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_COURSE_INFO_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly return the payload and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    focusedCourse: null,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_FULFILLED\",\n    payload: { data: {\n            \"propertyMap\": {\n                courseCode: \"Test Code\",\n                courseName: \"Test Course\",\n                mangFac: \"Test Faculty\",\n                creditPoints: 100,\n                courseDescrip: {\n                    \"value\": \"Test Description\"\n                },\n                courseDuration: \"Test Duration\",\n                modeLoc: {\n                    \"value\": \"Test mode and location\"\n                },\n                courseAward: \"Test awards\",\n                abrevTitle: \"Test abreviated title\"\n            }\n        } },\n    courseCode: \"COURSE101\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: {\n        courseCode: \"Test Code\",\n        courseName: \"Test Course\",\n        faculty: \"Test Faculty\",\n        creditPoints: 100,\n        courseDescription: \"Test Description\",\n        durationStr: \"Test Duration\",\n        modeAndLocation: \"Test mode and location\",\n        awards: \"Test awards\",\n        abrTitle: \"Test abreviated title\"\n    },\n    focusedCourse: \"COURSE101\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b6bed747-23bb-4df4-82b8-bfea54008073",
                "parentUUID": "f5098e01-6092-406c-b326-bd70a9e52004",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "f5098e01-6092-406c-b326-bd70a9e52004",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly return the payload and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    focusedCourse: null,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_FULFILLED\",\n    payload: { data: {\n            \"propertyMap\": {\n                courseCode: \"Test Code\",\n                courseName: \"Test Course\",\n                mangFac: \"Test Faculty\",\n                creditPoints: 100,\n                courseDescrip: {\n                    \"value\": \"Test Description\"\n                },\n                courseDuration: \"Test Duration\",\n                modeLoc: {\n                    \"value\": \"Test mode and location\"\n                },\n                courseAward: \"Test awards\",\n                abrevTitle: \"Test abreviated title\"\n            }\n        } },\n    courseCode: \"COURSE101\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: {\n        courseCode: \"Test Code\",\n        courseName: \"Test Course\",\n        faculty: \"Test Faculty\",\n        creditPoints: 100,\n        courseDescription: \"Test Description\",\n        durationStr: \"Test Duration\",\n        modeAndLocation: \"Test mode and location\",\n        awards: \"Test awards\",\n        abrTitle: \"Test abreviated title\"\n    },\n    focusedCourse: \"COURSE101\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b6bed747-23bb-4df4-82b8-bfea54008073",
                "parentUUID": "f5098e01-6092-406c-b326-bd70a9e52004",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_COURSE_INFO_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show that the course info fetch failed and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_INFO_REJECTED Should correctly show that the course info fetch failed and show that it is no longer loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: true,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9aca6a45-96c0-4e22-b30a-9a7ea0a6ecdc",
                "parentUUID": "31936565-5240-41c4-96dd-074cb6d222be",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "31936565-5240-41c4-96dd-074cb6d222be",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly show that the course info fetch failed and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_INFO_REJECTED Should correctly show that the course info fetch failed and show that it is no longer loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: true,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9aca6a45-96c0-4e22-b30a-9a7ea0a6ecdc",
                "parentUUID": "31936565-5240-41c4-96dd-074cb6d222be",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_COURSE_TEMPLATE_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show that the course template is loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_TEMPLATE_PENDING Should correctly show that the course template is loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "98cfcd42-fccd-4891-b937-066666101b32",
                "parentUUID": "90cee1b9-2170-40eb-84cb-ba8afcb22709",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "90cee1b9-2170-40eb-84cb-ba8afcb22709",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly show that the course template is loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_TEMPLATE_PENDING Should correctly show that the course template is loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "98cfcd42-fccd-4891-b937-066666101b32",
                "parentUUID": "90cee1b9-2170-40eb-84cb-ba8afcb22709",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_COURSE_TEMPLATE_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly return the payload and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_TEMPLATE_FULFILLED Should correctly return the payload and show that it is no longer loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_FULFILLED\",\n    payload: {\n        data: {\n            propertyMap: \"Fake Course Template\"\n        }\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: \"Fake Course Template\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "6f86f462-aaba-4b48-9a39-877a2e788776",
                "parentUUID": "d9f6c40f-e712-436f-b3ed-ec8f1f19f0c9",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "d9f6c40f-e712-436f-b3ed-ec8f1f19f0c9",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly return the payload and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_TEMPLATE_FULFILLED Should correctly return the payload and show that it is no longer loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_FULFILLED\",\n    payload: {\n        data: {\n            propertyMap: \"Fake Course Template\"\n        }\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: \"Fake Course Template\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "6f86f462-aaba-4b48-9a39-877a2e788776",
                "parentUUID": "d9f6c40f-e712-436f-b3ed-ec8f1f19f0c9",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_COURSE_TEMPLATE_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show that the course template fetch failed and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_TEMPLATE_REJECTED Should correctly show that the course template fetch failed and show that it is no longer loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: true,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "8b03e0d9-abae-43ca-a0e5-b5519806ac92",
                "parentUUID": "7bd03a59-7534-48d6-96ba-7bcbd3aa451e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "7bd03a59-7534-48d6-96ba-7bcbd3aa451e",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly show that the course template fetch failed and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_TEMPLATE_REJECTED Should correctly show that the course template fetch failed and show that it is no longer loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: true,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "8b03e0d9-abae-43ca-a0e5-b5519806ac92",
                "parentUUID": "7bd03a59-7534-48d6-96ba-7bcbd3aa451e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_UNIT_INFO_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show that the unit info is loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_UNIT_INFO_PENDING Should correctly show that the unit info is loading",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: {\n        preqs: \"\",\n        creditPoints: 0,\n        rules: [],\n        locationAndTime: \"\",\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"\",\n        eftsl: 0,\n        descriptions: \"\"\n    },\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: {\n        preqs: \"\",\n        creditPoints: 0,\n        rules: [],\n        locationAndTime: \"\",\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"\",\n        eftsl: 0,\n        descriptions: \"\"\n    },\n    focusedUnitCode: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9420b05d-c32f-498b-9ddf-546c447d1557",
                "parentUUID": "4f839a50-4399-45da-8eee-c7dc2a519036",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "4f839a50-4399-45da-8eee-c7dc2a519036",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly show that the unit info is loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_UNIT_INFO_PENDING Should correctly show that the unit info is loading",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: {\n        preqs: \"\",\n        creditPoints: 0,\n        rules: [],\n        locationAndTime: \"\",\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"\",\n        eftsl: 0,\n        descriptions: \"\"\n    },\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: {\n        preqs: \"\",\n        creditPoints: 0,\n        rules: [],\n        locationAndTime: \"\",\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"\",\n        eftsl: 0,\n        descriptions: \"\"\n    },\n    focusedUnitCode: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9420b05d-c32f-498b-9ddf-546c447d1557",
                "parentUUID": "4f839a50-4399-45da-8eee-c7dc2a519036",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "ACTION: FETCH_UNIT_INFO_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly return the payload and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_UNIT_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_FULFILLED\",\n    payload: { data: \"Fake Unit Info\" },\n    unitCode: \"FAKE1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: \"Fake Unit Info\",\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "861f02db-97d2-45e6-9f53-ce20e227a43b",
                "parentUUID": "1c2a1ddc-03d0-448c-a803-3836b6b5f0ac",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "1c2a1ddc-03d0-448c-a803-3836b6b5f0ac",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly return the payload and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_UNIT_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_FULFILLED\",\n    payload: { data: \"Fake Unit Info\" },\n    unitCode: \"FAKE1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: \"Fake Unit Info\",\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "861f02db-97d2-45e6-9f53-ce20e227a43b",
                "parentUUID": "1c2a1ddc-03d0-448c-a803-3836b6b5f0ac",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_UNIT_INFO_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show that the unit info fetch failed and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_UNIT_INFO_REJECTED Should correctly show that the unit info fetch failed and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_REJECTED\",\n    payload: {\n        response: {\n            status: 404\n        }\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: {\n        response: {\n            status: 404\n        }\n    },\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5f9b4739-9d5c-4faf-967f-50e09f242fef",
                "parentUUID": "6c60ada9-c9e9-488b-ae37-8b1253c3273a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "6c60ada9-c9e9-488b-ae37-8b1253c3273a",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly show that the unit info fetch failed and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_UNIT_INFO_REJECTED Should correctly show that the unit info fetch failed and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_REJECTED\",\n    payload: {\n        response: {\n            status: 404\n        }\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: {\n        response: {\n            status: 404\n        }\n    },\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5f9b4739-9d5c-4faf-967f-50e09f242fef",
                "parentUUID": "6c60ada9-c9e9-488b-ae37-8b1253c3273a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: SUBMIT_COURSE_FORM",
            "suites": [],
            "tests": [
              {
                "title": "Should accurately set the start year and the focused course on submission",
                "fullTitle": "REDUCER: CourseStructure ACTION: SUBMIT_COURSE_FORM Should accurately set the start year and the focused course on submission",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_COURSE_FORM\",\n    startYear: 2020,\n    courseCode: \"TEST1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: \"TEST1001\",\n    startYear: 2020,\n    endYear: 2020\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7f6ffee2-c375-4995-b574-671684027b4f",
                "parentUUID": "aacfee63-cfd3-4f5f-9b4c-3ae58218cedf",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "aacfee63-cfd3-4f5f-9b4c-3ae58218cedf",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should accurately set the start year and the focused course on submission",
                "fullTitle": "REDUCER: CourseStructure ACTION: SUBMIT_COURSE_FORM Should accurately set the start year and the focused course on submission",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_COURSE_FORM\",\n    startYear: 2020,\n    courseCode: \"TEST1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: \"TEST1001\",\n    startYear: 2020,\n    endYear: 2020\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7f6ffee2-c375-4995-b574-671684027b4f",
                "parentUUID": "aacfee63-cfd3-4f5f-9b4c-3ae58218cedf",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          },
          {
            "title": "ACTION: SUBMIT_YEAR_FORM",
            "suites": [],
            "tests": [
              {
                "title": "Should accurately set the start year and end year on submission",
                "fullTitle": "REDUCER: CourseStructure ACTION: SUBMIT_YEAR_FORM Should accurately set the start year and end year on submission",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_YEAR_FORM\",\n    startYear: 2020,\n    endYear: 2025\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2020,\n    endYear: 2025\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "babf4836-c451-4e8e-8613-629d767d0ae6",
                "parentUUID": "498258ab-0745-4636-a81b-7841a2133949",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "498258ab-0745-4636-a81b-7841a2133949",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should accurately set the start year and end year on submission",
                "fullTitle": "REDUCER: CourseStructure ACTION: SUBMIT_YEAR_FORM Should accurately set the start year and end year on submission",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_YEAR_FORM\",\n    startYear: 2020,\n    endYear: 2025\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2020,\n    endYear: 2025\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "babf4836-c451-4e8e-8613-629d767d0ae6",
                "parentUUID": "498258ab-0745-4636-a81b-7841a2133949",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_TEACHING_PERIODS_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly handle  of teaching periods data",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_TEACHING_PERIODS_PENDING Should correctly handle  of teaching periods data",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "fd8ed21b-8993-48b1-a852-8adfa82498a7",
                "parentUUID": "13dd419b-029b-4fda-9cd4-e43de94a26b2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "13dd419b-029b-4fda-9cd4-e43de94a26b2",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly handle  of teaching periods data",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_TEACHING_PERIODS_PENDING Should correctly handle  of teaching periods data",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "fd8ed21b-8993-48b1-a852-8adfa82498a7",
                "parentUUID": "13dd419b-029b-4fda-9cd4-e43de94a26b2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_TEACHING_PERIODS_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly handle  of teaching periods data",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_TEACHING_PERIODS_FULFILLED Should correctly handle  of teaching periods data",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_FULFILLED\",\n    payload: \"Teaching period strings\"\n};\nvar stateAfter = {\n    teachingPeriodData: \"Teaching period strings\",\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0160d397-9e5b-41ed-bcba-d5b47060bc90",
                "parentUUID": "cf19a7ca-2952-4100-b888-e74445bb87c1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "cf19a7ca-2952-4100-b888-e74445bb87c1",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly handle  of teaching periods data",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_TEACHING_PERIODS_FULFILLED Should correctly handle  of teaching periods data",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_FULFILLED\",\n    payload: \"Teaching period strings\"\n};\nvar stateAfter = {\n    teachingPeriodData: \"Teaching period strings\",\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0160d397-9e5b-41ed-bcba-d5b47060bc90",
                "parentUUID": "cf19a7ca-2952-4100-b888-e74445bb87c1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_TEACHING_PERIODS_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly handle  of teaching periods data",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_TEACHING_PERIODS_REJECTED Should correctly handle  of teaching periods data",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e1ab5206-4291-4b80-b430-04fde9b511e2",
                "parentUUID": "bd5759d0-c166-4560-894b-f58101726cc3",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "bd5759d0-c166-4560-894b-f58101726cc3",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly handle  of teaching periods data",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_TEACHING_PERIODS_REJECTED Should correctly handle  of teaching periods data",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e1ab5206-4291-4b80-b430-04fde9b511e2",
                "parentUUID": "bd5759d0-c166-4560-894b-f58101726cc3",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: SHOW_INSERT_TEACHING_PERIOD_UI",
            "suites": [],
            "tests": [
              {
                "title": "Should set the teaching period code to insert value correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should set the teaching period code to insert value correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodCodeToInsert: null,\n    testParam1: 1,\n    testParam2: \"test\"\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"S1-02\"\n};\nvar stateAfter = {\n    teachingPeriodCodeToInsert: \"S1-02\",\n    testParam1: 1,\n    testParam2: \"test\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "6d2d5032-775a-49f3-ae77-6c0fd5b1f8f0",
                "parentUUID": "a6fea31a-6379-4f76-b7a0-77b0e8e4fbbd",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "a6fea31a-6379-4f76-b7a0-77b0e8e4fbbd",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should set the teaching period code to insert value correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should set the teaching period code to insert value correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodCodeToInsert: null,\n    testParam1: 1,\n    testParam2: \"test\"\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"S1-02\"\n};\nvar stateAfter = {\n    teachingPeriodCodeToInsert: \"S1-02\",\n    testParam1: 1,\n    testParam2: \"test\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "6d2d5032-775a-49f3-ae77-6c0fd5b1f8f0",
                "parentUUID": "a6fea31a-6379-4f76-b7a0-77b0e8e4fbbd",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: UPLOAD_COURSE_SNAPSHOT_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should handle the initiation of a course snapshot upload correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPLOAD_COURSE_SNAPSHOT_PENDING Should handle the initiation of a course snapshot upload correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: true\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1ec00fd8-0090-45dc-a9cc-7f7f9a4af292",
                "parentUUID": "24cc8f12-9c4a-4383-a5ba-0b854f472dcf",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "24cc8f12-9c4a-4383-a5ba-0b854f472dcf",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should handle the initiation of a course snapshot upload correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPLOAD_COURSE_SNAPSHOT_PENDING Should handle the initiation of a course snapshot upload correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: true\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1ec00fd8-0090-45dc-a9cc-7f7f9a4af292",
                "parentUUID": "24cc8f12-9c4a-4383-a5ba-0b854f472dcf",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: UPLOAD_COURSE_SNAPSHOT_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should handle the successful upload of a course snapshot correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPLOAD_COURSE_SNAPSHOT_FULFILLED Should handle the successful upload of a course snapshot correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"upload string\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: \"upload string\",\n    courseSnapshotUploadSucessful: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "6503b96a-0d8c-4165-b35f-7a708984426b",
                "parentUUID": "1696037a-b608-4f95-8ff0-26687f1cded9",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "1696037a-b608-4f95-8ff0-26687f1cded9",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should handle the successful upload of a course snapshot correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPLOAD_COURSE_SNAPSHOT_FULFILLED Should handle the successful upload of a course snapshot correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"upload string\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: \"upload string\",\n    courseSnapshotUploadSucessful: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "6503b96a-0d8c-4165-b35f-7a708984426b",
                "parentUUID": "1696037a-b608-4f95-8ff0-26687f1cded9",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: UPLOAD_COURSE_SNAPSHOT_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should do handle the rejected upload of a course snapshot correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPLOAD_COURSE_SNAPSHOT_REJECTED Should do handle the rejected upload of a course snapshot correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9fb1b02a-1daf-4ced-a940-4d1e90dcef41",
                "parentUUID": "1f5d85c4-4042-4558-b1ee-41959dae835c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "1f5d85c4-4042-4558-b1ee-41959dae835c",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should do handle the rejected upload of a course snapshot correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPLOAD_COURSE_SNAPSHOT_REJECTED Should do handle the rejected upload of a course snapshot correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9fb1b02a-1daf-4ced-a940-4d1e90dcef41",
                "parentUUID": "1f5d85c4-4042-4558-b1ee-41959dae835c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_COURSE_SNAPSHOT_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should begin fetching a course snapshot correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_SNAPSHOT_PENDING Should begin fetching a course snapshot correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "3966cbfe-e627-4776-a16d-39ac3bcbe647",
                "parentUUID": "2542724e-891c-4009-8497-8a79941501c0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "2542724e-891c-4009-8497-8a79941501c0",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should begin fetching a course snapshot correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_SNAPSHOT_PENDING Should begin fetching a course snapshot correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "3966cbfe-e627-4776-a16d-39ac3bcbe647",
                "parentUUID": "2542724e-891c-4009-8497-8a79941501c0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_COURSE_SNAPSHOT_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should handle a successful course snapshot fetch correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_SNAPSHOT_FULFILLED Should handle a successful course snapshot fetch correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"Snap data\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: \"Snap data\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "93a544f3-e593-4f04-81e6-0f5f5286640a",
                "parentUUID": "c5adc67c-2ace-4b85-aaa5-cd93f3aae7f0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "c5adc67c-2ace-4b85-aaa5-cd93f3aae7f0",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should handle a successful course snapshot fetch correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_SNAPSHOT_FULFILLED Should handle a successful course snapshot fetch correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"Snap data\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: \"Snap data\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "93a544f3-e593-4f04-81e6-0f5f5286640a",
                "parentUUID": "c5adc67c-2ace-4b85-aaa5-cd93f3aae7f0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_COURSE_SNAPSHOT_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should handle a rejected course snapshot fetch correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_SNAPSHOT_REJECTED Should handle a rejected course snapshot fetch correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0a19c78b-ac9f-49ba-8079-d4e56a34ad8a",
                "parentUUID": "f1b8fc4c-fb15-42c0-9f61-cac9f043d642",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "f1b8fc4c-fb15-42c0-9f61-cac9f043d642",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should handle a rejected course snapshot fetch correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_SNAPSHOT_REJECTED Should handle a rejected course snapshot fetch correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0a19c78b-ac9f-49ba-8079-d4e56a34ad8a",
                "parentUUID": "f1b8fc4c-fb15-42c0-9f61-cac9f043d642",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_COURSES_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSES_PENDING Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: false,\n    courseSearchError: true //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: true,\n    courseSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "546fdc10-db22-4bd1-87e4-689cf3f630c2",
                "parentUUID": "c6806af5-067a-4240-8aa1-7be09f302546",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "c6806af5-067a-4240-8aa1-7be09f302546",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSES_PENDING Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: false,\n    courseSearchError: true //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: true,\n    courseSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "546fdc10-db22-4bd1-87e4-689cf3f630c2",
                "parentUUID": "c6806af5-067a-4240-8aa1-7be09f302546",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_COURSES_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSES_FULFILLED Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: true,\n    courseSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_FULFILLED\",\n    payload: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    courseSearchIsLoading: false,\n    courseSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "061955ed-068a-4cf4-837b-86c27a665f96",
                "parentUUID": "eb873c42-bbc1-4a86-ad9a-c89274831e06",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "eb873c42-bbc1-4a86-ad9a-c89274831e06",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSES_FULFILLED Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: true,\n    courseSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_FULFILLED\",\n    payload: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    courseSearchIsLoading: false,\n    courseSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "061955ed-068a-4cf4-837b-86c27a665f96",
                "parentUUID": "eb873c42-bbc1-4a86-ad9a-c89274831e06",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_COURSES_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSES_REJECTED Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    courseSearchIsLoading: true,\n    courseSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: false,\n    courseSearchError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "2f3e8c83-1a77-4026-b2be-2762468ce0aa",
                "parentUUID": "931a7331-7cf4-4672-8a45-c232fd2ad619",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "931a7331-7cf4-4672-8a45-c232fd2ad619",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSES_REJECTED Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    courseSearchIsLoading: true,\n    courseSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: false,\n    courseSearchError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "2f3e8c83-1a77-4026-b2be-2762468ce0aa",
                "parentUUID": "931a7331-7cf4-4672-8a45-c232fd2ad619",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_AOS_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_AOS_PENDING Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: false,\n    aosSearchError: true //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: true,\n    aosSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "8556b753-8a4f-4de7-9242-ceed4487080e",
                "parentUUID": "2b14f513-6d06-4108-b84b-e760854d8e83",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "2b14f513-6d06-4108-b84b-e760854d8e83",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_AOS_PENDING Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: false,\n    aosSearchError: true //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: true,\n    aosSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "8556b753-8a4f-4de7-9242-ceed4487080e",
                "parentUUID": "2b14f513-6d06-4108-b84b-e760854d8e83",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_AOS_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_AOS_FULFILLED Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: true,\n    aosSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_FULFILLED\",\n    payload: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    aosSearchIsLoading: false,\n    aosSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "34177ba5-eb30-49fd-b1a2-b33e43868e56",
                "parentUUID": "689a65e5-84bb-489c-a5cd-9b2fbf46a61a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "689a65e5-84bb-489c-a5cd-9b2fbf46a61a",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_AOS_FULFILLED Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: true,\n    aosSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_FULFILLED\",\n    payload: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    aosSearchIsLoading: false,\n    aosSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "34177ba5-eb30-49fd-b1a2-b33e43868e56",
                "parentUUID": "689a65e5-84bb-489c-a5cd-9b2fbf46a61a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_AOS_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_AOS_REJECTED Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    aosSearchIsLoading: true,\n    aosSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: false,\n    aosSearchError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f4d6a0d9-32d2-4820-ab5f-11c5de1e74a1",
                "parentUUID": "b900ec05-97c1-44f1-b41c-88494d7fba9a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "b900ec05-97c1-44f1-b41c-88494d7fba9a",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_AOS_REJECTED Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    aosSearchIsLoading: true,\n    aosSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: false,\n    aosSearchError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f4d6a0d9-32d2-4820-ab5f-11c5de1e74a1",
                "parentUUID": "b900ec05-97c1-44f1-b41c-88494d7fba9a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: UPDATE_AFFECTED_UNITS",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly update the affected units value to the given array",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_AFFECTED_UNITS Should correctly update the affected units value to the given array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: []\n};\nvar action = {\n    type: \"UPDATE_AFFECTED_UNITS\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5bd97d58-981a-40fa-a815-dcd3a3da6876",
                "parentUUID": "20833cb5-d312-4ecd-abc8-3514dff86264",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "20833cb5-d312-4ecd-abc8-3514dff86264",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly update the affected units value to the given array",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_AFFECTED_UNITS Should correctly update the affected units value to the given array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: []\n};\nvar action = {\n    type: \"UPDATE_AFFECTED_UNITS\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5bd97d58-981a-40fa-a815-dcd3a3da6876",
                "parentUUID": "20833cb5-d312-4ecd-abc8-3514dff86264",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: UPDATE_INDEX_OF_TP_TO_REMOVE",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly update the index of tp to remove value to the given value",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_INDEX_OF_TP_TO_REMOVE Should correctly update the index of tp to remove value to the given value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 0\n};\nvar action = {\n    type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\",\n    index: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 1\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "cdec5789-9eaa-4829-aa7b-076a06993a3f",
                "parentUUID": "9405b227-344f-4dc5-aeeb-233d838ee349",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "9405b227-344f-4dc5-aeeb-233d838ee349",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly update the index of tp to remove value to the given value",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_INDEX_OF_TP_TO_REMOVE Should correctly update the index of tp to remove value to the given value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 0\n};\nvar action = {\n    type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\",\n    index: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 1\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "cdec5789-9eaa-4829-aa7b-076a06993a3f",
                "parentUUID": "9405b227-344f-4dc5-aeeb-233d838ee349",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: UPDATE_UNIT_TO_ADD",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set the unit to add to the new unit",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_UNIT_TO_ADD Should correctly set the unit to add to the new unit",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitInfo: \"TestUnit\",\n    unitToAdd: undefined\n};\nvar action = {\n    type: \"UPDATE_UNIT_TO_ADD\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitInfo: \"TestUnit\",\n    unitToAdd: \"TestUnit\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c65ee963-0bcb-4feb-8081-614a7ac95be6",
                "parentUUID": "c0b89eac-8e37-4a4a-a956-0af667d82529",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "c0b89eac-8e37-4a4a-a956-0af667d82529",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly set the unit to add to the new unit",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_UNIT_TO_ADD Should correctly set the unit to add to the new unit",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitInfo: \"TestUnit\",\n    unitToAdd: undefined\n};\nvar action = {\n    type: \"UPDATE_UNIT_TO_ADD\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitInfo: \"TestUnit\",\n    unitToAdd: \"TestUnit\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c65ee963-0bcb-4feb-8081-614a7ac95be6",
                "parentUUID": "c0b89eac-8e37-4a4a-a956-0af667d82529",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: UPDATE_UNIT_IS_BEING_DRAGGED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set a non-dragging unit being dragged",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_UNIT_IS_BEING_DRAGGED Should correctly set a non-dragging unit being dragged",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: false\n};\nvar action = {\n    type: \"UPDATE_UNIT_IS_BEING_DRAGGED\",\n    isDragging: true\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9346925a-8440-4de7-a725-b0b741706d9f",
                "parentUUID": "c0283377-3c27-4cde-9fde-88b85b41af8b",
                "skipped": false
              },
              {
                "title": "Should correctly set a dragging unit to be not dragged",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_UNIT_IS_BEING_DRAGGED Should correctly set a dragging unit to be not dragged",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: true\n};\nvar action = {\n    type: \"UPDATE_UNIT_IS_BEING_DRAGGED\",\n    isDragging: false\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e3a552e5-a19f-41fc-b7c3-3fcdf5348355",
                "parentUUID": "c0283377-3c27-4cde-9fde-88b85b41af8b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "c0283377-3c27-4cde-9fde-88b85b41af8b",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly set a non-dragging unit being dragged",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_UNIT_IS_BEING_DRAGGED Should correctly set a non-dragging unit being dragged",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: false\n};\nvar action = {\n    type: \"UPDATE_UNIT_IS_BEING_DRAGGED\",\n    isDragging: true\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9346925a-8440-4de7-a725-b0b741706d9f",
                "parentUUID": "c0283377-3c27-4cde-9fde-88b85b41af8b",
                "skipped": false
              },
              {
                "title": "Should correctly set a dragging unit to be not dragged",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_UNIT_IS_BEING_DRAGGED Should correctly set a dragging unit to be not dragged",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: true\n};\nvar action = {\n    type: \"UPDATE_UNIT_IS_BEING_DRAGGED\",\n    isDragging: false\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e3a552e5-a19f-41fc-b7c3-3fcdf5348355",
                "parentUUID": "c0283377-3c27-4cde-9fde-88b85b41af8b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: MOVING_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly begin moving a unit",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVING_UNIT Should correctly begin moving a unit",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0\n};\nvar action = {\n    type: \"MOVING_UNIT\",\n    unit: \"TEST-UNIT\",\n    unitIndex: 3,\n    tpIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TEST-UNIT\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 3\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7e5f418e-f333-4d51-a463-809c8f728f3e",
                "parentUUID": "09fec689-8990-43b7-8773-f7f7720e2bd6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "09fec689-8990-43b7-8773-f7f7720e2bd6",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly begin moving a unit",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVING_UNIT Should correctly begin moving a unit",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0\n};\nvar action = {\n    type: \"MOVING_UNIT\",\n    unit: \"TEST-UNIT\",\n    unitIndex: 3,\n    tpIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TEST-UNIT\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 3\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7e5f418e-f333-4d51-a463-809c8f728f3e",
                "parentUUID": "09fec689-8990-43b7-8773-f7f7720e2bd6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: MOVE_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly handle moving a unit to a teaching period earlier than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period earlier than it",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b7836cfd-d28d-43e3-b005-f41a4e472ecb",
                "parentUUID": "791d68c1-ddf0-4e5c-983f-22790f620701",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to a teaching period later than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period later than it",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "37360d3b-35eb-441c-be3f-2c13d5e26104",
                "parentUUID": "791d68c1-ddf0-4e5c-983f-22790f620701",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to the same teaching period but earlier position",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but earlier position",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "3532b199-7d1b-4765-bcd4-afb3de8b1437",
                "parentUUID": "791d68c1-ddf0-4e5c-983f-22790f620701",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to the same teaching period but later position",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but later position",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, \"PlaceToMoveTo\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5f8c0901-6b68-46c7-9031-2d7ba0906da2",
                "parentUUID": "791d68c1-ddf0-4e5c-983f-22790f620701",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to the same teaching period and exact same position",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period and exact same position",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7d0599a5-b2e4-444a-abbf-3c0a335b3443",
                "parentUUID": "791d68c1-ddf0-4e5c-983f-22790f620701",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "791d68c1-ddf0-4e5c-983f-22790f620701",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly handle moving a unit to a teaching period earlier than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period earlier than it",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b7836cfd-d28d-43e3-b005-f41a4e472ecb",
                "parentUUID": "791d68c1-ddf0-4e5c-983f-22790f620701",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to a teaching period later than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period later than it",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "37360d3b-35eb-441c-be3f-2c13d5e26104",
                "parentUUID": "791d68c1-ddf0-4e5c-983f-22790f620701",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to the same teaching period but earlier position",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but earlier position",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "3532b199-7d1b-4765-bcd4-afb3de8b1437",
                "parentUUID": "791d68c1-ddf0-4e5c-983f-22790f620701",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to the same teaching period but later position",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but later position",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, \"PlaceToMoveTo\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5f8c0901-6b68-46c7-9031-2d7ba0906da2",
                "parentUUID": "791d68c1-ddf0-4e5c-983f-22790f620701",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to the same teaching period and exact same position",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period and exact same position",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7d0599a5-b2e4-444a-abbf-3c0a335b3443",
                "parentUUID": "791d68c1-ddf0-4e5c-983f-22790f620701",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 4
          },
          {
            "title": "ACTION: CANCEL_MOVING_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "should cancel moving unit",
                "fullTitle": "REDUCER: CourseStructure ACTION: CANCEL_MOVING_UNIT should cancel moving unit",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: \"TestUnit2\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: undefined,\n    unitsIndexOfUnitToBeMoved: undefined\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ac8a912d-3505-4b81-b79b-5fe32e39544d",
                "parentUUID": "5890b358-44a5-4b03-9abe-867f782a0e4d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "5890b358-44a5-4b03-9abe-867f782a0e4d",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "should cancel moving unit",
                "fullTitle": "REDUCER: CourseStructure ACTION: CANCEL_MOVING_UNIT should cancel moving unit",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: \"TestUnit2\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: undefined,\n    unitsIndexOfUnitToBeMoved: undefined\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ac8a912d-3505-4b81-b79b-5fe32e39544d",
                "parentUUID": "5890b358-44a5-4b03-9abe-867f782a0e4d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: SWAP_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly handle swaping a unit to a teaching period earlier than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period earlier than it",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d41fc47b-02fc-4ffd-b6c9-781a2ba91ddc",
                "parentUUID": "1321d605-910e-4257-9d9b-4155ebaac5d8",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to a teaching period later than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period later than it",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b2910851-6a91-4e75-bbcb-22801feb7541",
                "parentUUID": "1321d605-910e-4257-9d9b-4155ebaac5d8",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to the same teaching period but earlier position",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but earlier position",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1c98d7e2-36a7-4229-94b3-fad7b17332f7",
                "parentUUID": "1321d605-910e-4257-9d9b-4155ebaac5d8",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to the same teaching period but later position",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but later position",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, \"PlaceToMoveTo\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", null, \"TestUnit\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "06d1f683-96c3-4450-ace6-45c74b63708f",
                "parentUUID": "1321d605-910e-4257-9d9b-4155ebaac5d8",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to the same teaching period and exact same position",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period and exact same position",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "2716593b-c19c-46b2-ba61-292413294512",
                "parentUUID": "1321d605-910e-4257-9d9b-4155ebaac5d8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "1321d605-910e-4257-9d9b-4155ebaac5d8",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly handle swaping a unit to a teaching period earlier than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period earlier than it",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d41fc47b-02fc-4ffd-b6c9-781a2ba91ddc",
                "parentUUID": "1321d605-910e-4257-9d9b-4155ebaac5d8",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to a teaching period later than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period later than it",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b2910851-6a91-4e75-bbcb-22801feb7541",
                "parentUUID": "1321d605-910e-4257-9d9b-4155ebaac5d8",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to the same teaching period but earlier position",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but earlier position",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1c98d7e2-36a7-4229-94b3-fad7b17332f7",
                "parentUUID": "1321d605-910e-4257-9d9b-4155ebaac5d8",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to the same teaching period but later position",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but later position",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, \"PlaceToMoveTo\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", null, \"TestUnit\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "06d1f683-96c3-4450-ace6-45c74b63708f",
                "parentUUID": "1321d605-910e-4257-9d9b-4155ebaac5d8",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to the same teaching period and exact same position",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period and exact same position",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "2716593b-c19c-46b2-ba61-292413294512",
                "parentUUID": "1321d605-910e-4257-9d9b-4155ebaac5d8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 5
          },
          {
            "title": "ACTION: VALIDATE_COURSE",
            "suites": [
              {
                "title": "duplicates:",
                "suites": [],
                "tests": [
                  {
                    "title": "Should not give duplicate unit errors if the first attempt is in the past, and the second attempt is not two or more years into the future.",
                    "fullTitle": "ACTION: VALIDATE_COURSE duplicates: Should not give duplicate unit errors if the first attempt is in the past, and the second attempt is not two or more years into the future.",
                    "timedOut": false,
                    "duration": 6,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: new Date().getFullYear() - 1,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, null]\n    }, {\n        code: \"S1-01\",\n        year: new Date().getFullYear() + 1,\n        units: [null, null, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "93a77f92-be99-4550-b1f6-6fe35d38314f",
                    "parentUUID": "8ccebe59-2eff-4246-b75a-67e80b31baa0",
                    "skipped": false
                  },
                  {
                    "title": "Should give a duplicate unit error if there are two same units in the same teaching period",
                    "fullTitle": "ACTION: VALIDATE_COURSE duplicates: Should give a duplicate unit error if there are two same units in the same teaching period",
                    "timedOut": false,
                    "duration": 4,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2015,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }, {\n        code: \"S2-01\",\n        year: 2015,\n        units: [null, null, null, {\n            unitCode: \"GJQ2039\"\n        }]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2015,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }, {\n        code: \"S2-01\",\n        year: 2015,\n        units: [null, null, null, {\n            unitCode: \"GJQ2039\"\n        }]\n    }],\n    courseErrors: [{\n        message: \"ABCD1234 already exists in the same teaching period. Please remove this unit.\",\n        coordinates: [[0, 3]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "754e15bc-0738-4c8b-a979-2c4b51e2a7c0",
                    "parentUUID": "8ccebe59-2eff-4246-b75a-67e80b31baa0",
                    "skipped": false
                  },
                  {
                    "title": "Should give a duplicate error if a duplicate unit is placed in a teaching period two years from now",
                    "fullTitle": "ACTION: VALIDATE_COURSE duplicates: Should give a duplicate error if a duplicate unit is placed in a teaching period two years from now",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var currentYear = new Date().getFullYear();\nvar stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: currentYear,\n        units: [{\n            unitCode: \"ABC1234\"\n        }, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 2,\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 2,\n        units: [null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: currentYear,\n        units: [{\n            unitCode: \"ABC1234\"\n        }, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 2,\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 2,\n        units: [null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan. Please plan as if you will pass all units.\",\n        coordinates: [[4, 1]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "679174ad-2cf7-4ac9-aeb4-862728c669fe",
                    "parentUUID": "8ccebe59-2eff-4246-b75a-67e80b31baa0",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/reducers/CourseStructure.spec.js",
                "uuid": "8ccebe59-2eff-4246-b75a-67e80b31baa0",
                "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
                "passes": [
                  {
                    "title": "Should not give duplicate unit errors if the first attempt is in the past, and the second attempt is not two or more years into the future.",
                    "fullTitle": "ACTION: VALIDATE_COURSE duplicates: Should not give duplicate unit errors if the first attempt is in the past, and the second attempt is not two or more years into the future.",
                    "timedOut": false,
                    "duration": 6,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: new Date().getFullYear() - 1,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, null]\n    }, {\n        code: \"S1-01\",\n        year: new Date().getFullYear() + 1,\n        units: [null, null, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "93a77f92-be99-4550-b1f6-6fe35d38314f",
                    "parentUUID": "8ccebe59-2eff-4246-b75a-67e80b31baa0",
                    "skipped": false
                  },
                  {
                    "title": "Should give a duplicate unit error if there are two same units in the same teaching period",
                    "fullTitle": "ACTION: VALIDATE_COURSE duplicates: Should give a duplicate unit error if there are two same units in the same teaching period",
                    "timedOut": false,
                    "duration": 4,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2015,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }, {\n        code: \"S2-01\",\n        year: 2015,\n        units: [null, null, null, {\n            unitCode: \"GJQ2039\"\n        }]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2015,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }, {\n        code: \"S2-01\",\n        year: 2015,\n        units: [null, null, null, {\n            unitCode: \"GJQ2039\"\n        }]\n    }],\n    courseErrors: [{\n        message: \"ABCD1234 already exists in the same teaching period. Please remove this unit.\",\n        coordinates: [[0, 3]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "754e15bc-0738-4c8b-a979-2c4b51e2a7c0",
                    "parentUUID": "8ccebe59-2eff-4246-b75a-67e80b31baa0",
                    "skipped": false
                  },
                  {
                    "title": "Should give a duplicate error if a duplicate unit is placed in a teaching period two years from now",
                    "fullTitle": "ACTION: VALIDATE_COURSE duplicates: Should give a duplicate error if a duplicate unit is placed in a teaching period two years from now",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var currentYear = new Date().getFullYear();\nvar stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: currentYear,\n        units: [{\n            unitCode: \"ABC1234\"\n        }, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 2,\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 2,\n        units: [null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: currentYear,\n        units: [{\n            unitCode: \"ABC1234\"\n        }, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 2,\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 2,\n        units: [null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan. Please plan as if you will pass all units.\",\n        coordinates: [[4, 1]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "679174ad-2cf7-4ac9-aeb4-862728c669fe",
                    "parentUUID": "8ccebe59-2eff-4246-b75a-67e80b31baa0",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 11
              },
              {
                "title": "offerings:",
                "suites": [],
                "tests": [
                  {
                    "title": "Should give a course error for a unit not being offered in the teaching period it is in",
                    "fullTitle": "ACTION: VALIDATE_COURSE offerings: Should give a course error for a unit not being offered in the teaching period it is in",
                    "timedOut": false,
                    "duration": 5,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2019,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: 2019,\n        units: [null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"First semester 2019 (Day)\"]\n            }]\n        }, null]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2019,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: 2019,\n        units: [null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"First semester 2019 (Day)\"]\n            }]\n        }, null]\n    }],\n    courseErrors: [{\n        message: \"ABC1234 is not offered in second semester, 2019.\",\n        coordinates: [[1, 2]]\n    }],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4122dde7-e383-4b03-9b0e-d74559512fe9",
                    "parentUUID": "c492b82a-b882-4f64-8c21-db694b7ba9df",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/reducers/CourseStructure.spec.js",
                "uuid": "c492b82a-b882-4f64-8c21-db694b7ba9df",
                "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
                "passes": [
                  {
                    "title": "Should give a course error for a unit not being offered in the teaching period it is in",
                    "fullTitle": "ACTION: VALIDATE_COURSE offerings: Should give a course error for a unit not being offered in the teaching period it is in",
                    "timedOut": false,
                    "duration": 5,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2019,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: 2019,\n        units: [null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"First semester 2019 (Day)\"]\n            }]\n        }, null]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2019,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: 2019,\n        units: [null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"First semester 2019 (Day)\"]\n            }]\n        }, null]\n    }],\n    courseErrors: [{\n        message: \"ABC1234 is not offered in second semester, 2019.\",\n        coordinates: [[1, 2]]\n    }],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4122dde7-e383-4b03-9b0e-d74559512fe9",
                    "parentUUID": "c492b82a-b882-4f64-8c21-db694b7ba9df",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 5
              },
              {
                "title": "rules:",
                "suites": [],
                "tests": [
                  {
                    "title": "Should give a course error for a missing prereq",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should give a course error for a missing prereq",
                    "timedOut": false,
                    "duration": 7,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"Must have passed an (I/W) unit in {DEF2345, QLS2029}\",\n                endDate: \"\"\n            }]\n        }]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"Must have passed an (I/W) unit in {DEF2345, QLS2029}\",\n                endDate: \"\"\n            }]\n        }]\n    }],\n    courseErrors: [{\n        message: \"You must complete DEF2345 or QLS2029 before you can do ABC1234.\",\n        coordinates: [[0, 3]]\n    }],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0c92e007-faa7-4e22-a927-d5a055c0b682",
                    "parentUUID": "b4d5f52d-fb99-4dde-a7c6-6ed2dcd2a687",
                    "skipped": false
                  },
                  {
                    "title": "Should give an error for credit points being lower than the minimum required for the unit",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should give an error for credit points being lower than the minimum required for the unit",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2016,\n        code: \"S2-01\",\n        units: [{\n            unitCode: \"TEST1011\",\n            creditPoints: 6\n        }, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"TEST3031\",\n            creditPoints: 6,\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"Must have passed 24 credit points\"\n            }]\n        }, null, null, null]\n    }, {\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2016,\n        code: \"S2-01\",\n        units: [{\n            unitCode: \"TEST1011\",\n            creditPoints: 6\n        }, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"TEST3031\",\n            creditPoints: 6,\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"Must have passed 24 credit points\"\n            }]\n        }, null, null, null]\n    }, {\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"You need 18 more credit points before doing TEST3031.\",\n        coordinates: [[2, 1]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8315f61d-d685-4b23-bfc2-3da576c2fc9c",
                    "parentUUID": "b4d5f52d-fb99-4dde-a7c6-6ed2dcd2a687",
                    "skipped": false
                  },
                  {
                    "title": "Should correctly handle prohibitions",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should correctly handle prohibitions",
                    "timedOut": false,
                    "duration": 4,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2013,\n        code: \"S1-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\"\n        }]\n    }, {\n        year: 2013,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"BCD1234\",\n            rules: [{\n                ruleSummary: \"INCOMP\",\n                ruleString: \"Incompatible with achievement in {ABC1234}\"\n            }]\n        }, null, null]\n    }],\n    courseErrors: [{\n        message: \"Please remove BCD1234, as completing ABC1234 prohibits you from doing this unit.\",\n        coordinates: [[1, 1]]\n    }]\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "dafdf325-7c6b-4151-8699-41761122edf2",
                    "parentUUID": "b4d5f52d-fb99-4dde-a7c6-6ed2dcd2a687",
                    "skipped": false
                  },
                  {
                    "title": "Should correctly handle the Do branch of For COURSE_CODE syntax",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should correctly handle the Do branch of For COURSE_CODE syntax",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2014,\n        code: \"S1-01\",\n        units: [{\n            unitCode: \"DEF2345\",\n            unitName: \"Test unit\",\n            rules: [{\n                ruleSummary: \"COREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {S2029, S3019} Do Any passed co-req (I/W) unit in {ABC2022} Otherwise true\",\n                endDate: \"\"\n            }]\n        }, null, null, null]\n    }],\n    courseInfo: {\n        courseCode: \"S2029\"\n    },\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2014,\n        code: \"S1-01\",\n        units: [{\n            unitCode: \"DEF2345\",\n            unitName: \"Test unit\",\n            rules: [{\n                ruleSummary: \"COREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {S2029, S3019} Do Any passed co-req (I/W) unit in {ABC2022} Otherwise true\",\n                endDate: \"\"\n            }]\n        }, null, null, null]\n    }],\n    courseInfo: {\n        courseCode: \"S2029\"\n    },\n    courseErrors: [{\n        message: \"You must complete ABC2022 before or whilst doing DEF2345.\",\n        coordinates: [[0, 0]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "067ab77e-79c9-4488-9d88-f6cd88420f27",
                    "parentUUID": "b4d5f52d-fb99-4dde-a7c6-6ed2dcd2a687",
                    "skipped": false
                  },
                  {
                    "title": "Should correctly handle the Otherwise branch of For COURSE_CODE syntax",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should correctly handle the Otherwise branch of For COURSE_CODE syntax",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }, {\n        year: 2018,\n        code: \"WS-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"Winter semester 2018 (Day)\"]\n            }],\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {Q2001, Q2003} Do true Otherwise Must have passed 1 (I/W) units in {TEST1001}\",\n                endDate: \"\"\n            }]\n        }]\n    }, {\n        year: 2018,\n        code: \"S2-01\",\n        units: [null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }, {\n        year: 2018,\n        code: \"WS-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"Winter semester 2018 (Day)\"]\n            }],\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {Q2001, Q2003} Do true Otherwise Must have passed 1 (I/W) units in {TEST1001}\",\n                endDate: \"\"\n            }]\n        }]\n    }, {\n        year: 2018,\n        code: \"S2-01\",\n        units: [null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"You must complete TEST1001 before you can do ABC1234.\",\n        coordinates: [[1, 3]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "459c3e08-dcc5-4e57-8a97-9824f4bc760c",
                    "parentUUID": "b4d5f52d-fb99-4dde-a7c6-6ed2dcd2a687",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/reducers/CourseStructure.spec.js",
                "uuid": "b4d5f52d-fb99-4dde-a7c6-6ed2dcd2a687",
                "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
                "passes": [
                  {
                    "title": "Should give a course error for a missing prereq",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should give a course error for a missing prereq",
                    "timedOut": false,
                    "duration": 7,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"Must have passed an (I/W) unit in {DEF2345, QLS2029}\",\n                endDate: \"\"\n            }]\n        }]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"Must have passed an (I/W) unit in {DEF2345, QLS2029}\",\n                endDate: \"\"\n            }]\n        }]\n    }],\n    courseErrors: [{\n        message: \"You must complete DEF2345 or QLS2029 before you can do ABC1234.\",\n        coordinates: [[0, 3]]\n    }],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0c92e007-faa7-4e22-a927-d5a055c0b682",
                    "parentUUID": "b4d5f52d-fb99-4dde-a7c6-6ed2dcd2a687",
                    "skipped": false
                  },
                  {
                    "title": "Should give an error for credit points being lower than the minimum required for the unit",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should give an error for credit points being lower than the minimum required for the unit",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2016,\n        code: \"S2-01\",\n        units: [{\n            unitCode: \"TEST1011\",\n            creditPoints: 6\n        }, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"TEST3031\",\n            creditPoints: 6,\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"Must have passed 24 credit points\"\n            }]\n        }, null, null, null]\n    }, {\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2016,\n        code: \"S2-01\",\n        units: [{\n            unitCode: \"TEST1011\",\n            creditPoints: 6\n        }, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"TEST3031\",\n            creditPoints: 6,\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"Must have passed 24 credit points\"\n            }]\n        }, null, null, null]\n    }, {\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"You need 18 more credit points before doing TEST3031.\",\n        coordinates: [[2, 1]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8315f61d-d685-4b23-bfc2-3da576c2fc9c",
                    "parentUUID": "b4d5f52d-fb99-4dde-a7c6-6ed2dcd2a687",
                    "skipped": false
                  },
                  {
                    "title": "Should correctly handle prohibitions",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should correctly handle prohibitions",
                    "timedOut": false,
                    "duration": 4,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2013,\n        code: \"S1-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\"\n        }]\n    }, {\n        year: 2013,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"BCD1234\",\n            rules: [{\n                ruleSummary: \"INCOMP\",\n                ruleString: \"Incompatible with achievement in {ABC1234}\"\n            }]\n        }, null, null]\n    }],\n    courseErrors: [{\n        message: \"Please remove BCD1234, as completing ABC1234 prohibits you from doing this unit.\",\n        coordinates: [[1, 1]]\n    }]\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "dafdf325-7c6b-4151-8699-41761122edf2",
                    "parentUUID": "b4d5f52d-fb99-4dde-a7c6-6ed2dcd2a687",
                    "skipped": false
                  },
                  {
                    "title": "Should correctly handle the Do branch of For COURSE_CODE syntax",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should correctly handle the Do branch of For COURSE_CODE syntax",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2014,\n        code: \"S1-01\",\n        units: [{\n            unitCode: \"DEF2345\",\n            unitName: \"Test unit\",\n            rules: [{\n                ruleSummary: \"COREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {S2029, S3019} Do Any passed co-req (I/W) unit in {ABC2022} Otherwise true\",\n                endDate: \"\"\n            }]\n        }, null, null, null]\n    }],\n    courseInfo: {\n        courseCode: \"S2029\"\n    },\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2014,\n        code: \"S1-01\",\n        units: [{\n            unitCode: \"DEF2345\",\n            unitName: \"Test unit\",\n            rules: [{\n                ruleSummary: \"COREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {S2029, S3019} Do Any passed co-req (I/W) unit in {ABC2022} Otherwise true\",\n                endDate: \"\"\n            }]\n        }, null, null, null]\n    }],\n    courseInfo: {\n        courseCode: \"S2029\"\n    },\n    courseErrors: [{\n        message: \"You must complete ABC2022 before or whilst doing DEF2345.\",\n        coordinates: [[0, 0]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "067ab77e-79c9-4488-9d88-f6cd88420f27",
                    "parentUUID": "b4d5f52d-fb99-4dde-a7c6-6ed2dcd2a687",
                    "skipped": false
                  },
                  {
                    "title": "Should correctly handle the Otherwise branch of For COURSE_CODE syntax",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should correctly handle the Otherwise branch of For COURSE_CODE syntax",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }, {\n        year: 2018,\n        code: \"WS-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"Winter semester 2018 (Day)\"]\n            }],\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {Q2001, Q2003} Do true Otherwise Must have passed 1 (I/W) units in {TEST1001}\",\n                endDate: \"\"\n            }]\n        }]\n    }, {\n        year: 2018,\n        code: \"S2-01\",\n        units: [null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }, {\n        year: 2018,\n        code: \"WS-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"Winter semester 2018 (Day)\"]\n            }],\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {Q2001, Q2003} Do true Otherwise Must have passed 1 (I/W) units in {TEST1001}\",\n                endDate: \"\"\n            }]\n        }]\n    }, {\n        year: 2018,\n        code: \"S2-01\",\n        units: [null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"You must complete TEST1001 before you can do ABC1234.\",\n        coordinates: [[1, 3]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "459c3e08-dcc5-4e57-8a97-9824f4bc760c",
                    "parentUUID": "b4d5f52d-fb99-4dde-a7c6-6ed2dcd2a687",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 5,
                "totalPasses": 5,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 19
              }
            ],
            "tests": [
              {
                "title": "should give no errors for an empty course plan.",
                "fullTitle": "REDUCER: CourseStructure ACTION: VALIDATE_COURSE should give no errors for an empty course plan.",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan.\"\n    }],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    courseErrors: [],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "86070f4b-6171-4731-a2e1-45cc4f704be7",
                "parentUUID": "8c1d8207-6141-4e34-8d04-49085d463d88",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "8c1d8207-6141-4e34-8d04-49085d463d88",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "should give no errors for an empty course plan.",
                "fullTitle": "REDUCER: CourseStructure ACTION: VALIDATE_COURSE should give no errors for an empty course plan.",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan.\"\n    }],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    courseErrors: [],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "86070f4b-6171-4731-a2e1-45cc4f704be7",
                "parentUUID": "8c1d8207-6141-4e34-8d04-49085d463d88",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": true,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS",
            "suites": [],
            "tests": [
              {
                "title": "Should leave invalidUnitSlotCoordinates empty if there are no invalid unit slots",
                "fullTitle": "REDUCER: CourseStructure ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS Should leave invalidUnitSlotCoordinates empty if there are no invalid unit slots",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2015,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: false\n};\nvar action = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: {\n        unitCode: \"TEST1001\",\n        unitName: \"Test unit\",\n        locationAndTime: [{\n            location: \"Caulfield\",\n            time: [\"First semester 2017 (Day)\"]\n        }]\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2015,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b1f8ac98-a4d2-401d-83db-6acbc9200b43",
                "parentUUID": "c3c44761-0461-4583-afb7-db2f81e5aabd",
                "skipped": false
              },
              {
                "title": "Should highlight teaching periods that contains the same unit",
                "fullTitle": "REDUCER: CourseStructure ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS Should highlight teaching periods that contains the same unit",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var currentYear = new Date().getFullYear();\nvar stateBefore = {\n    teachingPeriods: [{\n        year: currentYear - 2,\n        code: \"FY-01\",\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        year: currentYear - 1,\n        code: \"FY-01\",\n        units: [null, null, {\n            unitCode: \"DEF2345\"\n        }, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: false\n};\nvar action = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: {\n        unitCode: \"ABC1234\",\n        locationAndTime: [{\n            location: \"Parkville\",\n            time: [\"Full year 2018 (Day)\"]\n        }]\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: currentYear - 2,\n        code: \"FY-01\",\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        year: currentYear - 1,\n        code: \"FY-01\",\n        units: [null, null, {\n            unitCode: \"DEF2345\"\n        }, null]\n    }],\n    invalidUnitSlotCoordinates: [[0, null]],\n    highlightingInvalidUnitSlots: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0cf4ea2c-004f-4bf8-ae30-85239bfb0718",
                "parentUUID": "c3c44761-0461-4583-afb7-db2f81e5aabd",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "c3c44761-0461-4583-afb7-db2f81e5aabd",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should leave invalidUnitSlotCoordinates empty if there are no invalid unit slots",
                "fullTitle": "REDUCER: CourseStructure ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS Should leave invalidUnitSlotCoordinates empty if there are no invalid unit slots",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2015,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: false\n};\nvar action = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: {\n        unitCode: \"TEST1001\",\n        unitName: \"Test unit\",\n        locationAndTime: [{\n            location: \"Caulfield\",\n            time: [\"First semester 2017 (Day)\"]\n        }]\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2015,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b1f8ac98-a4d2-401d-83db-6acbc9200b43",
                "parentUUID": "c3c44761-0461-4583-afb7-db2f81e5aabd",
                "skipped": false
              },
              {
                "title": "Should highlight teaching periods that contains the same unit",
                "fullTitle": "REDUCER: CourseStructure ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS Should highlight teaching periods that contains the same unit",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var currentYear = new Date().getFullYear();\nvar stateBefore = {\n    teachingPeriods: [{\n        year: currentYear - 2,\n        code: \"FY-01\",\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        year: currentYear - 1,\n        code: \"FY-01\",\n        units: [null, null, {\n            unitCode: \"DEF2345\"\n        }, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: false\n};\nvar action = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: {\n        unitCode: \"ABC1234\",\n        locationAndTime: [{\n            location: \"Parkville\",\n            time: [\"Full year 2018 (Day)\"]\n        }]\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: currentYear - 2,\n        code: \"FY-01\",\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        year: currentYear - 1,\n        code: \"FY-01\",\n        units: [null, null, {\n            unitCode: \"DEF2345\"\n        }, null]\n    }],\n    invalidUnitSlotCoordinates: [[0, null]],\n    highlightingInvalidUnitSlots: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0cf4ea2c-004f-4bf8-ae30-85239bfb0718",
                "parentUUID": "c3c44761-0461-4583-afb7-db2f81e5aabd",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 4
          },
          {
            "title": "DEFAULT",
            "suites": [],
            "tests": [
              {
                "title": "should not change the state if it receives an unknown action",
                "fullTitle": "REDUCER: CourseStructure DEFAULT should not change the state if it receives an unknown action",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "ef2ba97d-77cd-43cd-a163-eb0f24143654",
                "parentUUID": "35654f51-72a7-4ca7-8801-4b1a5d1a68c7",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "35654f51-72a7-4ca7-8801-4b1a5d1a68c7",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "should not change the state if it receives an unknown action",
                "fullTitle": "REDUCER: CourseStructure DEFAULT should not change the state if it receives an unknown action",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "ef2ba97d-77cd-43cd-a163-eb0f24143654",
                "parentUUID": "35654f51-72a7-4ca7-8801-4b1a5d1a68c7",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/reducers/CourseStructure.spec.js",
        "uuid": "a895068b-3a49-4079-a875-de797f17bb97",
        "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "REDUCER: Notifications",
        "suites": [
          {
            "title": "ACTION: ADD_NOTIFICATION",
            "suites": [],
            "tests": [
              {
                "title": "should insert a notification from an empty list",
                "fullTitle": "REDUCER: Notifications ACTION: ADD_NOTIFICATION should insert a notification from an empty list",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: []\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "73722c88-1c60-4533-80c0-89e219c32629",
                "parentUUID": "25eb95ab-6734-4adf-9747-4a6972e9541b",
                "skipped": false
              },
              {
                "title": "should prepend a notification into an list of a few existing notifications.",
                "fullTitle": "REDUCER: Notifications ACTION: ADD_NOTIFICATION should prepend a notification into an list of a few existing notifications.",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "390cefa7-a395-4714-b53d-4b229387d91a",
                "parentUUID": "25eb95ab-6734-4adf-9747-4a6972e9541b",
                "skipped": false
              },
              {
                "title": "should replace a notification if it already exists with a specified ID",
                "fullTitle": "REDUCER: Notifications ACTION: ADD_NOTIFICATION should replace a notification if it already exists with a specified ID",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    message: \"New message goes over here\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"New message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5c35f8e3-8c50-47a5-bf60-c1f284efbf34",
                "parentUUID": "25eb95ab-6734-4adf-9747-4a6972e9541b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Notifications.spec.js",
            "uuid": "25eb95ab-6734-4adf-9747-4a6972e9541b",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Notifications.spec.js",
            "passes": [
              {
                "title": "should insert a notification from an empty list",
                "fullTitle": "REDUCER: Notifications ACTION: ADD_NOTIFICATION should insert a notification from an empty list",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: []\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "73722c88-1c60-4533-80c0-89e219c32629",
                "parentUUID": "25eb95ab-6734-4adf-9747-4a6972e9541b",
                "skipped": false
              },
              {
                "title": "should prepend a notification into an list of a few existing notifications.",
                "fullTitle": "REDUCER: Notifications ACTION: ADD_NOTIFICATION should prepend a notification into an list of a few existing notifications.",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "390cefa7-a395-4714-b53d-4b229387d91a",
                "parentUUID": "25eb95ab-6734-4adf-9747-4a6972e9541b",
                "skipped": false
              },
              {
                "title": "should replace a notification if it already exists with a specified ID",
                "fullTitle": "REDUCER: Notifications ACTION: ADD_NOTIFICATION should replace a notification if it already exists with a specified ID",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    message: \"New message goes over here\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"New message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5c35f8e3-8c50-47a5-bf60-c1f284efbf34",
                "parentUUID": "25eb95ab-6734-4adf-9747-4a6972e9541b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 5
          },
          {
            "title": "ACTION: REMOVE_NOTIFICATION",
            "suites": [],
            "tests": [
              {
                "title": "Should remove a notification given its ID",
                "fullTitle": "REDUCER: Notifications ACTION: REMOVE_NOTIFICATION Should remove a notification given its ID",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    id: \"CONNECTION_LOST\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "730bb50e-7f34-471c-bf74-a87436e72a9d",
                "parentUUID": "5bb1a8e7-2d22-4a8d-9a30-70f83c454a31",
                "skipped": false
              },
              {
                "title": "Should remove a notification given its index",
                "fullTitle": "REDUCER: Notifications ACTION: REMOVE_NOTIFICATION Should remove a notification given its index",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    index: 1\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "584f708c-61f6-4efc-8933-fe82758aff6d",
                "parentUUID": "5bb1a8e7-2d22-4a8d-9a30-70f83c454a31",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Notifications.spec.js",
            "uuid": "5bb1a8e7-2d22-4a8d-9a30-70f83c454a31",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Notifications.spec.js",
            "passes": [
              {
                "title": "Should remove a notification given its ID",
                "fullTitle": "REDUCER: Notifications ACTION: REMOVE_NOTIFICATION Should remove a notification given its ID",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    id: \"CONNECTION_LOST\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "730bb50e-7f34-471c-bf74-a87436e72a9d",
                "parentUUID": "5bb1a8e7-2d22-4a8d-9a30-70f83c454a31",
                "skipped": false
              },
              {
                "title": "Should remove a notification given its index",
                "fullTitle": "REDUCER: Notifications ACTION: REMOVE_NOTIFICATION Should remove a notification given its index",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    index: 1\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "584f708c-61f6-4efc-8933-fe82758aff6d",
                "parentUUID": "5bb1a8e7-2d22-4a8d-9a30-70f83c454a31",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "DEFAULT",
            "suites": [],
            "tests": [
              {
                "title": "Should not change state if it does not recognise an action",
                "fullTitle": "REDUCER: Notifications DEFAULT Should not change state if it does not recognise an action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Notifications2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "7e70a66e-2cbd-4951-be4c-43fd523c9d38",
                "parentUUID": "710da2f7-51f2-4d6f-95e4-bdda3e250e4a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Notifications.spec.js",
            "uuid": "710da2f7-51f2-4d6f-95e4-bdda3e250e4a",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Notifications.spec.js",
            "passes": [
              {
                "title": "Should not change state if it does not recognise an action",
                "fullTitle": "REDUCER: Notifications DEFAULT Should not change state if it does not recognise an action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Notifications2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "7e70a66e-2cbd-4951-be4c-43fd523c9d38",
                "parentUUID": "710da2f7-51f2-4d6f-95e4-bdda3e250e4a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/reducers/Notifications.spec.js",
        "uuid": "50f30b03-3d64-4e31-9b48-e30d335ee7d2",
        "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Notifications.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "REDUCER: UI",
        "suites": [
          {
            "title": "ACTION: SHOW_INSERT_TEACHING_PERIOD_UI",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly toggle the insert teaching period UI boolean",
                "fullTitle": "REDUCER: UI ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: true,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "914fa635-a15d-48a8-b0ac-28a9b1c73af1",
                "parentUUID": "0e35d75b-1717-4b6d-b779-4b9d7666861a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "0e35d75b-1717-4b6d-b779-4b9d7666861a",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly toggle the insert teaching period UI boolean",
                "fullTitle": "REDUCER: UI ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: true,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "914fa635-a15d-48a8-b0ac-28a9b1c73af1",
                "parentUUID": "0e35d75b-1717-4b6d-b779-4b9d7666861a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: HIDE_INSERT_TEACHING_PERIOD_UI",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly toggle the insert teaching period UI boolean",
                "fullTitle": "REDUCER: UI ACTION: HIDE_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: true,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1f19d78f-6549-4c85-851f-2bccff31418f",
                "parentUUID": "9b1e13d3-d1e5-4820-b988-81e9d150ec3e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "9b1e13d3-d1e5-4820-b988-81e9d150ec3e",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly toggle the insert teaching period UI boolean",
                "fullTitle": "REDUCER: UI ACTION: HIDE_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: true,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1f19d78f-6549-4c85-851f-2bccff31418f",
                "parentUUID": "9b1e13d3-d1e5-4820-b988-81e9d150ec3e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: ADDING_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set the add unit UI boolean to true and correctly hide the sidebar when a unit is being added",
                "fullTitle": "REDUCER: UI ACTION: ADDING_UNIT Should correctly set the add unit UI boolean to true and correctly hide the sidebar when a unit is being added",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "42396632-ff4f-4c66-8f25-e87018cbca99",
                "parentUUID": "0b1a7415-b4a5-4333-ba1d-9d24df345186",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "0b1a7415-b4a5-4333-ba1d-9d24df345186",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly set the add unit UI boolean to true and correctly hide the sidebar when a unit is being added",
                "fullTitle": "REDUCER: UI ACTION: ADDING_UNIT Should correctly set the add unit UI boolean to true and correctly hide the sidebar when a unit is being added",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "42396632-ff4f-4c66-8f25-e87018cbca99",
                "parentUUID": "0b1a7415-b4a5-4333-ba1d-9d24df345186",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: ADD_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set the add unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: ADD_UNIT Should correctly set the add unit UI boolean to false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true\n};\nvar action = {\n    type: \"ADD_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "2a99ec8e-6ed2-4ff9-b315-93d01e215b05",
                "parentUUID": "59dca32b-dd1a-4aa3-8ee8-b37f815ba12c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "59dca32b-dd1a-4aa3-8ee8-b37f815ba12c",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly set the add unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: ADD_UNIT Should correctly set the add unit UI boolean to false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true\n};\nvar action = {\n    type: \"ADD_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "2a99ec8e-6ed2-4ff9-b315-93d01e215b05",
                "parentUUID": "59dca32b-dd1a-4aa3-8ee8-b37f815ba12c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: CANCEL_ADDING_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set the add unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: CANCEL_ADDING_UNIT Should correctly set the add unit UI boolean to false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true\n};\nvar action = {\n    type: \"CANCEL_ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b6da6680-93b8-40ca-b7ea-ab9a31aece1d",
                "parentUUID": "5015c84c-a961-4f4e-8637-78928ed1de27",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "5015c84c-a961-4f4e-8637-78928ed1de27",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly set the add unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: CANCEL_ADDING_UNIT Should correctly set the add unit UI boolean to false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true\n};\nvar action = {\n    type: \"CANCEL_ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b6da6680-93b8-40ca-b7ea-ab9a31aece1d",
                "parentUUID": "5015c84c-a961-4f4e-8637-78928ed1de27",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: MOVING_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set the move unit UI boolean to true",
                "fullTitle": "REDUCER: UI ACTION: MOVING_UNIT Should correctly set the move unit UI boolean to true",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"MOVING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "cd6b1299-7b39-42de-a263-dcd73dff0b22",
                "parentUUID": "b16b004b-8c09-40fa-a0a5-349a90d5bbce",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "b16b004b-8c09-40fa-a0a5-349a90d5bbce",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly set the move unit UI boolean to true",
                "fullTitle": "REDUCER: UI ACTION: MOVING_UNIT Should correctly set the move unit UI boolean to true",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"MOVING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "cd6b1299-7b39-42de-a263-dcd73dff0b22",
                "parentUUID": "b16b004b-8c09-40fa-a0a5-349a90d5bbce",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: MOVE_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set the move unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: MOVE_UNIT Should correctly set the move unit UI boolean to false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"MOVE_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "472bbcfe-1b06-4585-abfd-75d3350ff4cb",
                "parentUUID": "23aed74a-f076-4ba8-9a7e-289431493a68",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "23aed74a-f076-4ba8-9a7e-289431493a68",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly set the move unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: MOVE_UNIT Should correctly set the move unit UI boolean to false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"MOVE_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "472bbcfe-1b06-4585-abfd-75d3350ff4cb",
                "parentUUID": "23aed74a-f076-4ba8-9a7e-289431493a68",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: SWAP_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set the move unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: SWAP_UNIT Should correctly set the move unit UI boolean to false",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"SWAP_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c8625db8-05af-4804-b69b-6a5d6bae2813",
                "parentUUID": "28c8b1e0-cf44-4558-ad96-b5f608ec2d3d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "28c8b1e0-cf44-4558-ad96-b5f608ec2d3d",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly set the move unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: SWAP_UNIT Should correctly set the move unit UI boolean to false",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"SWAP_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c8625db8-05af-4804-b69b-6a5d6bae2813",
                "parentUUID": "28c8b1e0-cf44-4558-ad96-b5f608ec2d3d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: CANCEL_MOVING_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set the move unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: CANCEL_MOVING_UNIT Should correctly set the move unit UI boolean to false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "31bbaac0-cab3-4941-835e-793ee2e3008c",
                "parentUUID": "626129b8-3623-465a-9ee3-a1dd6ad6de1e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "626129b8-3623-465a-9ee3-a1dd6ad6de1e",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly set the move unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: CANCEL_MOVING_UNIT Should correctly set the move unit UI boolean to false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "31bbaac0-cab3-4941-835e-793ee2e3008c",
                "parentUUID": "626129b8-3623-465a-9ee3-a1dd6ad6de1e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: SET_COURSE_READ_ONLY",
            "suites": [],
            "tests": [
              {
                "title": "Should set the course to read only correctly",
                "fullTitle": "REDUCER: UI ACTION: SET_COURSE_READ_ONLY Should set the course to read only correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: false\n};\nvar action = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "bb602cff-4556-4fe6-9f15-69d0773594f0",
                "parentUUID": "18ed6e41-9e12-4a5d-9bad-30c60728b988",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "18ed6e41-9e12-4a5d-9bad-30c60728b988",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should set the course to read only correctly",
                "fullTitle": "REDUCER: UI ACTION: SET_COURSE_READ_ONLY Should set the course to read only correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: false\n};\nvar action = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "bb602cff-4556-4fe6-9f15-69d0773594f0",
                "parentUUID": "18ed6e41-9e12-4a5d-9bad-30c60728b988",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: SET_COURSE_READ_AND_WRITE",
            "suites": [],
            "tests": [
              {
                "title": "Should set the course to allow edits correctly",
                "fullTitle": "REDUCER: UI ACTION: SET_COURSE_READ_AND_WRITE Should set the course to allow edits correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: true\n};\nvar action = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d694ac55-9fa7-4bf5-8f25-8f15a835fac2",
                "parentUUID": "76b7b747-d634-4505-aa7b-0edab3484c53",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "76b7b747-d634-4505-aa7b-0edab3484c53",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should set the course to allow edits correctly",
                "fullTitle": "REDUCER: UI ACTION: SET_COURSE_READ_AND_WRITE Should set the course to allow edits correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: true\n};\nvar action = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d694ac55-9fa7-4bf5-8f25-8f15a835fac2",
                "parentUUID": "76b7b747-d634-4505-aa7b-0edab3484c53",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly toggle the confirm delete teaching period modal UI to show",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to show",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "806c11b7-396e-48c7-8c7e-082e463ad5f1",
                "parentUUID": "136b5697-6c18-40de-bd33-554be9bfd31e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "136b5697-6c18-40de-bd33-554be9bfd31e",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly toggle the confirm delete teaching period modal UI to show",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to show",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "806c11b7-396e-48c7-8c7e-082e463ad5f1",
                "parentUUID": "136b5697-6c18-40de-bd33-554be9bfd31e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly toggle the confirm delete teaching period modal UI to hide",
                "fullTitle": "REDUCER: UI ACTION: HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to hide",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "bef341e0-ab1c-4ab7-808b-259523edd756",
                "parentUUID": "dae7e2e2-572e-4a66-b213-38572fbbc28e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "dae7e2e2-572e-4a66-b213-38572fbbc28e",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly toggle the confirm delete teaching period modal UI to hide",
                "fullTitle": "REDUCER: UI ACTION: HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to hide",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "bef341e0-ab1c-4ab7-808b-259523edd756",
                "parentUUID": "dae7e2e2-572e-4a66-b213-38572fbbc28e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly toggle the confirm decrease study load modal UI to show",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to show",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a8fb54c8-fb53-49a1-af7a-225a33942bbb",
                "parentUUID": "79e3ecfa-1b9c-42e0-b71d-882fa2aaa04c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "79e3ecfa-1b9c-42e0-b71d-882fa2aaa04c",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly toggle the confirm decrease study load modal UI to show",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to show",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a8fb54c8-fb53-49a1-af7a-225a33942bbb",
                "parentUUID": "79e3ecfa-1b9c-42e0-b71d-882fa2aaa04c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly toggle the confirm decrease study load modal UI to hide",
                "fullTitle": "REDUCER: UI ACTION: HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to hide",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "034c54df-3b92-4bfb-bddc-9dd913c4a204",
                "parentUUID": "c44d5df3-f23e-4341-83de-5a438d11da30",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "c44d5df3-f23e-4341-83de-5a438d11da30",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly toggle the confirm decrease study load modal UI to hide",
                "fullTitle": "REDUCER: UI ACTION: HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to hide",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "034c54df-3b92-4bfb-bddc-9dd913c4a204",
                "parentUUID": "c44d5df3-f23e-4341-83de-5a438d11da30",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: SHOW_CUSTOM_UNIT_MODAL",
            "suites": [],
            "tests": [
              {
                "title": "Should set show flag for custom unit modal to be true",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be true",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "3ddf9bc2-cde2-4c79-a8f5-49ef85ac3cf2",
                "parentUUID": "573c0824-9223-4cbc-a7e6-ea0db597eec5",
                "skipped": false
              },
              {
                "title": "Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CUSTOM_UNIT_MODAL Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"ABC1234\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: \"ABC1234\",\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "49e2d624-8020-44d4-b88e-a662c63fa41d",
                "parentUUID": "573c0824-9223-4cbc-a7e6-ea0db597eec5",
                "skipped": false
              },
              {
                "title": "Should set unit code and position if it exists on top of setting show flag for custom unit modal to be true",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CUSTOM_UNIT_MODAL Should set unit code and position if it exists on top of setting show flag for custom unit modal to be true",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"ABC1234\",\n    tpIndex: 0,\n    unitIndex: 2\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: \"ABC1234\",\n    customTpIndex: 0,\n    customUnitIndex: 2\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "3002b9e2-afd6-4f1c-b3dd-8c576859b92e",
                "parentUUID": "573c0824-9223-4cbc-a7e6-ea0db597eec5",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "573c0824-9223-4cbc-a7e6-ea0db597eec5",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should set show flag for custom unit modal to be true",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be true",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "3ddf9bc2-cde2-4c79-a8f5-49ef85ac3cf2",
                "parentUUID": "573c0824-9223-4cbc-a7e6-ea0db597eec5",
                "skipped": false
              },
              {
                "title": "Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CUSTOM_UNIT_MODAL Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"ABC1234\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: \"ABC1234\",\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "49e2d624-8020-44d4-b88e-a662c63fa41d",
                "parentUUID": "573c0824-9223-4cbc-a7e6-ea0db597eec5",
                "skipped": false
              },
              {
                "title": "Should set unit code and position if it exists on top of setting show flag for custom unit modal to be true",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CUSTOM_UNIT_MODAL Should set unit code and position if it exists on top of setting show flag for custom unit modal to be true",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"ABC1234\",\n    tpIndex: 0,\n    unitIndex: 2\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: \"ABC1234\",\n    customTpIndex: 0,\n    customUnitIndex: 2\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "3002b9e2-afd6-4f1c-b3dd-8c576859b92e",
                "parentUUID": "573c0824-9223-4cbc-a7e6-ea0db597eec5",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "ACTION: HIDE_CUSTOM_UNIT_MODAL",
            "suites": [],
            "tests": [
              {
                "title": "Should set show flag for custom unit modal to be false",
                "fullTitle": "REDUCER: UI ACTION: HIDE_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be false",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: true\n};\nvar action = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "fe698d1f-a88e-4c6d-a1d5-60b9877f5b66",
                "parentUUID": "475e74dd-9cac-4397-890e-fcfb4240916d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "475e74dd-9cac-4397-890e-fcfb4240916d",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should set show flag for custom unit modal to be false",
                "fullTitle": "REDUCER: UI ACTION: HIDE_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be false",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: true\n};\nvar action = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "fe698d1f-a88e-4c6d-a1d5-60b9877f5b66",
                "parentUUID": "475e74dd-9cac-4397-890e-fcfb4240916d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: SHOW_SIDEBAR",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show the sidebar when called",
                "fullTitle": "REDUCER: UI ACTION: SHOW_SIDEBAR Should correctly show the sidebar when called",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: false\n};\nvar action = {\n    type: \"SHOW_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "3cb102ad-9596-4ba5-97b3-3c2548da023f",
                "parentUUID": "80b4f67f-3bc6-420b-936c-bb2e25cbf69a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "80b4f67f-3bc6-420b-936c-bb2e25cbf69a",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly show the sidebar when called",
                "fullTitle": "REDUCER: UI ACTION: SHOW_SIDEBAR Should correctly show the sidebar when called",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: false\n};\nvar action = {\n    type: \"SHOW_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "3cb102ad-9596-4ba5-97b3-3c2548da023f",
                "parentUUID": "80b4f67f-3bc6-420b-936c-bb2e25cbf69a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: HIDE_SIDEBAR",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly hide the sidebar when called",
                "fullTitle": "REDUCER: UI ACTION: HIDE_SIDEBAR Should correctly hide the sidebar when called",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"HIDE_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "8bc21c0f-ad8a-482d-a10a-0851bcf60cbc",
                "parentUUID": "aa6b70f4-28b8-4725-a9b9-f6e7cdc4d51d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "aa6b70f4-28b8-4725-a9b9-f6e7cdc4d51d",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly hide the sidebar when called",
                "fullTitle": "REDUCER: UI ACTION: HIDE_SIDEBAR Should correctly hide the sidebar when called",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"HIDE_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "8bc21c0f-ad8a-482d-a10a-0851bcf60cbc",
                "parentUUID": "aa6b70f4-28b8-4725-a9b9-f6e7cdc4d51d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "DEFAULT",
            "suites": [],
            "tests": [
              {
                "title": "Should not change state if it does not recognise the action",
                "fullTitle": "REDUCER: UI DEFAULT Should not change state if it does not recognise the action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_UI2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "85904c3a-8ac9-42cf-80ce-913091dc270f",
                "parentUUID": "a072aedb-705f-4e7d-8716-fd8199aa83c7",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "a072aedb-705f-4e7d-8716-fd8199aa83c7",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should not change state if it does not recognise the action",
                "fullTitle": "REDUCER: UI DEFAULT Should not change state if it does not recognise the action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_UI2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "85904c3a-8ac9-42cf-80ce-913091dc270f",
                "parentUUID": "a072aedb-705f-4e7d-8716-fd8199aa83c7",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/reducers/UI.spec.js",
        "uuid": "5ec3edcd-264c-4225-8439-aade524bb5e0",
        "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "UTILS: CostCalc",
        "suites": [],
        "tests": [
          {
            "title": "Should return a non-negative number",
            "fullTitle": "UTILS: CostCalc Should return a non-negative number",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_CostCalc2.default.calculateCost(0, 0)).to.be.gte(0);\nexpect(_CostCalc2.default.calculateCost(2, 6)).to.be.gte(0);",
            "err": {},
            "isRoot": false,
            "uuid": "4e6ee825-3499-43f0-87e5-7d686bae2133",
            "parentUUID": "5410244a-9acc-4d84-868c-206d5ffa0d62",
            "skipped": false
          },
          {
            "title": "Should multiply SCA band cost with credit points",
            "fullTitle": "UTILS: CostCalc Should multiply SCA band cost with credit points",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var scaBand = 3;\nvar creditPoints = 6;\nvar scaBandCost = _CostCalc2.default.calculateCost(scaBand, 1);\nexpect(_CostCalc2.default.calculateCost(scaBand, creditPoints)).to.equal(scaBandCost * creditPoints);",
            "err": {},
            "isRoot": false,
            "uuid": "e48e3009-9cef-46ab-9a13-14a7c66a762d",
            "parentUUID": "5410244a-9acc-4d84-868c-206d5ffa0d62",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/utils/CostCalc.spec.js",
        "uuid": "5410244a-9acc-4d84-868c-206d5ffa0d62",
        "fullFile": "/home/staff01/Documents/monPlanR/test/utils/CostCalc.spec.js",
        "passes": [
          {
            "title": "Should return a non-negative number",
            "fullTitle": "UTILS: CostCalc Should return a non-negative number",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_CostCalc2.default.calculateCost(0, 0)).to.be.gte(0);\nexpect(_CostCalc2.default.calculateCost(2, 6)).to.be.gte(0);",
            "err": {},
            "isRoot": false,
            "uuid": "4e6ee825-3499-43f0-87e5-7d686bae2133",
            "parentUUID": "5410244a-9acc-4d84-868c-206d5ffa0d62",
            "skipped": false
          },
          {
            "title": "Should multiply SCA band cost with credit points",
            "fullTitle": "UTILS: CostCalc Should multiply SCA band cost with credit points",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var scaBand = 3;\nvar creditPoints = 6;\nvar scaBandCost = _CostCalc2.default.calculateCost(scaBand, 1);\nexpect(_CostCalc2.default.calculateCost(scaBand, creditPoints)).to.equal(scaBandCost * creditPoints);",
            "err": {},
            "isRoot": false,
            "uuid": "e48e3009-9cef-46ab-9a13-14a7c66a762d",
            "parentUUID": "5410244a-9acc-4d84-868c-206d5ffa0d62",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 2,
        "totalPasses": 2,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 2
      },
      {
        "title": "UTILS: NextSemesterString",
        "suites": [
          {
            "title": "nextSemester",
            "suites": [],
            "tests": [
              {
                "title": "Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([], 2011, [])).to.deep.equal({\n    index: 0,\n    year: 2011,\n    code: \"S1-01\",\n    teachingPeriodData: []\n});",
                "err": {},
                "isRoot": false,
                "uuid": "70196e3a-198b-419d-a40a-97ae5197a54f",
                "parentUUID": "8888bfa1-ee6e-4333-a6c7-11f515687318",
                "skipped": false
              },
              {
                "title": "Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([], 2029, sortedTeachingPeriodData)).to.deep.equal({\n    index: 0,\n    year: 2029,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
                "err": {},
                "isRoot": false,
                "uuid": "a41acf0f-a417-43f5-ad15-138475624859",
                "parentUUID": "8888bfa1-ee6e-4333-a6c7-11f515687318",
                "skipped": false
              },
              {
                "title": "Should return semester two if the last teaching period is in semester one, with the same year",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should return semester two if the last teaching period is in semester one, with the same year",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2025,\n    code: \"S1-01\"\n}, {\n    year: 2025,\n    code: \"S2-01\"\n}, {\n    year: 2026,\n    code: \"S1-01\"\n}, {\n    year: 2026,\n    code: \"S2-01\"\n}, {\n    year: 2027,\n    code: \"S1-01\"\n}], 2023, sortedTeachingPeriodData)).to.deep.equal({\n    index: 5,\n    year: 2027,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
                "err": {},
                "isRoot": false,
                "uuid": "f1ddbf65-bb33-44bc-a124-da74c52b7fe2",
                "parentUUID": "8888bfa1-ee6e-4333-a6c7-11f515687318",
                "skipped": false
              },
              {
                "title": "Should return semester one next year if the last teaching period is in semester two",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should return semester one next year if the last teaching period is in semester two",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2015,\n    code: \"FY-01\"\n}, {\n    year: 2017,\n    code: \"S2-01\"\n}], 2015, sortedTeachingPeriodData)).to.deep.equal({\n    index: 2,\n    year: 2018,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
                "err": {},
                "isRoot": false,
                "uuid": "c6fdfb80-dab9-4b9a-b075-bbfb1b4cf099",
                "parentUUID": "8888bfa1-ee6e-4333-a6c7-11f515687318",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/utils/NextSemesterString.spec.js",
            "uuid": "8888bfa1-ee6e-4333-a6c7-11f515687318",
            "fullFile": "/home/staff01/Documents/monPlanR/test/utils/NextSemesterString.spec.js",
            "passes": [
              {
                "title": "Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([], 2011, [])).to.deep.equal({\n    index: 0,\n    year: 2011,\n    code: \"S1-01\",\n    teachingPeriodData: []\n});",
                "err": {},
                "isRoot": false,
                "uuid": "70196e3a-198b-419d-a40a-97ae5197a54f",
                "parentUUID": "8888bfa1-ee6e-4333-a6c7-11f515687318",
                "skipped": false
              },
              {
                "title": "Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([], 2029, sortedTeachingPeriodData)).to.deep.equal({\n    index: 0,\n    year: 2029,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
                "err": {},
                "isRoot": false,
                "uuid": "a41acf0f-a417-43f5-ad15-138475624859",
                "parentUUID": "8888bfa1-ee6e-4333-a6c7-11f515687318",
                "skipped": false
              },
              {
                "title": "Should return semester two if the last teaching period is in semester one, with the same year",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should return semester two if the last teaching period is in semester one, with the same year",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2025,\n    code: \"S1-01\"\n}, {\n    year: 2025,\n    code: \"S2-01\"\n}, {\n    year: 2026,\n    code: \"S1-01\"\n}, {\n    year: 2026,\n    code: \"S2-01\"\n}, {\n    year: 2027,\n    code: \"S1-01\"\n}], 2023, sortedTeachingPeriodData)).to.deep.equal({\n    index: 5,\n    year: 2027,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
                "err": {},
                "isRoot": false,
                "uuid": "f1ddbf65-bb33-44bc-a124-da74c52b7fe2",
                "parentUUID": "8888bfa1-ee6e-4333-a6c7-11f515687318",
                "skipped": false
              },
              {
                "title": "Should return semester one next year if the last teaching period is in semester two",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should return semester one next year if the last teaching period is in semester two",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2015,\n    code: \"FY-01\"\n}, {\n    year: 2017,\n    code: \"S2-01\"\n}], 2015, sortedTeachingPeriodData)).to.deep.equal({\n    index: 2,\n    year: 2018,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
                "err": {},
                "isRoot": false,
                "uuid": "c6fdfb80-dab9-4b9a-b075-bbfb1b4cf099",
                "parentUUID": "8888bfa1-ee6e-4333-a6c7-11f515687318",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "getSemesterString",
            "suites": [],
            "tests": [
              {
                "title": "Should render a semester string",
                "fullTitle": "UTILS: NextSemesterString getSemesterString Should render a semester string",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2019,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n})).to.equal(\"Semester 2, 2019\");",
                "err": {},
                "isRoot": false,
                "uuid": "18d51725-2ec1-4e40-a956-8554765a030b",
                "parentUUID": "1acf967d-9c20-47e6-b34f-ff8f3b09db77",
                "skipped": false
              },
              {
                "title": "Should revert back to semester codes if teachingPeriodData is not available",
                "fullTitle": "UTILS: NextSemesterString getSemesterString Should revert back to semester codes if teachingPeriodData is not available",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2015,\n    code: \"S1-01\"\n})).to.equal(\"S1-01, 2015\");",
                "err": {},
                "isRoot": false,
                "uuid": "a18d44ae-8897-4d23-bb56-05e7849d32bd",
                "parentUUID": "1acf967d-9c20-47e6-b34f-ff8f3b09db77",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/utils/NextSemesterString.spec.js",
            "uuid": "1acf967d-9c20-47e6-b34f-ff8f3b09db77",
            "fullFile": "/home/staff01/Documents/monPlanR/test/utils/NextSemesterString.spec.js",
            "passes": [
              {
                "title": "Should render a semester string",
                "fullTitle": "UTILS: NextSemesterString getSemesterString Should render a semester string",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2019,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n})).to.equal(\"Semester 2, 2019\");",
                "err": {},
                "isRoot": false,
                "uuid": "18d51725-2ec1-4e40-a956-8554765a030b",
                "parentUUID": "1acf967d-9c20-47e6-b34f-ff8f3b09db77",
                "skipped": false
              },
              {
                "title": "Should revert back to semester codes if teachingPeriodData is not available",
                "fullTitle": "UTILS: NextSemesterString getSemesterString Should revert back to semester codes if teachingPeriodData is not available",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2015,\n    code: \"S1-01\"\n})).to.equal(\"S1-01, 2015\");",
                "err": {},
                "isRoot": false,
                "uuid": "a18d44ae-8897-4d23-bb56-05e7849d32bd",
                "parentUUID": "1acf967d-9c20-47e6-b34f-ff8f3b09db77",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/utils/NextSemesterString.spec.js",
        "uuid": "7c224fac-eb5e-4bd9-8934-d2ce56537c51",
        "fullFile": "/home/staff01/Documents/monPlanR/test/utils/NextSemesterString.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "UTILS: ShowYear",
        "suites": [],
        "tests": [
          {
            "title": "Should return the right year based off current month",
            "fullTitle": "UTILS: ShowYear Should return the right year based off current month",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "if (new Date().getMonth() + 1 >= 11) {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear() + 1);\n} else {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear());\n}",
            "err": {},
            "isRoot": false,
            "uuid": "2141ad7f-187a-438c-b836-7ca28a9c33c6",
            "parentUUID": "7515e63b-f8c4-4a65-b2d6-af478996e299",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/utils/ShowYear.spec.js",
        "uuid": "7515e63b-f8c4-4a65-b2d6-af478996e299",
        "fullFile": "/home/staff01/Documents/monPlanR/test/utils/ShowYear.spec.js",
        "passes": [
          {
            "title": "Should return the right year based off current month",
            "fullTitle": "UTILS: ShowYear Should return the right year based off current month",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "if (new Date().getMonth() + 1 >= 11) {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear() + 1);\n} else {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear());\n}",
            "err": {},
            "isRoot": false,
            "uuid": "2141ad7f-187a-438c-b836-7ca28a9c33c6",
            "parentUUID": "7515e63b-f8c4-4a65-b2d6-af478996e299",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "UTILS: YearCalc",
        "suites": [],
        "tests": [
          {
            "title": "Should contain the same year as it was specified",
            "fullTitle": "UTILS: YearCalc Should contain the same year as it was specified",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getStartYearVals(2016).find(function (year) {\n    return year.value === 2016;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2017).find(function (year) {\n    return year.value === 2017;\n})).to.be.ok;",
            "err": {},
            "isRoot": false,
            "uuid": "580e1d05-2442-42ef-adb8-d589305f9fc5",
            "parentUUID": "f799c20d-18d4-4dd1-bc79-904df28c4382",
            "skipped": false
          },
          {
            "title": "Should contain a year that is ten years from now",
            "fullTitle": "UTILS: YearCalc Should contain a year that is ten years from now",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getStartYearVals(2019).find(function (year) {\n    return year.value === 2029;\n})).to.be.ok;\nexpect(_YearCalc2.default.getStartYearVals(2012).find(function (year) {\n    return year.value === 2002;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2028;\n})).to.be.ok;",
            "err": {},
            "isRoot": false,
            "uuid": "0857a8a1-bc96-443a-99bb-a261ecdd80fb",
            "parentUUID": "f799c20d-18d4-4dd1-bc79-904df28c4382",
            "skipped": false
          },
          {
            "title": "Should not contain any past year when computing end years",
            "fullTitle": "UTILS: YearCalc Should not contain any past year when computing end years",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2017;\n})).to.be.not.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2008;\n})).to.be.not.ok;",
            "err": {},
            "isRoot": false,
            "uuid": "4ca8f893-fd0b-4654-9554-24a0a98403a4",
            "parentUUID": "f799c20d-18d4-4dd1-bc79-904df28c4382",
            "skipped": false
          },
          {
            "title": "Should have starting years go in decreasing order from one year ahead to the minimum",
            "fullTitle": "UTILS: YearCalc Should have starting years go in decreasing order from one year ahead to the minimum",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getStartYearVals(2019).slice(0, 12)).to.deep.equal([{\n    text: \"2020\",\n    value: 2020\n}, {\n    text: \"2019\",\n    value: 2019\n}, {\n    text: \"2018\",\n    value: 2018\n}, {\n    text: \"2017\",\n    value: 2017\n}, {\n    text: \"2016\",\n    value: 2016\n}, {\n    text: \"2015\",\n    value: 2015\n}, {\n    text: \"2014\",\n    value: 2014\n}, {\n    text: \"2013\",\n    value: 2013\n}, {\n    text: \"2012\",\n    value: 2012\n}, {\n    text: \"2011\",\n    value: 2011\n}, {\n    text: \"2010\",\n    value: 2010\n}, {\n    text: \"2009\",\n    value: 2009\n}]);",
            "err": {},
            "isRoot": false,
            "uuid": "520d3cbb-e5c9-46fd-afa1-11a509c5b4de",
            "parentUUID": "f799c20d-18d4-4dd1-bc79-904df28c4382",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/utils/YearCalc.spec.js",
        "uuid": "f799c20d-18d4-4dd1-bc79-904df28c4382",
        "fullFile": "/home/staff01/Documents/monPlanR/test/utils/YearCalc.spec.js",
        "passes": [
          {
            "title": "Should contain the same year as it was specified",
            "fullTitle": "UTILS: YearCalc Should contain the same year as it was specified",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getStartYearVals(2016).find(function (year) {\n    return year.value === 2016;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2017).find(function (year) {\n    return year.value === 2017;\n})).to.be.ok;",
            "err": {},
            "isRoot": false,
            "uuid": "580e1d05-2442-42ef-adb8-d589305f9fc5",
            "parentUUID": "f799c20d-18d4-4dd1-bc79-904df28c4382",
            "skipped": false
          },
          {
            "title": "Should contain a year that is ten years from now",
            "fullTitle": "UTILS: YearCalc Should contain a year that is ten years from now",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getStartYearVals(2019).find(function (year) {\n    return year.value === 2029;\n})).to.be.ok;\nexpect(_YearCalc2.default.getStartYearVals(2012).find(function (year) {\n    return year.value === 2002;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2028;\n})).to.be.ok;",
            "err": {},
            "isRoot": false,
            "uuid": "0857a8a1-bc96-443a-99bb-a261ecdd80fb",
            "parentUUID": "f799c20d-18d4-4dd1-bc79-904df28c4382",
            "skipped": false
          },
          {
            "title": "Should not contain any past year when computing end years",
            "fullTitle": "UTILS: YearCalc Should not contain any past year when computing end years",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2017;\n})).to.be.not.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2008;\n})).to.be.not.ok;",
            "err": {},
            "isRoot": false,
            "uuid": "4ca8f893-fd0b-4654-9554-24a0a98403a4",
            "parentUUID": "f799c20d-18d4-4dd1-bc79-904df28c4382",
            "skipped": false
          },
          {
            "title": "Should have starting years go in decreasing order from one year ahead to the minimum",
            "fullTitle": "UTILS: YearCalc Should have starting years go in decreasing order from one year ahead to the minimum",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getStartYearVals(2019).slice(0, 12)).to.deep.equal([{\n    text: \"2020\",\n    value: 2020\n}, {\n    text: \"2019\",\n    value: 2019\n}, {\n    text: \"2018\",\n    value: 2018\n}, {\n    text: \"2017\",\n    value: 2017\n}, {\n    text: \"2016\",\n    value: 2016\n}, {\n    text: \"2015\",\n    value: 2015\n}, {\n    text: \"2014\",\n    value: 2014\n}, {\n    text: \"2013\",\n    value: 2013\n}, {\n    text: \"2012\",\n    value: 2012\n}, {\n    text: \"2011\",\n    value: 2011\n}, {\n    text: \"2010\",\n    value: 2010\n}, {\n    text: \"2009\",\n    value: 2009\n}]);",
            "err": {},
            "isRoot": false,
            "uuid": "520d3cbb-e5c9-46fd-afa1-11a509c5b4de",
            "parentUUID": "f799c20d-18d4-4dd1-bc79-904df28c4382",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 4,
        "totalPasses": 4,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 1
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "50531e38-e54b-42dc-8b23-60c85f9474ba",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "Should create an action to increment credit points counter",
      "fullTitle": "AC: incrementCreditPoints Should create an action to increment credit points counter",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 5\n};\n(0, _expect2.default)(actions.incrementCreditPoints(5)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "0d3ad61f-f37f-4080-95df-56bcc1f5ebeb",
      "parentUUID": "e3930b02-34fa-42eb-bccc-76e812c2a28d",
      "skipped": false
    },
    {
      "title": "Should create an action to decrement credit points counter",
      "fullTitle": "AC: decrementCreditPoints Should create an action to decrement credit points counter",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 5\n};\n(0, _expect2.default)(actions.decrementCreditPoints(5)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "d255c966-41d3-45a3-92e7-efd8b34e5d51",
      "parentUUID": "91b7217e-ccce-46c3-8e39-f616991d3787",
      "skipped": false
    },
    {
      "title": "Should create an action to increment cost counter",
      "fullTitle": "AC: incrementCost Should create an action to increment cost counter",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"INCREMENT_COST\",\n    value: 5\n};\n(0, _expect2.default)(actions.incrementCost(5)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "2ed22cc5-8baf-4239-ae24-bc00880d8032",
      "parentUUID": "0574123b-d30d-41d1-a543-b689b18f14f5",
      "skipped": false
    },
    {
      "title": "Should create an action to decrement cost counter",
      "fullTitle": "AC: decrementCosts Should create an action to decrement cost counter",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"DECREMENT_COST\",\n    value: 5\n};\n(0, _expect2.default)(actions.decrementCost(5)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "86e53cff-5860-48a6-8126-2afe12709b10",
      "parentUUID": "d711820a-db8f-439f-b9e9-d9b653f38a75",
      "skipped": false
    },
    {
      "title": "Should create an action to insert a teaching period",
      "fullTitle": "AC: insertTeachingPeriod Should create an action to insert a teaching period",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{\n    type: \"INSERT_TEACHING_PERIOD\",\n    index: 1,\n    year: 2016,\n    code: \"tpCode\"\n}, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n}];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.insertTeachingPeriod(1, 2016, \"tpCode\"));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "81fb1208-3c2a-46d2-85be-91f191e13db9",
      "parentUUID": "1c2af10d-b61d-4202-84ff-5e0511306e4d",
      "skipped": false
    },
    {
      "title": "Should create an action to remove a teaching period",
      "fullTitle": "AC: removeTeachingPeriod Should create an action to remove a teaching period",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1,\n    units: [\"unit1\", \"unit2\", \"unit3\", null]\n}, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n}];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.removeTeachingPeriod(1, [\"unit1\", \"unit2\", \"unit3\", null]));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "62d8d669-971c-431a-b7eb-9705e302d3ba",
      "parentUUID": "74255026-7ba2-4f38-b93c-84ce3957ed12",
      "skipped": false
    },
    {
      "title": "Should create an action to increase the study load",
      "fullTitle": "AC: increaseStudyLoad Should create an action to increase the study load",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\n(0, _expect2.default)(actions.increaseStudyLoad()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "8bb9efe7-d047-4d37-bbcd-f94430194d95",
      "parentUUID": "d958442c-15c6-4d03-9e60-f36e098866f6",
      "skipped": false
    },
    {
      "title": "Should create an action to increase the study load with units affected",
      "fullTitle": "AC: decreaseStudyLoad Should create an action to increase the study load with units affected",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockTeachingPeriods = [{ year: 2018, code: \"S1-01\", units: [null, null, null, null, \"unit1\"] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }, { year: 2019, code: \"S1-01\", units: [null, null, null, null, \"unit2\"] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null, null] }];\nvar expectedAction = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [\"unit1\", \"unit2\"]\n};\n(0, _expect2.default)(actions.decreaseStudyLoad(mockTeachingPeriods, 4)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "82b3253e-fda8-4673-97d9-4b90405f7b23",
      "parentUUID": "13dec55f-b530-4b1d-84db-c764b1685b40",
      "skipped": false
    },
    {
      "title": "Should create an action to increase the study load with no units affected",
      "fullTitle": "AC: decreaseStudyLoad Should create an action to increase the study load with no units affected",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockTeachingPeriods = [{ year: 2018, code: \"S1-01\", units: [null, null, null, \"unit1\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }, { year: 2019, code: \"S1-01\", units: [null, null, null, \"unit2\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null, null] }];\nvar expectedAction = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: []\n};\n(0, _expect2.default)(actions.decreaseStudyLoad(mockTeachingPeriods, 4)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "7ea88bb2-7386-4d7e-be56-399ceaed3683",
      "parentUUID": "13dec55f-b530-4b1d-84db-c764b1685b40",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for the addition of a unit that is not a custom unit being dragged",
      "fullTitle": "AC: addUnit Should correctly create the actions required for the addition of a unit that is not a custom unit being dragged",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockUnit = {\n                customUnitDragging: false,\n                cost: 200,\n                creditPoints: 6,\n                unitCode: \"TEST1001\"\n            };\n            var expectedActions = [{ type: \"ADD_UNIT\", tpIndex: 1, unitIndex: 1, unit: mockUnit, cost: 200, creditPoints: 6 }, { type: \"CLEAR_HIGHLIGHTING_INVALID_UNIT_SLOTS\" }, { type: \"VALIDATE_COURSE\" }, { type: \"MODIFIED_COURSE_PLAN\" }];\n            var store = mockStore({});\n            store.dispatch(actions.addUnit(1, 1, mockUnit));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "3a77dddd-242e-4134-b596-58c8812b18fd",
      "parentUUID": "d1207809-6363-4416-8dbf-d37a4dc075fc",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for the addition of a unit that is a custom unit being dragged",
      "fullTitle": "AC: addUnit Should correctly create the actions required for the addition of a unit that is a custom unit being dragged",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockUnit = {\n                customUnitDragging: true,\n                cost: 200,\n                creditPoints: 6,\n                unitCode: \"TEST1001\"\n            };\n            var expectedActions = [{\n                type: \"SHOW_CUSTOM_UNIT_MODAL\",\n                unitCode: \"TEST1001\",\n                tpIndex: 1,\n                unitIndex: 1\n            }];\n            var store = mockStore({});\n            store.dispatch(actions.addUnit(1, 1, mockUnit));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "67eced9f-8d32-46d2-8ed1-05ce73860367",
      "parentUUID": "d1207809-6363-4416-8dbf-d37a4dc075fc",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for removal of a unit",
      "fullTitle": "AC: removeUnit Should correctly create the actions required for removal of a unit",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{ type: \"REMOVE_UNIT\", tpIndex: 1, unitIndex: 1, cost: 200, creditPoints: 6 }, { type: \"VALIDATE_COURSE\" }, { type: \"MODIFIED_COURSE_PLAN\" }];\n            var store = mockStore({});\n            store.dispatch(actions.removeUnit(1, 1, 6, 200));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "93b80e19-b4f4-4328-81e7-8008246bb99e",
      "parentUUID": "be5372b1-fc89-4475-8741-54441779f58e",
      "skipped": false
    },
    {
      "title": "Should create the actions for clearing the course",
      "fullTitle": "AC: clearCourse Should create the actions for clearing the course",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{ type: \"CLEAR_COURSE\" }, { type: \"GET_NEXT_SEMESTER_STRING\" }, { type: \"VALIDATE_COURSE\" }];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.clearCourse());\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "989328b7-e759-4056-bde3-c760a26fa556",
      "parentUUID": "01d5110d-47b9-44b9-ae6c-c1531cedc4e1",
      "skipped": false
    },
    {
      "title": "Should create the action for generating the course",
      "fullTitle": "AC: generateCourse Should create the action for generating the course",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2016,\n    endYear: 2019\n};\n(0, _expect2.default)(actions.generateCourse(2016, 2019)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "6349f193-d01a-4213-8529-24b76fc9ab2c",
      "parentUUID": "3c51bce2-4b4f-461e-8c6c-b59f86bcbaad",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for submission of a year form",
      "fullTitle": "AC: submitYearForm Should correctly create the actions required for submission of a year form",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{ type: \"SUBMIT_YEAR_FORM\", startYear: 2016, endYear: 2019 }, { type: \"GENERATE_COURSE\", startYear: 2016, endYear: 2019 }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\n            var store = mockStore({});\n            store.dispatch(actions.submitYearForm(2016, 2019));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "6b9e7f8f-1100-468d-9d4b-eb609b597837",
      "parentUUID": "b060c620-b443-4490-9c56-c3a9b0cb1a21",
      "skipped": false
    },
    {
      "title": "Should correctly create actions required to change the start year",
      "fullTitle": "AC: changeStartYear Should correctly create actions required to change the start year",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{ type: \"CHANGE_START_YEAR\", year: 2020 }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\nvar store = mockStore({});\nstore.dispatch(actions.changeStartYear(2020));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "247217ff-e824-4257-a4e0-e2a6e8256e37",
      "parentUUID": "e8722a91-cbe2-4700-99f7-e3cace279bde",
      "skipped": false
    },
    {
      "title": "Should create the action for generating the course",
      "fullTitle": "AC: getNextSemesterString Should create the action for generating the course",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n};\n(0, _expect2.default)(actions.getNextSemesterString()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "40236e4b-8f18-4791-bc7c-dbf6a36a151d",
      "parentUUID": "8a4be91e-f904-4405-990b-f63619ec61c6",
      "skipped": false
    },
    {
      "title": "Should create the action for getting affected units in an overload column",
      "fullTitle": "AC: getAffectedUnitsInColumn Should create the action for getting affected units in an overload column",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"GET_AFFECTED_UNITS_IN_OVERLOAD_COLUMN\",\n    index: 4\n};\n(0, _expect2.default)(actions.getAffectedUnitsInColumn(4)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "224859ce-ccbe-4868-92e8-2ee232b24903",
      "parentUUID": "e1677b32-2650-4e6c-937c-fd9bb19ee2cf",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for deletion of a teaching period with units affected",
      "fullTitle": "AC: attemptToDeleteTeachingPeriod Should correctly create the actions required for deletion of a teaching period with units affected",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockUnits = [{ unitCode: \"TEST101\", unitName: \"unit1\" }, null, { unitCode: \"TEST102\", unitName: \"unit2\" }, null, null];\nvar expectedActions = [{ type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\" }, { type: \"UPDATE_AFFECTED_UNITS\", affectedUnits: [\"TEST101 - unit1\", \"TEST102 - unit2\"] }, { type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\", index: 1 }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDeleteTeachingPeriod(1, mockUnits));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "575b2b3d-337c-43ef-815c-0a03827aaef1",
      "parentUUID": "f56758b3-7b26-45b3-9b7a-33c062287531",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for deletion of a teaching period with no units affected",
      "fullTitle": "AC: attemptToDeleteTeachingPeriod Should correctly create the actions required for deletion of a teaching period with no units affected",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockUnits = [null, null, null, null, null];\nvar expectedActions = [{ type: \"REMOVE_TEACHING_PERIOD\", index: 1, units: [null, null, null, null, null] }, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, { type: \"GET_NEXT_SEMESTER_STRING\" }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDeleteTeachingPeriod(1, mockUnits));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "4becc5b9-13fc-49e7-9a87-218b54cb747c",
      "parentUUID": "f56758b3-7b26-45b3-9b7a-33c062287531",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for decrease of a study load with units affected",
      "fullTitle": "AC: attemptToDecreaseStudyLoad Should correctly create the actions required for decrease of a study load with units affected",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockTeachingPeriods = [{ units: [null, null, { unitCode: \"TEST10A\", unitName: \"unitA\" }, null, { unitCode: \"TEST101\", unitName: \"unit1\" }] }, { units: [null, null, { unitCode: \"TEST10B\", unitName: \"unitB\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10C\", unitName: \"unitC\" }, null, { unitCode: \"TEST102\", unitName: \"unit2\" }] }, { units: [null, null, { unitCode: \"TEST10D\", unitName: \"unitD\" }, null, null] }];\nvar expectedActions = [{ type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\" }, { type: \"UPDATE_AFFECTED_UNITS\", affectedUnits: [\"TEST101 - unit1\", \"TEST102 - unit2\"] }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDecreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "5a56ee9f-877d-4763-a87e-8dc1f9640c54",
      "parentUUID": "fff4efee-56be-4b8a-aad3-18bd34eae504",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for decrease of a study load with no units affected",
      "fullTitle": "AC: attemptToDecreaseStudyLoad Should correctly create the actions required for decrease of a study load with no units affected",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockTeachingPeriods = [{ units: [null, null, { unitCode: \"TEST10A\", unitName: \"unitA\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10B\", unitName: \"unitB\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10C\", unitName: \"unitC\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10D\", unitName: \"unitD\" }, null, null] }];\nvar expectedActions = [{ type: \"DECREASE_STUDY_LOAD\", units: [] }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDecreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "5bacafd9-e6c1-4ef4-bcd1-448d89eadab8",
      "parentUUID": "fff4efee-56be-4b8a-aad3-18bd34eae504",
      "skipped": false
    },
    {
      "title": "Should create the action for getting affected units in an teaching period row",
      "fullTitle": "AC: getAffectedUnitsInRow Should create the action for getting affected units in an teaching period row",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"GET_AFFECTED_UNITS_IN_TEACHING_PERIOD_ROW\",\n    index: 4\n};\n(0, _expect2.default)(actions.getAffectedUnitsInRow(4)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "5e330f3d-4ee8-4238-92ad-50f087f02d36",
      "parentUUID": "6683d87d-01bc-408d-8d03-844e49ee1bf5",
      "skipped": false
    },
    {
      "title": "Should create the action for validating the course",
      "fullTitle": "AC: validateCourse Should create the action for validating the course",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"VALIDATE_COURSE\"\n};\n(0, _expect2.default)(actions.validateCourse()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "055d4cd6-20b0-4bc1-8991-b692876715d5",
      "parentUUID": "f12127e4-8b73-4ce3-bef9-7aeb1647ec5e",
      "skipped": false
    },
    {
      "title": "Should create the action for highlighting the invalid unit slots",
      "fullTitle": "AC: highlightInvalidUnitSlots Should create the action for highlighting the invalid unit slots",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: \"UnitTest\",\n    ignoreCoordinate: false\n};\n(0, _expect2.default)(actions.highlightInvalidUnitSlots(\"UnitTest\", false)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "f2c72426-c527-4442-810c-ed45f948d797",
      "parentUUID": "d69746ce-cc01-4e4c-bf69-9ea40d6dcebd",
      "skipped": false
    },
    {
      "title": "Should create the action for clearing the highlighting for invalid unit slots",
      "fullTitle": "AC: clearHighlightingInvalidUnitSlots Should create the action for clearing the highlighting for invalid unit slots",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"CLEAR_HIGHLIGHTING_INVALID_UNIT_SLOTS\"\n};\n(0, _expect2.default)(actions.clearHighlightingInvalidUnitSlots()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "b735e177-16bd-4a3d-93d6-560e65194d24",
      "parentUUID": "5ab85ef6-36ad-4d8a-a8d1-8a9633603a70",
      "skipped": false
    },
    {
      "title": "Should create an action to show the insert teaching period UI",
      "fullTitle": "AC: showInsertTeachingPeriodUI Should create an action to show the insert teaching period UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"testTPCode\"\n};\n(0, _expect2.default)(actions.showInsertTeachingPeriodUI(\"testTPCode\")).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "7298eabf-1145-4cbd-aeb8-2adf48eb8e12",
      "parentUUID": "8f0b307f-8a15-4e2b-bf8a-c6a18764f3a3",
      "skipped": false
    },
    {
      "title": "Should create an action to hide the insert teaching period UI",
      "fullTitle": "AC: hideInsertTeachingPeriodUI Should create an action to hide the insert teaching period UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\n(0, _expect2.default)(actions.hideInsertTeachingPeriodUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "f3c41e78-808b-4fc8-bbd0-d234da12f7d0",
      "parentUUID": "059a5f18-ca5f-451d-963e-e10e239139bd",
      "skipped": false
    },
    {
      "title": "Should create an action to show the add unit UI",
      "fullTitle": "AC: showAddingUnitUI Should create an action to show the add unit UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_ADD_UNIT_UI\"\n};\n(0, _expect2.default)(actions.showAddingUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "db2e66f4-3fba-442b-a0b8-c8e63f6367ec",
      "parentUUID": "38ca2717-642a-42e6-99ef-be665d9622b8",
      "skipped": false
    },
    {
      "title": "Should create an action to hide the add unit UI",
      "fullTitle": "AC: hideAddingUnitUI Should create an action to hide the add unit UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_ADD_UNIT_UI\"\n};\n(0, _expect2.default)(actions.hideAddingUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "8fa5d6c9-79ba-428f-92b5-9732e10a48e8",
      "parentUUID": "7f589ae1-a985-416b-add5-5d3184b1bb11",
      "skipped": false
    },
    {
      "title": "Should create an action to show the move unit UI",
      "fullTitle": "AC: showMoveUnitUI Should create an action to show the move unit UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_MOVE_UNIT_UI\"\n};\n(0, _expect2.default)(actions.showMoveUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "b0b37967-7d56-450b-9012-92c0e61951d5",
      "parentUUID": "f7f9e765-a4b5-4305-8e18-4ffc0ee04731",
      "skipped": false
    },
    {
      "title": "Should create an action to hide move unit UI",
      "fullTitle": "AC: hideMoveUnitUI Should create an action to hide move unit UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_MOVE_UNIT_UI\"\n};\n(0, _expect2.default)(actions.hideMoveUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "3bce4206-7244-49e0-b16a-dccb2fbb03d6",
      "parentUUID": "3e64a821-dbd9-4d6a-92d4-76186943279d",
      "skipped": false
    },
    {
      "title": "Should create an action to show confirm delete teaching period UI",
      "fullTitle": "AC: showConfirmDeleteTeachingPeriodUI Should create an action to show confirm delete teaching period UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\n(0, _expect2.default)(actions.showConfirmDeleteTeachingPeriodUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "14250885-257e-476e-8195-10dcbdc4d21e",
      "parentUUID": "22e8b083-e685-4761-9711-8134482e2915",
      "skipped": false
    },
    {
      "title": "Should create an action to hide confirm delete teaching period UI",
      "fullTitle": "AC: hideConfirmDeleteTeachingPeriodUI Should create an action to hide confirm delete teaching period UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\n(0, _expect2.default)(actions.hideConfirmDeleteTeachingPeriodUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "1d8e6f57-0c5d-4e8a-8b5b-f14443457f09",
      "parentUUID": "d47a08e5-50e6-40c6-8db9-9c812542b3c5",
      "skipped": false
    },
    {
      "title": "Should create an action to show confirm decrease study load UI",
      "fullTitle": "AC: showConfirmDecreaseStudyLoadUI Should create an action to show confirm decrease study load UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\n(0, _expect2.default)(actions.showConfirmDecreaseStudyLoadUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "1779082d-8189-4350-b9e8-89fa2abd902d",
      "parentUUID": "a2dba0c6-b427-489c-a585-83df8baf5bfc",
      "skipped": false
    },
    {
      "title": "Should create an action to hide confirm decrease study load UI",
      "fullTitle": "AC: hideConfirmDecreaseStudyLoadUI Should create an action to hide confirm decrease study load UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\n(0, _expect2.default)(actions.hideConfirmDecreaseStudyLoadUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "f7045316-c79d-474c-bc9d-297e1248b0d3",
      "parentUUID": "92fa434f-b836-4005-9483-3e654fe8fc9d",
      "skipped": false
    },
    {
      "title": "Should create an action to show custum unit UI",
      "fullTitle": "AC: showCustomUnitUI Should create an action to show custum unit UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"TEST1001\"\n};\n(0, _expect2.default)(actions.showCustomUnitUI(\"TEST1001\")).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "6030e12e-ee09-43c7-b750-2056c5b2918d",
      "parentUUID": "cc06d692-c14a-48ab-8e4a-062b50efa6a5",
      "skipped": false
    },
    {
      "title": "Should create an action to hide custom unit UI",
      "fullTitle": "AC: hideCustomUnitUI Should create an action to hide custom unit UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\n(0, _expect2.default)(actions.hideCustomUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "415b9362-2e0c-46b0-818d-a8496c6cb642",
      "parentUUID": "f98b16db-4694-4708-b8e5-e41d3589c240",
      "skipped": false
    },
    {
      "title": "Should create an action to show sidebar",
      "fullTitle": "AC: showSidebar Should create an action to show sidebar",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_SIDEBAR\"\n};\n(0, _expect2.default)(actions.showSidebar()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "3c53c416-b8fa-4b66-8315-61f510a642c3",
      "parentUUID": "ff20fb75-873f-4364-8798-93a252c98ce8",
      "skipped": false
    },
    {
      "title": "Should create an action to hide sidebar",
      "fullTitle": "AC: hideSidebar Should create an action to hide sidebar",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_SIDEBAR\"\n};\n(0, _expect2.default)(actions.hideSidebar()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "db73e724-169b-406f-b676-b7ba71a3db5f",
      "parentUUID": "a73cbb7e-2461-4df4-a8fc-7eda0d1bb697",
      "skipped": false
    },
    {
      "title": "Should create an action to set the course to read only",
      "fullTitle": "AC: setCourseReadOnly Should create an action to set the course to read only",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\n(0, _expect2.default)(actions.setCourseReadOnly()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "43118fa8-0079-468e-8a9f-5752fecfba42",
      "parentUUID": "a5707d49-0291-4e77-acef-4944202ba2cd",
      "skipped": false
    },
    {
      "title": "Should create an action to set the course to read and write",
      "fullTitle": "AC: setCourseReadAndWrite Should create an action to set the course to read and write",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\n(0, _expect2.default)(actions.setCourseReadAndWrite()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "d731a151-a64a-4117-b635-f7226c697d0f",
      "parentUUID": "cbbe0b78-8a9a-4270-9526-c9cfad4e3c98",
      "skipped": false
    },
    {
      "title": "Should render a notification title and a message",
      "fullTitle": "COMPONENT: Notification Should render a notification title and a message",
      "timedOut": false,
      "duration": 50,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, {\n    title: \"This is a test\",\n    message: \"Some message goes over here\"\n}));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(\"This is a test\");\nexpect(wrapper.text().replace(\"This is a test\", \"\").trim()).to.equal(\"Some message goes over here\");",
      "err": {},
      "isRoot": false,
      "uuid": "f0159939-a8a1-4f4f-8564-1b87139b59a9",
      "parentUUID": "0346401f-3dfc-4031-afc3-3dfc9693f05f",
      "skipped": false
    },
    {
      "title": "Should have a default level to be info if it is not specified",
      "fullTitle": "COMPONENT: Notification Should have a default level to be info if it is not specified",
      "timedOut": false,
      "duration": 12,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, null)).find(\".info.message\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "61de4e62-ceb0-439b-8db1-be8ccdcf6c35",
      "parentUUID": "0346401f-3dfc-4031-afc3-3dfc9693f05f",
      "skipped": false
    },
    {
      "title": "Should follow a specified level",
      "fullTitle": "COMPONENT: Notification Should follow a specified level",
      "timedOut": false,
      "duration": 43,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"info\" })).find(\".info.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"warning\" })).find(\".warning.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"error\" })).find(\".negative.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"success\" })).find(\".positive.message\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "6a981150-0a00-448c-95da-06f1b64a9038",
      "parentUUID": "0346401f-3dfc-4031-afc3-3dfc9693f05f",
      "skipped": false
    },
    {
      "title": "should be called exactly once when main button has been clicked",
      "fullTitle": "#addSemester() should be called exactly once when main button has been clicked",
      "timedOut": false,
      "duration": 22,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var addSemester = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: identity,\n    addSemester: addSemester }));\nwrapper.find(\"Button\").forEach(function (button) {\n    button.simulate(\"click\");\n});\nexpect(addSemester).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "787b604d-74d5-4cd5-8597-37d5b4f02e17",
      "parentUUID": "9a03ee6a-7240-48f9-a3e2-d4321d1985ac",
      "skipped": false
    },
    {
      "title": "should be called as many times as the number of insert teaching periods options upon click",
      "fullTitle": "#insert() should be called as many times as the number of insert teaching periods options upon click",
      "timedOut": false,
      "duration": 46,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var insert = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: insert,\n    addSemester: identity }));\nvar dropdownItems = wrapper.find(\".item\");\ndropdownItems.forEach(function (node) {\n    return node.simulate(\"click\");\n});\nexpect(insert).to.have.callCount(dropdownItems.length);",
      "err": {},
      "isRoot": false,
      "uuid": "12e73459-7284-4a88-8fdc-0fd984d3c3e6",
      "parentUUID": "dc3f3556-9706-4d66-a2f1-3e84d30ddc7e",
      "skipped": false
    },
    {
      "title": "should render two ratings",
      "fullTitle": "COMPONENT: SetuRating should render two ratings",
      "timedOut": false,
      "duration": 48,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, null)).find(\".rating\")).to.have.length(2);",
      "err": {},
      "isRoot": false,
      "uuid": "53fcb09a-0d66-4fab-876e-c1aefba1c994",
      "parentUUID": "2d72d7a1-d87c-4726-a798-b20ac9826c5d",
      "skipped": false
    },
    {
      "title": "should render a book if learning ratings is >=2.5",
      "fullTitle": "COMPONENT: SetuRating should render a book if learning ratings is >=2.5",
      "timedOut": false,
      "duration": 62,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 4.13 })).find(\".book\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.50 })).find(\".book\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "b8c390da-eb9c-4dee-a01a-301a2797f49f",
      "parentUUID": "2d72d7a1-d87c-4726-a798-b20ac9826c5d",
      "skipped": false
    },
    {
      "title": "should render a remove circle if learning ratings is <2.5",
      "fullTitle": "COMPONENT: SetuRating should render a remove circle if learning ratings is <2.5",
      "timedOut": false,
      "duration": 50,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 1.51 })).find(\".remove.circle\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.49 })).find(\".remove.circle\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "2f05de00-bfed-4825-a950-7886ada04be8",
      "parentUUID": "2d72d7a1-d87c-4726-a798-b20ac9826c5d",
      "skipped": false
    },
    {
      "title": "should render a thumbs up if enjoyment ratings is >=2.5",
      "fullTitle": "COMPONENT: SetuRating should render a thumbs up if enjoyment ratings is >=2.5",
      "timedOut": false,
      "duration": 48,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 4.13 })).find(\".thumbs.up\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.50 })).find(\".thumbs.up\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "54b257bd-aa94-4564-8da1-52ec11f0cd0e",
      "parentUUID": "2d72d7a1-d87c-4726-a798-b20ac9826c5d",
      "skipped": false
    },
    {
      "title": "should render a thumbs down if enjoyment ratings is <2.5",
      "fullTitle": "COMPONENT: SetuRating should render a thumbs down if enjoyment ratings is <2.5",
      "timedOut": false,
      "duration": 48,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 1.51 })).find(\".thumbs.down\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.49 })).find(\".thumbs.down\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "f1836200-5517-4c7e-b4a2-325f31664eaa",
      "parentUUID": "2d72d7a1-d87c-4726-a798-b20ac9826c5d",
      "skipped": false
    },
    {
      "title": "should only render a unit code and a unit name",
      "fullTitle": "#presentational should only render a unit code and a unit name",
      "timedOut": false,
      "duration": 26,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var unitCode = \"ABC1234\";\nvar unitName = \"Example unit\";\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: unitCode,\n    name: unitName }));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(unitCode);\nexpect(wrapper.find(\".message\").text().replace(unitCode, \"\").trim()).to.equal(unitName);",
      "err": {},
      "isRoot": false,
      "uuid": "c6126600-0dff-4f13-a05e-ef1c0815b572",
      "parentUUID": "654d8327-c701-42d7-866a-9a3e49e56aef",
      "skipped": false
    },
    {
      "title": "should render a close button only when mouse is over the unit",
      "fullTitle": "#presentational should render a close button only when mouse is over the unit",
      "timedOut": false,
      "duration": 64,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    hovering: false }));\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");\nwrapper.setProps({\n    hovering: true\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"visible\");\nwrapper.setProps({\n    hovering: false\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");",
      "err": {},
      "isRoot": false,
      "uuid": "9a397233-52fe-4781-8528-821e4e178b27",
      "parentUUID": "654d8327-c701-42d7-866a-9a3e49e56aef",
      "skipped": false
    },
    {
      "title": "Should call willAddUnit if unit is a newUnit and it has been clicked",
      "fullTitle": "#events Should call willAddUnit if unit is a newUnit and it has been clicked",
      "timedOut": false,
      "duration": 36,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    newUnit: true,\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    willAddUnit: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"click\");\nexpect(eventFunc).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "3bf288b6-e29b-45f1-93a9-74a337b7f1bd",
      "parentUUID": "5766d7cb-37fc-4ba3-aef2-3a9824025035",
      "skipped": false
    },
    {
      "title": "Should call handleUnitMouseOver when mouse is over the unit",
      "fullTitle": "#events Should call handleUnitMouseOver when mouse is over the unit",
      "timedOut": false,
      "duration": 22,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseOver: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseOver\");\nexpect(eventFunc).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "b6c92498-27d4-4be7-bca8-a2e29a5ec20d",
      "parentUUID": "5766d7cb-37fc-4ba3-aef2-3a9824025035",
      "skipped": false
    },
    {
      "title": "Should call handleUnitMouseMove when mouse moves over the unit",
      "fullTitle": "#events Should call handleUnitMouseMove when mouse moves over the unit",
      "timedOut": false,
      "duration": 17,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseMove: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseMove\");\nexpect(eventFunc).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "312f72f4-751d-4070-a10b-0a31a55c9383",
      "parentUUID": "5766d7cb-37fc-4ba3-aef2-3a9824025035",
      "skipped": false
    },
    {
      "title": "Should call handleUnitMouseOut when mouse is over the unit",
      "fullTitle": "#events Should call handleUnitMouseOut when mouse is over the unit",
      "timedOut": false,
      "duration": 31,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseOut: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseOut\");\nexpect(eventFunc).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "6272e79c-92b0-4df6-bbb5-162edfff9d5b",
      "parentUUID": "5766d7cb-37fc-4ba3-aef2-3a9824025035",
      "skipped": false
    },
    {
      "title": "Should correctly call movingUnit when it is being dragged",
      "fullTitle": "#DnD Should correctly call movingUnit when it is being dragged",
      "timedOut": false,
      "duration": 16,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "testingBeginDrag = true;\ntestingEndDrag = false;\nbackend.simulateBeginDrag([sourceId]);\nexpect(movingUnitSpy).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "44780ba8-95cd-419e-9c8d-ec46d13cc714",
      "parentUUID": "35a75baf-30bc-41ab-9687-9b20b81973ef",
      "skipped": false
    },
    {
      "title": "Should correctylc call cancelMovingUnit ",
      "fullTitle": "#DnD Should correctylc call cancelMovingUnit ",
      "timedOut": false,
      "duration": 21,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "testingBeginDrag = false;\ntestingEndDrag = true;\nbackend.simulateBeginDrag([sourceId]);\nbackend.simulateEndDrag(sourceId);\nexpect(cancelMovingUnitSpy).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "207107a0-8ee6-4c1a-b216-d5d0c884cdda",
      "parentUUID": "35a75baf-30bc-41ab-9687-9b20b81973ef",
      "skipped": false
    },
    {
      "title": "Should increment the credit point state by a given value",
      "fullTitle": "ACTION: INCREMENT_CREDIT_POINTS Should increment the credit point state by a given value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 2, creditPoints: 0 };\nvar action = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 2,\n    creditPoints: 1\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f8f0619e-1617-4264-857a-94164589595c",
      "parentUUID": "459069e3-6134-431b-8000-891ded6832bb",
      "skipped": false
    },
    {
      "title": "Should decrement the credit point state by a given value",
      "fullTitle": "ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state by a given value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c97df884-406b-464b-9cac-960695aef584",
      "parentUUID": "25224370-9c49-40d5-acd9-56f75f67bf93",
      "skipped": false
    },
    {
      "title": "Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
      "fullTitle": "ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 0\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d03ee03b-a12d-4d91-8b15-2141b8ff12ba",
      "parentUUID": "25224370-9c49-40d5-acd9-56f75f67bf93",
      "skipped": false
    },
    {
      "title": "Should increment the cost state by a given value",
      "fullTitle": "ACTION: INCREMENT_COST Should increment the cost state by a given value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 20, creditPoints: 13 };\nvar action = {\n    type: \"INCREMENT_COST\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 21,\n    creditPoints: 13\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "549dc8fc-ee8d-493c-9a9a-e572e05703ae",
      "parentUUID": "edc86931-9529-47f7-ac27-31ac3487c7e9",
      "skipped": false
    },
    {
      "title": "Should decrement the cost state by a given value",
      "fullTitle": "ACTION: DECREMENT_COST Should decrement the cost state by a given value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "40722f1e-038c-4394-a226-d4f8d1e9a23b",
      "parentUUID": "8068476f-f20e-40aa-a29c-aa9fa7139a81",
      "skipped": false
    },
    {
      "title": "Should decrement the cost state to 0 if a value given is larger than the current credit point value",
      "fullTitle": "ACTION: DECREMENT_COST Should decrement the cost state to 0 if a value given is larger than the current credit point value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 0,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "be1c4f45-d877-4344-9bde-90620f3b7daa",
      "parentUUID": "8068476f-f20e-40aa-a29c-aa9fa7139a81",
      "skipped": false
    },
    {
      "title": "Should reset the cost and credit point counters to 0",
      "fullTitle": "ACTION: CLEAR_COURSE Should reset the cost and credit point counters to 0",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b5b44887-29f2-4e3f-ae69-0af2d0345448",
      "parentUUID": "423f77a7-7d39-4b61-afb9-7472ab75a97d",
      "skipped": false
    },
    {
      "title": "Should correctly go through and decrement the counters for each value ",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should correctly go through and decrement the counters for each value ",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { cost: 2, creditPoints: 20 }, { cost: 5, creditPoints: 10 }, null]\n};\nvar stateAfter = { cost: 43, creditPoints: 10 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "285312cf-fdc7-49d3-8545-6b2130c2a7d8",
      "parentUUID": "b5179a09-1cbd-4c77-8c89-99f0182ae918",
      "skipped": false
    },
    {
      "title": "Should not decrement the counters below 0 ",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should not decrement the counters below 0 ",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { cost: 25, creditPoints: 20 }, { cost: 30, creditPoints: 30 }, { cost: 0, creditPoints: 10 }]\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c65f47a1-6650-4ada-bee8-769cbf26df90",
      "parentUUID": "b5179a09-1cbd-4c77-8c89-99f0182ae918",
      "skipped": false
    },
    {
      "title": "Should correctly decrement the counters based on the given units creditpoints and cost",
      "fullTitle": "ACTION: REMOVE_UNIT Should correctly decrement the counters based on the given units creditpoints and cost",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 20 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ae0b666a-e50c-4040-a3dd-5716684e8a55",
      "parentUUID": "9b7a9558-3c09-4db8-9944-fa053b0158ff",
      "skipped": false
    },
    {
      "title": "Should not decrement the counters below 0",
      "fullTitle": "ACTION: REMOVE_UNIT Should not decrement the counters below 0",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d052fc0e-5d8b-4202-a54c-aa27d1a55c6e",
      "parentUUID": "9b7a9558-3c09-4db8-9944-fa053b0158ff",
      "skipped": false
    },
    {
      "title": "Should correctly increment the counters when a unit is added to the plan",
      "fullTitle": "ACTION: ADD_UNIT Should correctly increment the counters when a unit is added to the plan",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"ADD_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 30 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "cef4a16e-06af-44cc-b844-cd0ff3a84db9",
      "parentUUID": "8c271cc6-1224-44c1-965a-3301527de7c1",
      "skipped": false
    },
    {
      "title": "Should not decrease counters if there are no units in the overload column",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units in the overload column",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: []\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "280156c0-161e-4eb9-a777-4736290409ed",
      "parentUUID": "9cca7867-a0e5-42e6-ad3b-e53c3bf853c9",
      "skipped": false
    },
    {
      "title": "Should not decrease counters if there are no units which have values in the overload column",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units which have values in the overload column",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [null, {}]\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "503848cb-fb93-4323-9947-fdd2018e0a22",
      "parentUUID": "9cca7867-a0e5-42e6-ad3b-e53c3bf853c9",
      "skipped": false
    },
    {
      "title": "Should decrease counters correctly for units in the overload column",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should decrease counters correctly for units in the overload column",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [{\n        CreditPoints: 6,\n        Cost: 1134\n    }, {\n        CreditPoints: 12,\n        Cost: 2256\n    }]\n};\nvar stateAfter = { cost: 36610, creditPoints: 126 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1b1054d3-f28b-4203-8d90-b8b5b9eaf7b5",
      "parentUUID": "9cca7867-a0e5-42e6-ad3b-e53c3bf853c9",
      "skipped": false
    },
    {
      "title": "Should not change state if it does not recognise an action",
      "fullTitle": "DEFAULT Should not change state if it does not recognise an action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "46e0e895-cc0e-4fba-a155-a59fadb8354c",
      "parentUUID": "86d4332e-a53d-49ab-880c-bbeac9e23adf",
      "skipped": false
    },
    {
      "title": "Should insert a teaching period with the given info correctly into middle of array",
      "fullTitle": "ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into middle of array",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2018,\n    code: \"S2-01\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c59cb4c1-0106-4d32-a0a6-f2a5af28c562",
      "parentUUID": "e5a234ae-f1b5-43cf-879f-9a133dcc206c",
      "skipped": false
    },
    {
      "title": "Should insert a teaching period with the given info correctly into start of array",
      "fullTitle": "ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into start of array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2016,\n    code: \"S2-01\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2016, code: \"S2-01\", units: [null, null, null, null] }, { year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "23ecd4b3-3c85-4216-a56d-d05fb10497d8",
      "parentUUID": "e5a234ae-f1b5-43cf-879f-9a133dcc206c",
      "skipped": false
    },
    {
      "title": "Should remove a teaching period at the given index",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the given index",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "59352da6-5533-4fa5-a5fb-0a9eed81c34f",
      "parentUUID": "09f8af85-0133-46cd-acab-022d154aae7b",
      "skipped": false
    },
    {
      "title": "Should remove a teaching period at the start of the array",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the start of the array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "2c195068-d4ff-4335-bf76-5f932b051e88",
      "parentUUID": "09f8af85-0133-46cd-acab-022d154aae7b",
      "skipped": false
    },
    {
      "title": "Should add the given teaching period to the end of the array",
      "fullTitle": "ACTION: APPEND_TEACHING_PERIOD Should add the given teaching period to the end of the array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"APPEND_TEACHING_PERIOD\",\n    year: 2020,\n    code: \"S2-01\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }, { year: 2020, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f6c3d8e2-e96a-40e1-a59b-46716714276d",
      "parentUUID": "d7411a5a-14f2-419b-8b3f-49ea22061a90",
      "skipped": false
    },
    {
      "title": "Should increase the study load if the study load is less than 4",
      "fullTitle": "ACTION: INCREASE_STUDY_LOAD Should increase the study load if the study load is less than 4",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "fd23e794-7f03-4a58-add3-aff7e51a6e66",
      "parentUUID": "936a040a-24d2-409f-ab11-374a0a40f63c",
      "skipped": false
    },
    {
      "title": "Should not increase the study load if the study load is 6 or greater",
      "fullTitle": "ACTION: INCREASE_STUDY_LOAD Should not increase the study load if the study load is 6 or greater",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null, null] }],\n    numberOfUnits: 6\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null, null] }],\n    numberOfUnits: 6\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ea84ea5d-649e-4437-9ecb-ce73a66d5428",
      "parentUUID": "936a040a-24d2-409f-ab11-374a0a40f63c",
      "skipped": false
    },
    {
      "title": "Should decrease the study load if the study load is greater than 4",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should decrease the study load if the study load is greater than 4",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1023f0eb-d90f-4d1b-8dc9-0fb267786259",
      "parentUUID": "0f248d7f-0d45-4569-aaea-2e967faacdb5",
      "skipped": false
    },
    {
      "title": "Should not decrease the study load if the study load is 4 or less",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should not decrease the study load if the study load is 4 or less",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e20380f8-1ba5-4b5b-9bf0-c47f4e8b7c82",
      "parentUUID": "0f248d7f-0d45-4569-aaea-2e967faacdb5",
      "skipped": false
    },
    {
      "title": "Should remove all teaching periods and set the amount of units to 4",
      "fullTitle": "ACTION: CLEAR_COURSE Should remove all teaching periods and set the amount of units to 4",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = {\n    courseInfo: {\n        courseName: \"\",\n        faculty: \"\",\n        creditPoints: 0,\n        courseDescription: \"\",\n        durationStr: \"\",\n        modeAndLocation: \"\",\n        awards: \"\",\n        abrTitle: \"\"\n    },\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "13bc38b0-ff2e-42f2-8094-97cc5eff965b",
      "parentUUID": "02b66432-f4cc-446b-b3e3-3d78bc5aa8f1",
      "skipped": false
    },
    {
      "title": "Should add a unit correctly to the start of an array",
      "fullTitle": "ACTION: ADD_UNIT Should add a unit correctly to the start of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "908cf372-fd56-4fb0-8af7-2dd05ac80872",
      "parentUUID": "3e7d3ec0-f171-4093-9c30-e0c73b64ee89",
      "skipped": false
    },
    {
      "title": "Should add a unit correctly to the middle of an array",
      "fullTitle": "ACTION: ADD_UNIT Should add a unit correctly to the middle of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "bec37835-7d25-4590-803e-392479bd0e11",
      "parentUUID": "3e7d3ec0-f171-4093-9c30-e0c73b64ee89",
      "skipped": false
    },
    {
      "title": "Should add a unit correctly to the end of an array",
      "fullTitle": "ACTION: ADD_UNIT Should add a unit correctly to the end of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "20b45b97-736d-4e1d-8cee-b98154d9ade6",
      "parentUUID": "3e7d3ec0-f171-4093-9c30-e0c73b64ee89",
      "skipped": false
    },
    {
      "title": "Should remove a unit correctly frpm the start of an array",
      "fullTitle": "ACTION: REMOVE_UNIT Should remove a unit correctly frpm the start of an array",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ac3fa4eb-f61d-40af-bbc0-817cb56ab9f3",
      "parentUUID": "287b4a9e-d240-442d-90ad-902b9ef74287",
      "skipped": false
    },
    {
      "title": "Should remove a unit correctly from the middle of an array",
      "fullTitle": "ACTION: REMOVE_UNIT Should remove a unit correctly from the middle of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "baa9c0dc-223e-49b4-b8b3-6187c51cb02e",
      "parentUUID": "287b4a9e-d240-442d-90ad-902b9ef74287",
      "skipped": false
    },
    {
      "title": "Should remove a unit correctly from the end of an array",
      "fullTitle": "ACTION: REMOVE_UNIT Should remove a unit correctly from the end of an array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1711c34a-fe6f-4f93-8d7b-dcd5558082e5",
      "parentUUID": "287b4a9e-d240-442d-90ad-902b9ef74287",
      "skipped": false
    },
    {
      "title": "Should generate a course structure with valid start and end years",
      "fullTitle": "ACTION: GENERATE_COURSE Should generate a course structure with valid start and end years",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2014,\n    endYear: 2016\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4a51d432-3926-4310-84de-a381e64a4500",
      "parentUUID": "fb027c5e-ccbd-4127-b5d4-f4e8b22f88c2",
      "skipped": false
    },
    {
      "title": "Should return an empty course structure with invalid start and end years.",
      "fullTitle": "ACTION: GENERATE_COURSE Should return an empty course structure with invalid start and end years.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2017,\n    endYear: 2013\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f6257594-a172-4984-b3b0-68d87ea5089e",
      "parentUUID": "fb027c5e-ccbd-4127-b5d4-f4e8b22f88c2",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course info is loading",
      "fullTitle": "ACTION: FETCH_COURSE_INFO_PENDING Should correctly show that the course info is loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "63f70fa5-7177-482d-a4bc-3433aee08a28",
      "parentUUID": "d9d4d36b-66bf-42b5-bd88-b184c42df481",
      "skipped": false
    },
    {
      "title": "Should correctly return the payload and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    focusedCourse: null,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_FULFILLED\",\n    payload: { data: {\n            \"propertyMap\": {\n                courseCode: \"Test Code\",\n                courseName: \"Test Course\",\n                mangFac: \"Test Faculty\",\n                creditPoints: 100,\n                courseDescrip: {\n                    \"value\": \"Test Description\"\n                },\n                courseDuration: \"Test Duration\",\n                modeLoc: {\n                    \"value\": \"Test mode and location\"\n                },\n                courseAward: \"Test awards\",\n                abrevTitle: \"Test abreviated title\"\n            }\n        } },\n    courseCode: \"COURSE101\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: {\n        courseCode: \"Test Code\",\n        courseName: \"Test Course\",\n        faculty: \"Test Faculty\",\n        creditPoints: 100,\n        courseDescription: \"Test Description\",\n        durationStr: \"Test Duration\",\n        modeAndLocation: \"Test mode and location\",\n        awards: \"Test awards\",\n        abrTitle: \"Test abreviated title\"\n    },\n    focusedCourse: \"COURSE101\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b6bed747-23bb-4df4-82b8-bfea54008073",
      "parentUUID": "f5098e01-6092-406c-b326-bd70a9e52004",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course info fetch failed and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_INFO_REJECTED Should correctly show that the course info fetch failed and show that it is no longer loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: true,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9aca6a45-96c0-4e22-b30a-9a7ea0a6ecdc",
      "parentUUID": "31936565-5240-41c4-96dd-074cb6d222be",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course template is loading",
      "fullTitle": "ACTION: FETCH_COURSE_TEMPLATE_PENDING Should correctly show that the course template is loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "98cfcd42-fccd-4891-b937-066666101b32",
      "parentUUID": "90cee1b9-2170-40eb-84cb-ba8afcb22709",
      "skipped": false
    },
    {
      "title": "Should correctly return the payload and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_TEMPLATE_FULFILLED Should correctly return the payload and show that it is no longer loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_FULFILLED\",\n    payload: {\n        data: {\n            propertyMap: \"Fake Course Template\"\n        }\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: \"Fake Course Template\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "6f86f462-aaba-4b48-9a39-877a2e788776",
      "parentUUID": "d9f6c40f-e712-436f-b3ed-ec8f1f19f0c9",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course template fetch failed and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_TEMPLATE_REJECTED Should correctly show that the course template fetch failed and show that it is no longer loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: true,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "8b03e0d9-abae-43ca-a0e5-b5519806ac92",
      "parentUUID": "7bd03a59-7534-48d6-96ba-7bcbd3aa451e",
      "skipped": false
    },
    {
      "title": "Should correctly show that the unit info is loading",
      "fullTitle": "ACTION: FETCH_UNIT_INFO_PENDING Should correctly show that the unit info is loading",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: {\n        preqs: \"\",\n        creditPoints: 0,\n        rules: [],\n        locationAndTime: \"\",\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"\",\n        eftsl: 0,\n        descriptions: \"\"\n    },\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: {\n        preqs: \"\",\n        creditPoints: 0,\n        rules: [],\n        locationAndTime: \"\",\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"\",\n        eftsl: 0,\n        descriptions: \"\"\n    },\n    focusedUnitCode: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9420b05d-c32f-498b-9ddf-546c447d1557",
      "parentUUID": "4f839a50-4399-45da-8eee-c7dc2a519036",
      "skipped": false
    },
    {
      "title": "Should correctly return the payload and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_UNIT_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_FULFILLED\",\n    payload: { data: \"Fake Unit Info\" },\n    unitCode: \"FAKE1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: \"Fake Unit Info\",\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "861f02db-97d2-45e6-9f53-ce20e227a43b",
      "parentUUID": "1c2a1ddc-03d0-448c-a803-3836b6b5f0ac",
      "skipped": false
    },
    {
      "title": "Should correctly show that the unit info fetch failed and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_UNIT_INFO_REJECTED Should correctly show that the unit info fetch failed and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_REJECTED\",\n    payload: {\n        response: {\n            status: 404\n        }\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: {\n        response: {\n            status: 404\n        }\n    },\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5f9b4739-9d5c-4faf-967f-50e09f242fef",
      "parentUUID": "6c60ada9-c9e9-488b-ae37-8b1253c3273a",
      "skipped": false
    },
    {
      "title": "Should accurately set the start year and the focused course on submission",
      "fullTitle": "ACTION: SUBMIT_COURSE_FORM Should accurately set the start year and the focused course on submission",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_COURSE_FORM\",\n    startYear: 2020,\n    courseCode: \"TEST1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: \"TEST1001\",\n    startYear: 2020,\n    endYear: 2020\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7f6ffee2-c375-4995-b574-671684027b4f",
      "parentUUID": "aacfee63-cfd3-4f5f-9b4c-3ae58218cedf",
      "skipped": false
    },
    {
      "title": "Should accurately set the start year and end year on submission",
      "fullTitle": "ACTION: SUBMIT_YEAR_FORM Should accurately set the start year and end year on submission",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_YEAR_FORM\",\n    startYear: 2020,\n    endYear: 2025\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2020,\n    endYear: 2025\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "babf4836-c451-4e8e-8613-629d767d0ae6",
      "parentUUID": "498258ab-0745-4636-a81b-7841a2133949",
      "skipped": false
    },
    {
      "title": "Should correctly handle  of teaching periods data",
      "fullTitle": "ACTION: FETCH_TEACHING_PERIODS_PENDING Should correctly handle  of teaching periods data",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "fd8ed21b-8993-48b1-a852-8adfa82498a7",
      "parentUUID": "13dd419b-029b-4fda-9cd4-e43de94a26b2",
      "skipped": false
    },
    {
      "title": "Should correctly handle  of teaching periods data",
      "fullTitle": "ACTION: FETCH_TEACHING_PERIODS_FULFILLED Should correctly handle  of teaching periods data",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_FULFILLED\",\n    payload: \"Teaching period strings\"\n};\nvar stateAfter = {\n    teachingPeriodData: \"Teaching period strings\",\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0160d397-9e5b-41ed-bcba-d5b47060bc90",
      "parentUUID": "cf19a7ca-2952-4100-b888-e74445bb87c1",
      "skipped": false
    },
    {
      "title": "Should correctly handle  of teaching periods data",
      "fullTitle": "ACTION: FETCH_TEACHING_PERIODS_REJECTED Should correctly handle  of teaching periods data",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e1ab5206-4291-4b80-b430-04fde9b511e2",
      "parentUUID": "bd5759d0-c166-4560-894b-f58101726cc3",
      "skipped": false
    },
    {
      "title": "Should set the teaching period code to insert value correctly",
      "fullTitle": "ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should set the teaching period code to insert value correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodCodeToInsert: null,\n    testParam1: 1,\n    testParam2: \"test\"\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"S1-02\"\n};\nvar stateAfter = {\n    teachingPeriodCodeToInsert: \"S1-02\",\n    testParam1: 1,\n    testParam2: \"test\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "6d2d5032-775a-49f3-ae77-6c0fd5b1f8f0",
      "parentUUID": "a6fea31a-6379-4f76-b7a0-77b0e8e4fbbd",
      "skipped": false
    },
    {
      "title": "Should handle the initiation of a course snapshot upload correctly",
      "fullTitle": "ACTION: UPLOAD_COURSE_SNAPSHOT_PENDING Should handle the initiation of a course snapshot upload correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: true\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1ec00fd8-0090-45dc-a9cc-7f7f9a4af292",
      "parentUUID": "24cc8f12-9c4a-4383-a5ba-0b854f472dcf",
      "skipped": false
    },
    {
      "title": "Should handle the successful upload of a course snapshot correctly",
      "fullTitle": "ACTION: UPLOAD_COURSE_SNAPSHOT_FULFILLED Should handle the successful upload of a course snapshot correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"upload string\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: \"upload string\",\n    courseSnapshotUploadSucessful: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "6503b96a-0d8c-4165-b35f-7a708984426b",
      "parentUUID": "1696037a-b608-4f95-8ff0-26687f1cded9",
      "skipped": false
    },
    {
      "title": "Should do handle the rejected upload of a course snapshot correctly",
      "fullTitle": "ACTION: UPLOAD_COURSE_SNAPSHOT_REJECTED Should do handle the rejected upload of a course snapshot correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9fb1b02a-1daf-4ced-a940-4d1e90dcef41",
      "parentUUID": "1f5d85c4-4042-4558-b1ee-41959dae835c",
      "skipped": false
    },
    {
      "title": "Should begin fetching a course snapshot correctly",
      "fullTitle": "ACTION: FETCH_COURSE_SNAPSHOT_PENDING Should begin fetching a course snapshot correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "3966cbfe-e627-4776-a16d-39ac3bcbe647",
      "parentUUID": "2542724e-891c-4009-8497-8a79941501c0",
      "skipped": false
    },
    {
      "title": "Should handle a successful course snapshot fetch correctly",
      "fullTitle": "ACTION: FETCH_COURSE_SNAPSHOT_FULFILLED Should handle a successful course snapshot fetch correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"Snap data\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: \"Snap data\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "93a544f3-e593-4f04-81e6-0f5f5286640a",
      "parentUUID": "c5adc67c-2ace-4b85-aaa5-cd93f3aae7f0",
      "skipped": false
    },
    {
      "title": "Should handle a rejected course snapshot fetch correctly",
      "fullTitle": "ACTION: FETCH_COURSE_SNAPSHOT_REJECTED Should handle a rejected course snapshot fetch correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0a19c78b-ac9f-49ba-8079-d4e56a34ad8a",
      "parentUUID": "f1b8fc4c-fb15-42c0-9f61-cac9f043d642",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_COURSES_PENDING Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: false,\n    courseSearchError: true //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: true,\n    courseSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "546fdc10-db22-4bd1-87e4-689cf3f630c2",
      "parentUUID": "c6806af5-067a-4240-8aa1-7be09f302546",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_COURSES_FULFILLED Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: true,\n    courseSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_FULFILLED\",\n    payload: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    courseSearchIsLoading: false,\n    courseSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "061955ed-068a-4cf4-837b-86c27a665f96",
      "parentUUID": "eb873c42-bbc1-4a86-ad9a-c89274831e06",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_COURSES_REJECTED Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    courseSearchIsLoading: true,\n    courseSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: false,\n    courseSearchError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "2f3e8c83-1a77-4026-b2be-2762468ce0aa",
      "parentUUID": "931a7331-7cf4-4672-8a45-c232fd2ad619",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_AOS_PENDING Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: false,\n    aosSearchError: true //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: true,\n    aosSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "8556b753-8a4f-4de7-9242-ceed4487080e",
      "parentUUID": "2b14f513-6d06-4108-b84b-e760854d8e83",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_AOS_FULFILLED Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: true,\n    aosSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_FULFILLED\",\n    payload: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    aosSearchIsLoading: false,\n    aosSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "34177ba5-eb30-49fd-b1a2-b33e43868e56",
      "parentUUID": "689a65e5-84bb-489c-a5cd-9b2fbf46a61a",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_AOS_REJECTED Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    aosSearchIsLoading: true,\n    aosSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: false,\n    aosSearchError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f4d6a0d9-32d2-4820-ab5f-11c5de1e74a1",
      "parentUUID": "b900ec05-97c1-44f1-b41c-88494d7fba9a",
      "skipped": false
    },
    {
      "title": "Should correctly update the affected units value to the given array",
      "fullTitle": "ACTION: UPDATE_AFFECTED_UNITS Should correctly update the affected units value to the given array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: []\n};\nvar action = {\n    type: \"UPDATE_AFFECTED_UNITS\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5bd97d58-981a-40fa-a815-dcd3a3da6876",
      "parentUUID": "20833cb5-d312-4ecd-abc8-3514dff86264",
      "skipped": false
    },
    {
      "title": "Should correctly update the index of tp to remove value to the given value",
      "fullTitle": "ACTION: UPDATE_INDEX_OF_TP_TO_REMOVE Should correctly update the index of tp to remove value to the given value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 0\n};\nvar action = {\n    type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\",\n    index: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 1\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "cdec5789-9eaa-4829-aa7b-076a06993a3f",
      "parentUUID": "9405b227-344f-4dc5-aeeb-233d838ee349",
      "skipped": false
    },
    {
      "title": "Should correctly set the unit to add to the new unit",
      "fullTitle": "ACTION: UPDATE_UNIT_TO_ADD Should correctly set the unit to add to the new unit",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitInfo: \"TestUnit\",\n    unitToAdd: undefined\n};\nvar action = {\n    type: \"UPDATE_UNIT_TO_ADD\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitInfo: \"TestUnit\",\n    unitToAdd: \"TestUnit\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c65ee963-0bcb-4feb-8081-614a7ac95be6",
      "parentUUID": "c0b89eac-8e37-4a4a-a956-0af667d82529",
      "skipped": false
    },
    {
      "title": "Should correctly set a non-dragging unit being dragged",
      "fullTitle": "ACTION: UPDATE_UNIT_IS_BEING_DRAGGED Should correctly set a non-dragging unit being dragged",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: false\n};\nvar action = {\n    type: \"UPDATE_UNIT_IS_BEING_DRAGGED\",\n    isDragging: true\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9346925a-8440-4de7-a725-b0b741706d9f",
      "parentUUID": "c0283377-3c27-4cde-9fde-88b85b41af8b",
      "skipped": false
    },
    {
      "title": "Should correctly set a dragging unit to be not dragged",
      "fullTitle": "ACTION: UPDATE_UNIT_IS_BEING_DRAGGED Should correctly set a dragging unit to be not dragged",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: true\n};\nvar action = {\n    type: \"UPDATE_UNIT_IS_BEING_DRAGGED\",\n    isDragging: false\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e3a552e5-a19f-41fc-b7c3-3fcdf5348355",
      "parentUUID": "c0283377-3c27-4cde-9fde-88b85b41af8b",
      "skipped": false
    },
    {
      "title": "Should correctly begin moving a unit",
      "fullTitle": "ACTION: MOVING_UNIT Should correctly begin moving a unit",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0\n};\nvar action = {\n    type: \"MOVING_UNIT\",\n    unit: \"TEST-UNIT\",\n    unitIndex: 3,\n    tpIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TEST-UNIT\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 3\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7e5f418e-f333-4d51-a463-809c8f728f3e",
      "parentUUID": "09fec689-8990-43b7-8773-f7f7720e2bd6",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to a teaching period earlier than it",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period earlier than it",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b7836cfd-d28d-43e3-b005-f41a4e472ecb",
      "parentUUID": "791d68c1-ddf0-4e5c-983f-22790f620701",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to a teaching period later than it",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period later than it",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "37360d3b-35eb-441c-be3f-2c13d5e26104",
      "parentUUID": "791d68c1-ddf0-4e5c-983f-22790f620701",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to the same teaching period but earlier position",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but earlier position",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "3532b199-7d1b-4765-bcd4-afb3de8b1437",
      "parentUUID": "791d68c1-ddf0-4e5c-983f-22790f620701",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to the same teaching period but later position",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but later position",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, \"PlaceToMoveTo\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5f8c0901-6b68-46c7-9031-2d7ba0906da2",
      "parentUUID": "791d68c1-ddf0-4e5c-983f-22790f620701",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to the same teaching period and exact same position",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period and exact same position",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7d0599a5-b2e4-444a-abbf-3c0a335b3443",
      "parentUUID": "791d68c1-ddf0-4e5c-983f-22790f620701",
      "skipped": false
    },
    {
      "title": "should cancel moving unit",
      "fullTitle": "ACTION: CANCEL_MOVING_UNIT should cancel moving unit",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: \"TestUnit2\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: undefined,\n    unitsIndexOfUnitToBeMoved: undefined\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ac8a912d-3505-4b81-b79b-5fe32e39544d",
      "parentUUID": "5890b358-44a5-4b03-9abe-867f782a0e4d",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to a teaching period earlier than it",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period earlier than it",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d41fc47b-02fc-4ffd-b6c9-781a2ba91ddc",
      "parentUUID": "1321d605-910e-4257-9d9b-4155ebaac5d8",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to a teaching period later than it",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period later than it",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b2910851-6a91-4e75-bbcb-22801feb7541",
      "parentUUID": "1321d605-910e-4257-9d9b-4155ebaac5d8",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to the same teaching period but earlier position",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but earlier position",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1c98d7e2-36a7-4229-94b3-fad7b17332f7",
      "parentUUID": "1321d605-910e-4257-9d9b-4155ebaac5d8",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to the same teaching period but later position",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but later position",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, \"PlaceToMoveTo\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", null, \"TestUnit\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "06d1f683-96c3-4450-ace6-45c74b63708f",
      "parentUUID": "1321d605-910e-4257-9d9b-4155ebaac5d8",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to the same teaching period and exact same position",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period and exact same position",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "2716593b-c19c-46b2-ba61-292413294512",
      "parentUUID": "1321d605-910e-4257-9d9b-4155ebaac5d8",
      "skipped": false
    },
    {
      "title": "should give no errors for an empty course plan.",
      "fullTitle": "ACTION: VALIDATE_COURSE should give no errors for an empty course plan.",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan.\"\n    }],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    courseErrors: [],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "86070f4b-6171-4731-a2e1-45cc4f704be7",
      "parentUUID": "8c1d8207-6141-4e34-8d04-49085d463d88",
      "skipped": false
    },
    {
      "title": "Should not give duplicate unit errors if the first attempt is in the past, and the second attempt is not two or more years into the future.",
      "fullTitle": "duplicates: Should not give duplicate unit errors if the first attempt is in the past, and the second attempt is not two or more years into the future.",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: new Date().getFullYear() - 1,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, null]\n    }, {\n        code: \"S1-01\",\n        year: new Date().getFullYear() + 1,\n        units: [null, null, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "93a77f92-be99-4550-b1f6-6fe35d38314f",
      "parentUUID": "8ccebe59-2eff-4246-b75a-67e80b31baa0",
      "skipped": false
    },
    {
      "title": "Should give a duplicate unit error if there are two same units in the same teaching period",
      "fullTitle": "duplicates: Should give a duplicate unit error if there are two same units in the same teaching period",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2015,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }, {\n        code: \"S2-01\",\n        year: 2015,\n        units: [null, null, null, {\n            unitCode: \"GJQ2039\"\n        }]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2015,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }, {\n        code: \"S2-01\",\n        year: 2015,\n        units: [null, null, null, {\n            unitCode: \"GJQ2039\"\n        }]\n    }],\n    courseErrors: [{\n        message: \"ABCD1234 already exists in the same teaching period. Please remove this unit.\",\n        coordinates: [[0, 3]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "754e15bc-0738-4c8b-a979-2c4b51e2a7c0",
      "parentUUID": "8ccebe59-2eff-4246-b75a-67e80b31baa0",
      "skipped": false
    },
    {
      "title": "Should give a duplicate error if a duplicate unit is placed in a teaching period two years from now",
      "fullTitle": "duplicates: Should give a duplicate error if a duplicate unit is placed in a teaching period two years from now",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var currentYear = new Date().getFullYear();\nvar stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: currentYear,\n        units: [{\n            unitCode: \"ABC1234\"\n        }, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 2,\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 2,\n        units: [null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: currentYear,\n        units: [{\n            unitCode: \"ABC1234\"\n        }, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 2,\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 2,\n        units: [null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan. Please plan as if you will pass all units.\",\n        coordinates: [[4, 1]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "679174ad-2cf7-4ac9-aeb4-862728c669fe",
      "parentUUID": "8ccebe59-2eff-4246-b75a-67e80b31baa0",
      "skipped": false
    },
    {
      "title": "Should give a course error for a unit not being offered in the teaching period it is in",
      "fullTitle": "offerings: Should give a course error for a unit not being offered in the teaching period it is in",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2019,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: 2019,\n        units: [null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"First semester 2019 (Day)\"]\n            }]\n        }, null]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2019,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: 2019,\n        units: [null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"First semester 2019 (Day)\"]\n            }]\n        }, null]\n    }],\n    courseErrors: [{\n        message: \"ABC1234 is not offered in second semester, 2019.\",\n        coordinates: [[1, 2]]\n    }],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4122dde7-e383-4b03-9b0e-d74559512fe9",
      "parentUUID": "c492b82a-b882-4f64-8c21-db694b7ba9df",
      "skipped": false
    },
    {
      "title": "Should give a course error for a missing prereq",
      "fullTitle": "rules: Should give a course error for a missing prereq",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"Must have passed an (I/W) unit in {DEF2345, QLS2029}\",\n                endDate: \"\"\n            }]\n        }]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"Must have passed an (I/W) unit in {DEF2345, QLS2029}\",\n                endDate: \"\"\n            }]\n        }]\n    }],\n    courseErrors: [{\n        message: \"You must complete DEF2345 or QLS2029 before you can do ABC1234.\",\n        coordinates: [[0, 3]]\n    }],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0c92e007-faa7-4e22-a927-d5a055c0b682",
      "parentUUID": "b4d5f52d-fb99-4dde-a7c6-6ed2dcd2a687",
      "skipped": false
    },
    {
      "title": "Should give an error for credit points being lower than the minimum required for the unit",
      "fullTitle": "rules: Should give an error for credit points being lower than the minimum required for the unit",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2016,\n        code: \"S2-01\",\n        units: [{\n            unitCode: \"TEST1011\",\n            creditPoints: 6\n        }, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"TEST3031\",\n            creditPoints: 6,\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"Must have passed 24 credit points\"\n            }]\n        }, null, null, null]\n    }, {\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2016,\n        code: \"S2-01\",\n        units: [{\n            unitCode: \"TEST1011\",\n            creditPoints: 6\n        }, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"TEST3031\",\n            creditPoints: 6,\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"Must have passed 24 credit points\"\n            }]\n        }, null, null, null]\n    }, {\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"You need 18 more credit points before doing TEST3031.\",\n        coordinates: [[2, 1]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "8315f61d-d685-4b23-bfc2-3da576c2fc9c",
      "parentUUID": "b4d5f52d-fb99-4dde-a7c6-6ed2dcd2a687",
      "skipped": false
    },
    {
      "title": "Should correctly handle prohibitions",
      "fullTitle": "rules: Should correctly handle prohibitions",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2013,\n        code: \"S1-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\"\n        }]\n    }, {\n        year: 2013,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"BCD1234\",\n            rules: [{\n                ruleSummary: \"INCOMP\",\n                ruleString: \"Incompatible with achievement in {ABC1234}\"\n            }]\n        }, null, null]\n    }],\n    courseErrors: [{\n        message: \"Please remove BCD1234, as completing ABC1234 prohibits you from doing this unit.\",\n        coordinates: [[1, 1]]\n    }]\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "dafdf325-7c6b-4151-8699-41761122edf2",
      "parentUUID": "b4d5f52d-fb99-4dde-a7c6-6ed2dcd2a687",
      "skipped": false
    },
    {
      "title": "Should correctly handle the Do branch of For COURSE_CODE syntax",
      "fullTitle": "rules: Should correctly handle the Do branch of For COURSE_CODE syntax",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2014,\n        code: \"S1-01\",\n        units: [{\n            unitCode: \"DEF2345\",\n            unitName: \"Test unit\",\n            rules: [{\n                ruleSummary: \"COREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {S2029, S3019} Do Any passed co-req (I/W) unit in {ABC2022} Otherwise true\",\n                endDate: \"\"\n            }]\n        }, null, null, null]\n    }],\n    courseInfo: {\n        courseCode: \"S2029\"\n    },\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2014,\n        code: \"S1-01\",\n        units: [{\n            unitCode: \"DEF2345\",\n            unitName: \"Test unit\",\n            rules: [{\n                ruleSummary: \"COREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {S2029, S3019} Do Any passed co-req (I/W) unit in {ABC2022} Otherwise true\",\n                endDate: \"\"\n            }]\n        }, null, null, null]\n    }],\n    courseInfo: {\n        courseCode: \"S2029\"\n    },\n    courseErrors: [{\n        message: \"You must complete ABC2022 before or whilst doing DEF2345.\",\n        coordinates: [[0, 0]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "067ab77e-79c9-4488-9d88-f6cd88420f27",
      "parentUUID": "b4d5f52d-fb99-4dde-a7c6-6ed2dcd2a687",
      "skipped": false
    },
    {
      "title": "Should correctly handle the Otherwise branch of For COURSE_CODE syntax",
      "fullTitle": "rules: Should correctly handle the Otherwise branch of For COURSE_CODE syntax",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }, {\n        year: 2018,\n        code: \"WS-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"Winter semester 2018 (Day)\"]\n            }],\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {Q2001, Q2003} Do true Otherwise Must have passed 1 (I/W) units in {TEST1001}\",\n                endDate: \"\"\n            }]\n        }]\n    }, {\n        year: 2018,\n        code: \"S2-01\",\n        units: [null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }, {\n        year: 2018,\n        code: \"WS-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"Winter semester 2018 (Day)\"]\n            }],\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {Q2001, Q2003} Do true Otherwise Must have passed 1 (I/W) units in {TEST1001}\",\n                endDate: \"\"\n            }]\n        }]\n    }, {\n        year: 2018,\n        code: \"S2-01\",\n        units: [null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"You must complete TEST1001 before you can do ABC1234.\",\n        coordinates: [[1, 3]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "459c3e08-dcc5-4e57-8a97-9824f4bc760c",
      "parentUUID": "b4d5f52d-fb99-4dde-a7c6-6ed2dcd2a687",
      "skipped": false
    },
    {
      "title": "Should leave invalidUnitSlotCoordinates empty if there are no invalid unit slots",
      "fullTitle": "ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS Should leave invalidUnitSlotCoordinates empty if there are no invalid unit slots",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2015,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: false\n};\nvar action = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: {\n        unitCode: \"TEST1001\",\n        unitName: \"Test unit\",\n        locationAndTime: [{\n            location: \"Caulfield\",\n            time: [\"First semester 2017 (Day)\"]\n        }]\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2015,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b1f8ac98-a4d2-401d-83db-6acbc9200b43",
      "parentUUID": "c3c44761-0461-4583-afb7-db2f81e5aabd",
      "skipped": false
    },
    {
      "title": "Should highlight teaching periods that contains the same unit",
      "fullTitle": "ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS Should highlight teaching periods that contains the same unit",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var currentYear = new Date().getFullYear();\nvar stateBefore = {\n    teachingPeriods: [{\n        year: currentYear - 2,\n        code: \"FY-01\",\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        year: currentYear - 1,\n        code: \"FY-01\",\n        units: [null, null, {\n            unitCode: \"DEF2345\"\n        }, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: false\n};\nvar action = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: {\n        unitCode: \"ABC1234\",\n        locationAndTime: [{\n            location: \"Parkville\",\n            time: [\"Full year 2018 (Day)\"]\n        }]\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: currentYear - 2,\n        code: \"FY-01\",\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        year: currentYear - 1,\n        code: \"FY-01\",\n        units: [null, null, {\n            unitCode: \"DEF2345\"\n        }, null]\n    }],\n    invalidUnitSlotCoordinates: [[0, null]],\n    highlightingInvalidUnitSlots: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0cf4ea2c-004f-4bf8-ae30-85239bfb0718",
      "parentUUID": "c3c44761-0461-4583-afb7-db2f81e5aabd",
      "skipped": false
    },
    {
      "title": "should not change the state if it receives an unknown action",
      "fullTitle": "DEFAULT should not change the state if it receives an unknown action",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "ef2ba97d-77cd-43cd-a163-eb0f24143654",
      "parentUUID": "35654f51-72a7-4ca7-8801-4b1a5d1a68c7",
      "skipped": false
    },
    {
      "title": "should insert a notification from an empty list",
      "fullTitle": "ACTION: ADD_NOTIFICATION should insert a notification from an empty list",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: []\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "73722c88-1c60-4533-80c0-89e219c32629",
      "parentUUID": "25eb95ab-6734-4adf-9747-4a6972e9541b",
      "skipped": false
    },
    {
      "title": "should prepend a notification into an list of a few existing notifications.",
      "fullTitle": "ACTION: ADD_NOTIFICATION should prepend a notification into an list of a few existing notifications.",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "390cefa7-a395-4714-b53d-4b229387d91a",
      "parentUUID": "25eb95ab-6734-4adf-9747-4a6972e9541b",
      "skipped": false
    },
    {
      "title": "should replace a notification if it already exists with a specified ID",
      "fullTitle": "ACTION: ADD_NOTIFICATION should replace a notification if it already exists with a specified ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    message: \"New message goes over here\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"New message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5c35f8e3-8c50-47a5-bf60-c1f284efbf34",
      "parentUUID": "25eb95ab-6734-4adf-9747-4a6972e9541b",
      "skipped": false
    },
    {
      "title": "Should remove a notification given its ID",
      "fullTitle": "ACTION: REMOVE_NOTIFICATION Should remove a notification given its ID",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    id: \"CONNECTION_LOST\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "730bb50e-7f34-471c-bf74-a87436e72a9d",
      "parentUUID": "5bb1a8e7-2d22-4a8d-9a30-70f83c454a31",
      "skipped": false
    },
    {
      "title": "Should remove a notification given its index",
      "fullTitle": "ACTION: REMOVE_NOTIFICATION Should remove a notification given its index",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    index: 1\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "584f708c-61f6-4efc-8933-fe82758aff6d",
      "parentUUID": "5bb1a8e7-2d22-4a8d-9a30-70f83c454a31",
      "skipped": false
    },
    {
      "title": "Should not change state if it does not recognise an action",
      "fullTitle": "DEFAULT Should not change state if it does not recognise an action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Notifications2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "7e70a66e-2cbd-4951-be4c-43fd523c9d38",
      "parentUUID": "710da2f7-51f2-4d6f-95e4-bdda3e250e4a",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the insert teaching period UI boolean",
      "fullTitle": "ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: true,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "914fa635-a15d-48a8-b0ac-28a9b1c73af1",
      "parentUUID": "0e35d75b-1717-4b6d-b779-4b9d7666861a",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the insert teaching period UI boolean",
      "fullTitle": "ACTION: HIDE_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: true,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1f19d78f-6549-4c85-851f-2bccff31418f",
      "parentUUID": "9b1e13d3-d1e5-4820-b988-81e9d150ec3e",
      "skipped": false
    },
    {
      "title": "Should correctly set the add unit UI boolean to true and correctly hide the sidebar when a unit is being added",
      "fullTitle": "ACTION: ADDING_UNIT Should correctly set the add unit UI boolean to true and correctly hide the sidebar when a unit is being added",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "42396632-ff4f-4c66-8f25-e87018cbca99",
      "parentUUID": "0b1a7415-b4a5-4333-ba1d-9d24df345186",
      "skipped": false
    },
    {
      "title": "Should correctly set the add unit UI boolean to false",
      "fullTitle": "ACTION: ADD_UNIT Should correctly set the add unit UI boolean to false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true\n};\nvar action = {\n    type: \"ADD_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "2a99ec8e-6ed2-4ff9-b315-93d01e215b05",
      "parentUUID": "59dca32b-dd1a-4aa3-8ee8-b37f815ba12c",
      "skipped": false
    },
    {
      "title": "Should correctly set the add unit UI boolean to false",
      "fullTitle": "ACTION: CANCEL_ADDING_UNIT Should correctly set the add unit UI boolean to false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true\n};\nvar action = {\n    type: \"CANCEL_ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b6da6680-93b8-40ca-b7ea-ab9a31aece1d",
      "parentUUID": "5015c84c-a961-4f4e-8637-78928ed1de27",
      "skipped": false
    },
    {
      "title": "Should correctly set the move unit UI boolean to true",
      "fullTitle": "ACTION: MOVING_UNIT Should correctly set the move unit UI boolean to true",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"MOVING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "cd6b1299-7b39-42de-a263-dcd73dff0b22",
      "parentUUID": "b16b004b-8c09-40fa-a0a5-349a90d5bbce",
      "skipped": false
    },
    {
      "title": "Should correctly set the move unit UI boolean to false",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly set the move unit UI boolean to false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"MOVE_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "472bbcfe-1b06-4585-abfd-75d3350ff4cb",
      "parentUUID": "23aed74a-f076-4ba8-9a7e-289431493a68",
      "skipped": false
    },
    {
      "title": "Should correctly set the move unit UI boolean to false",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly set the move unit UI boolean to false",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"SWAP_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c8625db8-05af-4804-b69b-6a5d6bae2813",
      "parentUUID": "28c8b1e0-cf44-4558-ad96-b5f608ec2d3d",
      "skipped": false
    },
    {
      "title": "Should correctly set the move unit UI boolean to false",
      "fullTitle": "ACTION: CANCEL_MOVING_UNIT Should correctly set the move unit UI boolean to false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "31bbaac0-cab3-4941-835e-793ee2e3008c",
      "parentUUID": "626129b8-3623-465a-9ee3-a1dd6ad6de1e",
      "skipped": false
    },
    {
      "title": "Should set the course to read only correctly",
      "fullTitle": "ACTION: SET_COURSE_READ_ONLY Should set the course to read only correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: false\n};\nvar action = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "bb602cff-4556-4fe6-9f15-69d0773594f0",
      "parentUUID": "18ed6e41-9e12-4a5d-9bad-30c60728b988",
      "skipped": false
    },
    {
      "title": "Should set the course to allow edits correctly",
      "fullTitle": "ACTION: SET_COURSE_READ_AND_WRITE Should set the course to allow edits correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: true\n};\nvar action = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d694ac55-9fa7-4bf5-8f25-8f15a835fac2",
      "parentUUID": "76b7b747-d634-4505-aa7b-0edab3484c53",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm delete teaching period modal UI to show",
      "fullTitle": "ACTION: SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to show",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "806c11b7-396e-48c7-8c7e-082e463ad5f1",
      "parentUUID": "136b5697-6c18-40de-bd33-554be9bfd31e",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm delete teaching period modal UI to hide",
      "fullTitle": "ACTION: HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to hide",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "bef341e0-ab1c-4ab7-808b-259523edd756",
      "parentUUID": "dae7e2e2-572e-4a66-b213-38572fbbc28e",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm decrease study load modal UI to show",
      "fullTitle": "ACTION: SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to show",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a8fb54c8-fb53-49a1-af7a-225a33942bbb",
      "parentUUID": "79e3ecfa-1b9c-42e0-b71d-882fa2aaa04c",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm decrease study load modal UI to hide",
      "fullTitle": "ACTION: HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to hide",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "034c54df-3b92-4bfb-bddc-9dd913c4a204",
      "parentUUID": "c44d5df3-f23e-4341-83de-5a438d11da30",
      "skipped": false
    },
    {
      "title": "Should set show flag for custom unit modal to be true",
      "fullTitle": "ACTION: SHOW_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be true",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "3ddf9bc2-cde2-4c79-a8f5-49ef85ac3cf2",
      "parentUUID": "573c0824-9223-4cbc-a7e6-ea0db597eec5",
      "skipped": false
    },
    {
      "title": "Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
      "fullTitle": "ACTION: SHOW_CUSTOM_UNIT_MODAL Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"ABC1234\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: \"ABC1234\",\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "49e2d624-8020-44d4-b88e-a662c63fa41d",
      "parentUUID": "573c0824-9223-4cbc-a7e6-ea0db597eec5",
      "skipped": false
    },
    {
      "title": "Should set unit code and position if it exists on top of setting show flag for custom unit modal to be true",
      "fullTitle": "ACTION: SHOW_CUSTOM_UNIT_MODAL Should set unit code and position if it exists on top of setting show flag for custom unit modal to be true",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"ABC1234\",\n    tpIndex: 0,\n    unitIndex: 2\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: \"ABC1234\",\n    customTpIndex: 0,\n    customUnitIndex: 2\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "3002b9e2-afd6-4f1c-b3dd-8c576859b92e",
      "parentUUID": "573c0824-9223-4cbc-a7e6-ea0db597eec5",
      "skipped": false
    },
    {
      "title": "Should set show flag for custom unit modal to be false",
      "fullTitle": "ACTION: HIDE_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be false",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: true\n};\nvar action = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "fe698d1f-a88e-4c6d-a1d5-60b9877f5b66",
      "parentUUID": "475e74dd-9cac-4397-890e-fcfb4240916d",
      "skipped": false
    },
    {
      "title": "Should correctly show the sidebar when called",
      "fullTitle": "ACTION: SHOW_SIDEBAR Should correctly show the sidebar when called",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: false\n};\nvar action = {\n    type: \"SHOW_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "3cb102ad-9596-4ba5-97b3-3c2548da023f",
      "parentUUID": "80b4f67f-3bc6-420b-936c-bb2e25cbf69a",
      "skipped": false
    },
    {
      "title": "Should correctly hide the sidebar when called",
      "fullTitle": "ACTION: HIDE_SIDEBAR Should correctly hide the sidebar when called",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"HIDE_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "8bc21c0f-ad8a-482d-a10a-0851bcf60cbc",
      "parentUUID": "aa6b70f4-28b8-4725-a9b9-f6e7cdc4d51d",
      "skipped": false
    },
    {
      "title": "Should not change state if it does not recognise the action",
      "fullTitle": "DEFAULT Should not change state if it does not recognise the action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_UI2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "85904c3a-8ac9-42cf-80ce-913091dc270f",
      "parentUUID": "a072aedb-705f-4e7d-8716-fd8199aa83c7",
      "skipped": false
    },
    {
      "title": "Should return a non-negative number",
      "fullTitle": "UTILS: CostCalc Should return a non-negative number",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_CostCalc2.default.calculateCost(0, 0)).to.be.gte(0);\nexpect(_CostCalc2.default.calculateCost(2, 6)).to.be.gte(0);",
      "err": {},
      "isRoot": false,
      "uuid": "4e6ee825-3499-43f0-87e5-7d686bae2133",
      "parentUUID": "5410244a-9acc-4d84-868c-206d5ffa0d62",
      "skipped": false
    },
    {
      "title": "Should multiply SCA band cost with credit points",
      "fullTitle": "UTILS: CostCalc Should multiply SCA band cost with credit points",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var scaBand = 3;\nvar creditPoints = 6;\nvar scaBandCost = _CostCalc2.default.calculateCost(scaBand, 1);\nexpect(_CostCalc2.default.calculateCost(scaBand, creditPoints)).to.equal(scaBandCost * creditPoints);",
      "err": {},
      "isRoot": false,
      "uuid": "e48e3009-9cef-46ab-9a13-14a7c66a762d",
      "parentUUID": "5410244a-9acc-4d84-868c-206d5ffa0d62",
      "skipped": false
    },
    {
      "title": "Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
      "fullTitle": "nextSemester Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([], 2011, [])).to.deep.equal({\n    index: 0,\n    year: 2011,\n    code: \"S1-01\",\n    teachingPeriodData: []\n});",
      "err": {},
      "isRoot": false,
      "uuid": "70196e3a-198b-419d-a40a-97ae5197a54f",
      "parentUUID": "8888bfa1-ee6e-4333-a6c7-11f515687318",
      "skipped": false
    },
    {
      "title": "Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
      "fullTitle": "nextSemester Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([], 2029, sortedTeachingPeriodData)).to.deep.equal({\n    index: 0,\n    year: 2029,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
      "err": {},
      "isRoot": false,
      "uuid": "a41acf0f-a417-43f5-ad15-138475624859",
      "parentUUID": "8888bfa1-ee6e-4333-a6c7-11f515687318",
      "skipped": false
    },
    {
      "title": "Should return semester two if the last teaching period is in semester one, with the same year",
      "fullTitle": "nextSemester Should return semester two if the last teaching period is in semester one, with the same year",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2025,\n    code: \"S1-01\"\n}, {\n    year: 2025,\n    code: \"S2-01\"\n}, {\n    year: 2026,\n    code: \"S1-01\"\n}, {\n    year: 2026,\n    code: \"S2-01\"\n}, {\n    year: 2027,\n    code: \"S1-01\"\n}], 2023, sortedTeachingPeriodData)).to.deep.equal({\n    index: 5,\n    year: 2027,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
      "err": {},
      "isRoot": false,
      "uuid": "f1ddbf65-bb33-44bc-a124-da74c52b7fe2",
      "parentUUID": "8888bfa1-ee6e-4333-a6c7-11f515687318",
      "skipped": false
    },
    {
      "title": "Should return semester one next year if the last teaching period is in semester two",
      "fullTitle": "nextSemester Should return semester one next year if the last teaching period is in semester two",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2015,\n    code: \"FY-01\"\n}, {\n    year: 2017,\n    code: \"S2-01\"\n}], 2015, sortedTeachingPeriodData)).to.deep.equal({\n    index: 2,\n    year: 2018,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
      "err": {},
      "isRoot": false,
      "uuid": "c6fdfb80-dab9-4b9a-b075-bbfb1b4cf099",
      "parentUUID": "8888bfa1-ee6e-4333-a6c7-11f515687318",
      "skipped": false
    },
    {
      "title": "Should render a semester string",
      "fullTitle": "getSemesterString Should render a semester string",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2019,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n})).to.equal(\"Semester 2, 2019\");",
      "err": {},
      "isRoot": false,
      "uuid": "18d51725-2ec1-4e40-a956-8554765a030b",
      "parentUUID": "1acf967d-9c20-47e6-b34f-ff8f3b09db77",
      "skipped": false
    },
    {
      "title": "Should revert back to semester codes if teachingPeriodData is not available",
      "fullTitle": "getSemesterString Should revert back to semester codes if teachingPeriodData is not available",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2015,\n    code: \"S1-01\"\n})).to.equal(\"S1-01, 2015\");",
      "err": {},
      "isRoot": false,
      "uuid": "a18d44ae-8897-4d23-bb56-05e7849d32bd",
      "parentUUID": "1acf967d-9c20-47e6-b34f-ff8f3b09db77",
      "skipped": false
    },
    {
      "title": "Should return the right year based off current month",
      "fullTitle": "UTILS: ShowYear Should return the right year based off current month",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "if (new Date().getMonth() + 1 >= 11) {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear() + 1);\n} else {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear());\n}",
      "err": {},
      "isRoot": false,
      "uuid": "2141ad7f-187a-438c-b836-7ca28a9c33c6",
      "parentUUID": "7515e63b-f8c4-4a65-b2d6-af478996e299",
      "skipped": false
    },
    {
      "title": "Should contain the same year as it was specified",
      "fullTitle": "UTILS: YearCalc Should contain the same year as it was specified",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getStartYearVals(2016).find(function (year) {\n    return year.value === 2016;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2017).find(function (year) {\n    return year.value === 2017;\n})).to.be.ok;",
      "err": {},
      "isRoot": false,
      "uuid": "580e1d05-2442-42ef-adb8-d589305f9fc5",
      "parentUUID": "f799c20d-18d4-4dd1-bc79-904df28c4382",
      "skipped": false
    },
    {
      "title": "Should contain a year that is ten years from now",
      "fullTitle": "UTILS: YearCalc Should contain a year that is ten years from now",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getStartYearVals(2019).find(function (year) {\n    return year.value === 2029;\n})).to.be.ok;\nexpect(_YearCalc2.default.getStartYearVals(2012).find(function (year) {\n    return year.value === 2002;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2028;\n})).to.be.ok;",
      "err": {},
      "isRoot": false,
      "uuid": "0857a8a1-bc96-443a-99bb-a261ecdd80fb",
      "parentUUID": "f799c20d-18d4-4dd1-bc79-904df28c4382",
      "skipped": false
    },
    {
      "title": "Should not contain any past year when computing end years",
      "fullTitle": "UTILS: YearCalc Should not contain any past year when computing end years",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2017;\n})).to.be.not.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2008;\n})).to.be.not.ok;",
      "err": {},
      "isRoot": false,
      "uuid": "4ca8f893-fd0b-4654-9554-24a0a98403a4",
      "parentUUID": "f799c20d-18d4-4dd1-bc79-904df28c4382",
      "skipped": false
    },
    {
      "title": "Should have starting years go in decreasing order from one year ahead to the minimum",
      "fullTitle": "UTILS: YearCalc Should have starting years go in decreasing order from one year ahead to the minimum",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getStartYearVals(2019).slice(0, 12)).to.deep.equal([{\n    text: \"2020\",\n    value: 2020\n}, {\n    text: \"2019\",\n    value: 2019\n}, {\n    text: \"2018\",\n    value: 2018\n}, {\n    text: \"2017\",\n    value: 2017\n}, {\n    text: \"2016\",\n    value: 2016\n}, {\n    text: \"2015\",\n    value: 2015\n}, {\n    text: \"2014\",\n    value: 2014\n}, {\n    text: \"2013\",\n    value: 2013\n}, {\n    text: \"2012\",\n    value: 2012\n}, {\n    text: \"2011\",\n    value: 2011\n}, {\n    text: \"2010\",\n    value: 2010\n}, {\n    text: \"2009\",\n    value: 2009\n}]);",
      "err": {},
      "isRoot": false,
      "uuid": "520d3cbb-e5c9-46fd-afa1-11a509c5b4de",
      "parentUUID": "f799c20d-18d4-4dd1-bc79-904df28c4382",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "Should create an action to increment credit points counter",
      "fullTitle": "AC: incrementCreditPoints Should create an action to increment credit points counter",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 5\n};\n(0, _expect2.default)(actions.incrementCreditPoints(5)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "0d3ad61f-f37f-4080-95df-56bcc1f5ebeb",
      "parentUUID": "e3930b02-34fa-42eb-bccc-76e812c2a28d",
      "skipped": false
    },
    {
      "title": "Should create an action to decrement credit points counter",
      "fullTitle": "AC: decrementCreditPoints Should create an action to decrement credit points counter",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 5\n};\n(0, _expect2.default)(actions.decrementCreditPoints(5)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "d255c966-41d3-45a3-92e7-efd8b34e5d51",
      "parentUUID": "91b7217e-ccce-46c3-8e39-f616991d3787",
      "skipped": false
    },
    {
      "title": "Should create an action to increment cost counter",
      "fullTitle": "AC: incrementCost Should create an action to increment cost counter",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"INCREMENT_COST\",\n    value: 5\n};\n(0, _expect2.default)(actions.incrementCost(5)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "2ed22cc5-8baf-4239-ae24-bc00880d8032",
      "parentUUID": "0574123b-d30d-41d1-a543-b689b18f14f5",
      "skipped": false
    },
    {
      "title": "Should create an action to decrement cost counter",
      "fullTitle": "AC: decrementCosts Should create an action to decrement cost counter",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"DECREMENT_COST\",\n    value: 5\n};\n(0, _expect2.default)(actions.decrementCost(5)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "86e53cff-5860-48a6-8126-2afe12709b10",
      "parentUUID": "d711820a-db8f-439f-b9e9-d9b653f38a75",
      "skipped": false
    },
    {
      "title": "Should create an action to insert a teaching period",
      "fullTitle": "AC: insertTeachingPeriod Should create an action to insert a teaching period",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{\n    type: \"INSERT_TEACHING_PERIOD\",\n    index: 1,\n    year: 2016,\n    code: \"tpCode\"\n}, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n}];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.insertTeachingPeriod(1, 2016, \"tpCode\"));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "81fb1208-3c2a-46d2-85be-91f191e13db9",
      "parentUUID": "1c2af10d-b61d-4202-84ff-5e0511306e4d",
      "skipped": false
    },
    {
      "title": "Should create an action to remove a teaching period",
      "fullTitle": "AC: removeTeachingPeriod Should create an action to remove a teaching period",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1,\n    units: [\"unit1\", \"unit2\", \"unit3\", null]\n}, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n}];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.removeTeachingPeriod(1, [\"unit1\", \"unit2\", \"unit3\", null]));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "62d8d669-971c-431a-b7eb-9705e302d3ba",
      "parentUUID": "74255026-7ba2-4f38-b93c-84ce3957ed12",
      "skipped": false
    },
    {
      "title": "Should create an action to increase the study load",
      "fullTitle": "AC: increaseStudyLoad Should create an action to increase the study load",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\n(0, _expect2.default)(actions.increaseStudyLoad()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "8bb9efe7-d047-4d37-bbcd-f94430194d95",
      "parentUUID": "d958442c-15c6-4d03-9e60-f36e098866f6",
      "skipped": false
    },
    {
      "title": "Should create an action to increase the study load with units affected",
      "fullTitle": "AC: decreaseStudyLoad Should create an action to increase the study load with units affected",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockTeachingPeriods = [{ year: 2018, code: \"S1-01\", units: [null, null, null, null, \"unit1\"] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }, { year: 2019, code: \"S1-01\", units: [null, null, null, null, \"unit2\"] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null, null] }];\nvar expectedAction = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [\"unit1\", \"unit2\"]\n};\n(0, _expect2.default)(actions.decreaseStudyLoad(mockTeachingPeriods, 4)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "82b3253e-fda8-4673-97d9-4b90405f7b23",
      "parentUUID": "13dec55f-b530-4b1d-84db-c764b1685b40",
      "skipped": false
    },
    {
      "title": "Should create an action to increase the study load with no units affected",
      "fullTitle": "AC: decreaseStudyLoad Should create an action to increase the study load with no units affected",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockTeachingPeriods = [{ year: 2018, code: \"S1-01\", units: [null, null, null, \"unit1\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }, { year: 2019, code: \"S1-01\", units: [null, null, null, \"unit2\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null, null] }];\nvar expectedAction = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: []\n};\n(0, _expect2.default)(actions.decreaseStudyLoad(mockTeachingPeriods, 4)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "7ea88bb2-7386-4d7e-be56-399ceaed3683",
      "parentUUID": "13dec55f-b530-4b1d-84db-c764b1685b40",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for the addition of a unit that is not a custom unit being dragged",
      "fullTitle": "AC: addUnit Should correctly create the actions required for the addition of a unit that is not a custom unit being dragged",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockUnit = {\n                customUnitDragging: false,\n                cost: 200,\n                creditPoints: 6,\n                unitCode: \"TEST1001\"\n            };\n            var expectedActions = [{ type: \"ADD_UNIT\", tpIndex: 1, unitIndex: 1, unit: mockUnit, cost: 200, creditPoints: 6 }, { type: \"CLEAR_HIGHLIGHTING_INVALID_UNIT_SLOTS\" }, { type: \"VALIDATE_COURSE\" }, { type: \"MODIFIED_COURSE_PLAN\" }];\n            var store = mockStore({});\n            store.dispatch(actions.addUnit(1, 1, mockUnit));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "3a77dddd-242e-4134-b596-58c8812b18fd",
      "parentUUID": "d1207809-6363-4416-8dbf-d37a4dc075fc",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for the addition of a unit that is a custom unit being dragged",
      "fullTitle": "AC: addUnit Should correctly create the actions required for the addition of a unit that is a custom unit being dragged",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockUnit = {\n                customUnitDragging: true,\n                cost: 200,\n                creditPoints: 6,\n                unitCode: \"TEST1001\"\n            };\n            var expectedActions = [{\n                type: \"SHOW_CUSTOM_UNIT_MODAL\",\n                unitCode: \"TEST1001\",\n                tpIndex: 1,\n                unitIndex: 1\n            }];\n            var store = mockStore({});\n            store.dispatch(actions.addUnit(1, 1, mockUnit));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "67eced9f-8d32-46d2-8ed1-05ce73860367",
      "parentUUID": "d1207809-6363-4416-8dbf-d37a4dc075fc",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for removal of a unit",
      "fullTitle": "AC: removeUnit Should correctly create the actions required for removal of a unit",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{ type: \"REMOVE_UNIT\", tpIndex: 1, unitIndex: 1, cost: 200, creditPoints: 6 }, { type: \"VALIDATE_COURSE\" }, { type: \"MODIFIED_COURSE_PLAN\" }];\n            var store = mockStore({});\n            store.dispatch(actions.removeUnit(1, 1, 6, 200));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "93b80e19-b4f4-4328-81e7-8008246bb99e",
      "parentUUID": "be5372b1-fc89-4475-8741-54441779f58e",
      "skipped": false
    },
    {
      "title": "Should create the actions for clearing the course",
      "fullTitle": "AC: clearCourse Should create the actions for clearing the course",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{ type: \"CLEAR_COURSE\" }, { type: \"GET_NEXT_SEMESTER_STRING\" }, { type: \"VALIDATE_COURSE\" }];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.clearCourse());\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "989328b7-e759-4056-bde3-c760a26fa556",
      "parentUUID": "01d5110d-47b9-44b9-ae6c-c1531cedc4e1",
      "skipped": false
    },
    {
      "title": "Should create the action for generating the course",
      "fullTitle": "AC: generateCourse Should create the action for generating the course",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2016,\n    endYear: 2019\n};\n(0, _expect2.default)(actions.generateCourse(2016, 2019)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "6349f193-d01a-4213-8529-24b76fc9ab2c",
      "parentUUID": "3c51bce2-4b4f-461e-8c6c-b59f86bcbaad",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for submission of a year form",
      "fullTitle": "AC: submitYearForm Should correctly create the actions required for submission of a year form",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{ type: \"SUBMIT_YEAR_FORM\", startYear: 2016, endYear: 2019 }, { type: \"GENERATE_COURSE\", startYear: 2016, endYear: 2019 }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\n            var store = mockStore({});\n            store.dispatch(actions.submitYearForm(2016, 2019));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "6b9e7f8f-1100-468d-9d4b-eb609b597837",
      "parentUUID": "b060c620-b443-4490-9c56-c3a9b0cb1a21",
      "skipped": false
    },
    {
      "title": "Should correctly create actions required to change the start year",
      "fullTitle": "AC: changeStartYear Should correctly create actions required to change the start year",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{ type: \"CHANGE_START_YEAR\", year: 2020 }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\nvar store = mockStore({});\nstore.dispatch(actions.changeStartYear(2020));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "247217ff-e824-4257-a4e0-e2a6e8256e37",
      "parentUUID": "e8722a91-cbe2-4700-99f7-e3cace279bde",
      "skipped": false
    },
    {
      "title": "Should create the action for generating the course",
      "fullTitle": "AC: getNextSemesterString Should create the action for generating the course",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n};\n(0, _expect2.default)(actions.getNextSemesterString()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "40236e4b-8f18-4791-bc7c-dbf6a36a151d",
      "parentUUID": "8a4be91e-f904-4405-990b-f63619ec61c6",
      "skipped": false
    },
    {
      "title": "Should create the action for getting affected units in an overload column",
      "fullTitle": "AC: getAffectedUnitsInColumn Should create the action for getting affected units in an overload column",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"GET_AFFECTED_UNITS_IN_OVERLOAD_COLUMN\",\n    index: 4\n};\n(0, _expect2.default)(actions.getAffectedUnitsInColumn(4)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "224859ce-ccbe-4868-92e8-2ee232b24903",
      "parentUUID": "e1677b32-2650-4e6c-937c-fd9bb19ee2cf",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for deletion of a teaching period with units affected",
      "fullTitle": "AC: attemptToDeleteTeachingPeriod Should correctly create the actions required for deletion of a teaching period with units affected",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockUnits = [{ unitCode: \"TEST101\", unitName: \"unit1\" }, null, { unitCode: \"TEST102\", unitName: \"unit2\" }, null, null];\nvar expectedActions = [{ type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\" }, { type: \"UPDATE_AFFECTED_UNITS\", affectedUnits: [\"TEST101 - unit1\", \"TEST102 - unit2\"] }, { type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\", index: 1 }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDeleteTeachingPeriod(1, mockUnits));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "575b2b3d-337c-43ef-815c-0a03827aaef1",
      "parentUUID": "f56758b3-7b26-45b3-9b7a-33c062287531",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for deletion of a teaching period with no units affected",
      "fullTitle": "AC: attemptToDeleteTeachingPeriod Should correctly create the actions required for deletion of a teaching period with no units affected",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockUnits = [null, null, null, null, null];\nvar expectedActions = [{ type: \"REMOVE_TEACHING_PERIOD\", index: 1, units: [null, null, null, null, null] }, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, { type: \"GET_NEXT_SEMESTER_STRING\" }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDeleteTeachingPeriod(1, mockUnits));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "4becc5b9-13fc-49e7-9a87-218b54cb747c",
      "parentUUID": "f56758b3-7b26-45b3-9b7a-33c062287531",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for decrease of a study load with units affected",
      "fullTitle": "AC: attemptToDecreaseStudyLoad Should correctly create the actions required for decrease of a study load with units affected",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockTeachingPeriods = [{ units: [null, null, { unitCode: \"TEST10A\", unitName: \"unitA\" }, null, { unitCode: \"TEST101\", unitName: \"unit1\" }] }, { units: [null, null, { unitCode: \"TEST10B\", unitName: \"unitB\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10C\", unitName: \"unitC\" }, null, { unitCode: \"TEST102\", unitName: \"unit2\" }] }, { units: [null, null, { unitCode: \"TEST10D\", unitName: \"unitD\" }, null, null] }];\nvar expectedActions = [{ type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\" }, { type: \"UPDATE_AFFECTED_UNITS\", affectedUnits: [\"TEST101 - unit1\", \"TEST102 - unit2\"] }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDecreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "5a56ee9f-877d-4763-a87e-8dc1f9640c54",
      "parentUUID": "fff4efee-56be-4b8a-aad3-18bd34eae504",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for decrease of a study load with no units affected",
      "fullTitle": "AC: attemptToDecreaseStudyLoad Should correctly create the actions required for decrease of a study load with no units affected",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockTeachingPeriods = [{ units: [null, null, { unitCode: \"TEST10A\", unitName: \"unitA\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10B\", unitName: \"unitB\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10C\", unitName: \"unitC\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10D\", unitName: \"unitD\" }, null, null] }];\nvar expectedActions = [{ type: \"DECREASE_STUDY_LOAD\", units: [] }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDecreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "5bacafd9-e6c1-4ef4-bcd1-448d89eadab8",
      "parentUUID": "fff4efee-56be-4b8a-aad3-18bd34eae504",
      "skipped": false
    },
    {
      "title": "Should create the action for getting affected units in an teaching period row",
      "fullTitle": "AC: getAffectedUnitsInRow Should create the action for getting affected units in an teaching period row",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"GET_AFFECTED_UNITS_IN_TEACHING_PERIOD_ROW\",\n    index: 4\n};\n(0, _expect2.default)(actions.getAffectedUnitsInRow(4)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "5e330f3d-4ee8-4238-92ad-50f087f02d36",
      "parentUUID": "6683d87d-01bc-408d-8d03-844e49ee1bf5",
      "skipped": false
    },
    {
      "title": "Should create the action for validating the course",
      "fullTitle": "AC: validateCourse Should create the action for validating the course",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"VALIDATE_COURSE\"\n};\n(0, _expect2.default)(actions.validateCourse()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "055d4cd6-20b0-4bc1-8991-b692876715d5",
      "parentUUID": "f12127e4-8b73-4ce3-bef9-7aeb1647ec5e",
      "skipped": false
    },
    {
      "title": "Should create the action for highlighting the invalid unit slots",
      "fullTitle": "AC: highlightInvalidUnitSlots Should create the action for highlighting the invalid unit slots",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: \"UnitTest\",\n    ignoreCoordinate: false\n};\n(0, _expect2.default)(actions.highlightInvalidUnitSlots(\"UnitTest\", false)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "f2c72426-c527-4442-810c-ed45f948d797",
      "parentUUID": "d69746ce-cc01-4e4c-bf69-9ea40d6dcebd",
      "skipped": false
    },
    {
      "title": "Should create the action for clearing the highlighting for invalid unit slots",
      "fullTitle": "AC: clearHighlightingInvalidUnitSlots Should create the action for clearing the highlighting for invalid unit slots",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"CLEAR_HIGHLIGHTING_INVALID_UNIT_SLOTS\"\n};\n(0, _expect2.default)(actions.clearHighlightingInvalidUnitSlots()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "b735e177-16bd-4a3d-93d6-560e65194d24",
      "parentUUID": "5ab85ef6-36ad-4d8a-a8d1-8a9633603a70",
      "skipped": false
    },
    {
      "title": "Should create an action to show the insert teaching period UI",
      "fullTitle": "AC: showInsertTeachingPeriodUI Should create an action to show the insert teaching period UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"testTPCode\"\n};\n(0, _expect2.default)(actions.showInsertTeachingPeriodUI(\"testTPCode\")).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "7298eabf-1145-4cbd-aeb8-2adf48eb8e12",
      "parentUUID": "8f0b307f-8a15-4e2b-bf8a-c6a18764f3a3",
      "skipped": false
    },
    {
      "title": "Should create an action to hide the insert teaching period UI",
      "fullTitle": "AC: hideInsertTeachingPeriodUI Should create an action to hide the insert teaching period UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\n(0, _expect2.default)(actions.hideInsertTeachingPeriodUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "f3c41e78-808b-4fc8-bbd0-d234da12f7d0",
      "parentUUID": "059a5f18-ca5f-451d-963e-e10e239139bd",
      "skipped": false
    },
    {
      "title": "Should create an action to show the add unit UI",
      "fullTitle": "AC: showAddingUnitUI Should create an action to show the add unit UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_ADD_UNIT_UI\"\n};\n(0, _expect2.default)(actions.showAddingUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "db2e66f4-3fba-442b-a0b8-c8e63f6367ec",
      "parentUUID": "38ca2717-642a-42e6-99ef-be665d9622b8",
      "skipped": false
    },
    {
      "title": "Should create an action to hide the add unit UI",
      "fullTitle": "AC: hideAddingUnitUI Should create an action to hide the add unit UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_ADD_UNIT_UI\"\n};\n(0, _expect2.default)(actions.hideAddingUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "8fa5d6c9-79ba-428f-92b5-9732e10a48e8",
      "parentUUID": "7f589ae1-a985-416b-add5-5d3184b1bb11",
      "skipped": false
    },
    {
      "title": "Should create an action to show the move unit UI",
      "fullTitle": "AC: showMoveUnitUI Should create an action to show the move unit UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_MOVE_UNIT_UI\"\n};\n(0, _expect2.default)(actions.showMoveUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "b0b37967-7d56-450b-9012-92c0e61951d5",
      "parentUUID": "f7f9e765-a4b5-4305-8e18-4ffc0ee04731",
      "skipped": false
    },
    {
      "title": "Should create an action to hide move unit UI",
      "fullTitle": "AC: hideMoveUnitUI Should create an action to hide move unit UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_MOVE_UNIT_UI\"\n};\n(0, _expect2.default)(actions.hideMoveUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "3bce4206-7244-49e0-b16a-dccb2fbb03d6",
      "parentUUID": "3e64a821-dbd9-4d6a-92d4-76186943279d",
      "skipped": false
    },
    {
      "title": "Should create an action to show confirm delete teaching period UI",
      "fullTitle": "AC: showConfirmDeleteTeachingPeriodUI Should create an action to show confirm delete teaching period UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\n(0, _expect2.default)(actions.showConfirmDeleteTeachingPeriodUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "14250885-257e-476e-8195-10dcbdc4d21e",
      "parentUUID": "22e8b083-e685-4761-9711-8134482e2915",
      "skipped": false
    },
    {
      "title": "Should create an action to hide confirm delete teaching period UI",
      "fullTitle": "AC: hideConfirmDeleteTeachingPeriodUI Should create an action to hide confirm delete teaching period UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\n(0, _expect2.default)(actions.hideConfirmDeleteTeachingPeriodUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "1d8e6f57-0c5d-4e8a-8b5b-f14443457f09",
      "parentUUID": "d47a08e5-50e6-40c6-8db9-9c812542b3c5",
      "skipped": false
    },
    {
      "title": "Should create an action to show confirm decrease study load UI",
      "fullTitle": "AC: showConfirmDecreaseStudyLoadUI Should create an action to show confirm decrease study load UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\n(0, _expect2.default)(actions.showConfirmDecreaseStudyLoadUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "1779082d-8189-4350-b9e8-89fa2abd902d",
      "parentUUID": "a2dba0c6-b427-489c-a585-83df8baf5bfc",
      "skipped": false
    },
    {
      "title": "Should create an action to hide confirm decrease study load UI",
      "fullTitle": "AC: hideConfirmDecreaseStudyLoadUI Should create an action to hide confirm decrease study load UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\n(0, _expect2.default)(actions.hideConfirmDecreaseStudyLoadUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "f7045316-c79d-474c-bc9d-297e1248b0d3",
      "parentUUID": "92fa434f-b836-4005-9483-3e654fe8fc9d",
      "skipped": false
    },
    {
      "title": "Should create an action to show custum unit UI",
      "fullTitle": "AC: showCustomUnitUI Should create an action to show custum unit UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"TEST1001\"\n};\n(0, _expect2.default)(actions.showCustomUnitUI(\"TEST1001\")).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "6030e12e-ee09-43c7-b750-2056c5b2918d",
      "parentUUID": "cc06d692-c14a-48ab-8e4a-062b50efa6a5",
      "skipped": false
    },
    {
      "title": "Should create an action to hide custom unit UI",
      "fullTitle": "AC: hideCustomUnitUI Should create an action to hide custom unit UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\n(0, _expect2.default)(actions.hideCustomUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "415b9362-2e0c-46b0-818d-a8496c6cb642",
      "parentUUID": "f98b16db-4694-4708-b8e5-e41d3589c240",
      "skipped": false
    },
    {
      "title": "Should create an action to show sidebar",
      "fullTitle": "AC: showSidebar Should create an action to show sidebar",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_SIDEBAR\"\n};\n(0, _expect2.default)(actions.showSidebar()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "3c53c416-b8fa-4b66-8315-61f510a642c3",
      "parentUUID": "ff20fb75-873f-4364-8798-93a252c98ce8",
      "skipped": false
    },
    {
      "title": "Should create an action to hide sidebar",
      "fullTitle": "AC: hideSidebar Should create an action to hide sidebar",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_SIDEBAR\"\n};\n(0, _expect2.default)(actions.hideSidebar()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "db73e724-169b-406f-b676-b7ba71a3db5f",
      "parentUUID": "a73cbb7e-2461-4df4-a8fc-7eda0d1bb697",
      "skipped": false
    },
    {
      "title": "Should create an action to set the course to read only",
      "fullTitle": "AC: setCourseReadOnly Should create an action to set the course to read only",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\n(0, _expect2.default)(actions.setCourseReadOnly()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "43118fa8-0079-468e-8a9f-5752fecfba42",
      "parentUUID": "a5707d49-0291-4e77-acef-4944202ba2cd",
      "skipped": false
    },
    {
      "title": "Should create an action to set the course to read and write",
      "fullTitle": "AC: setCourseReadAndWrite Should create an action to set the course to read and write",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\n(0, _expect2.default)(actions.setCourseReadAndWrite()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "d731a151-a64a-4117-b635-f7226c697d0f",
      "parentUUID": "cbbe0b78-8a9a-4270-9526-c9cfad4e3c98",
      "skipped": false
    },
    {
      "title": "Should render a notification title and a message",
      "fullTitle": "COMPONENT: Notification Should render a notification title and a message",
      "timedOut": false,
      "duration": 50,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, {\n    title: \"This is a test\",\n    message: \"Some message goes over here\"\n}));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(\"This is a test\");\nexpect(wrapper.text().replace(\"This is a test\", \"\").trim()).to.equal(\"Some message goes over here\");",
      "err": {},
      "isRoot": false,
      "uuid": "f0159939-a8a1-4f4f-8564-1b87139b59a9",
      "parentUUID": "0346401f-3dfc-4031-afc3-3dfc9693f05f",
      "skipped": false
    },
    {
      "title": "Should have a default level to be info if it is not specified",
      "fullTitle": "COMPONENT: Notification Should have a default level to be info if it is not specified",
      "timedOut": false,
      "duration": 12,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, null)).find(\".info.message\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "61de4e62-ceb0-439b-8db1-be8ccdcf6c35",
      "parentUUID": "0346401f-3dfc-4031-afc3-3dfc9693f05f",
      "skipped": false
    },
    {
      "title": "Should follow a specified level",
      "fullTitle": "COMPONENT: Notification Should follow a specified level",
      "timedOut": false,
      "duration": 43,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"info\" })).find(\".info.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"warning\" })).find(\".warning.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"error\" })).find(\".negative.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"success\" })).find(\".positive.message\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "6a981150-0a00-448c-95da-06f1b64a9038",
      "parentUUID": "0346401f-3dfc-4031-afc3-3dfc9693f05f",
      "skipped": false
    },
    {
      "title": "should be called exactly once when main button has been clicked",
      "fullTitle": "#addSemester() should be called exactly once when main button has been clicked",
      "timedOut": false,
      "duration": 22,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var addSemester = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: identity,\n    addSemester: addSemester }));\nwrapper.find(\"Button\").forEach(function (button) {\n    button.simulate(\"click\");\n});\nexpect(addSemester).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "787b604d-74d5-4cd5-8597-37d5b4f02e17",
      "parentUUID": "9a03ee6a-7240-48f9-a3e2-d4321d1985ac",
      "skipped": false
    },
    {
      "title": "should be called as many times as the number of insert teaching periods options upon click",
      "fullTitle": "#insert() should be called as many times as the number of insert teaching periods options upon click",
      "timedOut": false,
      "duration": 46,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var insert = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: insert,\n    addSemester: identity }));\nvar dropdownItems = wrapper.find(\".item\");\ndropdownItems.forEach(function (node) {\n    return node.simulate(\"click\");\n});\nexpect(insert).to.have.callCount(dropdownItems.length);",
      "err": {},
      "isRoot": false,
      "uuid": "12e73459-7284-4a88-8fdc-0fd984d3c3e6",
      "parentUUID": "dc3f3556-9706-4d66-a2f1-3e84d30ddc7e",
      "skipped": false
    },
    {
      "title": "should render two ratings",
      "fullTitle": "COMPONENT: SetuRating should render two ratings",
      "timedOut": false,
      "duration": 48,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, null)).find(\".rating\")).to.have.length(2);",
      "err": {},
      "isRoot": false,
      "uuid": "53fcb09a-0d66-4fab-876e-c1aefba1c994",
      "parentUUID": "2d72d7a1-d87c-4726-a798-b20ac9826c5d",
      "skipped": false
    },
    {
      "title": "should render a book if learning ratings is >=2.5",
      "fullTitle": "COMPONENT: SetuRating should render a book if learning ratings is >=2.5",
      "timedOut": false,
      "duration": 62,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 4.13 })).find(\".book\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.50 })).find(\".book\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "b8c390da-eb9c-4dee-a01a-301a2797f49f",
      "parentUUID": "2d72d7a1-d87c-4726-a798-b20ac9826c5d",
      "skipped": false
    },
    {
      "title": "should render a remove circle if learning ratings is <2.5",
      "fullTitle": "COMPONENT: SetuRating should render a remove circle if learning ratings is <2.5",
      "timedOut": false,
      "duration": 50,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 1.51 })).find(\".remove.circle\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.49 })).find(\".remove.circle\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "2f05de00-bfed-4825-a950-7886ada04be8",
      "parentUUID": "2d72d7a1-d87c-4726-a798-b20ac9826c5d",
      "skipped": false
    },
    {
      "title": "should render a thumbs up if enjoyment ratings is >=2.5",
      "fullTitle": "COMPONENT: SetuRating should render a thumbs up if enjoyment ratings is >=2.5",
      "timedOut": false,
      "duration": 48,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 4.13 })).find(\".thumbs.up\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.50 })).find(\".thumbs.up\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "54b257bd-aa94-4564-8da1-52ec11f0cd0e",
      "parentUUID": "2d72d7a1-d87c-4726-a798-b20ac9826c5d",
      "skipped": false
    },
    {
      "title": "should render a thumbs down if enjoyment ratings is <2.5",
      "fullTitle": "COMPONENT: SetuRating should render a thumbs down if enjoyment ratings is <2.5",
      "timedOut": false,
      "duration": 48,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 1.51 })).find(\".thumbs.down\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.49 })).find(\".thumbs.down\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "f1836200-5517-4c7e-b4a2-325f31664eaa",
      "parentUUID": "2d72d7a1-d87c-4726-a798-b20ac9826c5d",
      "skipped": false
    },
    {
      "title": "should only render a unit code and a unit name",
      "fullTitle": "#presentational should only render a unit code and a unit name",
      "timedOut": false,
      "duration": 26,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var unitCode = \"ABC1234\";\nvar unitName = \"Example unit\";\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: unitCode,\n    name: unitName }));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(unitCode);\nexpect(wrapper.find(\".message\").text().replace(unitCode, \"\").trim()).to.equal(unitName);",
      "err": {},
      "isRoot": false,
      "uuid": "c6126600-0dff-4f13-a05e-ef1c0815b572",
      "parentUUID": "654d8327-c701-42d7-866a-9a3e49e56aef",
      "skipped": false
    },
    {
      "title": "should render a close button only when mouse is over the unit",
      "fullTitle": "#presentational should render a close button only when mouse is over the unit",
      "timedOut": false,
      "duration": 64,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    hovering: false }));\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");\nwrapper.setProps({\n    hovering: true\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"visible\");\nwrapper.setProps({\n    hovering: false\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");",
      "err": {},
      "isRoot": false,
      "uuid": "9a397233-52fe-4781-8528-821e4e178b27",
      "parentUUID": "654d8327-c701-42d7-866a-9a3e49e56aef",
      "skipped": false
    },
    {
      "title": "Should call willAddUnit if unit is a newUnit and it has been clicked",
      "fullTitle": "#events Should call willAddUnit if unit is a newUnit and it has been clicked",
      "timedOut": false,
      "duration": 36,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    newUnit: true,\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    willAddUnit: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"click\");\nexpect(eventFunc).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "3bf288b6-e29b-45f1-93a9-74a337b7f1bd",
      "parentUUID": "5766d7cb-37fc-4ba3-aef2-3a9824025035",
      "skipped": false
    },
    {
      "title": "Should call handleUnitMouseOver when mouse is over the unit",
      "fullTitle": "#events Should call handleUnitMouseOver when mouse is over the unit",
      "timedOut": false,
      "duration": 22,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseOver: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseOver\");\nexpect(eventFunc).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "b6c92498-27d4-4be7-bca8-a2e29a5ec20d",
      "parentUUID": "5766d7cb-37fc-4ba3-aef2-3a9824025035",
      "skipped": false
    },
    {
      "title": "Should call handleUnitMouseMove when mouse moves over the unit",
      "fullTitle": "#events Should call handleUnitMouseMove when mouse moves over the unit",
      "timedOut": false,
      "duration": 17,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseMove: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseMove\");\nexpect(eventFunc).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "312f72f4-751d-4070-a10b-0a31a55c9383",
      "parentUUID": "5766d7cb-37fc-4ba3-aef2-3a9824025035",
      "skipped": false
    },
    {
      "title": "Should call handleUnitMouseOut when mouse is over the unit",
      "fullTitle": "#events Should call handleUnitMouseOut when mouse is over the unit",
      "timedOut": false,
      "duration": 31,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseOut: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseOut\");\nexpect(eventFunc).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "6272e79c-92b0-4df6-bbb5-162edfff9d5b",
      "parentUUID": "5766d7cb-37fc-4ba3-aef2-3a9824025035",
      "skipped": false
    },
    {
      "title": "Should correctly call movingUnit when it is being dragged",
      "fullTitle": "#DnD Should correctly call movingUnit when it is being dragged",
      "timedOut": false,
      "duration": 16,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "testingBeginDrag = true;\ntestingEndDrag = false;\nbackend.simulateBeginDrag([sourceId]);\nexpect(movingUnitSpy).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "44780ba8-95cd-419e-9c8d-ec46d13cc714",
      "parentUUID": "35a75baf-30bc-41ab-9687-9b20b81973ef",
      "skipped": false
    },
    {
      "title": "Should correctylc call cancelMovingUnit ",
      "fullTitle": "#DnD Should correctylc call cancelMovingUnit ",
      "timedOut": false,
      "duration": 21,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "testingBeginDrag = false;\ntestingEndDrag = true;\nbackend.simulateBeginDrag([sourceId]);\nbackend.simulateEndDrag(sourceId);\nexpect(cancelMovingUnitSpy).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "207107a0-8ee6-4c1a-b216-d5d0c884cdda",
      "parentUUID": "35a75baf-30bc-41ab-9687-9b20b81973ef",
      "skipped": false
    },
    {
      "title": "Should increment the credit point state by a given value",
      "fullTitle": "ACTION: INCREMENT_CREDIT_POINTS Should increment the credit point state by a given value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 2, creditPoints: 0 };\nvar action = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 2,\n    creditPoints: 1\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f8f0619e-1617-4264-857a-94164589595c",
      "parentUUID": "459069e3-6134-431b-8000-891ded6832bb",
      "skipped": false
    },
    {
      "title": "Should decrement the credit point state by a given value",
      "fullTitle": "ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state by a given value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c97df884-406b-464b-9cac-960695aef584",
      "parentUUID": "25224370-9c49-40d5-acd9-56f75f67bf93",
      "skipped": false
    },
    {
      "title": "Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
      "fullTitle": "ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 0\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d03ee03b-a12d-4d91-8b15-2141b8ff12ba",
      "parentUUID": "25224370-9c49-40d5-acd9-56f75f67bf93",
      "skipped": false
    },
    {
      "title": "Should increment the cost state by a given value",
      "fullTitle": "ACTION: INCREMENT_COST Should increment the cost state by a given value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 20, creditPoints: 13 };\nvar action = {\n    type: \"INCREMENT_COST\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 21,\n    creditPoints: 13\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "549dc8fc-ee8d-493c-9a9a-e572e05703ae",
      "parentUUID": "edc86931-9529-47f7-ac27-31ac3487c7e9",
      "skipped": false
    },
    {
      "title": "Should decrement the cost state by a given value",
      "fullTitle": "ACTION: DECREMENT_COST Should decrement the cost state by a given value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "40722f1e-038c-4394-a226-d4f8d1e9a23b",
      "parentUUID": "8068476f-f20e-40aa-a29c-aa9fa7139a81",
      "skipped": false
    },
    {
      "title": "Should decrement the cost state to 0 if a value given is larger than the current credit point value",
      "fullTitle": "ACTION: DECREMENT_COST Should decrement the cost state to 0 if a value given is larger than the current credit point value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 0,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "be1c4f45-d877-4344-9bde-90620f3b7daa",
      "parentUUID": "8068476f-f20e-40aa-a29c-aa9fa7139a81",
      "skipped": false
    },
    {
      "title": "Should reset the cost and credit point counters to 0",
      "fullTitle": "ACTION: CLEAR_COURSE Should reset the cost and credit point counters to 0",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b5b44887-29f2-4e3f-ae69-0af2d0345448",
      "parentUUID": "423f77a7-7d39-4b61-afb9-7472ab75a97d",
      "skipped": false
    },
    {
      "title": "Should correctly go through and decrement the counters for each value ",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should correctly go through and decrement the counters for each value ",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { cost: 2, creditPoints: 20 }, { cost: 5, creditPoints: 10 }, null]\n};\nvar stateAfter = { cost: 43, creditPoints: 10 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "285312cf-fdc7-49d3-8545-6b2130c2a7d8",
      "parentUUID": "b5179a09-1cbd-4c77-8c89-99f0182ae918",
      "skipped": false
    },
    {
      "title": "Should not decrement the counters below 0 ",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should not decrement the counters below 0 ",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { cost: 25, creditPoints: 20 }, { cost: 30, creditPoints: 30 }, { cost: 0, creditPoints: 10 }]\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c65f47a1-6650-4ada-bee8-769cbf26df90",
      "parentUUID": "b5179a09-1cbd-4c77-8c89-99f0182ae918",
      "skipped": false
    },
    {
      "title": "Should correctly decrement the counters based on the given units creditpoints and cost",
      "fullTitle": "ACTION: REMOVE_UNIT Should correctly decrement the counters based on the given units creditpoints and cost",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 20 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ae0b666a-e50c-4040-a3dd-5716684e8a55",
      "parentUUID": "9b7a9558-3c09-4db8-9944-fa053b0158ff",
      "skipped": false
    },
    {
      "title": "Should not decrement the counters below 0",
      "fullTitle": "ACTION: REMOVE_UNIT Should not decrement the counters below 0",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d052fc0e-5d8b-4202-a54c-aa27d1a55c6e",
      "parentUUID": "9b7a9558-3c09-4db8-9944-fa053b0158ff",
      "skipped": false
    },
    {
      "title": "Should correctly increment the counters when a unit is added to the plan",
      "fullTitle": "ACTION: ADD_UNIT Should correctly increment the counters when a unit is added to the plan",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"ADD_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 30 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "cef4a16e-06af-44cc-b844-cd0ff3a84db9",
      "parentUUID": "8c271cc6-1224-44c1-965a-3301527de7c1",
      "skipped": false
    },
    {
      "title": "Should not decrease counters if there are no units in the overload column",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units in the overload column",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: []\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "280156c0-161e-4eb9-a777-4736290409ed",
      "parentUUID": "9cca7867-a0e5-42e6-ad3b-e53c3bf853c9",
      "skipped": false
    },
    {
      "title": "Should not decrease counters if there are no units which have values in the overload column",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units which have values in the overload column",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [null, {}]\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "503848cb-fb93-4323-9947-fdd2018e0a22",
      "parentUUID": "9cca7867-a0e5-42e6-ad3b-e53c3bf853c9",
      "skipped": false
    },
    {
      "title": "Should decrease counters correctly for units in the overload column",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should decrease counters correctly for units in the overload column",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [{\n        CreditPoints: 6,\n        Cost: 1134\n    }, {\n        CreditPoints: 12,\n        Cost: 2256\n    }]\n};\nvar stateAfter = { cost: 36610, creditPoints: 126 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1b1054d3-f28b-4203-8d90-b8b5b9eaf7b5",
      "parentUUID": "9cca7867-a0e5-42e6-ad3b-e53c3bf853c9",
      "skipped": false
    },
    {
      "title": "Should not change state if it does not recognise an action",
      "fullTitle": "DEFAULT Should not change state if it does not recognise an action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "46e0e895-cc0e-4fba-a155-a59fadb8354c",
      "parentUUID": "86d4332e-a53d-49ab-880c-bbeac9e23adf",
      "skipped": false
    },
    {
      "title": "Should insert a teaching period with the given info correctly into middle of array",
      "fullTitle": "ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into middle of array",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2018,\n    code: \"S2-01\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c59cb4c1-0106-4d32-a0a6-f2a5af28c562",
      "parentUUID": "e5a234ae-f1b5-43cf-879f-9a133dcc206c",
      "skipped": false
    },
    {
      "title": "Should insert a teaching period with the given info correctly into start of array",
      "fullTitle": "ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into start of array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2016,\n    code: \"S2-01\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2016, code: \"S2-01\", units: [null, null, null, null] }, { year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "23ecd4b3-3c85-4216-a56d-d05fb10497d8",
      "parentUUID": "e5a234ae-f1b5-43cf-879f-9a133dcc206c",
      "skipped": false
    },
    {
      "title": "Should remove a teaching period at the given index",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the given index",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "59352da6-5533-4fa5-a5fb-0a9eed81c34f",
      "parentUUID": "09f8af85-0133-46cd-acab-022d154aae7b",
      "skipped": false
    },
    {
      "title": "Should remove a teaching period at the start of the array",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the start of the array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "2c195068-d4ff-4335-bf76-5f932b051e88",
      "parentUUID": "09f8af85-0133-46cd-acab-022d154aae7b",
      "skipped": false
    },
    {
      "title": "Should add the given teaching period to the end of the array",
      "fullTitle": "ACTION: APPEND_TEACHING_PERIOD Should add the given teaching period to the end of the array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"APPEND_TEACHING_PERIOD\",\n    year: 2020,\n    code: \"S2-01\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }, { year: 2020, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f6c3d8e2-e96a-40e1-a59b-46716714276d",
      "parentUUID": "d7411a5a-14f2-419b-8b3f-49ea22061a90",
      "skipped": false
    },
    {
      "title": "Should increase the study load if the study load is less than 4",
      "fullTitle": "ACTION: INCREASE_STUDY_LOAD Should increase the study load if the study load is less than 4",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "fd23e794-7f03-4a58-add3-aff7e51a6e66",
      "parentUUID": "936a040a-24d2-409f-ab11-374a0a40f63c",
      "skipped": false
    },
    {
      "title": "Should not increase the study load if the study load is 6 or greater",
      "fullTitle": "ACTION: INCREASE_STUDY_LOAD Should not increase the study load if the study load is 6 or greater",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null, null] }],\n    numberOfUnits: 6\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null, null] }],\n    numberOfUnits: 6\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ea84ea5d-649e-4437-9ecb-ce73a66d5428",
      "parentUUID": "936a040a-24d2-409f-ab11-374a0a40f63c",
      "skipped": false
    },
    {
      "title": "Should decrease the study load if the study load is greater than 4",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should decrease the study load if the study load is greater than 4",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1023f0eb-d90f-4d1b-8dc9-0fb267786259",
      "parentUUID": "0f248d7f-0d45-4569-aaea-2e967faacdb5",
      "skipped": false
    },
    {
      "title": "Should not decrease the study load if the study load is 4 or less",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should not decrease the study load if the study load is 4 or less",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e20380f8-1ba5-4b5b-9bf0-c47f4e8b7c82",
      "parentUUID": "0f248d7f-0d45-4569-aaea-2e967faacdb5",
      "skipped": false
    },
    {
      "title": "Should remove all teaching periods and set the amount of units to 4",
      "fullTitle": "ACTION: CLEAR_COURSE Should remove all teaching periods and set the amount of units to 4",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = {\n    courseInfo: {\n        courseName: \"\",\n        faculty: \"\",\n        creditPoints: 0,\n        courseDescription: \"\",\n        durationStr: \"\",\n        modeAndLocation: \"\",\n        awards: \"\",\n        abrTitle: \"\"\n    },\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "13bc38b0-ff2e-42f2-8094-97cc5eff965b",
      "parentUUID": "02b66432-f4cc-446b-b3e3-3d78bc5aa8f1",
      "skipped": false
    },
    {
      "title": "Should add a unit correctly to the start of an array",
      "fullTitle": "ACTION: ADD_UNIT Should add a unit correctly to the start of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "908cf372-fd56-4fb0-8af7-2dd05ac80872",
      "parentUUID": "3e7d3ec0-f171-4093-9c30-e0c73b64ee89",
      "skipped": false
    },
    {
      "title": "Should add a unit correctly to the middle of an array",
      "fullTitle": "ACTION: ADD_UNIT Should add a unit correctly to the middle of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "bec37835-7d25-4590-803e-392479bd0e11",
      "parentUUID": "3e7d3ec0-f171-4093-9c30-e0c73b64ee89",
      "skipped": false
    },
    {
      "title": "Should add a unit correctly to the end of an array",
      "fullTitle": "ACTION: ADD_UNIT Should add a unit correctly to the end of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "20b45b97-736d-4e1d-8cee-b98154d9ade6",
      "parentUUID": "3e7d3ec0-f171-4093-9c30-e0c73b64ee89",
      "skipped": false
    },
    {
      "title": "Should remove a unit correctly frpm the start of an array",
      "fullTitle": "ACTION: REMOVE_UNIT Should remove a unit correctly frpm the start of an array",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ac3fa4eb-f61d-40af-bbc0-817cb56ab9f3",
      "parentUUID": "287b4a9e-d240-442d-90ad-902b9ef74287",
      "skipped": false
    },
    {
      "title": "Should remove a unit correctly from the middle of an array",
      "fullTitle": "ACTION: REMOVE_UNIT Should remove a unit correctly from the middle of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "baa9c0dc-223e-49b4-b8b3-6187c51cb02e",
      "parentUUID": "287b4a9e-d240-442d-90ad-902b9ef74287",
      "skipped": false
    },
    {
      "title": "Should remove a unit correctly from the end of an array",
      "fullTitle": "ACTION: REMOVE_UNIT Should remove a unit correctly from the end of an array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1711c34a-fe6f-4f93-8d7b-dcd5558082e5",
      "parentUUID": "287b4a9e-d240-442d-90ad-902b9ef74287",
      "skipped": false
    },
    {
      "title": "Should generate a course structure with valid start and end years",
      "fullTitle": "ACTION: GENERATE_COURSE Should generate a course structure with valid start and end years",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2014,\n    endYear: 2016\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4a51d432-3926-4310-84de-a381e64a4500",
      "parentUUID": "fb027c5e-ccbd-4127-b5d4-f4e8b22f88c2",
      "skipped": false
    },
    {
      "title": "Should return an empty course structure with invalid start and end years.",
      "fullTitle": "ACTION: GENERATE_COURSE Should return an empty course structure with invalid start and end years.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2017,\n    endYear: 2013\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f6257594-a172-4984-b3b0-68d87ea5089e",
      "parentUUID": "fb027c5e-ccbd-4127-b5d4-f4e8b22f88c2",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course info is loading",
      "fullTitle": "ACTION: FETCH_COURSE_INFO_PENDING Should correctly show that the course info is loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "63f70fa5-7177-482d-a4bc-3433aee08a28",
      "parentUUID": "d9d4d36b-66bf-42b5-bd88-b184c42df481",
      "skipped": false
    },
    {
      "title": "Should correctly return the payload and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    focusedCourse: null,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_FULFILLED\",\n    payload: { data: {\n            \"propertyMap\": {\n                courseCode: \"Test Code\",\n                courseName: \"Test Course\",\n                mangFac: \"Test Faculty\",\n                creditPoints: 100,\n                courseDescrip: {\n                    \"value\": \"Test Description\"\n                },\n                courseDuration: \"Test Duration\",\n                modeLoc: {\n                    \"value\": \"Test mode and location\"\n                },\n                courseAward: \"Test awards\",\n                abrevTitle: \"Test abreviated title\"\n            }\n        } },\n    courseCode: \"COURSE101\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: {\n        courseCode: \"Test Code\",\n        courseName: \"Test Course\",\n        faculty: \"Test Faculty\",\n        creditPoints: 100,\n        courseDescription: \"Test Description\",\n        durationStr: \"Test Duration\",\n        modeAndLocation: \"Test mode and location\",\n        awards: \"Test awards\",\n        abrTitle: \"Test abreviated title\"\n    },\n    focusedCourse: \"COURSE101\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b6bed747-23bb-4df4-82b8-bfea54008073",
      "parentUUID": "f5098e01-6092-406c-b326-bd70a9e52004",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course info fetch failed and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_INFO_REJECTED Should correctly show that the course info fetch failed and show that it is no longer loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: true,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9aca6a45-96c0-4e22-b30a-9a7ea0a6ecdc",
      "parentUUID": "31936565-5240-41c4-96dd-074cb6d222be",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course template is loading",
      "fullTitle": "ACTION: FETCH_COURSE_TEMPLATE_PENDING Should correctly show that the course template is loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "98cfcd42-fccd-4891-b937-066666101b32",
      "parentUUID": "90cee1b9-2170-40eb-84cb-ba8afcb22709",
      "skipped": false
    },
    {
      "title": "Should correctly return the payload and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_TEMPLATE_FULFILLED Should correctly return the payload and show that it is no longer loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_FULFILLED\",\n    payload: {\n        data: {\n            propertyMap: \"Fake Course Template\"\n        }\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: \"Fake Course Template\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "6f86f462-aaba-4b48-9a39-877a2e788776",
      "parentUUID": "d9f6c40f-e712-436f-b3ed-ec8f1f19f0c9",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course template fetch failed and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_TEMPLATE_REJECTED Should correctly show that the course template fetch failed and show that it is no longer loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: true,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "8b03e0d9-abae-43ca-a0e5-b5519806ac92",
      "parentUUID": "7bd03a59-7534-48d6-96ba-7bcbd3aa451e",
      "skipped": false
    },
    {
      "title": "Should correctly show that the unit info is loading",
      "fullTitle": "ACTION: FETCH_UNIT_INFO_PENDING Should correctly show that the unit info is loading",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: {\n        preqs: \"\",\n        creditPoints: 0,\n        rules: [],\n        locationAndTime: \"\",\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"\",\n        eftsl: 0,\n        descriptions: \"\"\n    },\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: {\n        preqs: \"\",\n        creditPoints: 0,\n        rules: [],\n        locationAndTime: \"\",\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"\",\n        eftsl: 0,\n        descriptions: \"\"\n    },\n    focusedUnitCode: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9420b05d-c32f-498b-9ddf-546c447d1557",
      "parentUUID": "4f839a50-4399-45da-8eee-c7dc2a519036",
      "skipped": false
    },
    {
      "title": "Should correctly return the payload and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_UNIT_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_FULFILLED\",\n    payload: { data: \"Fake Unit Info\" },\n    unitCode: \"FAKE1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: \"Fake Unit Info\",\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "861f02db-97d2-45e6-9f53-ce20e227a43b",
      "parentUUID": "1c2a1ddc-03d0-448c-a803-3836b6b5f0ac",
      "skipped": false
    },
    {
      "title": "Should correctly show that the unit info fetch failed and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_UNIT_INFO_REJECTED Should correctly show that the unit info fetch failed and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_REJECTED\",\n    payload: {\n        response: {\n            status: 404\n        }\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: {\n        response: {\n            status: 404\n        }\n    },\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5f9b4739-9d5c-4faf-967f-50e09f242fef",
      "parentUUID": "6c60ada9-c9e9-488b-ae37-8b1253c3273a",
      "skipped": false
    },
    {
      "title": "Should accurately set the start year and the focused course on submission",
      "fullTitle": "ACTION: SUBMIT_COURSE_FORM Should accurately set the start year and the focused course on submission",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_COURSE_FORM\",\n    startYear: 2020,\n    courseCode: \"TEST1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: \"TEST1001\",\n    startYear: 2020,\n    endYear: 2020\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7f6ffee2-c375-4995-b574-671684027b4f",
      "parentUUID": "aacfee63-cfd3-4f5f-9b4c-3ae58218cedf",
      "skipped": false
    },
    {
      "title": "Should accurately set the start year and end year on submission",
      "fullTitle": "ACTION: SUBMIT_YEAR_FORM Should accurately set the start year and end year on submission",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_YEAR_FORM\",\n    startYear: 2020,\n    endYear: 2025\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2020,\n    endYear: 2025\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "babf4836-c451-4e8e-8613-629d767d0ae6",
      "parentUUID": "498258ab-0745-4636-a81b-7841a2133949",
      "skipped": false
    },
    {
      "title": "Should correctly handle  of teaching periods data",
      "fullTitle": "ACTION: FETCH_TEACHING_PERIODS_PENDING Should correctly handle  of teaching periods data",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "fd8ed21b-8993-48b1-a852-8adfa82498a7",
      "parentUUID": "13dd419b-029b-4fda-9cd4-e43de94a26b2",
      "skipped": false
    },
    {
      "title": "Should correctly handle  of teaching periods data",
      "fullTitle": "ACTION: FETCH_TEACHING_PERIODS_FULFILLED Should correctly handle  of teaching periods data",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_FULFILLED\",\n    payload: \"Teaching period strings\"\n};\nvar stateAfter = {\n    teachingPeriodData: \"Teaching period strings\",\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0160d397-9e5b-41ed-bcba-d5b47060bc90",
      "parentUUID": "cf19a7ca-2952-4100-b888-e74445bb87c1",
      "skipped": false
    },
    {
      "title": "Should correctly handle  of teaching periods data",
      "fullTitle": "ACTION: FETCH_TEACHING_PERIODS_REJECTED Should correctly handle  of teaching periods data",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e1ab5206-4291-4b80-b430-04fde9b511e2",
      "parentUUID": "bd5759d0-c166-4560-894b-f58101726cc3",
      "skipped": false
    },
    {
      "title": "Should set the teaching period code to insert value correctly",
      "fullTitle": "ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should set the teaching period code to insert value correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodCodeToInsert: null,\n    testParam1: 1,\n    testParam2: \"test\"\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"S1-02\"\n};\nvar stateAfter = {\n    teachingPeriodCodeToInsert: \"S1-02\",\n    testParam1: 1,\n    testParam2: \"test\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "6d2d5032-775a-49f3-ae77-6c0fd5b1f8f0",
      "parentUUID": "a6fea31a-6379-4f76-b7a0-77b0e8e4fbbd",
      "skipped": false
    },
    {
      "title": "Should handle the initiation of a course snapshot upload correctly",
      "fullTitle": "ACTION: UPLOAD_COURSE_SNAPSHOT_PENDING Should handle the initiation of a course snapshot upload correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: true\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1ec00fd8-0090-45dc-a9cc-7f7f9a4af292",
      "parentUUID": "24cc8f12-9c4a-4383-a5ba-0b854f472dcf",
      "skipped": false
    },
    {
      "title": "Should handle the successful upload of a course snapshot correctly",
      "fullTitle": "ACTION: UPLOAD_COURSE_SNAPSHOT_FULFILLED Should handle the successful upload of a course snapshot correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"upload string\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: \"upload string\",\n    courseSnapshotUploadSucessful: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "6503b96a-0d8c-4165-b35f-7a708984426b",
      "parentUUID": "1696037a-b608-4f95-8ff0-26687f1cded9",
      "skipped": false
    },
    {
      "title": "Should do handle the rejected upload of a course snapshot correctly",
      "fullTitle": "ACTION: UPLOAD_COURSE_SNAPSHOT_REJECTED Should do handle the rejected upload of a course snapshot correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9fb1b02a-1daf-4ced-a940-4d1e90dcef41",
      "parentUUID": "1f5d85c4-4042-4558-b1ee-41959dae835c",
      "skipped": false
    },
    {
      "title": "Should begin fetching a course snapshot correctly",
      "fullTitle": "ACTION: FETCH_COURSE_SNAPSHOT_PENDING Should begin fetching a course snapshot correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "3966cbfe-e627-4776-a16d-39ac3bcbe647",
      "parentUUID": "2542724e-891c-4009-8497-8a79941501c0",
      "skipped": false
    },
    {
      "title": "Should handle a successful course snapshot fetch correctly",
      "fullTitle": "ACTION: FETCH_COURSE_SNAPSHOT_FULFILLED Should handle a successful course snapshot fetch correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"Snap data\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: \"Snap data\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "93a544f3-e593-4f04-81e6-0f5f5286640a",
      "parentUUID": "c5adc67c-2ace-4b85-aaa5-cd93f3aae7f0",
      "skipped": false
    },
    {
      "title": "Should handle a rejected course snapshot fetch correctly",
      "fullTitle": "ACTION: FETCH_COURSE_SNAPSHOT_REJECTED Should handle a rejected course snapshot fetch correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0a19c78b-ac9f-49ba-8079-d4e56a34ad8a",
      "parentUUID": "f1b8fc4c-fb15-42c0-9f61-cac9f043d642",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_COURSES_PENDING Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: false,\n    courseSearchError: true //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: true,\n    courseSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "546fdc10-db22-4bd1-87e4-689cf3f630c2",
      "parentUUID": "c6806af5-067a-4240-8aa1-7be09f302546",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_COURSES_FULFILLED Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: true,\n    courseSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_FULFILLED\",\n    payload: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    courseSearchIsLoading: false,\n    courseSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "061955ed-068a-4cf4-837b-86c27a665f96",
      "parentUUID": "eb873c42-bbc1-4a86-ad9a-c89274831e06",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_COURSES_REJECTED Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    courseSearchIsLoading: true,\n    courseSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: false,\n    courseSearchError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "2f3e8c83-1a77-4026-b2be-2762468ce0aa",
      "parentUUID": "931a7331-7cf4-4672-8a45-c232fd2ad619",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_AOS_PENDING Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: false,\n    aosSearchError: true //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: true,\n    aosSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "8556b753-8a4f-4de7-9242-ceed4487080e",
      "parentUUID": "2b14f513-6d06-4108-b84b-e760854d8e83",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_AOS_FULFILLED Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: true,\n    aosSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_FULFILLED\",\n    payload: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    aosSearchIsLoading: false,\n    aosSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "34177ba5-eb30-49fd-b1a2-b33e43868e56",
      "parentUUID": "689a65e5-84bb-489c-a5cd-9b2fbf46a61a",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_AOS_REJECTED Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    aosSearchIsLoading: true,\n    aosSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: false,\n    aosSearchError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f4d6a0d9-32d2-4820-ab5f-11c5de1e74a1",
      "parentUUID": "b900ec05-97c1-44f1-b41c-88494d7fba9a",
      "skipped": false
    },
    {
      "title": "Should correctly update the affected units value to the given array",
      "fullTitle": "ACTION: UPDATE_AFFECTED_UNITS Should correctly update the affected units value to the given array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: []\n};\nvar action = {\n    type: \"UPDATE_AFFECTED_UNITS\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5bd97d58-981a-40fa-a815-dcd3a3da6876",
      "parentUUID": "20833cb5-d312-4ecd-abc8-3514dff86264",
      "skipped": false
    },
    {
      "title": "Should correctly update the index of tp to remove value to the given value",
      "fullTitle": "ACTION: UPDATE_INDEX_OF_TP_TO_REMOVE Should correctly update the index of tp to remove value to the given value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 0\n};\nvar action = {\n    type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\",\n    index: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 1\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "cdec5789-9eaa-4829-aa7b-076a06993a3f",
      "parentUUID": "9405b227-344f-4dc5-aeeb-233d838ee349",
      "skipped": false
    },
    {
      "title": "Should correctly set the unit to add to the new unit",
      "fullTitle": "ACTION: UPDATE_UNIT_TO_ADD Should correctly set the unit to add to the new unit",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitInfo: \"TestUnit\",\n    unitToAdd: undefined\n};\nvar action = {\n    type: \"UPDATE_UNIT_TO_ADD\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitInfo: \"TestUnit\",\n    unitToAdd: \"TestUnit\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c65ee963-0bcb-4feb-8081-614a7ac95be6",
      "parentUUID": "c0b89eac-8e37-4a4a-a956-0af667d82529",
      "skipped": false
    },
    {
      "title": "Should correctly set a non-dragging unit being dragged",
      "fullTitle": "ACTION: UPDATE_UNIT_IS_BEING_DRAGGED Should correctly set a non-dragging unit being dragged",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: false\n};\nvar action = {\n    type: \"UPDATE_UNIT_IS_BEING_DRAGGED\",\n    isDragging: true\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9346925a-8440-4de7-a725-b0b741706d9f",
      "parentUUID": "c0283377-3c27-4cde-9fde-88b85b41af8b",
      "skipped": false
    },
    {
      "title": "Should correctly set a dragging unit to be not dragged",
      "fullTitle": "ACTION: UPDATE_UNIT_IS_BEING_DRAGGED Should correctly set a dragging unit to be not dragged",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: true\n};\nvar action = {\n    type: \"UPDATE_UNIT_IS_BEING_DRAGGED\",\n    isDragging: false\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e3a552e5-a19f-41fc-b7c3-3fcdf5348355",
      "parentUUID": "c0283377-3c27-4cde-9fde-88b85b41af8b",
      "skipped": false
    },
    {
      "title": "Should correctly begin moving a unit",
      "fullTitle": "ACTION: MOVING_UNIT Should correctly begin moving a unit",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0\n};\nvar action = {\n    type: \"MOVING_UNIT\",\n    unit: \"TEST-UNIT\",\n    unitIndex: 3,\n    tpIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TEST-UNIT\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 3\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7e5f418e-f333-4d51-a463-809c8f728f3e",
      "parentUUID": "09fec689-8990-43b7-8773-f7f7720e2bd6",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to a teaching period earlier than it",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period earlier than it",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b7836cfd-d28d-43e3-b005-f41a4e472ecb",
      "parentUUID": "791d68c1-ddf0-4e5c-983f-22790f620701",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to a teaching period later than it",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period later than it",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "37360d3b-35eb-441c-be3f-2c13d5e26104",
      "parentUUID": "791d68c1-ddf0-4e5c-983f-22790f620701",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to the same teaching period but earlier position",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but earlier position",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "3532b199-7d1b-4765-bcd4-afb3de8b1437",
      "parentUUID": "791d68c1-ddf0-4e5c-983f-22790f620701",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to the same teaching period but later position",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but later position",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, \"PlaceToMoveTo\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5f8c0901-6b68-46c7-9031-2d7ba0906da2",
      "parentUUID": "791d68c1-ddf0-4e5c-983f-22790f620701",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to the same teaching period and exact same position",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period and exact same position",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7d0599a5-b2e4-444a-abbf-3c0a335b3443",
      "parentUUID": "791d68c1-ddf0-4e5c-983f-22790f620701",
      "skipped": false
    },
    {
      "title": "should cancel moving unit",
      "fullTitle": "ACTION: CANCEL_MOVING_UNIT should cancel moving unit",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: \"TestUnit2\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: undefined,\n    unitsIndexOfUnitToBeMoved: undefined\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ac8a912d-3505-4b81-b79b-5fe32e39544d",
      "parentUUID": "5890b358-44a5-4b03-9abe-867f782a0e4d",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to a teaching period earlier than it",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period earlier than it",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d41fc47b-02fc-4ffd-b6c9-781a2ba91ddc",
      "parentUUID": "1321d605-910e-4257-9d9b-4155ebaac5d8",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to a teaching period later than it",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period later than it",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b2910851-6a91-4e75-bbcb-22801feb7541",
      "parentUUID": "1321d605-910e-4257-9d9b-4155ebaac5d8",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to the same teaching period but earlier position",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but earlier position",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1c98d7e2-36a7-4229-94b3-fad7b17332f7",
      "parentUUID": "1321d605-910e-4257-9d9b-4155ebaac5d8",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to the same teaching period but later position",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but later position",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, \"PlaceToMoveTo\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", null, \"TestUnit\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "06d1f683-96c3-4450-ace6-45c74b63708f",
      "parentUUID": "1321d605-910e-4257-9d9b-4155ebaac5d8",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to the same teaching period and exact same position",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period and exact same position",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "2716593b-c19c-46b2-ba61-292413294512",
      "parentUUID": "1321d605-910e-4257-9d9b-4155ebaac5d8",
      "skipped": false
    },
    {
      "title": "should give no errors for an empty course plan.",
      "fullTitle": "ACTION: VALIDATE_COURSE should give no errors for an empty course plan.",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan.\"\n    }],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    courseErrors: [],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "86070f4b-6171-4731-a2e1-45cc4f704be7",
      "parentUUID": "8c1d8207-6141-4e34-8d04-49085d463d88",
      "skipped": false
    },
    {
      "title": "Should not give duplicate unit errors if the first attempt is in the past, and the second attempt is not two or more years into the future.",
      "fullTitle": "duplicates: Should not give duplicate unit errors if the first attempt is in the past, and the second attempt is not two or more years into the future.",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: new Date().getFullYear() - 1,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, null]\n    }, {\n        code: \"S1-01\",\n        year: new Date().getFullYear() + 1,\n        units: [null, null, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "93a77f92-be99-4550-b1f6-6fe35d38314f",
      "parentUUID": "8ccebe59-2eff-4246-b75a-67e80b31baa0",
      "skipped": false
    },
    {
      "title": "Should give a duplicate unit error if there are two same units in the same teaching period",
      "fullTitle": "duplicates: Should give a duplicate unit error if there are two same units in the same teaching period",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2015,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }, {\n        code: \"S2-01\",\n        year: 2015,\n        units: [null, null, null, {\n            unitCode: \"GJQ2039\"\n        }]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2015,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }, {\n        code: \"S2-01\",\n        year: 2015,\n        units: [null, null, null, {\n            unitCode: \"GJQ2039\"\n        }]\n    }],\n    courseErrors: [{\n        message: \"ABCD1234 already exists in the same teaching period. Please remove this unit.\",\n        coordinates: [[0, 3]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "754e15bc-0738-4c8b-a979-2c4b51e2a7c0",
      "parentUUID": "8ccebe59-2eff-4246-b75a-67e80b31baa0",
      "skipped": false
    },
    {
      "title": "Should give a duplicate error if a duplicate unit is placed in a teaching period two years from now",
      "fullTitle": "duplicates: Should give a duplicate error if a duplicate unit is placed in a teaching period two years from now",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var currentYear = new Date().getFullYear();\nvar stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: currentYear,\n        units: [{\n            unitCode: \"ABC1234\"\n        }, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 2,\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 2,\n        units: [null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: currentYear,\n        units: [{\n            unitCode: \"ABC1234\"\n        }, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 2,\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 2,\n        units: [null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan. Please plan as if you will pass all units.\",\n        coordinates: [[4, 1]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "679174ad-2cf7-4ac9-aeb4-862728c669fe",
      "parentUUID": "8ccebe59-2eff-4246-b75a-67e80b31baa0",
      "skipped": false
    },
    {
      "title": "Should give a course error for a unit not being offered in the teaching period it is in",
      "fullTitle": "offerings: Should give a course error for a unit not being offered in the teaching period it is in",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2019,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: 2019,\n        units: [null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"First semester 2019 (Day)\"]\n            }]\n        }, null]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2019,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: 2019,\n        units: [null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"First semester 2019 (Day)\"]\n            }]\n        }, null]\n    }],\n    courseErrors: [{\n        message: \"ABC1234 is not offered in second semester, 2019.\",\n        coordinates: [[1, 2]]\n    }],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4122dde7-e383-4b03-9b0e-d74559512fe9",
      "parentUUID": "c492b82a-b882-4f64-8c21-db694b7ba9df",
      "skipped": false
    },
    {
      "title": "Should give a course error for a missing prereq",
      "fullTitle": "rules: Should give a course error for a missing prereq",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"Must have passed an (I/W) unit in {DEF2345, QLS2029}\",\n                endDate: \"\"\n            }]\n        }]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"Must have passed an (I/W) unit in {DEF2345, QLS2029}\",\n                endDate: \"\"\n            }]\n        }]\n    }],\n    courseErrors: [{\n        message: \"You must complete DEF2345 or QLS2029 before you can do ABC1234.\",\n        coordinates: [[0, 3]]\n    }],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0c92e007-faa7-4e22-a927-d5a055c0b682",
      "parentUUID": "b4d5f52d-fb99-4dde-a7c6-6ed2dcd2a687",
      "skipped": false
    },
    {
      "title": "Should give an error for credit points being lower than the minimum required for the unit",
      "fullTitle": "rules: Should give an error for credit points being lower than the minimum required for the unit",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2016,\n        code: \"S2-01\",\n        units: [{\n            unitCode: \"TEST1011\",\n            creditPoints: 6\n        }, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"TEST3031\",\n            creditPoints: 6,\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"Must have passed 24 credit points\"\n            }]\n        }, null, null, null]\n    }, {\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2016,\n        code: \"S2-01\",\n        units: [{\n            unitCode: \"TEST1011\",\n            creditPoints: 6\n        }, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"TEST3031\",\n            creditPoints: 6,\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"Must have passed 24 credit points\"\n            }]\n        }, null, null, null]\n    }, {\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"You need 18 more credit points before doing TEST3031.\",\n        coordinates: [[2, 1]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "8315f61d-d685-4b23-bfc2-3da576c2fc9c",
      "parentUUID": "b4d5f52d-fb99-4dde-a7c6-6ed2dcd2a687",
      "skipped": false
    },
    {
      "title": "Should correctly handle prohibitions",
      "fullTitle": "rules: Should correctly handle prohibitions",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2013,\n        code: \"S1-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\"\n        }]\n    }, {\n        year: 2013,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"BCD1234\",\n            rules: [{\n                ruleSummary: \"INCOMP\",\n                ruleString: \"Incompatible with achievement in {ABC1234}\"\n            }]\n        }, null, null]\n    }],\n    courseErrors: [{\n        message: \"Please remove BCD1234, as completing ABC1234 prohibits you from doing this unit.\",\n        coordinates: [[1, 1]]\n    }]\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "dafdf325-7c6b-4151-8699-41761122edf2",
      "parentUUID": "b4d5f52d-fb99-4dde-a7c6-6ed2dcd2a687",
      "skipped": false
    },
    {
      "title": "Should correctly handle the Do branch of For COURSE_CODE syntax",
      "fullTitle": "rules: Should correctly handle the Do branch of For COURSE_CODE syntax",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2014,\n        code: \"S1-01\",\n        units: [{\n            unitCode: \"DEF2345\",\n            unitName: \"Test unit\",\n            rules: [{\n                ruleSummary: \"COREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {S2029, S3019} Do Any passed co-req (I/W) unit in {ABC2022} Otherwise true\",\n                endDate: \"\"\n            }]\n        }, null, null, null]\n    }],\n    courseInfo: {\n        courseCode: \"S2029\"\n    },\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2014,\n        code: \"S1-01\",\n        units: [{\n            unitCode: \"DEF2345\",\n            unitName: \"Test unit\",\n            rules: [{\n                ruleSummary: \"COREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {S2029, S3019} Do Any passed co-req (I/W) unit in {ABC2022} Otherwise true\",\n                endDate: \"\"\n            }]\n        }, null, null, null]\n    }],\n    courseInfo: {\n        courseCode: \"S2029\"\n    },\n    courseErrors: [{\n        message: \"You must complete ABC2022 before or whilst doing DEF2345.\",\n        coordinates: [[0, 0]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "067ab77e-79c9-4488-9d88-f6cd88420f27",
      "parentUUID": "b4d5f52d-fb99-4dde-a7c6-6ed2dcd2a687",
      "skipped": false
    },
    {
      "title": "Should correctly handle the Otherwise branch of For COURSE_CODE syntax",
      "fullTitle": "rules: Should correctly handle the Otherwise branch of For COURSE_CODE syntax",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }, {\n        year: 2018,\n        code: \"WS-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"Winter semester 2018 (Day)\"]\n            }],\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {Q2001, Q2003} Do true Otherwise Must have passed 1 (I/W) units in {TEST1001}\",\n                endDate: \"\"\n            }]\n        }]\n    }, {\n        year: 2018,\n        code: \"S2-01\",\n        units: [null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }, {\n        year: 2018,\n        code: \"WS-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"Winter semester 2018 (Day)\"]\n            }],\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {Q2001, Q2003} Do true Otherwise Must have passed 1 (I/W) units in {TEST1001}\",\n                endDate: \"\"\n            }]\n        }]\n    }, {\n        year: 2018,\n        code: \"S2-01\",\n        units: [null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"You must complete TEST1001 before you can do ABC1234.\",\n        coordinates: [[1, 3]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "459c3e08-dcc5-4e57-8a97-9824f4bc760c",
      "parentUUID": "b4d5f52d-fb99-4dde-a7c6-6ed2dcd2a687",
      "skipped": false
    },
    {
      "title": "Should leave invalidUnitSlotCoordinates empty if there are no invalid unit slots",
      "fullTitle": "ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS Should leave invalidUnitSlotCoordinates empty if there are no invalid unit slots",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2015,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: false\n};\nvar action = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: {\n        unitCode: \"TEST1001\",\n        unitName: \"Test unit\",\n        locationAndTime: [{\n            location: \"Caulfield\",\n            time: [\"First semester 2017 (Day)\"]\n        }]\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2015,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b1f8ac98-a4d2-401d-83db-6acbc9200b43",
      "parentUUID": "c3c44761-0461-4583-afb7-db2f81e5aabd",
      "skipped": false
    },
    {
      "title": "Should highlight teaching periods that contains the same unit",
      "fullTitle": "ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS Should highlight teaching periods that contains the same unit",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var currentYear = new Date().getFullYear();\nvar stateBefore = {\n    teachingPeriods: [{\n        year: currentYear - 2,\n        code: \"FY-01\",\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        year: currentYear - 1,\n        code: \"FY-01\",\n        units: [null, null, {\n            unitCode: \"DEF2345\"\n        }, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: false\n};\nvar action = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: {\n        unitCode: \"ABC1234\",\n        locationAndTime: [{\n            location: \"Parkville\",\n            time: [\"Full year 2018 (Day)\"]\n        }]\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: currentYear - 2,\n        code: \"FY-01\",\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        year: currentYear - 1,\n        code: \"FY-01\",\n        units: [null, null, {\n            unitCode: \"DEF2345\"\n        }, null]\n    }],\n    invalidUnitSlotCoordinates: [[0, null]],\n    highlightingInvalidUnitSlots: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0cf4ea2c-004f-4bf8-ae30-85239bfb0718",
      "parentUUID": "c3c44761-0461-4583-afb7-db2f81e5aabd",
      "skipped": false
    },
    {
      "title": "should not change the state if it receives an unknown action",
      "fullTitle": "DEFAULT should not change the state if it receives an unknown action",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "ef2ba97d-77cd-43cd-a163-eb0f24143654",
      "parentUUID": "35654f51-72a7-4ca7-8801-4b1a5d1a68c7",
      "skipped": false
    },
    {
      "title": "should insert a notification from an empty list",
      "fullTitle": "ACTION: ADD_NOTIFICATION should insert a notification from an empty list",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: []\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "73722c88-1c60-4533-80c0-89e219c32629",
      "parentUUID": "25eb95ab-6734-4adf-9747-4a6972e9541b",
      "skipped": false
    },
    {
      "title": "should prepend a notification into an list of a few existing notifications.",
      "fullTitle": "ACTION: ADD_NOTIFICATION should prepend a notification into an list of a few existing notifications.",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "390cefa7-a395-4714-b53d-4b229387d91a",
      "parentUUID": "25eb95ab-6734-4adf-9747-4a6972e9541b",
      "skipped": false
    },
    {
      "title": "should replace a notification if it already exists with a specified ID",
      "fullTitle": "ACTION: ADD_NOTIFICATION should replace a notification if it already exists with a specified ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    message: \"New message goes over here\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"New message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5c35f8e3-8c50-47a5-bf60-c1f284efbf34",
      "parentUUID": "25eb95ab-6734-4adf-9747-4a6972e9541b",
      "skipped": false
    },
    {
      "title": "Should remove a notification given its ID",
      "fullTitle": "ACTION: REMOVE_NOTIFICATION Should remove a notification given its ID",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    id: \"CONNECTION_LOST\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "730bb50e-7f34-471c-bf74-a87436e72a9d",
      "parentUUID": "5bb1a8e7-2d22-4a8d-9a30-70f83c454a31",
      "skipped": false
    },
    {
      "title": "Should remove a notification given its index",
      "fullTitle": "ACTION: REMOVE_NOTIFICATION Should remove a notification given its index",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    index: 1\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "584f708c-61f6-4efc-8933-fe82758aff6d",
      "parentUUID": "5bb1a8e7-2d22-4a8d-9a30-70f83c454a31",
      "skipped": false
    },
    {
      "title": "Should not change state if it does not recognise an action",
      "fullTitle": "DEFAULT Should not change state if it does not recognise an action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Notifications2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "7e70a66e-2cbd-4951-be4c-43fd523c9d38",
      "parentUUID": "710da2f7-51f2-4d6f-95e4-bdda3e250e4a",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the insert teaching period UI boolean",
      "fullTitle": "ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: true,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "914fa635-a15d-48a8-b0ac-28a9b1c73af1",
      "parentUUID": "0e35d75b-1717-4b6d-b779-4b9d7666861a",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the insert teaching period UI boolean",
      "fullTitle": "ACTION: HIDE_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: true,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1f19d78f-6549-4c85-851f-2bccff31418f",
      "parentUUID": "9b1e13d3-d1e5-4820-b988-81e9d150ec3e",
      "skipped": false
    },
    {
      "title": "Should correctly set the add unit UI boolean to true and correctly hide the sidebar when a unit is being added",
      "fullTitle": "ACTION: ADDING_UNIT Should correctly set the add unit UI boolean to true and correctly hide the sidebar when a unit is being added",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "42396632-ff4f-4c66-8f25-e87018cbca99",
      "parentUUID": "0b1a7415-b4a5-4333-ba1d-9d24df345186",
      "skipped": false
    },
    {
      "title": "Should correctly set the add unit UI boolean to false",
      "fullTitle": "ACTION: ADD_UNIT Should correctly set the add unit UI boolean to false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true\n};\nvar action = {\n    type: \"ADD_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "2a99ec8e-6ed2-4ff9-b315-93d01e215b05",
      "parentUUID": "59dca32b-dd1a-4aa3-8ee8-b37f815ba12c",
      "skipped": false
    },
    {
      "title": "Should correctly set the add unit UI boolean to false",
      "fullTitle": "ACTION: CANCEL_ADDING_UNIT Should correctly set the add unit UI boolean to false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true\n};\nvar action = {\n    type: \"CANCEL_ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b6da6680-93b8-40ca-b7ea-ab9a31aece1d",
      "parentUUID": "5015c84c-a961-4f4e-8637-78928ed1de27",
      "skipped": false
    },
    {
      "title": "Should correctly set the move unit UI boolean to true",
      "fullTitle": "ACTION: MOVING_UNIT Should correctly set the move unit UI boolean to true",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"MOVING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "cd6b1299-7b39-42de-a263-dcd73dff0b22",
      "parentUUID": "b16b004b-8c09-40fa-a0a5-349a90d5bbce",
      "skipped": false
    },
    {
      "title": "Should correctly set the move unit UI boolean to false",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly set the move unit UI boolean to false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"MOVE_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "472bbcfe-1b06-4585-abfd-75d3350ff4cb",
      "parentUUID": "23aed74a-f076-4ba8-9a7e-289431493a68",
      "skipped": false
    },
    {
      "title": "Should correctly set the move unit UI boolean to false",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly set the move unit UI boolean to false",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"SWAP_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c8625db8-05af-4804-b69b-6a5d6bae2813",
      "parentUUID": "28c8b1e0-cf44-4558-ad96-b5f608ec2d3d",
      "skipped": false
    },
    {
      "title": "Should correctly set the move unit UI boolean to false",
      "fullTitle": "ACTION: CANCEL_MOVING_UNIT Should correctly set the move unit UI boolean to false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "31bbaac0-cab3-4941-835e-793ee2e3008c",
      "parentUUID": "626129b8-3623-465a-9ee3-a1dd6ad6de1e",
      "skipped": false
    },
    {
      "title": "Should set the course to read only correctly",
      "fullTitle": "ACTION: SET_COURSE_READ_ONLY Should set the course to read only correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: false\n};\nvar action = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "bb602cff-4556-4fe6-9f15-69d0773594f0",
      "parentUUID": "18ed6e41-9e12-4a5d-9bad-30c60728b988",
      "skipped": false
    },
    {
      "title": "Should set the course to allow edits correctly",
      "fullTitle": "ACTION: SET_COURSE_READ_AND_WRITE Should set the course to allow edits correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: true\n};\nvar action = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d694ac55-9fa7-4bf5-8f25-8f15a835fac2",
      "parentUUID": "76b7b747-d634-4505-aa7b-0edab3484c53",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm delete teaching period modal UI to show",
      "fullTitle": "ACTION: SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to show",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "806c11b7-396e-48c7-8c7e-082e463ad5f1",
      "parentUUID": "136b5697-6c18-40de-bd33-554be9bfd31e",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm delete teaching period modal UI to hide",
      "fullTitle": "ACTION: HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to hide",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "bef341e0-ab1c-4ab7-808b-259523edd756",
      "parentUUID": "dae7e2e2-572e-4a66-b213-38572fbbc28e",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm decrease study load modal UI to show",
      "fullTitle": "ACTION: SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to show",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a8fb54c8-fb53-49a1-af7a-225a33942bbb",
      "parentUUID": "79e3ecfa-1b9c-42e0-b71d-882fa2aaa04c",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm decrease study load modal UI to hide",
      "fullTitle": "ACTION: HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to hide",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "034c54df-3b92-4bfb-bddc-9dd913c4a204",
      "parentUUID": "c44d5df3-f23e-4341-83de-5a438d11da30",
      "skipped": false
    },
    {
      "title": "Should set show flag for custom unit modal to be true",
      "fullTitle": "ACTION: SHOW_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be true",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "3ddf9bc2-cde2-4c79-a8f5-49ef85ac3cf2",
      "parentUUID": "573c0824-9223-4cbc-a7e6-ea0db597eec5",
      "skipped": false
    },
    {
      "title": "Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
      "fullTitle": "ACTION: SHOW_CUSTOM_UNIT_MODAL Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"ABC1234\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: \"ABC1234\",\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "49e2d624-8020-44d4-b88e-a662c63fa41d",
      "parentUUID": "573c0824-9223-4cbc-a7e6-ea0db597eec5",
      "skipped": false
    },
    {
      "title": "Should set unit code and position if it exists on top of setting show flag for custom unit modal to be true",
      "fullTitle": "ACTION: SHOW_CUSTOM_UNIT_MODAL Should set unit code and position if it exists on top of setting show flag for custom unit modal to be true",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"ABC1234\",\n    tpIndex: 0,\n    unitIndex: 2\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: \"ABC1234\",\n    customTpIndex: 0,\n    customUnitIndex: 2\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "3002b9e2-afd6-4f1c-b3dd-8c576859b92e",
      "parentUUID": "573c0824-9223-4cbc-a7e6-ea0db597eec5",
      "skipped": false
    },
    {
      "title": "Should set show flag for custom unit modal to be false",
      "fullTitle": "ACTION: HIDE_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be false",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: true\n};\nvar action = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "fe698d1f-a88e-4c6d-a1d5-60b9877f5b66",
      "parentUUID": "475e74dd-9cac-4397-890e-fcfb4240916d",
      "skipped": false
    },
    {
      "title": "Should correctly show the sidebar when called",
      "fullTitle": "ACTION: SHOW_SIDEBAR Should correctly show the sidebar when called",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: false\n};\nvar action = {\n    type: \"SHOW_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "3cb102ad-9596-4ba5-97b3-3c2548da023f",
      "parentUUID": "80b4f67f-3bc6-420b-936c-bb2e25cbf69a",
      "skipped": false
    },
    {
      "title": "Should correctly hide the sidebar when called",
      "fullTitle": "ACTION: HIDE_SIDEBAR Should correctly hide the sidebar when called",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"HIDE_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "8bc21c0f-ad8a-482d-a10a-0851bcf60cbc",
      "parentUUID": "aa6b70f4-28b8-4725-a9b9-f6e7cdc4d51d",
      "skipped": false
    },
    {
      "title": "Should not change state if it does not recognise the action",
      "fullTitle": "DEFAULT Should not change state if it does not recognise the action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_UI2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "85904c3a-8ac9-42cf-80ce-913091dc270f",
      "parentUUID": "a072aedb-705f-4e7d-8716-fd8199aa83c7",
      "skipped": false
    },
    {
      "title": "Should return a non-negative number",
      "fullTitle": "UTILS: CostCalc Should return a non-negative number",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_CostCalc2.default.calculateCost(0, 0)).to.be.gte(0);\nexpect(_CostCalc2.default.calculateCost(2, 6)).to.be.gte(0);",
      "err": {},
      "isRoot": false,
      "uuid": "4e6ee825-3499-43f0-87e5-7d686bae2133",
      "parentUUID": "5410244a-9acc-4d84-868c-206d5ffa0d62",
      "skipped": false
    },
    {
      "title": "Should multiply SCA band cost with credit points",
      "fullTitle": "UTILS: CostCalc Should multiply SCA band cost with credit points",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var scaBand = 3;\nvar creditPoints = 6;\nvar scaBandCost = _CostCalc2.default.calculateCost(scaBand, 1);\nexpect(_CostCalc2.default.calculateCost(scaBand, creditPoints)).to.equal(scaBandCost * creditPoints);",
      "err": {},
      "isRoot": false,
      "uuid": "e48e3009-9cef-46ab-9a13-14a7c66a762d",
      "parentUUID": "5410244a-9acc-4d84-868c-206d5ffa0d62",
      "skipped": false
    },
    {
      "title": "Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
      "fullTitle": "nextSemester Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([], 2011, [])).to.deep.equal({\n    index: 0,\n    year: 2011,\n    code: \"S1-01\",\n    teachingPeriodData: []\n});",
      "err": {},
      "isRoot": false,
      "uuid": "70196e3a-198b-419d-a40a-97ae5197a54f",
      "parentUUID": "8888bfa1-ee6e-4333-a6c7-11f515687318",
      "skipped": false
    },
    {
      "title": "Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
      "fullTitle": "nextSemester Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([], 2029, sortedTeachingPeriodData)).to.deep.equal({\n    index: 0,\n    year: 2029,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
      "err": {},
      "isRoot": false,
      "uuid": "a41acf0f-a417-43f5-ad15-138475624859",
      "parentUUID": "8888bfa1-ee6e-4333-a6c7-11f515687318",
      "skipped": false
    },
    {
      "title": "Should return semester two if the last teaching period is in semester one, with the same year",
      "fullTitle": "nextSemester Should return semester two if the last teaching period is in semester one, with the same year",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2025,\n    code: \"S1-01\"\n}, {\n    year: 2025,\n    code: \"S2-01\"\n}, {\n    year: 2026,\n    code: \"S1-01\"\n}, {\n    year: 2026,\n    code: \"S2-01\"\n}, {\n    year: 2027,\n    code: \"S1-01\"\n}], 2023, sortedTeachingPeriodData)).to.deep.equal({\n    index: 5,\n    year: 2027,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
      "err": {},
      "isRoot": false,
      "uuid": "f1ddbf65-bb33-44bc-a124-da74c52b7fe2",
      "parentUUID": "8888bfa1-ee6e-4333-a6c7-11f515687318",
      "skipped": false
    },
    {
      "title": "Should return semester one next year if the last teaching period is in semester two",
      "fullTitle": "nextSemester Should return semester one next year if the last teaching period is in semester two",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2015,\n    code: \"FY-01\"\n}, {\n    year: 2017,\n    code: \"S2-01\"\n}], 2015, sortedTeachingPeriodData)).to.deep.equal({\n    index: 2,\n    year: 2018,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
      "err": {},
      "isRoot": false,
      "uuid": "c6fdfb80-dab9-4b9a-b075-bbfb1b4cf099",
      "parentUUID": "8888bfa1-ee6e-4333-a6c7-11f515687318",
      "skipped": false
    },
    {
      "title": "Should render a semester string",
      "fullTitle": "getSemesterString Should render a semester string",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2019,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n})).to.equal(\"Semester 2, 2019\");",
      "err": {},
      "isRoot": false,
      "uuid": "18d51725-2ec1-4e40-a956-8554765a030b",
      "parentUUID": "1acf967d-9c20-47e6-b34f-ff8f3b09db77",
      "skipped": false
    },
    {
      "title": "Should revert back to semester codes if teachingPeriodData is not available",
      "fullTitle": "getSemesterString Should revert back to semester codes if teachingPeriodData is not available",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2015,\n    code: \"S1-01\"\n})).to.equal(\"S1-01, 2015\");",
      "err": {},
      "isRoot": false,
      "uuid": "a18d44ae-8897-4d23-bb56-05e7849d32bd",
      "parentUUID": "1acf967d-9c20-47e6-b34f-ff8f3b09db77",
      "skipped": false
    },
    {
      "title": "Should return the right year based off current month",
      "fullTitle": "UTILS: ShowYear Should return the right year based off current month",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "if (new Date().getMonth() + 1 >= 11) {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear() + 1);\n} else {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear());\n}",
      "err": {},
      "isRoot": false,
      "uuid": "2141ad7f-187a-438c-b836-7ca28a9c33c6",
      "parentUUID": "7515e63b-f8c4-4a65-b2d6-af478996e299",
      "skipped": false
    },
    {
      "title": "Should contain the same year as it was specified",
      "fullTitle": "UTILS: YearCalc Should contain the same year as it was specified",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getStartYearVals(2016).find(function (year) {\n    return year.value === 2016;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2017).find(function (year) {\n    return year.value === 2017;\n})).to.be.ok;",
      "err": {},
      "isRoot": false,
      "uuid": "580e1d05-2442-42ef-adb8-d589305f9fc5",
      "parentUUID": "f799c20d-18d4-4dd1-bc79-904df28c4382",
      "skipped": false
    },
    {
      "title": "Should contain a year that is ten years from now",
      "fullTitle": "UTILS: YearCalc Should contain a year that is ten years from now",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getStartYearVals(2019).find(function (year) {\n    return year.value === 2029;\n})).to.be.ok;\nexpect(_YearCalc2.default.getStartYearVals(2012).find(function (year) {\n    return year.value === 2002;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2028;\n})).to.be.ok;",
      "err": {},
      "isRoot": false,
      "uuid": "0857a8a1-bc96-443a-99bb-a261ecdd80fb",
      "parentUUID": "f799c20d-18d4-4dd1-bc79-904df28c4382",
      "skipped": false
    },
    {
      "title": "Should not contain any past year when computing end years",
      "fullTitle": "UTILS: YearCalc Should not contain any past year when computing end years",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2017;\n})).to.be.not.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2008;\n})).to.be.not.ok;",
      "err": {},
      "isRoot": false,
      "uuid": "4ca8f893-fd0b-4654-9554-24a0a98403a4",
      "parentUUID": "f799c20d-18d4-4dd1-bc79-904df28c4382",
      "skipped": false
    },
    {
      "title": "Should have starting years go in decreasing order from one year ahead to the minimum",
      "fullTitle": "UTILS: YearCalc Should have starting years go in decreasing order from one year ahead to the minimum",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getStartYearVals(2019).slice(0, 12)).to.deep.equal([{\n    text: \"2020\",\n    value: 2020\n}, {\n    text: \"2019\",\n    value: 2019\n}, {\n    text: \"2018\",\n    value: 2018\n}, {\n    text: \"2017\",\n    value: 2017\n}, {\n    text: \"2016\",\n    value: 2016\n}, {\n    text: \"2015\",\n    value: 2015\n}, {\n    text: \"2014\",\n    value: 2014\n}, {\n    text: \"2013\",\n    value: 2013\n}, {\n    text: \"2012\",\n    value: 2012\n}, {\n    text: \"2011\",\n    value: 2011\n}, {\n    text: \"2010\",\n    value: 2010\n}, {\n    text: \"2009\",\n    value: 2009\n}]);",
      "err": {},
      "isRoot": false,
      "uuid": "520d3cbb-e5c9-46fd-afa1-11a509c5b4de",
      "parentUUID": "f799c20d-18d4-4dd1-bc79-904df28c4382",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2017
}