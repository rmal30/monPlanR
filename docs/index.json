{
  "stats": {
    "suites": 140,
    "tests": 189,
    "passes": 189,
    "pending": 0,
    "failures": 0,
    "start": "2017-02-16T23:14:28.258Z",
    "end": "2017-02-16T23:14:29.349Z",
    "duration": 1091,
    "testsRegistered": 189,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "ACTION-CREATOR: CounterActions",
        "suites": [
          {
            "title": "AC: incrementCreditPoints",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to increment credit points counter",
                "fullTitle": "ACTION-CREATOR: CounterActions AC: incrementCreditPoints Should create an action to increment credit points counter",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 5\n};\n(0, _expect2.default)(actions.incrementCreditPoints(5)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "c1d305e5-0eb5-4e91-bcb5-19bdb91265a5",
                "parentUUID": "2efcbc05-8d2f-44a9-bf92-270ee59edeb5",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CounterActions.spec.js",
            "uuid": "2efcbc05-8d2f-44a9-bf92-270ee59edeb5",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CounterActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to increment credit points counter",
                "fullTitle": "ACTION-CREATOR: CounterActions AC: incrementCreditPoints Should create an action to increment credit points counter",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 5\n};\n(0, _expect2.default)(actions.incrementCreditPoints(5)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "c1d305e5-0eb5-4e91-bcb5-19bdb91265a5",
                "parentUUID": "2efcbc05-8d2f-44a9-bf92-270ee59edeb5",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          },
          {
            "title": "AC: decrementCreditPoints",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to decrement credit points counter",
                "fullTitle": "ACTION-CREATOR: CounterActions AC: decrementCreditPoints Should create an action to decrement credit points counter",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 5\n};\n(0, _expect2.default)(actions.decrementCreditPoints(5)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "e3e58b1a-a1bc-493a-9c1e-90fc635bec6d",
                "parentUUID": "c401688b-b055-486c-b9bb-68368ab39293",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CounterActions.spec.js",
            "uuid": "c401688b-b055-486c-b9bb-68368ab39293",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CounterActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to decrement credit points counter",
                "fullTitle": "ACTION-CREATOR: CounterActions AC: decrementCreditPoints Should create an action to decrement credit points counter",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 5\n};\n(0, _expect2.default)(actions.decrementCreditPoints(5)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "e3e58b1a-a1bc-493a-9c1e-90fc635bec6d",
                "parentUUID": "c401688b-b055-486c-b9bb-68368ab39293",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: incrementCost",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to increment cost counter",
                "fullTitle": "ACTION-CREATOR: CounterActions AC: incrementCost Should create an action to increment cost counter",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"INCREMENT_COST\",\n    value: 5\n};\n(0, _expect2.default)(actions.incrementCost(5)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "fe3acbd1-bd7a-44df-86a1-3b880099c38b",
                "parentUUID": "63c175f5-4994-45b0-9457-7b478651db45",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CounterActions.spec.js",
            "uuid": "63c175f5-4994-45b0-9457-7b478651db45",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CounterActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to increment cost counter",
                "fullTitle": "ACTION-CREATOR: CounterActions AC: incrementCost Should create an action to increment cost counter",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"INCREMENT_COST\",\n    value: 5\n};\n(0, _expect2.default)(actions.incrementCost(5)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "fe3acbd1-bd7a-44df-86a1-3b880099c38b",
                "parentUUID": "63c175f5-4994-45b0-9457-7b478651db45",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: decrementCosts",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to decrement cost counter",
                "fullTitle": "ACTION-CREATOR: CounterActions AC: decrementCosts Should create an action to decrement cost counter",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"DECREMENT_COST\",\n    value: 5\n};\n(0, _expect2.default)(actions.decrementCost(5)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "70c3f0af-5951-40e9-b3a2-aa92d89df6e9",
                "parentUUID": "ce03ad4c-dabf-4704-ab74-bf1387801084",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CounterActions.spec.js",
            "uuid": "ce03ad4c-dabf-4704-ab74-bf1387801084",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CounterActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to decrement cost counter",
                "fullTitle": "ACTION-CREATOR: CounterActions AC: decrementCosts Should create an action to decrement cost counter",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"DECREMENT_COST\",\n    value: 5\n};\n(0, _expect2.default)(actions.decrementCost(5)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "70c3f0af-5951-40e9-b3a2-aa92d89df6e9",
                "parentUUID": "ce03ad4c-dabf-4704-ab74-bf1387801084",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/actionCreators/CounterActions.spec.js",
        "uuid": "e867cf01-e525-467e-80a1-f53369fb7620",
        "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CounterActions.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "ACTION-CREATOR: CourseActions",
        "suites": [
          {
            "title": "AC: insertTeachingPeriod",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to insert a teaching period",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: insertTeachingPeriod Should create an action to insert a teaching period",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{\n    type: \"INSERT_TEACHING_PERIOD\",\n    index: 1,\n    year: 2016,\n    code: \"tpCode\"\n}, {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n}];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.insertTeachingPeriod(1, 2016, \"tpCode\"));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "0af32da9-a89a-43a5-bfb1-8bd9e9338d6a",
                "parentUUID": "1fb8d8f6-19b5-4468-b19c-d1dc5da6cf1e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "1fb8d8f6-19b5-4468-b19c-d1dc5da6cf1e",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to insert a teaching period",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: insertTeachingPeriod Should create an action to insert a teaching period",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{\n    type: \"INSERT_TEACHING_PERIOD\",\n    index: 1,\n    year: 2016,\n    code: \"tpCode\"\n}, {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n}];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.insertTeachingPeriod(1, 2016, \"tpCode\"));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "0af32da9-a89a-43a5-bfb1-8bd9e9338d6a",
                "parentUUID": "1fb8d8f6-19b5-4468-b19c-d1dc5da6cf1e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "AC: removeTeachingPeriod",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to remove a teaching period",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: removeTeachingPeriod Should create an action to remove a teaching period",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1,\n    units: [\"unit1\", \"unit2\", \"unit3\", null]\n}, {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n}];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.removeTeachingPeriod(1, [\"unit1\", \"unit2\", \"unit3\", null]));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "f1f66ad2-f0bd-4bad-b143-11ec66a10162",
                "parentUUID": "a3f99806-42e9-4a35-bbf5-a169de4ffed2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "a3f99806-42e9-4a35-bbf5-a169de4ffed2",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to remove a teaching period",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: removeTeachingPeriod Should create an action to remove a teaching period",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1,\n    units: [\"unit1\", \"unit2\", \"unit3\", null]\n}, {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n}];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.removeTeachingPeriod(1, [\"unit1\", \"unit2\", \"unit3\", null]));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "f1f66ad2-f0bd-4bad-b143-11ec66a10162",
                "parentUUID": "a3f99806-42e9-4a35-bbf5-a169de4ffed2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: increaseStudyLoad",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to increase the study load",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: increaseStudyLoad Should create an action to increase the study load",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\n(0, _expect2.default)(actions.increaseStudyLoad()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "6c20ed4d-1ec0-46a2-9cb7-f2fe8edf895b",
                "parentUUID": "0b6e961b-8228-4954-a605-221228ed677d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "0b6e961b-8228-4954-a605-221228ed677d",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to increase the study load",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: increaseStudyLoad Should create an action to increase the study load",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\n(0, _expect2.default)(actions.increaseStudyLoad()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "6c20ed4d-1ec0-46a2-9cb7-f2fe8edf895b",
                "parentUUID": "0b6e961b-8228-4954-a605-221228ed677d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: decreaseStudyLoad",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to increase the study load with units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: decreaseStudyLoad Should create an action to increase the study load with units affected",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockTeachingPeriods = [{ year: 2018, code: \"S1-01\", units: [null, null, null, null, \"unit1\"] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }, { year: 2019, code: \"S1-01\", units: [null, null, null, null, \"unit2\"] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null, null] }];\nvar expectedAction = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [\"unit1\", \"unit2\"]\n};\n(0, _expect2.default)(actions.decreaseStudyLoad(mockTeachingPeriods, 4)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "c60467b8-9aad-4816-8d05-0f120ba80464",
                "parentUUID": "32f2f0ea-ac7f-489c-a4ea-b61951b1a174",
                "skipped": false
              },
              {
                "title": "Should create an action to increase the study load with no units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: decreaseStudyLoad Should create an action to increase the study load with no units affected",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockTeachingPeriods = [{ year: 2018, code: \"S1-01\", units: [null, null, null, \"unit1\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }, { year: 2019, code: \"S1-01\", units: [null, null, null, \"unit2\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null, null] }];\nvar expectedAction = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: []\n};\n(0, _expect2.default)(actions.decreaseStudyLoad(mockTeachingPeriods, 4)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "5c7858ee-d352-4aa9-9638-e24de34ba6b3",
                "parentUUID": "32f2f0ea-ac7f-489c-a4ea-b61951b1a174",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "32f2f0ea-ac7f-489c-a4ea-b61951b1a174",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to increase the study load with units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: decreaseStudyLoad Should create an action to increase the study load with units affected",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockTeachingPeriods = [{ year: 2018, code: \"S1-01\", units: [null, null, null, null, \"unit1\"] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }, { year: 2019, code: \"S1-01\", units: [null, null, null, null, \"unit2\"] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null, null] }];\nvar expectedAction = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [\"unit1\", \"unit2\"]\n};\n(0, _expect2.default)(actions.decreaseStudyLoad(mockTeachingPeriods, 4)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "c60467b8-9aad-4816-8d05-0f120ba80464",
                "parentUUID": "32f2f0ea-ac7f-489c-a4ea-b61951b1a174",
                "skipped": false
              },
              {
                "title": "Should create an action to increase the study load with no units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: decreaseStudyLoad Should create an action to increase the study load with no units affected",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockTeachingPeriods = [{ year: 2018, code: \"S1-01\", units: [null, null, null, \"unit1\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }, { year: 2019, code: \"S1-01\", units: [null, null, null, \"unit2\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null, null] }];\nvar expectedAction = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: []\n};\n(0, _expect2.default)(actions.decreaseStudyLoad(mockTeachingPeriods, 4)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "5c7858ee-d352-4aa9-9638-e24de34ba6b3",
                "parentUUID": "32f2f0ea-ac7f-489c-a4ea-b61951b1a174",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: addUnit",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly create the actions required for the addition of a unit that is not a custom unit being dragged",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: addUnit Should correctly create the actions required for the addition of a unit that is not a custom unit being dragged",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockUnit = {\n                customUnitDragging: false,\n                cost: 200,\n                creditPoints: 6,\n                unitCode: \"TEST1001\"\n            };\n            var expectedActions = [{ type: \"ADD_UNIT\", tpIndex: 1, unitIndex: 1, unit: mockUnit, cost: 200, creditPoints: 6 }, { type: \"CLEAR_HIGHLIGHTING_INVALID_UNIT_SLOTS\" }, { type: \"VALIDATE_COURSE\" }];\n            var store = mockStore({});\n            store.dispatch(actions.addUnit(1, 1, mockUnit));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "a8ebee8c-6226-4cab-909f-993778cee9a4",
                "parentUUID": "2c24e9e1-a9fb-4c8e-874b-f01ab173193c",
                "skipped": false
              },
              {
                "title": "Should correctly create the actions required for the addition of a unit that is a custom unit being dragged",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: addUnit Should correctly create the actions required for the addition of a unit that is a custom unit being dragged",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockUnit = {\n                customUnitDragging: true,\n                cost: 200,\n                creditPoints: 6,\n                unitCode: \"TEST1001\"\n            };\n            var expectedActions = [{\n                type: \"SHOW_CUSTOM_UNIT_MODAL\",\n                unitCode: \"TEST1001\",\n                tpIndex: 1,\n                unitIndex: 1\n            }];\n            var store = mockStore({});\n            store.dispatch(actions.addUnit(1, 1, mockUnit));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "297e0750-527e-4b6a-94ea-553047d18a3b",
                "parentUUID": "2c24e9e1-a9fb-4c8e-874b-f01ab173193c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "2c24e9e1-a9fb-4c8e-874b-f01ab173193c",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should correctly create the actions required for the addition of a unit that is not a custom unit being dragged",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: addUnit Should correctly create the actions required for the addition of a unit that is not a custom unit being dragged",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockUnit = {\n                customUnitDragging: false,\n                cost: 200,\n                creditPoints: 6,\n                unitCode: \"TEST1001\"\n            };\n            var expectedActions = [{ type: \"ADD_UNIT\", tpIndex: 1, unitIndex: 1, unit: mockUnit, cost: 200, creditPoints: 6 }, { type: \"CLEAR_HIGHLIGHTING_INVALID_UNIT_SLOTS\" }, { type: \"VALIDATE_COURSE\" }];\n            var store = mockStore({});\n            store.dispatch(actions.addUnit(1, 1, mockUnit));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "a8ebee8c-6226-4cab-909f-993778cee9a4",
                "parentUUID": "2c24e9e1-a9fb-4c8e-874b-f01ab173193c",
                "skipped": false
              },
              {
                "title": "Should correctly create the actions required for the addition of a unit that is a custom unit being dragged",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: addUnit Should correctly create the actions required for the addition of a unit that is a custom unit being dragged",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockUnit = {\n                customUnitDragging: true,\n                cost: 200,\n                creditPoints: 6,\n                unitCode: \"TEST1001\"\n            };\n            var expectedActions = [{\n                type: \"SHOW_CUSTOM_UNIT_MODAL\",\n                unitCode: \"TEST1001\",\n                tpIndex: 1,\n                unitIndex: 1\n            }];\n            var store = mockStore({});\n            store.dispatch(actions.addUnit(1, 1, mockUnit));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "297e0750-527e-4b6a-94ea-553047d18a3b",
                "parentUUID": "2c24e9e1-a9fb-4c8e-874b-f01ab173193c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: removeUnit",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly create the actions required for removal of a unit",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: removeUnit Should correctly create the actions required for removal of a unit",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{ type: \"REMOVE_UNIT\", tpIndex: 1, unitIndex: 1, cost: 200, creditPoints: 6 }, { type: \"VALIDATE_COURSE\" }];\n            var store = mockStore({});\n            store.dispatch(actions.removeUnit(1, 1, 6, 200));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "77f18625-3ff7-4a19-bdd6-6f6dd5385d67",
                "parentUUID": "ea741c1c-980d-49d6-8bd5-f9a40021c9df",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "ea741c1c-980d-49d6-8bd5-f9a40021c9df",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should correctly create the actions required for removal of a unit",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: removeUnit Should correctly create the actions required for removal of a unit",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{ type: \"REMOVE_UNIT\", tpIndex: 1, unitIndex: 1, cost: 200, creditPoints: 6 }, { type: \"VALIDATE_COURSE\" }];\n            var store = mockStore({});\n            store.dispatch(actions.removeUnit(1, 1, 6, 200));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "77f18625-3ff7-4a19-bdd6-6f6dd5385d67",
                "parentUUID": "ea741c1c-980d-49d6-8bd5-f9a40021c9df",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: clearCourse",
            "suites": [],
            "tests": [
              {
                "title": "Should create the actions for clearing the course",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: clearCourse Should create the actions for clearing the course",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{ type: \"CLEAR_COURSE\" }, { type: \"GET_NEXT_SEMESTER_STRING\" }, { type: \"VALIDATE_COURSE\" }];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.clearCourse());\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "4ed2b03a-517a-4482-b3fb-17ec8842e6f4",
                "parentUUID": "182ade64-f610-4918-86e2-6db6866092e2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "182ade64-f610-4918-86e2-6db6866092e2",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create the actions for clearing the course",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: clearCourse Should create the actions for clearing the course",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{ type: \"CLEAR_COURSE\" }, { type: \"GET_NEXT_SEMESTER_STRING\" }, { type: \"VALIDATE_COURSE\" }];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.clearCourse());\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "4ed2b03a-517a-4482-b3fb-17ec8842e6f4",
                "parentUUID": "182ade64-f610-4918-86e2-6db6866092e2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: generateCourse",
            "suites": [],
            "tests": [
              {
                "title": "Should create the action for generating the course",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: generateCourse Should create the action for generating the course",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2016,\n    endYear: 2019\n};\n(0, _expect2.default)(actions.generateCourse(2016, 2019)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "727adeb5-24d4-4fe3-bd9b-e39b249343a5",
                "parentUUID": "db34c188-904d-47d4-a4fe-1b8dee20ec83",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "db34c188-904d-47d4-a4fe-1b8dee20ec83",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create the action for generating the course",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: generateCourse Should create the action for generating the course",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2016,\n    endYear: 2019\n};\n(0, _expect2.default)(actions.generateCourse(2016, 2019)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "727adeb5-24d4-4fe3-bd9b-e39b249343a5",
                "parentUUID": "db34c188-904d-47d4-a4fe-1b8dee20ec83",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "AC: submitYearForm",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly create the actions required for submission of a year form",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: submitYearForm Should correctly create the actions required for submission of a year form",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{ type: \"SUBMIT_YEAR_FORM\", startYear: 2016, endYear: 2019 }, { type: \"GENERATE_COURSE\", startYear: 2016, endYear: 2019 }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\n            var store = mockStore({});\n            store.dispatch(actions.submitYearForm(2016, 2019));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "3567ab4b-f034-4e93-aeaf-9813321dab67",
                "parentUUID": "5c089343-721e-46b2-8b06-54c2bd4fbf54",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "5c089343-721e-46b2-8b06-54c2bd4fbf54",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should correctly create the actions required for submission of a year form",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: submitYearForm Should correctly create the actions required for submission of a year form",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{ type: \"SUBMIT_YEAR_FORM\", startYear: 2016, endYear: 2019 }, { type: \"GENERATE_COURSE\", startYear: 2016, endYear: 2019 }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\n            var store = mockStore({});\n            store.dispatch(actions.submitYearForm(2016, 2019));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "3567ab4b-f034-4e93-aeaf-9813321dab67",
                "parentUUID": "5c089343-721e-46b2-8b06-54c2bd4fbf54",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: changeStartYear",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly create actions required to change the start year",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: changeStartYear Should correctly create actions required to change the start year",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{ type: \"CHANGE_START_YEAR\", year: 2020 }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\nvar store = mockStore({});\nstore.dispatch(actions.changeStartYear(2020));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "1e74c3c8-32e2-4911-a6d1-e6ec144ebcaa",
                "parentUUID": "bbfbe05d-9ae8-43e3-86b2-429878bd70b8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "bbfbe05d-9ae8-43e3-86b2-429878bd70b8",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should correctly create actions required to change the start year",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: changeStartYear Should correctly create actions required to change the start year",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{ type: \"CHANGE_START_YEAR\", year: 2020 }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\nvar store = mockStore({});\nstore.dispatch(actions.changeStartYear(2020));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "1e74c3c8-32e2-4911-a6d1-e6ec144ebcaa",
                "parentUUID": "bbfbe05d-9ae8-43e3-86b2-429878bd70b8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: getNextSemesterString",
            "suites": [],
            "tests": [
              {
                "title": "Should create the action for generating the course",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: getNextSemesterString Should create the action for generating the course",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n};\n(0, _expect2.default)(actions.getNextSemesterString()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "27fa669d-b251-44d3-b7d1-73da76a93e09",
                "parentUUID": "1e93760f-d78a-4341-8972-179a767a8e47",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "1e93760f-d78a-4341-8972-179a767a8e47",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create the action for generating the course",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: getNextSemesterString Should create the action for generating the course",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n};\n(0, _expect2.default)(actions.getNextSemesterString()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "27fa669d-b251-44d3-b7d1-73da76a93e09",
                "parentUUID": "1e93760f-d78a-4341-8972-179a767a8e47",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: getAffectedUnitsInColumn",
            "suites": [],
            "tests": [
              {
                "title": "Should create the action for getting affected units in an overload column",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: getAffectedUnitsInColumn Should create the action for getting affected units in an overload column",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"GET_AFFECTED_UNITS_IN_OVERLOAD_COLUMN\",\n    index: 4\n};\n(0, _expect2.default)(actions.getAffectedUnitsInColumn(4)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "5f93a71c-8150-4eb5-b42a-c77cb688516f",
                "parentUUID": "3c0418df-4408-45d2-aa3e-bfbeee568d06",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "3c0418df-4408-45d2-aa3e-bfbeee568d06",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create the action for getting affected units in an overload column",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: getAffectedUnitsInColumn Should create the action for getting affected units in an overload column",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"GET_AFFECTED_UNITS_IN_OVERLOAD_COLUMN\",\n    index: 4\n};\n(0, _expect2.default)(actions.getAffectedUnitsInColumn(4)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "5f93a71c-8150-4eb5-b42a-c77cb688516f",
                "parentUUID": "3c0418df-4408-45d2-aa3e-bfbeee568d06",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: attemptToDeleteTeachingPeriod",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly create the actions required for deletion of a teaching period with units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: attemptToDeleteTeachingPeriod Should correctly create the actions required for deletion of a teaching period with units affected",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockUnits = [{ unitCode: \"TEST101\", unitName: \"unit1\" }, null, { unitCode: \"TEST102\", unitName: \"unit2\" }, null, null];\nvar expectedActions = [{ type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\" }, { type: \"UPDATE_AFFECTED_UNITS\", affectedUnits: [\"TEST101 - unit1\", \"TEST102 - unit2\"] }, { type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\", index: 1 }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDeleteTeachingPeriod(1, mockUnits));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "35af28ff-959d-41b8-8974-775a9036d761",
                "parentUUID": "f4456503-1978-4621-8c94-bad63aa78cda",
                "skipped": false
              },
              {
                "title": "Should correctly create the actions required for deletion of a teaching period with no units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: attemptToDeleteTeachingPeriod Should correctly create the actions required for deletion of a teaching period with no units affected",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockUnits = [null, null, null, null, null];\nvar expectedActions = [{ type: \"REMOVE_TEACHING_PERIOD\", index: 1, units: [null, null, null, null, null] }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDeleteTeachingPeriod(1, mockUnits));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "0e1b55fa-bb18-464e-a4eb-830b78028dbb",
                "parentUUID": "f4456503-1978-4621-8c94-bad63aa78cda",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "f4456503-1978-4621-8c94-bad63aa78cda",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should correctly create the actions required for deletion of a teaching period with units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: attemptToDeleteTeachingPeriod Should correctly create the actions required for deletion of a teaching period with units affected",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockUnits = [{ unitCode: \"TEST101\", unitName: \"unit1\" }, null, { unitCode: \"TEST102\", unitName: \"unit2\" }, null, null];\nvar expectedActions = [{ type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\" }, { type: \"UPDATE_AFFECTED_UNITS\", affectedUnits: [\"TEST101 - unit1\", \"TEST102 - unit2\"] }, { type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\", index: 1 }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDeleteTeachingPeriod(1, mockUnits));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "35af28ff-959d-41b8-8974-775a9036d761",
                "parentUUID": "f4456503-1978-4621-8c94-bad63aa78cda",
                "skipped": false
              },
              {
                "title": "Should correctly create the actions required for deletion of a teaching period with no units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: attemptToDeleteTeachingPeriod Should correctly create the actions required for deletion of a teaching period with no units affected",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockUnits = [null, null, null, null, null];\nvar expectedActions = [{ type: \"REMOVE_TEACHING_PERIOD\", index: 1, units: [null, null, null, null, null] }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDeleteTeachingPeriod(1, mockUnits));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "0e1b55fa-bb18-464e-a4eb-830b78028dbb",
                "parentUUID": "f4456503-1978-4621-8c94-bad63aa78cda",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          },
          {
            "title": "AC: attemptToDecreaseStudyLoad",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly create the actions required for decrease of a study load with units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: attemptToDecreaseStudyLoad Should correctly create the actions required for decrease of a study load with units affected",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockTeachingPeriods = [{ units: [null, null, { unitCode: \"TEST10A\", unitName: \"unitA\" }, null, { unitCode: \"TEST101\", unitName: \"unit1\" }] }, { units: [null, null, { unitCode: \"TEST10B\", unitName: \"unitB\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10C\", unitName: \"unitC\" }, null, { unitCode: \"TEST102\", unitName: \"unit2\" }] }, { units: [null, null, { unitCode: \"TEST10D\", unitName: \"unitD\" }, null, null] }];\nvar expectedActions = [{ type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\" }, { type: \"UPDATE_AFFECTED_UNITS\", affectedUnits: [\"TEST101 - unit1\", \"TEST102 - unit2\"] }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDecreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "52c8074a-bc3b-4c61-aa20-1d91f775e730",
                "parentUUID": "ea3209c5-a24c-405e-ad8e-8ea4265efe8d",
                "skipped": false
              },
              {
                "title": "Should correctly create the actions required for decrease of a study load with no units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: attemptToDecreaseStudyLoad Should correctly create the actions required for decrease of a study load with no units affected",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockTeachingPeriods = [{ units: [null, null, { unitCode: \"TEST10A\", unitName: \"unitA\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10B\", unitName: \"unitB\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10C\", unitName: \"unitC\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10D\", unitName: \"unitD\" }, null, null] }];\nvar expectedActions = [{ type: \"DECREASE_STUDY_LOAD\", units: [] }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDecreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "d1cf8c38-4bd6-4e7f-99e3-941f6d9a674f",
                "parentUUID": "ea3209c5-a24c-405e-ad8e-8ea4265efe8d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "ea3209c5-a24c-405e-ad8e-8ea4265efe8d",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should correctly create the actions required for decrease of a study load with units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: attemptToDecreaseStudyLoad Should correctly create the actions required for decrease of a study load with units affected",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockTeachingPeriods = [{ units: [null, null, { unitCode: \"TEST10A\", unitName: \"unitA\" }, null, { unitCode: \"TEST101\", unitName: \"unit1\" }] }, { units: [null, null, { unitCode: \"TEST10B\", unitName: \"unitB\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10C\", unitName: \"unitC\" }, null, { unitCode: \"TEST102\", unitName: \"unit2\" }] }, { units: [null, null, { unitCode: \"TEST10D\", unitName: \"unitD\" }, null, null] }];\nvar expectedActions = [{ type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\" }, { type: \"UPDATE_AFFECTED_UNITS\", affectedUnits: [\"TEST101 - unit1\", \"TEST102 - unit2\"] }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDecreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "52c8074a-bc3b-4c61-aa20-1d91f775e730",
                "parentUUID": "ea3209c5-a24c-405e-ad8e-8ea4265efe8d",
                "skipped": false
              },
              {
                "title": "Should correctly create the actions required for decrease of a study load with no units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: attemptToDecreaseStudyLoad Should correctly create the actions required for decrease of a study load with no units affected",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockTeachingPeriods = [{ units: [null, null, { unitCode: \"TEST10A\", unitName: \"unitA\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10B\", unitName: \"unitB\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10C\", unitName: \"unitC\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10D\", unitName: \"unitD\" }, null, null] }];\nvar expectedActions = [{ type: \"DECREASE_STUDY_LOAD\", units: [] }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDecreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "d1cf8c38-4bd6-4e7f-99e3-941f6d9a674f",
                "parentUUID": "ea3209c5-a24c-405e-ad8e-8ea4265efe8d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: getAffectedUnitsInRow",
            "suites": [],
            "tests": [
              {
                "title": "Should create the action for getting affected units in an teaching period row",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: getAffectedUnitsInRow Should create the action for getting affected units in an teaching period row",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"GET_AFFECTED_UNITS_IN_TEACHING_PERIOD_ROW\",\n    index: 4\n};\n(0, _expect2.default)(actions.getAffectedUnitsInRow(4)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "cd38fdd9-c9be-4d82-9bcf-4f8758f4188b",
                "parentUUID": "e588834e-977c-496c-ae41-0aaf79452cd2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "e588834e-977c-496c-ae41-0aaf79452cd2",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create the action for getting affected units in an teaching period row",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: getAffectedUnitsInRow Should create the action for getting affected units in an teaching period row",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"GET_AFFECTED_UNITS_IN_TEACHING_PERIOD_ROW\",\n    index: 4\n};\n(0, _expect2.default)(actions.getAffectedUnitsInRow(4)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "cd38fdd9-c9be-4d82-9bcf-4f8758f4188b",
                "parentUUID": "e588834e-977c-496c-ae41-0aaf79452cd2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: validateCourse",
            "suites": [],
            "tests": [
              {
                "title": "Should create the action for validating the course",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: validateCourse Should create the action for validating the course",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"VALIDATE_COURSE\"\n};\n(0, _expect2.default)(actions.validateCourse()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "0c5b9f30-abc9-4eb4-b808-0f1ec5336344",
                "parentUUID": "e8f660e7-3a93-4a0a-8e34-928db996e704",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "e8f660e7-3a93-4a0a-8e34-928db996e704",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create the action for validating the course",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: validateCourse Should create the action for validating the course",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"VALIDATE_COURSE\"\n};\n(0, _expect2.default)(actions.validateCourse()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "0c5b9f30-abc9-4eb4-b808-0f1ec5336344",
                "parentUUID": "e8f660e7-3a93-4a0a-8e34-928db996e704",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: highlightInvalidUnitSlots",
            "suites": [],
            "tests": [
              {
                "title": "Should create the action for highlighting the invalid unit slots",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: highlightInvalidUnitSlots Should create the action for highlighting the invalid unit slots",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: \"UnitTest\",\n    ignoreCoordinate: false\n};\n(0, _expect2.default)(actions.highlightInvalidUnitSlots(\"UnitTest\", false)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "23cf8c92-5319-4483-89ec-233e98979c78",
                "parentUUID": "065fb2d7-c01f-490f-8ad6-e22593849d9d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "065fb2d7-c01f-490f-8ad6-e22593849d9d",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create the action for highlighting the invalid unit slots",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: highlightInvalidUnitSlots Should create the action for highlighting the invalid unit slots",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: \"UnitTest\",\n    ignoreCoordinate: false\n};\n(0, _expect2.default)(actions.highlightInvalidUnitSlots(\"UnitTest\", false)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "23cf8c92-5319-4483-89ec-233e98979c78",
                "parentUUID": "065fb2d7-c01f-490f-8ad6-e22593849d9d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: clearHighlightingInvalidUnitSlots",
            "suites": [],
            "tests": [
              {
                "title": "Should create the action for clearing the highlighting for invalid unit slots",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: clearHighlightingInvalidUnitSlots Should create the action for clearing the highlighting for invalid unit slots",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"CLEAR_HIGHLIGHTING_INVALID_UNIT_SLOTS\"\n};\n(0, _expect2.default)(actions.clearHighlightingInvalidUnitSlots()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "7bdb515f-ce41-4a84-9216-eab75c30fa86",
                "parentUUID": "2ecff9c0-bab6-4d19-be65-5b9823b032ce",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "2ecff9c0-bab6-4d19-be65-5b9823b032ce",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create the action for clearing the highlighting for invalid unit slots",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: clearHighlightingInvalidUnitSlots Should create the action for clearing the highlighting for invalid unit slots",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"CLEAR_HIGHLIGHTING_INVALID_UNIT_SLOTS\"\n};\n(0, _expect2.default)(actions.clearHighlightingInvalidUnitSlots()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "7bdb515f-ce41-4a84-9216-eab75c30fa86",
                "parentUUID": "2ecff9c0-bab6-4d19-be65-5b9823b032ce",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/actionCreators/CourseActions.spec.js",
        "uuid": "f4c09d53-0a67-483d-ba1d-e84a923a7e5d",
        "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "ACTION-CREATOR: UIActions",
        "suites": [
          {
            "title": "AC: showInsertTeachingPeriodUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to show the insert teaching period UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showInsertTeachingPeriodUI Should create an action to show the insert teaching period UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"testTPCode\"\n};\n(0, _expect2.default)(actions.showInsertTeachingPeriodUI(\"testTPCode\")).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "52f5e1c4-3c49-40bf-9dda-4e98c8aabd66",
                "parentUUID": "9504f655-89c4-453a-887e-f6e721bde885",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "9504f655-89c4-453a-887e-f6e721bde885",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to show the insert teaching period UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showInsertTeachingPeriodUI Should create an action to show the insert teaching period UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"testTPCode\"\n};\n(0, _expect2.default)(actions.showInsertTeachingPeriodUI(\"testTPCode\")).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "52f5e1c4-3c49-40bf-9dda-4e98c8aabd66",
                "parentUUID": "9504f655-89c4-453a-887e-f6e721bde885",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: hideInsertTeachingPeriodUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to hide the insert teaching period UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideInsertTeachingPeriodUI Should create an action to hide the insert teaching period UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\n(0, _expect2.default)(actions.hideInsertTeachingPeriodUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "4637f6e4-3d6e-4b41-86ea-4e51bd968fbd",
                "parentUUID": "fa953ef3-d1e6-4c1e-80f1-e78ffcc13029",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "fa953ef3-d1e6-4c1e-80f1-e78ffcc13029",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to hide the insert teaching period UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideInsertTeachingPeriodUI Should create an action to hide the insert teaching period UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\n(0, _expect2.default)(actions.hideInsertTeachingPeriodUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "4637f6e4-3d6e-4b41-86ea-4e51bd968fbd",
                "parentUUID": "fa953ef3-d1e6-4c1e-80f1-e78ffcc13029",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: showAddingUnitUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to show the add unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showAddingUnitUI Should create an action to show the add unit UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_ADD_UNIT_UI\"\n};\n(0, _expect2.default)(actions.showAddingUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "09127e59-c61f-41b2-b09c-83ebd864319d",
                "parentUUID": "51b567d0-ceb9-4268-b191-4706cad44cc7",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "51b567d0-ceb9-4268-b191-4706cad44cc7",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to show the add unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showAddingUnitUI Should create an action to show the add unit UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_ADD_UNIT_UI\"\n};\n(0, _expect2.default)(actions.showAddingUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "09127e59-c61f-41b2-b09c-83ebd864319d",
                "parentUUID": "51b567d0-ceb9-4268-b191-4706cad44cc7",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: hideAddingUnitUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to hide the add unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideAddingUnitUI Should create an action to hide the add unit UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_ADD_UNIT_UI\"\n};\n(0, _expect2.default)(actions.hideAddingUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "63b54948-7191-4cee-b152-58ca4af084b6",
                "parentUUID": "c3d58188-b10f-4ede-9a6c-df0919049953",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "c3d58188-b10f-4ede-9a6c-df0919049953",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to hide the add unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideAddingUnitUI Should create an action to hide the add unit UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_ADD_UNIT_UI\"\n};\n(0, _expect2.default)(actions.hideAddingUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "63b54948-7191-4cee-b152-58ca4af084b6",
                "parentUUID": "c3d58188-b10f-4ede-9a6c-df0919049953",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: showMoveUnitUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to show the move unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showMoveUnitUI Should create an action to show the move unit UI",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_MOVE_UNIT_UI\"\n};\n(0, _expect2.default)(actions.showMoveUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "b6e4408b-f076-4c80-bc25-2b2291d8bfa9",
                "parentUUID": "07f078e8-8776-407e-8db9-43c9a09d7ea3",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "07f078e8-8776-407e-8db9-43c9a09d7ea3",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to show the move unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showMoveUnitUI Should create an action to show the move unit UI",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_MOVE_UNIT_UI\"\n};\n(0, _expect2.default)(actions.showMoveUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "b6e4408b-f076-4c80-bc25-2b2291d8bfa9",
                "parentUUID": "07f078e8-8776-407e-8db9-43c9a09d7ea3",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: hideMoveUnitUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to hide move unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideMoveUnitUI Should create an action to hide move unit UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_MOVE_UNIT_UI\"\n};\n(0, _expect2.default)(actions.hideMoveUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "09188614-493b-4740-a8f8-970e6c0ee4f1",
                "parentUUID": "00e72cb8-3e02-402b-866b-1c019f5c63df",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "00e72cb8-3e02-402b-866b-1c019f5c63df",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to hide move unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideMoveUnitUI Should create an action to hide move unit UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_MOVE_UNIT_UI\"\n};\n(0, _expect2.default)(actions.hideMoveUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "09188614-493b-4740-a8f8-970e6c0ee4f1",
                "parentUUID": "00e72cb8-3e02-402b-866b-1c019f5c63df",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: showConfirmDeleteTeachingPeriodUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to show confirm delete teaching period UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showConfirmDeleteTeachingPeriodUI Should create an action to show confirm delete teaching period UI",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\n(0, _expect2.default)(actions.showConfirmDeleteTeachingPeriodUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "03934356-23c9-433a-b8a4-7f6abf099d3e",
                "parentUUID": "93eb5b3c-c5ab-4ceb-9097-f3efcc30f9bc",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "93eb5b3c-c5ab-4ceb-9097-f3efcc30f9bc",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to show confirm delete teaching period UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showConfirmDeleteTeachingPeriodUI Should create an action to show confirm delete teaching period UI",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\n(0, _expect2.default)(actions.showConfirmDeleteTeachingPeriodUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "03934356-23c9-433a-b8a4-7f6abf099d3e",
                "parentUUID": "93eb5b3c-c5ab-4ceb-9097-f3efcc30f9bc",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: hideConfirmDeleteTeachingPeriodUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to hide confirm delete teaching period UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideConfirmDeleteTeachingPeriodUI Should create an action to hide confirm delete teaching period UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\n(0, _expect2.default)(actions.hideConfirmDeleteTeachingPeriodUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "df8a6299-2c00-40b2-83c4-123c4ffd215e",
                "parentUUID": "920c7783-e0fb-4303-a05b-8f2510c3c272",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "920c7783-e0fb-4303-a05b-8f2510c3c272",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to hide confirm delete teaching period UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideConfirmDeleteTeachingPeriodUI Should create an action to hide confirm delete teaching period UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\n(0, _expect2.default)(actions.hideConfirmDeleteTeachingPeriodUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "df8a6299-2c00-40b2-83c4-123c4ffd215e",
                "parentUUID": "920c7783-e0fb-4303-a05b-8f2510c3c272",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: showConfirmDecreaseStudyLoadUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to show confirm decrease study load UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showConfirmDecreaseStudyLoadUI Should create an action to show confirm decrease study load UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\n(0, _expect2.default)(actions.showConfirmDecreaseStudyLoadUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "9151390a-de53-4697-b608-6d942e6586a5",
                "parentUUID": "f5bbb22e-4659-41d9-8b95-0951de30b261",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "f5bbb22e-4659-41d9-8b95-0951de30b261",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to show confirm decrease study load UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showConfirmDecreaseStudyLoadUI Should create an action to show confirm decrease study load UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\n(0, _expect2.default)(actions.showConfirmDecreaseStudyLoadUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "9151390a-de53-4697-b608-6d942e6586a5",
                "parentUUID": "f5bbb22e-4659-41d9-8b95-0951de30b261",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: hideConfirmDecreaseStudyLoadUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to hide confirm decrease study load UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideConfirmDecreaseStudyLoadUI Should create an action to hide confirm decrease study load UI",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\n(0, _expect2.default)(actions.hideConfirmDecreaseStudyLoadUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "2b50b48c-7c44-4bb7-9635-450e123d4f04",
                "parentUUID": "ba80fb59-7737-43e0-9fab-78a637c55042",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "ba80fb59-7737-43e0-9fab-78a637c55042",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to hide confirm decrease study load UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideConfirmDecreaseStudyLoadUI Should create an action to hide confirm decrease study load UI",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\n(0, _expect2.default)(actions.hideConfirmDecreaseStudyLoadUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "2b50b48c-7c44-4bb7-9635-450e123d4f04",
                "parentUUID": "ba80fb59-7737-43e0-9fab-78a637c55042",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: showCustomUnitUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to show custum unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showCustomUnitUI Should create an action to show custum unit UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"TEST1001\"\n};\n(0, _expect2.default)(actions.showCustomUnitUI(\"TEST1001\")).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "2abde51c-aeb5-4527-887d-b4f96dca3f0e",
                "parentUUID": "59e942d7-c361-4ab2-af25-210672256eeb",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "59e942d7-c361-4ab2-af25-210672256eeb",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to show custum unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showCustomUnitUI Should create an action to show custum unit UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"TEST1001\"\n};\n(0, _expect2.default)(actions.showCustomUnitUI(\"TEST1001\")).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "2abde51c-aeb5-4527-887d-b4f96dca3f0e",
                "parentUUID": "59e942d7-c361-4ab2-af25-210672256eeb",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: hideCustomUnitUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to hide custom unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideCustomUnitUI Should create an action to hide custom unit UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\n(0, _expect2.default)(actions.hideCustomUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "3dc7c467-f7d4-40f0-bb74-ba306e7e4af3",
                "parentUUID": "d67901ac-337a-426d-86bb-c350462d6d9f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "d67901ac-337a-426d-86bb-c350462d6d9f",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to hide custom unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideCustomUnitUI Should create an action to hide custom unit UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\n(0, _expect2.default)(actions.hideCustomUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "3dc7c467-f7d4-40f0-bb74-ba306e7e4af3",
                "parentUUID": "d67901ac-337a-426d-86bb-c350462d6d9f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: showSidebar",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to show sidebar",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showSidebar Should create an action to show sidebar",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_SIDEBAR\"\n};\n(0, _expect2.default)(actions.showSidebar()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "8e7e79f2-ac37-4a26-97ac-00b5581729c0",
                "parentUUID": "02c728d2-088f-4fd7-bd28-c47e5e378f99",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "02c728d2-088f-4fd7-bd28-c47e5e378f99",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to show sidebar",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showSidebar Should create an action to show sidebar",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_SIDEBAR\"\n};\n(0, _expect2.default)(actions.showSidebar()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "8e7e79f2-ac37-4a26-97ac-00b5581729c0",
                "parentUUID": "02c728d2-088f-4fd7-bd28-c47e5e378f99",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: hideSidebar",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to hide sidebar",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideSidebar Should create an action to hide sidebar",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_SIDEBAR\"\n};\n(0, _expect2.default)(actions.hideSidebar()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "ee5d3cf1-8031-407b-abca-6f6f6ae543c7",
                "parentUUID": "85df46e8-5a54-4329-9496-4971c8f97b44",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "85df46e8-5a54-4329-9496-4971c8f97b44",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to hide sidebar",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideSidebar Should create an action to hide sidebar",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_SIDEBAR\"\n};\n(0, _expect2.default)(actions.hideSidebar()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "ee5d3cf1-8031-407b-abca-6f6f6ae543c7",
                "parentUUID": "85df46e8-5a54-4329-9496-4971c8f97b44",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: setCourseReadOnly",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to set the course to read only",
                "fullTitle": "ACTION-CREATOR: UIActions AC: setCourseReadOnly Should create an action to set the course to read only",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\n(0, _expect2.default)(actions.setCourseReadOnly()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "b02a53b9-c13f-4d03-b625-8971281546d5",
                "parentUUID": "e33604bf-080b-4c68-92f6-5c23b60b9e55",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "e33604bf-080b-4c68-92f6-5c23b60b9e55",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to set the course to read only",
                "fullTitle": "ACTION-CREATOR: UIActions AC: setCourseReadOnly Should create an action to set the course to read only",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\n(0, _expect2.default)(actions.setCourseReadOnly()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "b02a53b9-c13f-4d03-b625-8971281546d5",
                "parentUUID": "e33604bf-080b-4c68-92f6-5c23b60b9e55",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: setCourseReadAndWrite",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to set the course to read and write",
                "fullTitle": "ACTION-CREATOR: UIActions AC: setCourseReadAndWrite Should create an action to set the course to read and write",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\n(0, _expect2.default)(actions.setCourseReadAndWrite()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "d9ab0d70-889b-40f1-9f87-6d5672a3c876",
                "parentUUID": "a719fcb8-f6f3-492f-993b-68458ef2d241",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "a719fcb8-f6f3-492f-993b-68458ef2d241",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to set the course to read and write",
                "fullTitle": "ACTION-CREATOR: UIActions AC: setCourseReadAndWrite Should create an action to set the course to read and write",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\n(0, _expect2.default)(actions.setCourseReadAndWrite()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "d9ab0d70-889b-40f1-9f87-6d5672a3c876",
                "parentUUID": "a719fcb8-f6f3-492f-993b-68458ef2d241",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/actionCreators/UIActions.spec.js",
        "uuid": "2f14a475-36bc-429e-b88b-9d0c415f0959",
        "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "COMPONENT: Notification",
        "suites": [],
        "tests": [
          {
            "title": "Should render a notification title and a message",
            "fullTitle": "COMPONENT: Notification Should render a notification title and a message",
            "timedOut": false,
            "duration": 67,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, {\n    title: \"This is a test\",\n    message: \"Some message goes over here\"\n}));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(\"This is a test\");\nexpect(wrapper.text().replace(\"This is a test\", \"\").trim()).to.equal(\"Some message goes over here\");",
            "err": {},
            "isRoot": false,
            "uuid": "84d5b2e4-5da8-4b79-a642-672353baf53c",
            "parentUUID": "cac71d72-bf28-48fa-bb9a-9dff7bbf12cd",
            "skipped": false
          },
          {
            "title": "Should have a default level to be info if it is not specified",
            "fullTitle": "COMPONENT: Notification Should have a default level to be info if it is not specified",
            "timedOut": false,
            "duration": 15,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, null)).find(\".info.message\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "06235992-7146-486d-8242-5478127f01fb",
            "parentUUID": "cac71d72-bf28-48fa-bb9a-9dff7bbf12cd",
            "skipped": false
          },
          {
            "title": "Should follow a specified level",
            "fullTitle": "COMPONENT: Notification Should follow a specified level",
            "timedOut": false,
            "duration": 45,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"info\" })).find(\".info.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"warning\" })).find(\".warning.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"error\" })).find(\".negative.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"success\" })).find(\".positive.message\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "5604f493-578d-4061-8f22-8ce650e0a161",
            "parentUUID": "cac71d72-bf28-48fa-bb9a-9dff7bbf12cd",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/components/Notifications/Notification.spec.jsx",
        "uuid": "cac71d72-bf28-48fa-bb9a-9dff7bbf12cd",
        "fullFile": "/home/staff01/Documents/monPlanR/test/components/Notifications/Notification.spec.jsx",
        "passes": [
          {
            "title": "Should render a notification title and a message",
            "fullTitle": "COMPONENT: Notification Should render a notification title and a message",
            "timedOut": false,
            "duration": 67,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, {\n    title: \"This is a test\",\n    message: \"Some message goes over here\"\n}));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(\"This is a test\");\nexpect(wrapper.text().replace(\"This is a test\", \"\").trim()).to.equal(\"Some message goes over here\");",
            "err": {},
            "isRoot": false,
            "uuid": "84d5b2e4-5da8-4b79-a642-672353baf53c",
            "parentUUID": "cac71d72-bf28-48fa-bb9a-9dff7bbf12cd",
            "skipped": false
          },
          {
            "title": "Should have a default level to be info if it is not specified",
            "fullTitle": "COMPONENT: Notification Should have a default level to be info if it is not specified",
            "timedOut": false,
            "duration": 15,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, null)).find(\".info.message\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "06235992-7146-486d-8242-5478127f01fb",
            "parentUUID": "cac71d72-bf28-48fa-bb9a-9dff7bbf12cd",
            "skipped": false
          },
          {
            "title": "Should follow a specified level",
            "fullTitle": "COMPONENT: Notification Should follow a specified level",
            "timedOut": false,
            "duration": 45,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"info\" })).find(\".info.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"warning\" })).find(\".warning.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"error\" })).find(\".negative.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"success\" })).find(\".positive.message\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "5604f493-578d-4061-8f22-8ce650e0a161",
            "parentUUID": "cac71d72-bf28-48fa-bb9a-9dff7bbf12cd",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 3,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 127
      },
      {
        "title": "COMPONENT: InsertTeachingPeriodButton",
        "suites": [
          {
            "title": "#addSemester()",
            "suites": [],
            "tests": [
              {
                "title": "should be called exactly once when main button has been clicked",
                "fullTitle": "COMPONENT: InsertTeachingPeriodButton #addSemester() should be called exactly once when main button has been clicked",
                "timedOut": false,
                "duration": 26,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var addSemester = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: identity,\n    addSemester: addSemester }));\nwrapper.find(\"Button\").forEach(function (button) {\n    button.simulate(\"click\");\n});\nexpect(addSemester).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "432bfafb-4067-4b71-b23c-c3707989f9b3",
                "parentUUID": "5dbe8b5a-06a7-4690-8eff-3023f4d3114d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/components/TeachingPeriod/InsertTeachingPeriodButton.spec.jsx",
            "uuid": "5dbe8b5a-06a7-4690-8eff-3023f4d3114d",
            "fullFile": "/home/staff01/Documents/monPlanR/test/components/TeachingPeriod/InsertTeachingPeriodButton.spec.jsx",
            "passes": [
              {
                "title": "should be called exactly once when main button has been clicked",
                "fullTitle": "COMPONENT: InsertTeachingPeriodButton #addSemester() should be called exactly once when main button has been clicked",
                "timedOut": false,
                "duration": 26,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var addSemester = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: identity,\n    addSemester: addSemester }));\nwrapper.find(\"Button\").forEach(function (button) {\n    button.simulate(\"click\");\n});\nexpect(addSemester).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "432bfafb-4067-4b71-b23c-c3707989f9b3",
                "parentUUID": "5dbe8b5a-06a7-4690-8eff-3023f4d3114d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 26
          },
          {
            "title": "#insert()",
            "suites": [],
            "tests": [
              {
                "title": "should be called as many times as the number of insert teaching periods options upon click",
                "fullTitle": "COMPONENT: InsertTeachingPeriodButton #insert() should be called as many times as the number of insert teaching periods options upon click",
                "timedOut": false,
                "duration": 30,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var insert = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: insert,\n    addSemester: identity }));\nvar dropdownItems = wrapper.find(\".item\");\ndropdownItems.forEach(function (node) {\n    return node.simulate(\"click\");\n});\nexpect(insert).to.have.callCount(dropdownItems.length);",
                "err": {},
                "isRoot": false,
                "uuid": "fc97fb72-dfe6-4d32-8044-37cc9e519f7d",
                "parentUUID": "b2904d35-5a4d-4c0a-8eca-749db59b6169",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/components/TeachingPeriod/InsertTeachingPeriodButton.spec.jsx",
            "uuid": "b2904d35-5a4d-4c0a-8eca-749db59b6169",
            "fullFile": "/home/staff01/Documents/monPlanR/test/components/TeachingPeriod/InsertTeachingPeriodButton.spec.jsx",
            "passes": [
              {
                "title": "should be called as many times as the number of insert teaching periods options upon click",
                "fullTitle": "COMPONENT: InsertTeachingPeriodButton #insert() should be called as many times as the number of insert teaching periods options upon click",
                "timedOut": false,
                "duration": 30,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var insert = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: insert,\n    addSemester: identity }));\nvar dropdownItems = wrapper.find(\".item\");\ndropdownItems.forEach(function (node) {\n    return node.simulate(\"click\");\n});\nexpect(insert).to.have.callCount(dropdownItems.length);",
                "err": {},
                "isRoot": false,
                "uuid": "fc97fb72-dfe6-4d32-8044-37cc9e519f7d",
                "parentUUID": "b2904d35-5a4d-4c0a-8eca-749db59b6169",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 30
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/components/TeachingPeriod/InsertTeachingPeriodButton.spec.jsx",
        "uuid": "7379cbea-dee5-4140-b8a8-0027ec35d3be",
        "fullFile": "/home/staff01/Documents/monPlanR/test/components/TeachingPeriod/InsertTeachingPeriodButton.spec.jsx",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "COMPONENT: SetuRating",
        "suites": [],
        "tests": [
          {
            "title": "should render two ratings",
            "fullTitle": "COMPONENT: SetuRating should render two ratings",
            "timedOut": false,
            "duration": 54,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, null)).find(\".rating\")).to.have.length(2);",
            "err": {},
            "isRoot": false,
            "uuid": "e36df675-08be-4aaf-8d8e-79af760923ab",
            "parentUUID": "710da798-d16d-4b2e-8977-28698a232f40",
            "skipped": false
          },
          {
            "title": "should render a book if learning ratings is >=2.5",
            "fullTitle": "COMPONENT: SetuRating should render a book if learning ratings is >=2.5",
            "timedOut": false,
            "duration": 86,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 4.13 })).find(\".book\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.50 })).find(\".book\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "fb29c8e4-6d57-42c5-9e9d-bb178f1dcfaa",
            "parentUUID": "710da798-d16d-4b2e-8977-28698a232f40",
            "skipped": false
          },
          {
            "title": "should render a remove circle if learning ratings is <2.5",
            "fullTitle": "COMPONENT: SetuRating should render a remove circle if learning ratings is <2.5",
            "timedOut": false,
            "duration": 67,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 1.51 })).find(\".remove.circle\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.49 })).find(\".remove.circle\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "37771e66-c1c5-4105-94a2-a4bdcfd421f8",
            "parentUUID": "710da798-d16d-4b2e-8977-28698a232f40",
            "skipped": false
          },
          {
            "title": "should render a thumbs up if enjoyment ratings is >=2.5",
            "fullTitle": "COMPONENT: SetuRating should render a thumbs up if enjoyment ratings is >=2.5",
            "timedOut": false,
            "duration": 60,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 4.13 })).find(\".thumbs.up\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.50 })).find(\".thumbs.up\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "226cef7c-80a5-48b2-a134-b5f306a23a30",
            "parentUUID": "710da798-d16d-4b2e-8977-28698a232f40",
            "skipped": false
          },
          {
            "title": "should render a thumbs down if enjoyment ratings is <2.5",
            "fullTitle": "COMPONENT: SetuRating should render a thumbs down if enjoyment ratings is <2.5",
            "timedOut": false,
            "duration": 44,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 1.51 })).find(\".thumbs.down\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.49 })).find(\".thumbs.down\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "73e9cdac-fbe9-4f69-9aa4-b1d3f91a5832",
            "parentUUID": "710da798-d16d-4b2e-8977-28698a232f40",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/components/Unit/SetuRating.spec.jsx",
        "uuid": "710da798-d16d-4b2e-8977-28698a232f40",
        "fullFile": "/home/staff01/Documents/monPlanR/test/components/Unit/SetuRating.spec.jsx",
        "passes": [
          {
            "title": "should render two ratings",
            "fullTitle": "COMPONENT: SetuRating should render two ratings",
            "timedOut": false,
            "duration": 54,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, null)).find(\".rating\")).to.have.length(2);",
            "err": {},
            "isRoot": false,
            "uuid": "e36df675-08be-4aaf-8d8e-79af760923ab",
            "parentUUID": "710da798-d16d-4b2e-8977-28698a232f40",
            "skipped": false
          },
          {
            "title": "should render a book if learning ratings is >=2.5",
            "fullTitle": "COMPONENT: SetuRating should render a book if learning ratings is >=2.5",
            "timedOut": false,
            "duration": 86,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 4.13 })).find(\".book\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.50 })).find(\".book\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "fb29c8e4-6d57-42c5-9e9d-bb178f1dcfaa",
            "parentUUID": "710da798-d16d-4b2e-8977-28698a232f40",
            "skipped": false
          },
          {
            "title": "should render a remove circle if learning ratings is <2.5",
            "fullTitle": "COMPONENT: SetuRating should render a remove circle if learning ratings is <2.5",
            "timedOut": false,
            "duration": 67,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 1.51 })).find(\".remove.circle\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.49 })).find(\".remove.circle\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "37771e66-c1c5-4105-94a2-a4bdcfd421f8",
            "parentUUID": "710da798-d16d-4b2e-8977-28698a232f40",
            "skipped": false
          },
          {
            "title": "should render a thumbs up if enjoyment ratings is >=2.5",
            "fullTitle": "COMPONENT: SetuRating should render a thumbs up if enjoyment ratings is >=2.5",
            "timedOut": false,
            "duration": 60,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 4.13 })).find(\".thumbs.up\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.50 })).find(\".thumbs.up\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "226cef7c-80a5-48b2-a134-b5f306a23a30",
            "parentUUID": "710da798-d16d-4b2e-8977-28698a232f40",
            "skipped": false
          },
          {
            "title": "should render a thumbs down if enjoyment ratings is <2.5",
            "fullTitle": "COMPONENT: SetuRating should render a thumbs down if enjoyment ratings is <2.5",
            "timedOut": false,
            "duration": 44,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 1.51 })).find(\".thumbs.down\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.49 })).find(\".thumbs.down\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "73e9cdac-fbe9-4f69-9aa4-b1d3f91a5832",
            "parentUUID": "710da798-d16d-4b2e-8977-28698a232f40",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 5,
        "totalPasses": 5,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 311
      },
      {
        "title": "COMPONENT: UnitMessage",
        "suites": [
          {
            "title": "#presentational",
            "suites": [],
            "tests": [
              {
                "title": "should only render a unit code and a unit name",
                "fullTitle": "COMPONENT: UnitMessage #presentational should only render a unit code and a unit name",
                "timedOut": false,
                "duration": 46,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var unitCode = \"ABC1234\";\nvar unitName = \"Example unit\";\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: unitCode,\n    name: unitName }));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(unitCode);\nexpect(wrapper.find(\".message\").text().replace(unitCode, \"\").trim()).to.equal(unitName);",
                "err": {},
                "isRoot": false,
                "uuid": "f4b7e66e-fd7d-456d-8739-361f79bdc686",
                "parentUUID": "ba9fc389-de68-4fdb-94c6-1c1413d7bdce",
                "skipped": false
              },
              {
                "title": "should render a close button only when mouse is over the unit",
                "fullTitle": "COMPONENT: UnitMessage #presentational should render a close button only when mouse is over the unit",
                "timedOut": false,
                "duration": 70,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    hovering: false }));\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");\nwrapper.setProps({\n    hovering: true\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"visible\");\nwrapper.setProps({\n    hovering: false\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");",
                "err": {},
                "isRoot": false,
                "uuid": "cf2594e6-91fd-4b9c-ae95-2dccd829e5bb",
                "parentUUID": "ba9fc389-de68-4fdb-94c6-1c1413d7bdce",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/components/Unit/UnitMessage.spec.jsx",
            "uuid": "ba9fc389-de68-4fdb-94c6-1c1413d7bdce",
            "fullFile": "/home/staff01/Documents/monPlanR/test/components/Unit/UnitMessage.spec.jsx",
            "passes": [
              {
                "title": "should only render a unit code and a unit name",
                "fullTitle": "COMPONENT: UnitMessage #presentational should only render a unit code and a unit name",
                "timedOut": false,
                "duration": 46,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var unitCode = \"ABC1234\";\nvar unitName = \"Example unit\";\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: unitCode,\n    name: unitName }));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(unitCode);\nexpect(wrapper.find(\".message\").text().replace(unitCode, \"\").trim()).to.equal(unitName);",
                "err": {},
                "isRoot": false,
                "uuid": "f4b7e66e-fd7d-456d-8739-361f79bdc686",
                "parentUUID": "ba9fc389-de68-4fdb-94c6-1c1413d7bdce",
                "skipped": false
              },
              {
                "title": "should render a close button only when mouse is over the unit",
                "fullTitle": "COMPONENT: UnitMessage #presentational should render a close button only when mouse is over the unit",
                "timedOut": false,
                "duration": 70,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    hovering: false }));\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");\nwrapper.setProps({\n    hovering: true\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"visible\");\nwrapper.setProps({\n    hovering: false\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");",
                "err": {},
                "isRoot": false,
                "uuid": "cf2594e6-91fd-4b9c-ae95-2dccd829e5bb",
                "parentUUID": "ba9fc389-de68-4fdb-94c6-1c1413d7bdce",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 116
          },
          {
            "title": "#events",
            "suites": [],
            "tests": [
              {
                "title": "Should call willAddUnit if unit is a newUnit and it has been clicked",
                "fullTitle": "COMPONENT: UnitMessage #events Should call willAddUnit if unit is a newUnit and it has been clicked",
                "timedOut": false,
                "duration": 49,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    newUnit: true,\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    willAddUnit: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"click\");\nexpect(eventFunc).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "b9b2d2fc-3136-4193-8816-58758d51be53",
                "parentUUID": "da8766ae-bfb0-437c-ac06-f90c8de0321e",
                "skipped": false
              },
              {
                "title": "Should call handleUnitMouseOver when mouse is over the unit",
                "fullTitle": "COMPONENT: UnitMessage #events Should call handleUnitMouseOver when mouse is over the unit",
                "timedOut": false,
                "duration": 22,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseOver: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseOver\");\nexpect(eventFunc).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "941c9444-5e28-4c60-b190-ce851e95a2bb",
                "parentUUID": "da8766ae-bfb0-437c-ac06-f90c8de0321e",
                "skipped": false
              },
              {
                "title": "Should call handleUnitMouseMove when mouse moves over the unit",
                "fullTitle": "COMPONENT: UnitMessage #events Should call handleUnitMouseMove when mouse moves over the unit",
                "timedOut": false,
                "duration": 19,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseMove: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseMove\");\nexpect(eventFunc).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "01e158b5-d35b-4932-8433-de65efb73903",
                "parentUUID": "da8766ae-bfb0-437c-ac06-f90c8de0321e",
                "skipped": false
              },
              {
                "title": "Should call handleUnitMouseOut when mouse is over the unit",
                "fullTitle": "COMPONENT: UnitMessage #events Should call handleUnitMouseOut when mouse is over the unit",
                "timedOut": false,
                "duration": 22,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseOut: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseOut\");\nexpect(eventFunc).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "8907117a-1235-487b-bcda-60e92e775258",
                "parentUUID": "da8766ae-bfb0-437c-ac06-f90c8de0321e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/components/Unit/UnitMessage.spec.jsx",
            "uuid": "da8766ae-bfb0-437c-ac06-f90c8de0321e",
            "fullFile": "/home/staff01/Documents/monPlanR/test/components/Unit/UnitMessage.spec.jsx",
            "passes": [
              {
                "title": "Should call willAddUnit if unit is a newUnit and it has been clicked",
                "fullTitle": "COMPONENT: UnitMessage #events Should call willAddUnit if unit is a newUnit and it has been clicked",
                "timedOut": false,
                "duration": 49,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    newUnit: true,\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    willAddUnit: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"click\");\nexpect(eventFunc).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "b9b2d2fc-3136-4193-8816-58758d51be53",
                "parentUUID": "da8766ae-bfb0-437c-ac06-f90c8de0321e",
                "skipped": false
              },
              {
                "title": "Should call handleUnitMouseOver when mouse is over the unit",
                "fullTitle": "COMPONENT: UnitMessage #events Should call handleUnitMouseOver when mouse is over the unit",
                "timedOut": false,
                "duration": 22,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseOver: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseOver\");\nexpect(eventFunc).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "941c9444-5e28-4c60-b190-ce851e95a2bb",
                "parentUUID": "da8766ae-bfb0-437c-ac06-f90c8de0321e",
                "skipped": false
              },
              {
                "title": "Should call handleUnitMouseMove when mouse moves over the unit",
                "fullTitle": "COMPONENT: UnitMessage #events Should call handleUnitMouseMove when mouse moves over the unit",
                "timedOut": false,
                "duration": 19,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseMove: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseMove\");\nexpect(eventFunc).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "01e158b5-d35b-4932-8433-de65efb73903",
                "parentUUID": "da8766ae-bfb0-437c-ac06-f90c8de0321e",
                "skipped": false
              },
              {
                "title": "Should call handleUnitMouseOut when mouse is over the unit",
                "fullTitle": "COMPONENT: UnitMessage #events Should call handleUnitMouseOut when mouse is over the unit",
                "timedOut": false,
                "duration": 22,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseOut: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseOut\");\nexpect(eventFunc).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "8907117a-1235-487b-bcda-60e92e775258",
                "parentUUID": "da8766ae-bfb0-437c-ac06-f90c8de0321e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 112
          },
          {
            "title": "#DnD",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly call movingUnit when it is being dragged",
                "fullTitle": "COMPONENT: UnitMessage #DnD Should correctly call movingUnit when it is being dragged",
                "timedOut": false,
                "duration": 11,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "testingBeginDrag = true;\ntestingEndDrag = false;\nbackend.simulateBeginDrag([sourceId]);\nexpect(movingUnitSpy).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "9286ec1c-91c1-4d34-9426-76c2bd5dd0e4",
                "parentUUID": "b0e86869-8cb0-4ba6-8a08-2016bd3bedd6",
                "skipped": false
              },
              {
                "title": "Should correctylc call cancelMovingUnit ",
                "fullTitle": "COMPONENT: UnitMessage #DnD Should correctylc call cancelMovingUnit ",
                "timedOut": false,
                "duration": 25,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "testingBeginDrag = false;\ntestingEndDrag = true;\nbackend.simulateBeginDrag([sourceId]);\nbackend.simulateEndDrag(sourceId);\nexpect(cancelMovingUnitSpy).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "d067675c-d533-4a07-9722-dbd893ca6709",
                "parentUUID": "b0e86869-8cb0-4ba6-8a08-2016bd3bedd6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/components/Unit/UnitMessage.spec.jsx",
            "uuid": "b0e86869-8cb0-4ba6-8a08-2016bd3bedd6",
            "fullFile": "/home/staff01/Documents/monPlanR/test/components/Unit/UnitMessage.spec.jsx",
            "passes": [
              {
                "title": "Should correctly call movingUnit when it is being dragged",
                "fullTitle": "COMPONENT: UnitMessage #DnD Should correctly call movingUnit when it is being dragged",
                "timedOut": false,
                "duration": 11,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "testingBeginDrag = true;\ntestingEndDrag = false;\nbackend.simulateBeginDrag([sourceId]);\nexpect(movingUnitSpy).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "9286ec1c-91c1-4d34-9426-76c2bd5dd0e4",
                "parentUUID": "b0e86869-8cb0-4ba6-8a08-2016bd3bedd6",
                "skipped": false
              },
              {
                "title": "Should correctylc call cancelMovingUnit ",
                "fullTitle": "COMPONENT: UnitMessage #DnD Should correctylc call cancelMovingUnit ",
                "timedOut": false,
                "duration": 25,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "testingBeginDrag = false;\ntestingEndDrag = true;\nbackend.simulateBeginDrag([sourceId]);\nbackend.simulateEndDrag(sourceId);\nexpect(cancelMovingUnitSpy).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "d067675c-d533-4a07-9722-dbd893ca6709",
                "parentUUID": "b0e86869-8cb0-4ba6-8a08-2016bd3bedd6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 36
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/components/Unit/UnitMessage.spec.jsx",
        "uuid": "beba6a7d-d6cc-4604-bc0b-d6aa29b25edd",
        "fullFile": "/home/staff01/Documents/monPlanR/test/components/Unit/UnitMessage.spec.jsx",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "REDUCER: Counter",
        "suites": [
          {
            "title": "ACTION: INCREMENT_CREDIT_POINTS",
            "suites": [],
            "tests": [
              {
                "title": "Should increment the credit point state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: INCREMENT_CREDIT_POINTS Should increment the credit point state by a given value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 2, creditPoints: 0 };\nvar action = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 2,\n    creditPoints: 1\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5158fb3e-42e9-4b2b-bae4-e875a6cd5b16",
                "parentUUID": "ea5f9000-969e-4aa5-ac5e-a938ac5c85d9",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "ea5f9000-969e-4aa5-ac5e-a938ac5c85d9",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should increment the credit point state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: INCREMENT_CREDIT_POINTS Should increment the credit point state by a given value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 2, creditPoints: 0 };\nvar action = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 2,\n    creditPoints: 1\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5158fb3e-42e9-4b2b-bae4-e875a6cd5b16",
                "parentUUID": "ea5f9000-969e-4aa5-ac5e-a938ac5c85d9",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: DECREMENT_CREDIT_POINTS",
            "suites": [],
            "tests": [
              {
                "title": "Should decrement the credit point state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state by a given value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "46a368d7-1d88-43a7-93ee-7e3323216a30",
                "parentUUID": "499f086b-0474-4f1c-8ccc-4cd4d65fad23",
                "skipped": false
              },
              {
                "title": "Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 0\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ef802a05-d1fa-4619-aa03-9b713195f842",
                "parentUUID": "499f086b-0474-4f1c-8ccc-4cd4d65fad23",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "499f086b-0474-4f1c-8ccc-4cd4d65fad23",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should decrement the credit point state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state by a given value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "46a368d7-1d88-43a7-93ee-7e3323216a30",
                "parentUUID": "499f086b-0474-4f1c-8ccc-4cd4d65fad23",
                "skipped": false
              },
              {
                "title": "Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 0\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ef802a05-d1fa-4619-aa03-9b713195f842",
                "parentUUID": "499f086b-0474-4f1c-8ccc-4cd4d65fad23",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: INCREMENT_COST",
            "suites": [],
            "tests": [
              {
                "title": "Should increment the cost state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: INCREMENT_COST Should increment the cost state by a given value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 20, creditPoints: 13 };\nvar action = {\n    type: \"INCREMENT_COST\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 21,\n    creditPoints: 13\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "3f183446-eda7-4b3f-9998-4e1a5831ca50",
                "parentUUID": "6c5ec425-9917-4e88-b489-90e076f846ee",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "6c5ec425-9917-4e88-b489-90e076f846ee",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should increment the cost state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: INCREMENT_COST Should increment the cost state by a given value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 20, creditPoints: 13 };\nvar action = {\n    type: \"INCREMENT_COST\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 21,\n    creditPoints: 13\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "3f183446-eda7-4b3f-9998-4e1a5831ca50",
                "parentUUID": "6c5ec425-9917-4e88-b489-90e076f846ee",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: DECREMENT_COST",
            "suites": [],
            "tests": [
              {
                "title": "Should decrement the cost state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_COST Should decrement the cost state by a given value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e1be90de-f4e5-4154-937d-0a296d20dbc1",
                "parentUUID": "1352c9ea-aefe-47ad-a980-d1021cb7f8d0",
                "skipped": false
              },
              {
                "title": "Should decrement the cost state to 0 if a value given is larger than the current credit point value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_COST Should decrement the cost state to 0 if a value given is larger than the current credit point value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 0,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "526f4846-a284-4965-815e-033ad41f20be",
                "parentUUID": "1352c9ea-aefe-47ad-a980-d1021cb7f8d0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "1352c9ea-aefe-47ad-a980-d1021cb7f8d0",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should decrement the cost state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_COST Should decrement the cost state by a given value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e1be90de-f4e5-4154-937d-0a296d20dbc1",
                "parentUUID": "1352c9ea-aefe-47ad-a980-d1021cb7f8d0",
                "skipped": false
              },
              {
                "title": "Should decrement the cost state to 0 if a value given is larger than the current credit point value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_COST Should decrement the cost state to 0 if a value given is larger than the current credit point value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 0,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "526f4846-a284-4965-815e-033ad41f20be",
                "parentUUID": "1352c9ea-aefe-47ad-a980-d1021cb7f8d0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "ACTION: CLEAR_COURSE",
            "suites": [],
            "tests": [
              {
                "title": "Should reset the cost and credit point counters to 0",
                "fullTitle": "REDUCER: Counter ACTION: CLEAR_COURSE Should reset the cost and credit point counters to 0",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c362930b-03ad-4ff3-a3f7-c577430c0650",
                "parentUUID": "090297bf-d8fc-475b-884a-d2545cf8ed79",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "090297bf-d8fc-475b-884a-d2545cf8ed79",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should reset the cost and credit point counters to 0",
                "fullTitle": "REDUCER: Counter ACTION: CLEAR_COURSE Should reset the cost and credit point counters to 0",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c362930b-03ad-4ff3-a3f7-c577430c0650",
                "parentUUID": "090297bf-d8fc-475b-884a-d2545cf8ed79",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: REMOVE_TEACHING_PERIOD",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly go through and decrement the counters for each value ",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_TEACHING_PERIOD Should correctly go through and decrement the counters for each value ",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { cost: 2, creditPoints: 20 }, { cost: 5, creditPoints: 10 }, null]\n};\nvar stateAfter = { cost: 43, creditPoints: 10 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "bc5c70d6-367c-4f8f-b92f-d850beadef5a",
                "parentUUID": "39318b8d-f95d-4769-ad70-cb15cc09baaf",
                "skipped": false
              },
              {
                "title": "Should not decrement the counters below 0 ",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_TEACHING_PERIOD Should not decrement the counters below 0 ",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { cost: 25, creditPoints: 20 }, { cost: 30, creditPoints: 30 }, { cost: 0, creditPoints: 10 }]\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "55f2c507-607c-40f1-9ef7-03d12cea67da",
                "parentUUID": "39318b8d-f95d-4769-ad70-cb15cc09baaf",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "39318b8d-f95d-4769-ad70-cb15cc09baaf",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should correctly go through and decrement the counters for each value ",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_TEACHING_PERIOD Should correctly go through and decrement the counters for each value ",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { cost: 2, creditPoints: 20 }, { cost: 5, creditPoints: 10 }, null]\n};\nvar stateAfter = { cost: 43, creditPoints: 10 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "bc5c70d6-367c-4f8f-b92f-d850beadef5a",
                "parentUUID": "39318b8d-f95d-4769-ad70-cb15cc09baaf",
                "skipped": false
              },
              {
                "title": "Should not decrement the counters below 0 ",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_TEACHING_PERIOD Should not decrement the counters below 0 ",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { cost: 25, creditPoints: 20 }, { cost: 30, creditPoints: 30 }, { cost: 0, creditPoints: 10 }]\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "55f2c507-607c-40f1-9ef7-03d12cea67da",
                "parentUUID": "39318b8d-f95d-4769-ad70-cb15cc09baaf",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          },
          {
            "title": "ACTION: REMOVE_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly decrement the counters based on the given units creditpoints and cost",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_UNIT Should correctly decrement the counters based on the given units creditpoints and cost",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 20 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "6ddc8edf-9883-472e-bd41-c7edf354c025",
                "parentUUID": "d528a00c-abf0-4b88-a793-893d23826868",
                "skipped": false
              },
              {
                "title": "Should not decrement the counters below 0",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_UNIT Should not decrement the counters below 0",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "8ed04fab-606a-4ae8-819c-70878c0f99c9",
                "parentUUID": "d528a00c-abf0-4b88-a793-893d23826868",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "d528a00c-abf0-4b88-a793-893d23826868",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should correctly decrement the counters based on the given units creditpoints and cost",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_UNIT Should correctly decrement the counters based on the given units creditpoints and cost",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 20 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "6ddc8edf-9883-472e-bd41-c7edf354c025",
                "parentUUID": "d528a00c-abf0-4b88-a793-893d23826868",
                "skipped": false
              },
              {
                "title": "Should not decrement the counters below 0",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_UNIT Should not decrement the counters below 0",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "8ed04fab-606a-4ae8-819c-70878c0f99c9",
                "parentUUID": "d528a00c-abf0-4b88-a793-893d23826868",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          },
          {
            "title": "ACTION: ADD_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly increment the counters when a unit is added to the plan",
                "fullTitle": "REDUCER: Counter ACTION: ADD_UNIT Should correctly increment the counters when a unit is added to the plan",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"ADD_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 30 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9dee1772-01d3-49f7-9aaf-4408876f6163",
                "parentUUID": "3afe3b59-82a8-4c1b-b4b9-b0615e17a5ab",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "3afe3b59-82a8-4c1b-b4b9-b0615e17a5ab",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should correctly increment the counters when a unit is added to the plan",
                "fullTitle": "REDUCER: Counter ACTION: ADD_UNIT Should correctly increment the counters when a unit is added to the plan",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"ADD_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 30 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9dee1772-01d3-49f7-9aaf-4408876f6163",
                "parentUUID": "3afe3b59-82a8-4c1b-b4b9-b0615e17a5ab",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: DECREASE_STUDY_LOAD",
            "suites": [],
            "tests": [
              {
                "title": "Should not decrease counters if there are no units in the overload column",
                "fullTitle": "REDUCER: Counter ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units in the overload column",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: []\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "6af4859b-0fbb-482e-b35f-f5fac677031c",
                "parentUUID": "af013257-ba48-4568-b32d-e0e2b02f8eb4",
                "skipped": false
              },
              {
                "title": "Should not decrease counters if there are no units which have values in the overload column",
                "fullTitle": "REDUCER: Counter ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units which have values in the overload column",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [null, {}]\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "48af4fe8-1c34-461e-a724-a2708f8eab85",
                "parentUUID": "af013257-ba48-4568-b32d-e0e2b02f8eb4",
                "skipped": false
              },
              {
                "title": "Should decrease counters correctly for units in the overload column",
                "fullTitle": "REDUCER: Counter ACTION: DECREASE_STUDY_LOAD Should decrease counters correctly for units in the overload column",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [{\n        CreditPoints: 6,\n        Cost: 1134\n    }, {\n        CreditPoints: 12,\n        Cost: 2256\n    }]\n};\nvar stateAfter = { cost: 36610, creditPoints: 126 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a22f8acf-44c2-4dfc-96c1-6591a898383b",
                "parentUUID": "af013257-ba48-4568-b32d-e0e2b02f8eb4",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "af013257-ba48-4568-b32d-e0e2b02f8eb4",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should not decrease counters if there are no units in the overload column",
                "fullTitle": "REDUCER: Counter ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units in the overload column",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: []\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "6af4859b-0fbb-482e-b35f-f5fac677031c",
                "parentUUID": "af013257-ba48-4568-b32d-e0e2b02f8eb4",
                "skipped": false
              },
              {
                "title": "Should not decrease counters if there are no units which have values in the overload column",
                "fullTitle": "REDUCER: Counter ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units which have values in the overload column",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [null, {}]\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "48af4fe8-1c34-461e-a724-a2708f8eab85",
                "parentUUID": "af013257-ba48-4568-b32d-e0e2b02f8eb4",
                "skipped": false
              },
              {
                "title": "Should decrease counters correctly for units in the overload column",
                "fullTitle": "REDUCER: Counter ACTION: DECREASE_STUDY_LOAD Should decrease counters correctly for units in the overload column",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [{\n        CreditPoints: 6,\n        Cost: 1134\n    }, {\n        CreditPoints: 12,\n        Cost: 2256\n    }]\n};\nvar stateAfter = { cost: 36610, creditPoints: 126 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a22f8acf-44c2-4dfc-96c1-6591a898383b",
                "parentUUID": "af013257-ba48-4568-b32d-e0e2b02f8eb4",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "DEFAULT",
            "suites": [],
            "tests": [
              {
                "title": "Should not change state if it does not recognise an action",
                "fullTitle": "REDUCER: Counter DEFAULT Should not change state if it does not recognise an action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "a7bbbf28-7b02-4fc7-86ed-b1b3bee1444a",
                "parentUUID": "a50b88ad-2d01-48f7-8638-75ac764389b2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "a50b88ad-2d01-48f7-8638-75ac764389b2",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should not change state if it does not recognise an action",
                "fullTitle": "REDUCER: Counter DEFAULT Should not change state if it does not recognise an action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "a7bbbf28-7b02-4fc7-86ed-b1b3bee1444a",
                "parentUUID": "a50b88ad-2d01-48f7-8638-75ac764389b2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/reducers/Counter.spec.js",
        "uuid": "8b4b2a11-6b91-4791-8826-7c6eb248aa53",
        "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "REDUCER: CourseStructure",
        "suites": [
          {
            "title": "ACTION: INSERT_TEACHING_PERIOD",
            "suites": [],
            "tests": [
              {
                "title": "Should insert a teaching period with the given info correctly into middle of array",
                "fullTitle": "REDUCER: CourseStructure ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into middle of array",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2018,\n    code: \"S2-01\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9d5ba52d-57c9-42a3-9ceb-a016346a4f3c",
                "parentUUID": "14700c63-46ae-48ec-8b2b-c2ebc1a3d143",
                "skipped": false
              },
              {
                "title": "Should insert a teaching period with the given info correctly into start of array",
                "fullTitle": "REDUCER: CourseStructure ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into start of array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2016,\n    code: \"S2-01\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2016, code: \"S2-01\", units: [null, null, null, null] }, { year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "52869f4e-0d33-4f8b-8292-dbc7929cdadf",
                "parentUUID": "14700c63-46ae-48ec-8b2b-c2ebc1a3d143",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "14700c63-46ae-48ec-8b2b-c2ebc1a3d143",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should insert a teaching period with the given info correctly into middle of array",
                "fullTitle": "REDUCER: CourseStructure ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into middle of array",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2018,\n    code: \"S2-01\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9d5ba52d-57c9-42a3-9ceb-a016346a4f3c",
                "parentUUID": "14700c63-46ae-48ec-8b2b-c2ebc1a3d143",
                "skipped": false
              },
              {
                "title": "Should insert a teaching period with the given info correctly into start of array",
                "fullTitle": "REDUCER: CourseStructure ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into start of array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2016,\n    code: \"S2-01\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2016, code: \"S2-01\", units: [null, null, null, null] }, { year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "52869f4e-0d33-4f8b-8292-dbc7929cdadf",
                "parentUUID": "14700c63-46ae-48ec-8b2b-c2ebc1a3d143",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 10
          },
          {
            "title": "ACTION: REMOVE_TEACHING_PERIOD",
            "suites": [],
            "tests": [
              {
                "title": "Should remove a teaching period at the given index",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the given index",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5d44b768-4f45-4bd9-8a36-bf1572d07bb9",
                "parentUUID": "8af83cc7-1975-4985-823d-f22ef092ee58",
                "skipped": false
              },
              {
                "title": "Should remove a teaching period at the start of the array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the start of the array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "dfdd3014-edb0-4cac-af7c-3ee721467a70",
                "parentUUID": "8af83cc7-1975-4985-823d-f22ef092ee58",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "8af83cc7-1975-4985-823d-f22ef092ee58",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should remove a teaching period at the given index",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the given index",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5d44b768-4f45-4bd9-8a36-bf1572d07bb9",
                "parentUUID": "8af83cc7-1975-4985-823d-f22ef092ee58",
                "skipped": false
              },
              {
                "title": "Should remove a teaching period at the start of the array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the start of the array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "dfdd3014-edb0-4cac-af7c-3ee721467a70",
                "parentUUID": "8af83cc7-1975-4985-823d-f22ef092ee58",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "ACTION: APPEND_TEACHING_PERIOD",
            "suites": [],
            "tests": [
              {
                "title": "Should add the given teaching period to the end of the array",
                "fullTitle": "REDUCER: CourseStructure ACTION: APPEND_TEACHING_PERIOD Should add the given teaching period to the end of the array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"APPEND_TEACHING_PERIOD\",\n    year: 2020,\n    code: \"S2-01\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }, { year: 2020, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e8358eed-0e42-49a5-b540-9a887183d3e1",
                "parentUUID": "8c822e7c-3dfa-4d81-a7cd-81e4a8604b6e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "8c822e7c-3dfa-4d81-a7cd-81e4a8604b6e",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should add the given teaching period to the end of the array",
                "fullTitle": "REDUCER: CourseStructure ACTION: APPEND_TEACHING_PERIOD Should add the given teaching period to the end of the array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"APPEND_TEACHING_PERIOD\",\n    year: 2020,\n    code: \"S2-01\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }, { year: 2020, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e8358eed-0e42-49a5-b540-9a887183d3e1",
                "parentUUID": "8c822e7c-3dfa-4d81-a7cd-81e4a8604b6e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: INCREASE_STUDY_LOAD",
            "suites": [],
            "tests": [
              {
                "title": "Should increase the study load if the study load is less than 4",
                "fullTitle": "REDUCER: CourseStructure ACTION: INCREASE_STUDY_LOAD Should increase the study load if the study load is less than 4",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e9146988-935b-4f74-87c4-a7a12f85a490",
                "parentUUID": "86d8887f-254d-4b4c-90c0-b44a0e468a28",
                "skipped": false
              },
              {
                "title": "Should not increase the study load if the study load is 6 or greater",
                "fullTitle": "REDUCER: CourseStructure ACTION: INCREASE_STUDY_LOAD Should not increase the study load if the study load is 6 or greater",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null, null] }],\n    numberOfUnits: 6\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null, null] }],\n    numberOfUnits: 6\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "75e1f619-4d21-4e45-bb5e-d44b08b9cff7",
                "parentUUID": "86d8887f-254d-4b4c-90c0-b44a0e468a28",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "86d8887f-254d-4b4c-90c0-b44a0e468a28",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should increase the study load if the study load is less than 4",
                "fullTitle": "REDUCER: CourseStructure ACTION: INCREASE_STUDY_LOAD Should increase the study load if the study load is less than 4",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e9146988-935b-4f74-87c4-a7a12f85a490",
                "parentUUID": "86d8887f-254d-4b4c-90c0-b44a0e468a28",
                "skipped": false
              },
              {
                "title": "Should not increase the study load if the study load is 6 or greater",
                "fullTitle": "REDUCER: CourseStructure ACTION: INCREASE_STUDY_LOAD Should not increase the study load if the study load is 6 or greater",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null, null] }],\n    numberOfUnits: 6\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null, null] }],\n    numberOfUnits: 6\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "75e1f619-4d21-4e45-bb5e-d44b08b9cff7",
                "parentUUID": "86d8887f-254d-4b4c-90c0-b44a0e468a28",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: DECREASE_STUDY_LOAD",
            "suites": [],
            "tests": [
              {
                "title": "Should decrease the study load if the study load is greater than 4",
                "fullTitle": "REDUCER: CourseStructure ACTION: DECREASE_STUDY_LOAD Should decrease the study load if the study load is greater than 4",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "392c409d-9b8e-4fec-8f19-5ddb1eef952f",
                "parentUUID": "4b54ebac-46d9-4c00-ad73-2efbf3b47afd",
                "skipped": false
              },
              {
                "title": "Should not decrease the study load if the study load is 4 or less",
                "fullTitle": "REDUCER: CourseStructure ACTION: DECREASE_STUDY_LOAD Should not decrease the study load if the study load is 4 or less",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "8de85e39-34c3-4205-9649-9faf93e0c53a",
                "parentUUID": "4b54ebac-46d9-4c00-ad73-2efbf3b47afd",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "4b54ebac-46d9-4c00-ad73-2efbf3b47afd",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should decrease the study load if the study load is greater than 4",
                "fullTitle": "REDUCER: CourseStructure ACTION: DECREASE_STUDY_LOAD Should decrease the study load if the study load is greater than 4",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "392c409d-9b8e-4fec-8f19-5ddb1eef952f",
                "parentUUID": "4b54ebac-46d9-4c00-ad73-2efbf3b47afd",
                "skipped": false
              },
              {
                "title": "Should not decrease the study load if the study load is 4 or less",
                "fullTitle": "REDUCER: CourseStructure ACTION: DECREASE_STUDY_LOAD Should not decrease the study load if the study load is 4 or less",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "8de85e39-34c3-4205-9649-9faf93e0c53a",
                "parentUUID": "4b54ebac-46d9-4c00-ad73-2efbf3b47afd",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "ACTION: CLEAR_COURSE",
            "suites": [],
            "tests": [
              {
                "title": "Should remove all teaching periods and set the amount of units to 4",
                "fullTitle": "REDUCER: CourseStructure ACTION: CLEAR_COURSE Should remove all teaching periods and set the amount of units to 4",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = {\n    courseInfo: {\n        courseName: \"\",\n        faculty: \"\",\n        creditPoints: 0,\n        courseDescription: \"\",\n        durationStr: \"\",\n        modeAndLocation: \"\",\n        awards: \"\",\n        abrTitle: \"\"\n    },\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "2c057ef1-8b18-4647-8760-9a527fe5f532",
                "parentUUID": "6eed4c03-bc8d-40ff-b2b6-f4a1f76bec55",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "6eed4c03-bc8d-40ff-b2b6-f4a1f76bec55",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should remove all teaching periods and set the amount of units to 4",
                "fullTitle": "REDUCER: CourseStructure ACTION: CLEAR_COURSE Should remove all teaching periods and set the amount of units to 4",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = {\n    courseInfo: {\n        courseName: \"\",\n        faculty: \"\",\n        creditPoints: 0,\n        courseDescription: \"\",\n        durationStr: \"\",\n        modeAndLocation: \"\",\n        awards: \"\",\n        abrTitle: \"\"\n    },\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "2c057ef1-8b18-4647-8760-9a527fe5f532",
                "parentUUID": "6eed4c03-bc8d-40ff-b2b6-f4a1f76bec55",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: ADD_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should add a unit correctly to the start of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: ADD_UNIT Should add a unit correctly to the start of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "dced8990-9c78-4a79-b6c1-c69ba3a3ab2a",
                "parentUUID": "f113d6f1-0e9a-40ee-902d-f14faff53eeb",
                "skipped": false
              },
              {
                "title": "Should add a unit correctly to the middle of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: ADD_UNIT Should add a unit correctly to the middle of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f0f3cb3c-c94e-4ac2-9d86-d35ca3c4ed9a",
                "parentUUID": "f113d6f1-0e9a-40ee-902d-f14faff53eeb",
                "skipped": false
              },
              {
                "title": "Should add a unit correctly to the end of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: ADD_UNIT Should add a unit correctly to the end of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "95fca861-c9b3-4f8c-a065-d2d932c306b3",
                "parentUUID": "f113d6f1-0e9a-40ee-902d-f14faff53eeb",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "f113d6f1-0e9a-40ee-902d-f14faff53eeb",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should add a unit correctly to the start of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: ADD_UNIT Should add a unit correctly to the start of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "dced8990-9c78-4a79-b6c1-c69ba3a3ab2a",
                "parentUUID": "f113d6f1-0e9a-40ee-902d-f14faff53eeb",
                "skipped": false
              },
              {
                "title": "Should add a unit correctly to the middle of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: ADD_UNIT Should add a unit correctly to the middle of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f0f3cb3c-c94e-4ac2-9d86-d35ca3c4ed9a",
                "parentUUID": "f113d6f1-0e9a-40ee-902d-f14faff53eeb",
                "skipped": false
              },
              {
                "title": "Should add a unit correctly to the end of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: ADD_UNIT Should add a unit correctly to the end of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "95fca861-c9b3-4f8c-a065-d2d932c306b3",
                "parentUUID": "f113d6f1-0e9a-40ee-902d-f14faff53eeb",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          },
          {
            "title": "ACTION: REMOVE_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should remove a unit correctly frpm the start of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_UNIT Should remove a unit correctly frpm the start of an array",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c018a928-180c-4d5d-91be-cf7be1869601",
                "parentUUID": "499b0598-425a-4cc3-bbbb-abf0d0010220",
                "skipped": false
              },
              {
                "title": "Should remove a unit correctly from the middle of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_UNIT Should remove a unit correctly from the middle of an array",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5c985ecb-efb2-4d84-9125-e52ace273ab6",
                "parentUUID": "499b0598-425a-4cc3-bbbb-abf0d0010220",
                "skipped": false
              },
              {
                "title": "Should remove a unit correctly from the end of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_UNIT Should remove a unit correctly from the end of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5cebc2b0-5891-4e12-bdfc-3914bf93f5ec",
                "parentUUID": "499b0598-425a-4cc3-bbbb-abf0d0010220",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "499b0598-425a-4cc3-bbbb-abf0d0010220",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should remove a unit correctly frpm the start of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_UNIT Should remove a unit correctly frpm the start of an array",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c018a928-180c-4d5d-91be-cf7be1869601",
                "parentUUID": "499b0598-425a-4cc3-bbbb-abf0d0010220",
                "skipped": false
              },
              {
                "title": "Should remove a unit correctly from the middle of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_UNIT Should remove a unit correctly from the middle of an array",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5c985ecb-efb2-4d84-9125-e52ace273ab6",
                "parentUUID": "499b0598-425a-4cc3-bbbb-abf0d0010220",
                "skipped": false
              },
              {
                "title": "Should remove a unit correctly from the end of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_UNIT Should remove a unit correctly from the end of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5cebc2b0-5891-4e12-bdfc-3914bf93f5ec",
                "parentUUID": "499b0598-425a-4cc3-bbbb-abf0d0010220",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 6
          },
          {
            "title": "ACTION: GENERATE_COURSE",
            "suites": [],
            "tests": [
              {
                "title": "Should generate a course structure with valid start and end years",
                "fullTitle": "REDUCER: CourseStructure ACTION: GENERATE_COURSE Should generate a course structure with valid start and end years",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2014,\n    endYear: 2016\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "24f0b1c5-e4c9-459f-97a7-cfb708603603",
                "parentUUID": "19aa5777-2a75-40d1-8972-81181ace6c54",
                "skipped": false
              },
              {
                "title": "Should return an empty course structure with invalid start and end years.",
                "fullTitle": "REDUCER: CourseStructure ACTION: GENERATE_COURSE Should return an empty course structure with invalid start and end years.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2017,\n    endYear: 2013\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "70c73086-3f1b-4eb0-8d47-cbba4e20ae24",
                "parentUUID": "19aa5777-2a75-40d1-8972-81181ace6c54",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "19aa5777-2a75-40d1-8972-81181ace6c54",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should generate a course structure with valid start and end years",
                "fullTitle": "REDUCER: CourseStructure ACTION: GENERATE_COURSE Should generate a course structure with valid start and end years",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2014,\n    endYear: 2016\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "24f0b1c5-e4c9-459f-97a7-cfb708603603",
                "parentUUID": "19aa5777-2a75-40d1-8972-81181ace6c54",
                "skipped": false
              },
              {
                "title": "Should return an empty course structure with invalid start and end years.",
                "fullTitle": "REDUCER: CourseStructure ACTION: GENERATE_COURSE Should return an empty course structure with invalid start and end years.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2017,\n    endYear: 2013\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "70c73086-3f1b-4eb0-8d47-cbba4e20ae24",
                "parentUUID": "19aa5777-2a75-40d1-8972-81181ace6c54",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_COURSE_INFO_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show that the course info is loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_INFO_PENDING Should correctly show that the course info is loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "aa26c0b8-8075-4175-bcb0-aaf1a755f4b0",
                "parentUUID": "e9ec103e-10af-487d-9e0b-12bc49a35c9d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "e9ec103e-10af-487d-9e0b-12bc49a35c9d",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly show that the course info is loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_INFO_PENDING Should correctly show that the course info is loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "aa26c0b8-8075-4175-bcb0-aaf1a755f4b0",
                "parentUUID": "e9ec103e-10af-487d-9e0b-12bc49a35c9d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_COURSE_INFO_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly return the payload and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    focusedCourse: null,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_FULFILLED\",\n    payload: { data: {\n            \"propertyMap\": {\n                courseCode: \"Test Code\",\n                courseName: \"Test Course\",\n                mangFac: \"Test Faculty\",\n                creditPoints: 100,\n                courseDescrip: {\n                    \"value\": \"Test Description\"\n                },\n                courseDuration: \"Test Duration\",\n                modeLoc: {\n                    \"value\": \"Test mode and location\"\n                },\n                courseAward: \"Test awards\",\n                abrevTitle: \"Test abreviated title\"\n            }\n        } },\n    courseCode: \"COURSE101\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: {\n        courseCode: \"Test Code\",\n        courseName: \"Test Course\",\n        faculty: \"Test Faculty\",\n        creditPoints: 100,\n        courseDescription: \"Test Description\",\n        durationStr: \"Test Duration\",\n        modeAndLocation: \"Test mode and location\",\n        awards: \"Test awards\",\n        abrTitle: \"Test abreviated title\"\n    },\n    focusedCourse: \"COURSE101\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a42bd739-f223-4ef6-97fe-9dd33e73f73a",
                "parentUUID": "5b58efcc-be7a-4926-a42d-3a4dac56bd25",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "5b58efcc-be7a-4926-a42d-3a4dac56bd25",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly return the payload and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    focusedCourse: null,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_FULFILLED\",\n    payload: { data: {\n            \"propertyMap\": {\n                courseCode: \"Test Code\",\n                courseName: \"Test Course\",\n                mangFac: \"Test Faculty\",\n                creditPoints: 100,\n                courseDescrip: {\n                    \"value\": \"Test Description\"\n                },\n                courseDuration: \"Test Duration\",\n                modeLoc: {\n                    \"value\": \"Test mode and location\"\n                },\n                courseAward: \"Test awards\",\n                abrevTitle: \"Test abreviated title\"\n            }\n        } },\n    courseCode: \"COURSE101\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: {\n        courseCode: \"Test Code\",\n        courseName: \"Test Course\",\n        faculty: \"Test Faculty\",\n        creditPoints: 100,\n        courseDescription: \"Test Description\",\n        durationStr: \"Test Duration\",\n        modeAndLocation: \"Test mode and location\",\n        awards: \"Test awards\",\n        abrTitle: \"Test abreviated title\"\n    },\n    focusedCourse: \"COURSE101\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a42bd739-f223-4ef6-97fe-9dd33e73f73a",
                "parentUUID": "5b58efcc-be7a-4926-a42d-3a4dac56bd25",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_COURSE_INFO_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show that the course info fetch failed and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_INFO_REJECTED Should correctly show that the course info fetch failed and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: true,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b359b471-9d1b-4bda-b527-4c6c44e9f4cd",
                "parentUUID": "f3a218f7-5550-4423-8b39-cdc7633a73da",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "f3a218f7-5550-4423-8b39-cdc7633a73da",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly show that the course info fetch failed and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_INFO_REJECTED Should correctly show that the course info fetch failed and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: true,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b359b471-9d1b-4bda-b527-4c6c44e9f4cd",
                "parentUUID": "f3a218f7-5550-4423-8b39-cdc7633a73da",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_COURSE_TEMPLATE_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show that the course template is loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_TEMPLATE_PENDING Should correctly show that the course template is loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "87f969a5-bf60-4f63-9952-74fa06490a1f",
                "parentUUID": "5ecd24a3-fef1-4a0d-87f2-679fe3d9037e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "5ecd24a3-fef1-4a0d-87f2-679fe3d9037e",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly show that the course template is loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_TEMPLATE_PENDING Should correctly show that the course template is loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "87f969a5-bf60-4f63-9952-74fa06490a1f",
                "parentUUID": "5ecd24a3-fef1-4a0d-87f2-679fe3d9037e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_COURSE_TEMPLATE_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly return the payload and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_TEMPLATE_FULFILLED Should correctly return the payload and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_FULFILLED\",\n    payload: {\n        data: {\n            propertyMap: \"Fake Course Template\"\n        }\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: \"Fake Course Template\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a83a0156-0246-4245-8290-79320cbef83d",
                "parentUUID": "f1d16b5e-28cb-45e4-9d6c-cdb14d9af2ac",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "f1d16b5e-28cb-45e4-9d6c-cdb14d9af2ac",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly return the payload and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_TEMPLATE_FULFILLED Should correctly return the payload and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_FULFILLED\",\n    payload: {\n        data: {\n            propertyMap: \"Fake Course Template\"\n        }\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: \"Fake Course Template\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a83a0156-0246-4245-8290-79320cbef83d",
                "parentUUID": "f1d16b5e-28cb-45e4-9d6c-cdb14d9af2ac",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_COURSE_TEMPLATE_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show that the course template fetch failed and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_TEMPLATE_REJECTED Should correctly show that the course template fetch failed and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: true,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1066ba4c-49f6-4131-918b-41a9d16fbe13",
                "parentUUID": "acf54a3f-c868-47ed-ba1e-dd2196f2a27f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "acf54a3f-c868-47ed-ba1e-dd2196f2a27f",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly show that the course template fetch failed and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_TEMPLATE_REJECTED Should correctly show that the course template fetch failed and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: true,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1066ba4c-49f6-4131-918b-41a9d16fbe13",
                "parentUUID": "acf54a3f-c868-47ed-ba1e-dd2196f2a27f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_UNIT_INFO_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show that the unit info is loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_UNIT_INFO_PENDING Should correctly show that the unit info is loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: {\n        preqs: \"\",\n        creditPoints: 0,\n        rules: [],\n        locationAndTime: \"\",\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"\",\n        eftsl: 0,\n        descriptions: \"\"\n    },\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: {\n        preqs: \"\",\n        creditPoints: 0,\n        rules: [],\n        locationAndTime: \"\",\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"\",\n        eftsl: 0,\n        descriptions: \"\"\n    },\n    focusedUnitCode: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d6534370-40fb-43a2-9d89-77e591ffcc02",
                "parentUUID": "10c3a48f-67a5-43b1-a40c-d930ee113f0a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "10c3a48f-67a5-43b1-a40c-d930ee113f0a",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly show that the unit info is loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_UNIT_INFO_PENDING Should correctly show that the unit info is loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: {\n        preqs: \"\",\n        creditPoints: 0,\n        rules: [],\n        locationAndTime: \"\",\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"\",\n        eftsl: 0,\n        descriptions: \"\"\n    },\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: {\n        preqs: \"\",\n        creditPoints: 0,\n        rules: [],\n        locationAndTime: \"\",\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"\",\n        eftsl: 0,\n        descriptions: \"\"\n    },\n    focusedUnitCode: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d6534370-40fb-43a2-9d89-77e591ffcc02",
                "parentUUID": "10c3a48f-67a5-43b1-a40c-d930ee113f0a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_UNIT_INFO_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly return the payload and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_UNIT_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_FULFILLED\",\n    payload: { data: \"Fake Unit Info\" },\n    unitCode: \"FAKE1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: \"Fake Unit Info\",\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a4cbf929-965f-4a03-87a1-5d23ddbe2984",
                "parentUUID": "ef7c4694-e6a7-4596-aba3-790c7ab053c4",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "ef7c4694-e6a7-4596-aba3-790c7ab053c4",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly return the payload and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_UNIT_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_FULFILLED\",\n    payload: { data: \"Fake Unit Info\" },\n    unitCode: \"FAKE1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: \"Fake Unit Info\",\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a4cbf929-965f-4a03-87a1-5d23ddbe2984",
                "parentUUID": "ef7c4694-e6a7-4596-aba3-790c7ab053c4",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_UNIT_INFO_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show that the unit info fetch failed and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_UNIT_INFO_REJECTED Should correctly show that the unit info fetch failed and show that it is no longer loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_REJECTED\",\n    payload: {\n        response: {\n            status: 404\n        }\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: {\n        response: {\n            status: 404\n        }\n    },\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b66316e2-0160-4595-89e9-28b47e796c2f",
                "parentUUID": "731edd35-c664-4b6b-8f24-e848b9471c52",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "731edd35-c664-4b6b-8f24-e848b9471c52",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly show that the unit info fetch failed and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_UNIT_INFO_REJECTED Should correctly show that the unit info fetch failed and show that it is no longer loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_REJECTED\",\n    payload: {\n        response: {\n            status: 404\n        }\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: {\n        response: {\n            status: 404\n        }\n    },\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b66316e2-0160-4595-89e9-28b47e796c2f",
                "parentUUID": "731edd35-c664-4b6b-8f24-e848b9471c52",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: SUBMIT_COURSE_FORM",
            "suites": [],
            "tests": [
              {
                "title": "Should accurately set the start year and the focused course on submission",
                "fullTitle": "REDUCER: CourseStructure ACTION: SUBMIT_COURSE_FORM Should accurately set the start year and the focused course on submission",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_COURSE_FORM\",\n    startYear: 2020,\n    courseCode: \"TEST1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: \"TEST1001\",\n    startYear: 2020,\n    endYear: 2020\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d290aec2-531a-419d-81c5-e6d69bdafdf2",
                "parentUUID": "b0ab8f27-a168-447b-94dd-5ffcab4196b6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "b0ab8f27-a168-447b-94dd-5ffcab4196b6",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should accurately set the start year and the focused course on submission",
                "fullTitle": "REDUCER: CourseStructure ACTION: SUBMIT_COURSE_FORM Should accurately set the start year and the focused course on submission",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_COURSE_FORM\",\n    startYear: 2020,\n    courseCode: \"TEST1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: \"TEST1001\",\n    startYear: 2020,\n    endYear: 2020\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d290aec2-531a-419d-81c5-e6d69bdafdf2",
                "parentUUID": "b0ab8f27-a168-447b-94dd-5ffcab4196b6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: SUBMIT_YEAR_FORM",
            "suites": [],
            "tests": [
              {
                "title": "Should accurately set the start year and end year on submission",
                "fullTitle": "REDUCER: CourseStructure ACTION: SUBMIT_YEAR_FORM Should accurately set the start year and end year on submission",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_YEAR_FORM\",\n    startYear: 2020,\n    endYear: 2025\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2020,\n    endYear: 2025\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "60eebaee-ec2f-41a1-8658-8d37db786861",
                "parentUUID": "dedc3bba-cf99-43d6-ac95-8a141ac13e40",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "dedc3bba-cf99-43d6-ac95-8a141ac13e40",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should accurately set the start year and end year on submission",
                "fullTitle": "REDUCER: CourseStructure ACTION: SUBMIT_YEAR_FORM Should accurately set the start year and end year on submission",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_YEAR_FORM\",\n    startYear: 2020,\n    endYear: 2025\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2020,\n    endYear: 2025\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "60eebaee-ec2f-41a1-8658-8d37db786861",
                "parentUUID": "dedc3bba-cf99-43d6-ac95-8a141ac13e40",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_TEACHING_PERIODS_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly handle  of teaching periods data",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_TEACHING_PERIODS_PENDING Should correctly handle  of teaching periods data",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f34ff6fb-83b4-4eb6-833e-7fa8474cabf5",
                "parentUUID": "5fe3efca-a15f-4349-beae-7a4b8aa09681",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "5fe3efca-a15f-4349-beae-7a4b8aa09681",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly handle  of teaching periods data",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_TEACHING_PERIODS_PENDING Should correctly handle  of teaching periods data",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f34ff6fb-83b4-4eb6-833e-7fa8474cabf5",
                "parentUUID": "5fe3efca-a15f-4349-beae-7a4b8aa09681",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_TEACHING_PERIODS_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly handle  of teaching periods data",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_TEACHING_PERIODS_FULFILLED Should correctly handle  of teaching periods data",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_FULFILLED\",\n    payload: \"Teaching period strings\"\n};\nvar stateAfter = {\n    teachingPeriodData: \"Teaching period strings\",\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a4308971-6d7b-49b1-a723-e0509fb8505c",
                "parentUUID": "4fdc7ce7-bc92-43a2-9392-b1723abde982",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "4fdc7ce7-bc92-43a2-9392-b1723abde982",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly handle  of teaching periods data",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_TEACHING_PERIODS_FULFILLED Should correctly handle  of teaching periods data",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_FULFILLED\",\n    payload: \"Teaching period strings\"\n};\nvar stateAfter = {\n    teachingPeriodData: \"Teaching period strings\",\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a4308971-6d7b-49b1-a723-e0509fb8505c",
                "parentUUID": "4fdc7ce7-bc92-43a2-9392-b1723abde982",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_TEACHING_PERIODS_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly handle  of teaching periods data",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_TEACHING_PERIODS_REJECTED Should correctly handle  of teaching periods data",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "fdb75bd4-061c-4aa6-9a24-d11ab8e92935",
                "parentUUID": "f6f841a1-46d4-4809-b51f-859c65896038",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "f6f841a1-46d4-4809-b51f-859c65896038",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly handle  of teaching periods data",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_TEACHING_PERIODS_REJECTED Should correctly handle  of teaching periods data",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "fdb75bd4-061c-4aa6-9a24-d11ab8e92935",
                "parentUUID": "f6f841a1-46d4-4809-b51f-859c65896038",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: SHOW_INSERT_TEACHING_PERIOD_UI",
            "suites": [],
            "tests": [
              {
                "title": "Should set the teaching period code to insert value correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should set the teaching period code to insert value correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodCodeToInsert: null,\n    testParam1: 1,\n    testParam2: \"test\"\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"S1-02\"\n};\nvar stateAfter = {\n    teachingPeriodCodeToInsert: \"S1-02\",\n    testParam1: 1,\n    testParam2: \"test\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b70254d2-6d3b-45ba-a560-135058f6e7a6",
                "parentUUID": "80823b81-5c7d-438f-97c4-9f0e307e78ca",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "80823b81-5c7d-438f-97c4-9f0e307e78ca",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should set the teaching period code to insert value correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should set the teaching period code to insert value correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodCodeToInsert: null,\n    testParam1: 1,\n    testParam2: \"test\"\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"S1-02\"\n};\nvar stateAfter = {\n    teachingPeriodCodeToInsert: \"S1-02\",\n    testParam1: 1,\n    testParam2: \"test\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b70254d2-6d3b-45ba-a560-135058f6e7a6",
                "parentUUID": "80823b81-5c7d-438f-97c4-9f0e307e78ca",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: UPLOAD_COURSE_SNAPSHOT_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should handle the initiation of a course snapshot upload correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPLOAD_COURSE_SNAPSHOT_PENDING Should handle the initiation of a course snapshot upload correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: true\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9bea4ef2-f508-4a0e-bb00-2cbcbd715c1a",
                "parentUUID": "716ef698-3249-49f9-80ad-4f8e9950957d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "716ef698-3249-49f9-80ad-4f8e9950957d",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should handle the initiation of a course snapshot upload correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPLOAD_COURSE_SNAPSHOT_PENDING Should handle the initiation of a course snapshot upload correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: true\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9bea4ef2-f508-4a0e-bb00-2cbcbd715c1a",
                "parentUUID": "716ef698-3249-49f9-80ad-4f8e9950957d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: UPLOAD_COURSE_SNAPSHOT_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should handle the successful upload of a course snapshot correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPLOAD_COURSE_SNAPSHOT_FULFILLED Should handle the successful upload of a course snapshot correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"upload string\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: \"upload string\",\n    courseSnapshotUploadSucessful: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9353a121-0422-4454-9e01-2ea5419d91e5",
                "parentUUID": "689cd8cb-f290-4ead-9e29-7ad9d65407b9",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "689cd8cb-f290-4ead-9e29-7ad9d65407b9",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should handle the successful upload of a course snapshot correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPLOAD_COURSE_SNAPSHOT_FULFILLED Should handle the successful upload of a course snapshot correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"upload string\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: \"upload string\",\n    courseSnapshotUploadSucessful: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9353a121-0422-4454-9e01-2ea5419d91e5",
                "parentUUID": "689cd8cb-f290-4ead-9e29-7ad9d65407b9",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: UPLOAD_COURSE_SNAPSHOT_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should do handle the rejected upload of a course snapshot correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPLOAD_COURSE_SNAPSHOT_REJECTED Should do handle the rejected upload of a course snapshot correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "76f7899a-3924-4ba1-a4b6-bc36850dfd48",
                "parentUUID": "05081bd6-d254-4921-8619-296a11be7d8f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "05081bd6-d254-4921-8619-296a11be7d8f",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should do handle the rejected upload of a course snapshot correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPLOAD_COURSE_SNAPSHOT_REJECTED Should do handle the rejected upload of a course snapshot correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "76f7899a-3924-4ba1-a4b6-bc36850dfd48",
                "parentUUID": "05081bd6-d254-4921-8619-296a11be7d8f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_COURSE_SNAPSHOT_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should begin fetching a course snapshot correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_SNAPSHOT_PENDING Should begin fetching a course snapshot correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "90ed49b7-2384-49f1-9016-c64a747c9f34",
                "parentUUID": "07da5a46-5686-480a-8ad1-f545fcd8b28e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "07da5a46-5686-480a-8ad1-f545fcd8b28e",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should begin fetching a course snapshot correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_SNAPSHOT_PENDING Should begin fetching a course snapshot correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "90ed49b7-2384-49f1-9016-c64a747c9f34",
                "parentUUID": "07da5a46-5686-480a-8ad1-f545fcd8b28e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_COURSE_SNAPSHOT_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should handle a successful course snapshot fetch correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_SNAPSHOT_FULFILLED Should handle a successful course snapshot fetch correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"Snap data\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: \"Snap data\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a7f8a974-4109-4129-a5c9-66adc0f3b562",
                "parentUUID": "119bc74c-f76d-4172-96ea-7a4d4d84b377",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "119bc74c-f76d-4172-96ea-7a4d4d84b377",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should handle a successful course snapshot fetch correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_SNAPSHOT_FULFILLED Should handle a successful course snapshot fetch correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"Snap data\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: \"Snap data\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a7f8a974-4109-4129-a5c9-66adc0f3b562",
                "parentUUID": "119bc74c-f76d-4172-96ea-7a4d4d84b377",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_COURSE_SNAPSHOT_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should handle a rejected course snapshot fetch correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_SNAPSHOT_REJECTED Should handle a rejected course snapshot fetch correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9701b69f-c7ec-437e-ae07-cdd39de3f9d7",
                "parentUUID": "cc600b1a-1e0a-49da-977b-56aa94b4d212",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "cc600b1a-1e0a-49da-977b-56aa94b4d212",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should handle a rejected course snapshot fetch correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_SNAPSHOT_REJECTED Should handle a rejected course snapshot fetch correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9701b69f-c7ec-437e-ae07-cdd39de3f9d7",
                "parentUUID": "cc600b1a-1e0a-49da-977b-56aa94b4d212",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_COURSES_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSES_PENDING Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: false,\n    courseSearchError: true //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: true,\n    courseSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "eff1bde8-b2d2-4ab5-bf48-4116ee2a685a",
                "parentUUID": "802c0478-916b-4000-bfd8-da832232c245",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "802c0478-916b-4000-bfd8-da832232c245",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSES_PENDING Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: false,\n    courseSearchError: true //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: true,\n    courseSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "eff1bde8-b2d2-4ab5-bf48-4116ee2a685a",
                "parentUUID": "802c0478-916b-4000-bfd8-da832232c245",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_COURSES_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSES_FULFILLED Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: true,\n    courseSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_FULFILLED\",\n    payload: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    courseSearchIsLoading: false,\n    courseSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "aa0e836a-5388-4fd6-9358-5f24a2da22f5",
                "parentUUID": "4404a1cf-16ec-48c2-bbca-2469b3c54d6f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "4404a1cf-16ec-48c2-bbca-2469b3c54d6f",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSES_FULFILLED Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: true,\n    courseSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_FULFILLED\",\n    payload: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    courseSearchIsLoading: false,\n    courseSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "aa0e836a-5388-4fd6-9358-5f24a2da22f5",
                "parentUUID": "4404a1cf-16ec-48c2-bbca-2469b3c54d6f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_COURSES_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSES_REJECTED Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    courseSearchIsLoading: true,\n    courseSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: false,\n    courseSearchError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d594db1a-ae52-4d99-851c-1be9a15b4ce8",
                "parentUUID": "745498fe-4cb9-45c6-89ba-dc430785ec8a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "745498fe-4cb9-45c6-89ba-dc430785ec8a",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSES_REJECTED Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    courseSearchIsLoading: true,\n    courseSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: false,\n    courseSearchError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d594db1a-ae52-4d99-851c-1be9a15b4ce8",
                "parentUUID": "745498fe-4cb9-45c6-89ba-dc430785ec8a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_AOS_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_AOS_PENDING Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: false,\n    aosSearchError: true //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: true,\n    aosSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "2c16c5c2-0f43-48f2-95d5-9067221f4dde",
                "parentUUID": "cdd17b70-0492-440f-9475-c104cfadee56",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "cdd17b70-0492-440f-9475-c104cfadee56",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_AOS_PENDING Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: false,\n    aosSearchError: true //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: true,\n    aosSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "2c16c5c2-0f43-48f2-95d5-9067221f4dde",
                "parentUUID": "cdd17b70-0492-440f-9475-c104cfadee56",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_AOS_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_AOS_FULFILLED Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: true,\n    aosSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_FULFILLED\",\n    payload: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    aosSearchIsLoading: false,\n    aosSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "4eda708e-ac12-4f54-91de-e199656095cf",
                "parentUUID": "8152809b-80f2-4458-b292-29ac977ba1e6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "8152809b-80f2-4458-b292-29ac977ba1e6",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_AOS_FULFILLED Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: true,\n    aosSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_FULFILLED\",\n    payload: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    aosSearchIsLoading: false,\n    aosSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "4eda708e-ac12-4f54-91de-e199656095cf",
                "parentUUID": "8152809b-80f2-4458-b292-29ac977ba1e6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_AOS_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_AOS_REJECTED Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    aosSearchIsLoading: true,\n    aosSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: false,\n    aosSearchError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "2e56f565-29f6-414e-8553-2b5172c84553",
                "parentUUID": "f3642d57-6435-41f2-a517-94610a9f2e6c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "f3642d57-6435-41f2-a517-94610a9f2e6c",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_AOS_REJECTED Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    aosSearchIsLoading: true,\n    aosSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: false,\n    aosSearchError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "2e56f565-29f6-414e-8553-2b5172c84553",
                "parentUUID": "f3642d57-6435-41f2-a517-94610a9f2e6c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: UPDATE_AFFECTED_UNITS",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly update the affected units value to the given array",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_AFFECTED_UNITS Should correctly update the affected units value to the given array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: []\n};\nvar action = {\n    type: \"UPDATE_AFFECTED_UNITS\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d2a1f261-9c98-456d-9dfd-f58e739a41a1",
                "parentUUID": "4465336d-01fa-4f76-b3cb-2318ca11a7c5",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "4465336d-01fa-4f76-b3cb-2318ca11a7c5",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly update the affected units value to the given array",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_AFFECTED_UNITS Should correctly update the affected units value to the given array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: []\n};\nvar action = {\n    type: \"UPDATE_AFFECTED_UNITS\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d2a1f261-9c98-456d-9dfd-f58e739a41a1",
                "parentUUID": "4465336d-01fa-4f76-b3cb-2318ca11a7c5",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: UPDATE_INDEX_OF_TP_TO_REMOVE",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly update the index of tp to remove value to the given value",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_INDEX_OF_TP_TO_REMOVE Should correctly update the index of tp to remove value to the given value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 0\n};\nvar action = {\n    type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\",\n    index: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 1\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7105ce63-3cec-4b9b-b93c-3d50c72408b0",
                "parentUUID": "1d1c23cb-deba-40da-978e-74120d3eb5e8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "1d1c23cb-deba-40da-978e-74120d3eb5e8",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly update the index of tp to remove value to the given value",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_INDEX_OF_TP_TO_REMOVE Should correctly update the index of tp to remove value to the given value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 0\n};\nvar action = {\n    type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\",\n    index: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 1\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7105ce63-3cec-4b9b-b93c-3d50c72408b0",
                "parentUUID": "1d1c23cb-deba-40da-978e-74120d3eb5e8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: UPDATE_UNIT_TO_ADD",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set the unit to add to the new unit",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_UNIT_TO_ADD Should correctly set the unit to add to the new unit",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitInfo: \"TestUnit\",\n    unitToAdd: undefined\n};\nvar action = {\n    type: \"UPDATE_UNIT_TO_ADD\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitInfo: \"TestUnit\",\n    unitToAdd: \"TestUnit\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0a6474e9-7a4f-4d66-b0f2-68c0f86437d5",
                "parentUUID": "bdca03cc-6155-4a59-8a5e-b15f9c8ae989",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "bdca03cc-6155-4a59-8a5e-b15f9c8ae989",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly set the unit to add to the new unit",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_UNIT_TO_ADD Should correctly set the unit to add to the new unit",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitInfo: \"TestUnit\",\n    unitToAdd: undefined\n};\nvar action = {\n    type: \"UPDATE_UNIT_TO_ADD\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitInfo: \"TestUnit\",\n    unitToAdd: \"TestUnit\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0a6474e9-7a4f-4d66-b0f2-68c0f86437d5",
                "parentUUID": "bdca03cc-6155-4a59-8a5e-b15f9c8ae989",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: UPDATE_UNIT_IS_BEING_DRAGGED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set a non-dragging unit being dragged",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_UNIT_IS_BEING_DRAGGED Should correctly set a non-dragging unit being dragged",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: false\n};\nvar action = {\n    type: \"UPDATE_UNIT_IS_BEING_DRAGGED\",\n    isDragging: true\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "71101dcd-ec51-4e5b-bcb4-7a9aa5597e24",
                "parentUUID": "3556d9f4-83c2-48e4-85bd-e2e0add92859",
                "skipped": false
              },
              {
                "title": "Should correctly set a dragging unit to be not dragged",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_UNIT_IS_BEING_DRAGGED Should correctly set a dragging unit to be not dragged",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: true\n};\nvar action = {\n    type: \"UPDATE_UNIT_IS_BEING_DRAGGED\",\n    isDragging: false\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c6a2efb8-06a7-48b4-bfe4-679f2f0949e0",
                "parentUUID": "3556d9f4-83c2-48e4-85bd-e2e0add92859",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "3556d9f4-83c2-48e4-85bd-e2e0add92859",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly set a non-dragging unit being dragged",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_UNIT_IS_BEING_DRAGGED Should correctly set a non-dragging unit being dragged",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: false\n};\nvar action = {\n    type: \"UPDATE_UNIT_IS_BEING_DRAGGED\",\n    isDragging: true\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "71101dcd-ec51-4e5b-bcb4-7a9aa5597e24",
                "parentUUID": "3556d9f4-83c2-48e4-85bd-e2e0add92859",
                "skipped": false
              },
              {
                "title": "Should correctly set a dragging unit to be not dragged",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_UNIT_IS_BEING_DRAGGED Should correctly set a dragging unit to be not dragged",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: true\n};\nvar action = {\n    type: \"UPDATE_UNIT_IS_BEING_DRAGGED\",\n    isDragging: false\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c6a2efb8-06a7-48b4-bfe4-679f2f0949e0",
                "parentUUID": "3556d9f4-83c2-48e4-85bd-e2e0add92859",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: MOVING_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly begin moving a unit",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVING_UNIT Should correctly begin moving a unit",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0\n};\nvar action = {\n    type: \"MOVING_UNIT\",\n    unit: \"TEST-UNIT\",\n    unitIndex: 3,\n    tpIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TEST-UNIT\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 3\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "155dbdda-b7ef-458f-a188-111861c85c6e",
                "parentUUID": "c2e08aa2-6dd1-40f0-a47d-e86a0167bc80",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "c2e08aa2-6dd1-40f0-a47d-e86a0167bc80",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly begin moving a unit",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVING_UNIT Should correctly begin moving a unit",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0\n};\nvar action = {\n    type: \"MOVING_UNIT\",\n    unit: \"TEST-UNIT\",\n    unitIndex: 3,\n    tpIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TEST-UNIT\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 3\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "155dbdda-b7ef-458f-a188-111861c85c6e",
                "parentUUID": "c2e08aa2-6dd1-40f0-a47d-e86a0167bc80",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: MOVE_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly handle moving a unit to a teaching period earlier than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period earlier than it",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5c67d8d4-bc5b-4c87-9b88-deeb8c1566bb",
                "parentUUID": "45c03603-58a2-4a88-ba7b-33db74ee4604",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to a teaching period later than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period later than it",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ccc6a734-770a-45e0-b3c1-33da4e61fddc",
                "parentUUID": "45c03603-58a2-4a88-ba7b-33db74ee4604",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to the same teaching period but earlier position",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but earlier position",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "526768e5-5b71-4599-a1c0-143d7a0729c7",
                "parentUUID": "45c03603-58a2-4a88-ba7b-33db74ee4604",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to the same teaching period but later position",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but later position",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, \"PlaceToMoveTo\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f9c03e5f-2e6d-4866-8f38-b6b3cb1a3484",
                "parentUUID": "45c03603-58a2-4a88-ba7b-33db74ee4604",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to the same teaching period and exact same position",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period and exact same position",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "2a6ae87f-c649-41ca-8b53-5c82b44fbda7",
                "parentUUID": "45c03603-58a2-4a88-ba7b-33db74ee4604",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "45c03603-58a2-4a88-ba7b-33db74ee4604",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly handle moving a unit to a teaching period earlier than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period earlier than it",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5c67d8d4-bc5b-4c87-9b88-deeb8c1566bb",
                "parentUUID": "45c03603-58a2-4a88-ba7b-33db74ee4604",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to a teaching period later than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period later than it",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ccc6a734-770a-45e0-b3c1-33da4e61fddc",
                "parentUUID": "45c03603-58a2-4a88-ba7b-33db74ee4604",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to the same teaching period but earlier position",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but earlier position",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "526768e5-5b71-4599-a1c0-143d7a0729c7",
                "parentUUID": "45c03603-58a2-4a88-ba7b-33db74ee4604",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to the same teaching period but later position",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but later position",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, \"PlaceToMoveTo\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f9c03e5f-2e6d-4866-8f38-b6b3cb1a3484",
                "parentUUID": "45c03603-58a2-4a88-ba7b-33db74ee4604",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to the same teaching period and exact same position",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period and exact same position",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "2a6ae87f-c649-41ca-8b53-5c82b44fbda7",
                "parentUUID": "45c03603-58a2-4a88-ba7b-33db74ee4604",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "ACTION: CANCEL_MOVING_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "should cancel moving unit",
                "fullTitle": "REDUCER: CourseStructure ACTION: CANCEL_MOVING_UNIT should cancel moving unit",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: \"TestUnit2\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: undefined,\n    unitsIndexOfUnitToBeMoved: undefined\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9b228a18-4c77-4061-a9fb-5eaa615ea37d",
                "parentUUID": "898e6118-1274-465f-9e06-cc1579de340a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "898e6118-1274-465f-9e06-cc1579de340a",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "should cancel moving unit",
                "fullTitle": "REDUCER: CourseStructure ACTION: CANCEL_MOVING_UNIT should cancel moving unit",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: \"TestUnit2\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: undefined,\n    unitsIndexOfUnitToBeMoved: undefined\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9b228a18-4c77-4061-a9fb-5eaa615ea37d",
                "parentUUID": "898e6118-1274-465f-9e06-cc1579de340a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: SWAP_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly handle swaping a unit to a teaching period earlier than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period earlier than it",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5d001452-947d-4f6e-8b8c-9cd7b13cf263",
                "parentUUID": "d0434581-ff7c-432a-9371-3aa2cf64c9e0",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to a teaching period later than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period later than it",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5dbe9e7f-3840-441d-a1ce-4c082c32715e",
                "parentUUID": "d0434581-ff7c-432a-9371-3aa2cf64c9e0",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to the same teaching period but earlier position",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but earlier position",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a0a0cb91-6493-4033-bf71-a1f37b19fef0",
                "parentUUID": "d0434581-ff7c-432a-9371-3aa2cf64c9e0",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to the same teaching period but later position",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but later position",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, \"PlaceToMoveTo\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", null, \"TestUnit\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "31030968-cfc6-4f8e-999b-5b0f8208913b",
                "parentUUID": "d0434581-ff7c-432a-9371-3aa2cf64c9e0",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to the same teaching period and exact same position",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period and exact same position",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1f431c9d-be49-4ac7-8142-43957dbbca77",
                "parentUUID": "d0434581-ff7c-432a-9371-3aa2cf64c9e0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "d0434581-ff7c-432a-9371-3aa2cf64c9e0",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly handle swaping a unit to a teaching period earlier than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period earlier than it",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5d001452-947d-4f6e-8b8c-9cd7b13cf263",
                "parentUUID": "d0434581-ff7c-432a-9371-3aa2cf64c9e0",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to a teaching period later than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period later than it",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5dbe9e7f-3840-441d-a1ce-4c082c32715e",
                "parentUUID": "d0434581-ff7c-432a-9371-3aa2cf64c9e0",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to the same teaching period but earlier position",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but earlier position",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a0a0cb91-6493-4033-bf71-a1f37b19fef0",
                "parentUUID": "d0434581-ff7c-432a-9371-3aa2cf64c9e0",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to the same teaching period but later position",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but later position",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, \"PlaceToMoveTo\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", null, \"TestUnit\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "31030968-cfc6-4f8e-999b-5b0f8208913b",
                "parentUUID": "d0434581-ff7c-432a-9371-3aa2cf64c9e0",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to the same teaching period and exact same position",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period and exact same position",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1f431c9d-be49-4ac7-8142-43957dbbca77",
                "parentUUID": "d0434581-ff7c-432a-9371-3aa2cf64c9e0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          },
          {
            "title": "ACTION: VALIDATE_COURSE",
            "suites": [],
            "tests": [
              {
                "title": "should give no errors for an empty course plan.",
                "fullTitle": "REDUCER: CourseStructure ACTION: VALIDATE_COURSE should give no errors for an empty course plan.",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan.\"\n    }],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    courseErrors: [],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "2dbfd910-2fc2-465f-ba3e-a5569b9424e1",
                "parentUUID": "b8535e85-e98e-4c92-a3d4-bb48f4e427a0",
                "skipped": false
              },
              {
                "title": "Should not give duplicate unit errors if the first attempt is in the past, and the second attempt is not two or more years into the future.",
                "fullTitle": "REDUCER: CourseStructure ACTION: VALIDATE_COURSE Should not give duplicate unit errors if the first attempt is in the past, and the second attempt is not two or more years into the future.",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: new Date().getFullYear() - 1,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, null]\n    }, {\n        code: \"S1-01\",\n        year: new Date().getFullYear() + 1,\n        units: [null, null, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "345abd18-f4d8-4395-bcd6-1ab5f824e8f5",
                "parentUUID": "b8535e85-e98e-4c92-a3d4-bb48f4e427a0",
                "skipped": false
              },
              {
                "title": "Should give a duplicate unit error if there are two same units in the same teaching period",
                "fullTitle": "REDUCER: CourseStructure ACTION: VALIDATE_COURSE Should give a duplicate unit error if there are two same units in the same teaching period",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2015,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }, {\n        code: \"S2-01\",\n        year: 2015,\n        units: [null, null, null, {\n            unitCode: \"GJQ2039\"\n        }]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2015,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }, {\n        code: \"S2-01\",\n        year: 2015,\n        units: [null, null, null, {\n            unitCode: \"GJQ2039\"\n        }]\n    }],\n    courseErrors: [{\n        message: \"ABCD1234 already exists in the same teaching period. Please remove this unit.\",\n        coordinates: [[0, 3]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7f9b732b-2d4b-4714-a1e5-f173a99680e2",
                "parentUUID": "b8535e85-e98e-4c92-a3d4-bb48f4e427a0",
                "skipped": false
              },
              {
                "title": "Should give a duplicate error if a duplicate unit is placed in a teaching period two years from now",
                "fullTitle": "REDUCER: CourseStructure ACTION: VALIDATE_COURSE Should give a duplicate error if a duplicate unit is placed in a teaching period two years from now",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var currentYear = new Date().getFullYear();\nvar stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: currentYear,\n        units: [{\n            unitCode: \"ABC1234\"\n        }, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 2,\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 2,\n        units: [null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: currentYear,\n        units: [{\n            unitCode: \"ABC1234\"\n        }, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 2,\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 2,\n        units: [null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan. Please plan as if you will pass all units.\",\n        coordinates: [[4, 1]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "804539b2-d5d2-49f0-8724-07a51da06995",
                "parentUUID": "b8535e85-e98e-4c92-a3d4-bb48f4e427a0",
                "skipped": false
              },
              {
                "title": "Should give a course error for a unit not being offered in the teaching period it is in",
                "fullTitle": "REDUCER: CourseStructure ACTION: VALIDATE_COURSE Should give a course error for a unit not being offered in the teaching period it is in",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: 2017,\n        units: [null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"First semester 2017 (Day)\"]\n            }]\n        }, null]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: 2017,\n        units: [null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"First semester 2017 (Day)\"]\n            }]\n        }, null]\n    }],\n    courseErrors: [{\n        message: \"ABC1234 is not offered in second semester.\",\n        coordinates: [[1, 2]]\n    }],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d3b7ca34-6791-42c1-be14-3300133b115d",
                "parentUUID": "b8535e85-e98e-4c92-a3d4-bb48f4e427a0",
                "skipped": false
              },
              {
                "title": "Should give a course error for a missing prereq",
                "fullTitle": "REDUCER: CourseStructure ACTION: VALIDATE_COURSE Should give a course error for a missing prereq",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"Must have passed an (I/W) unit in {DEF2345, QLS2029}\",\n                endDate: \"\"\n            }]\n        }]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"Must have passed an (I/W) unit in {DEF2345, QLS2029}\",\n                endDate: \"\"\n            }]\n        }]\n    }],\n    courseErrors: [{\n        message: \"You must complete DEF2345 or QLS2029 before you can do ABC1234.\",\n        coordinates: [[0, 3]]\n    }],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b565216f-5b91-4052-8944-2f1694cf9872",
                "parentUUID": "b8535e85-e98e-4c92-a3d4-bb48f4e427a0",
                "skipped": false
              },
              {
                "title": "Should correctly handle the Otherwise branch of FOR COURSE_CODE syntax",
                "fullTitle": "REDUCER: CourseStructure ACTION: VALIDATE_COURSE Should correctly handle the Otherwise branch of FOR COURSE_CODE syntax",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }, {\n        year: 2018,\n        code: \"WS-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"Winter semester 2018 (Day)\"]\n            }],\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {Q2001, Q2003} Do true Otherwise Must have passed 1 (I/W) units in {TEST1001}\",\n                endDate: \"\"\n            }]\n        }]\n    }, {\n        year: 2018,\n        code: \"S2-01\",\n        units: [null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }, {\n        year: 2018,\n        code: \"WS-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"Winter semester 2018 (Day)\"]\n            }],\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {Q2001, Q2003} Do true Otherwise Must have passed 1 (I/W) units in {TEST1001}\",\n                endDate: \"\"\n            }]\n        }]\n    }, {\n        year: 2018,\n        code: \"S2-01\",\n        units: [null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"You must complete TEST1001 before you can do ABC1234.\",\n        coordinates: [[1, 3]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "2877562e-ae8c-4468-8b06-b37d2897d19d",
                "parentUUID": "b8535e85-e98e-4c92-a3d4-bb48f4e427a0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "b8535e85-e98e-4c92-a3d4-bb48f4e427a0",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "should give no errors for an empty course plan.",
                "fullTitle": "REDUCER: CourseStructure ACTION: VALIDATE_COURSE should give no errors for an empty course plan.",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan.\"\n    }],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    courseErrors: [],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "2dbfd910-2fc2-465f-ba3e-a5569b9424e1",
                "parentUUID": "b8535e85-e98e-4c92-a3d4-bb48f4e427a0",
                "skipped": false
              },
              {
                "title": "Should not give duplicate unit errors if the first attempt is in the past, and the second attempt is not two or more years into the future.",
                "fullTitle": "REDUCER: CourseStructure ACTION: VALIDATE_COURSE Should not give duplicate unit errors if the first attempt is in the past, and the second attempt is not two or more years into the future.",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: new Date().getFullYear() - 1,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, null]\n    }, {\n        code: \"S1-01\",\n        year: new Date().getFullYear() + 1,\n        units: [null, null, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "345abd18-f4d8-4395-bcd6-1ab5f824e8f5",
                "parentUUID": "b8535e85-e98e-4c92-a3d4-bb48f4e427a0",
                "skipped": false
              },
              {
                "title": "Should give a duplicate unit error if there are two same units in the same teaching period",
                "fullTitle": "REDUCER: CourseStructure ACTION: VALIDATE_COURSE Should give a duplicate unit error if there are two same units in the same teaching period",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2015,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }, {\n        code: \"S2-01\",\n        year: 2015,\n        units: [null, null, null, {\n            unitCode: \"GJQ2039\"\n        }]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2015,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }, {\n        code: \"S2-01\",\n        year: 2015,\n        units: [null, null, null, {\n            unitCode: \"GJQ2039\"\n        }]\n    }],\n    courseErrors: [{\n        message: \"ABCD1234 already exists in the same teaching period. Please remove this unit.\",\n        coordinates: [[0, 3]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7f9b732b-2d4b-4714-a1e5-f173a99680e2",
                "parentUUID": "b8535e85-e98e-4c92-a3d4-bb48f4e427a0",
                "skipped": false
              },
              {
                "title": "Should give a duplicate error if a duplicate unit is placed in a teaching period two years from now",
                "fullTitle": "REDUCER: CourseStructure ACTION: VALIDATE_COURSE Should give a duplicate error if a duplicate unit is placed in a teaching period two years from now",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var currentYear = new Date().getFullYear();\nvar stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: currentYear,\n        units: [{\n            unitCode: \"ABC1234\"\n        }, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 2,\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 2,\n        units: [null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: currentYear,\n        units: [{\n            unitCode: \"ABC1234\"\n        }, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 2,\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 2,\n        units: [null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan. Please plan as if you will pass all units.\",\n        coordinates: [[4, 1]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "804539b2-d5d2-49f0-8724-07a51da06995",
                "parentUUID": "b8535e85-e98e-4c92-a3d4-bb48f4e427a0",
                "skipped": false
              },
              {
                "title": "Should give a course error for a unit not being offered in the teaching period it is in",
                "fullTitle": "REDUCER: CourseStructure ACTION: VALIDATE_COURSE Should give a course error for a unit not being offered in the teaching period it is in",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: 2017,\n        units: [null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"First semester 2017 (Day)\"]\n            }]\n        }, null]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: 2017,\n        units: [null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"First semester 2017 (Day)\"]\n            }]\n        }, null]\n    }],\n    courseErrors: [{\n        message: \"ABC1234 is not offered in second semester.\",\n        coordinates: [[1, 2]]\n    }],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d3b7ca34-6791-42c1-be14-3300133b115d",
                "parentUUID": "b8535e85-e98e-4c92-a3d4-bb48f4e427a0",
                "skipped": false
              },
              {
                "title": "Should give a course error for a missing prereq",
                "fullTitle": "REDUCER: CourseStructure ACTION: VALIDATE_COURSE Should give a course error for a missing prereq",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"Must have passed an (I/W) unit in {DEF2345, QLS2029}\",\n                endDate: \"\"\n            }]\n        }]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"Must have passed an (I/W) unit in {DEF2345, QLS2029}\",\n                endDate: \"\"\n            }]\n        }]\n    }],\n    courseErrors: [{\n        message: \"You must complete DEF2345 or QLS2029 before you can do ABC1234.\",\n        coordinates: [[0, 3]]\n    }],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b565216f-5b91-4052-8944-2f1694cf9872",
                "parentUUID": "b8535e85-e98e-4c92-a3d4-bb48f4e427a0",
                "skipped": false
              },
              {
                "title": "Should correctly handle the Otherwise branch of FOR COURSE_CODE syntax",
                "fullTitle": "REDUCER: CourseStructure ACTION: VALIDATE_COURSE Should correctly handle the Otherwise branch of FOR COURSE_CODE syntax",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }, {\n        year: 2018,\n        code: \"WS-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"Winter semester 2018 (Day)\"]\n            }],\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {Q2001, Q2003} Do true Otherwise Must have passed 1 (I/W) units in {TEST1001}\",\n                endDate: \"\"\n            }]\n        }]\n    }, {\n        year: 2018,\n        code: \"S2-01\",\n        units: [null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }, {\n        year: 2018,\n        code: \"WS-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"Winter semester 2018 (Day)\"]\n            }],\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {Q2001, Q2003} Do true Otherwise Must have passed 1 (I/W) units in {TEST1001}\",\n                endDate: \"\"\n            }]\n        }]\n    }, {\n        year: 2018,\n        code: \"S2-01\",\n        units: [null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"You must complete TEST1001 before you can do ABC1234.\",\n        coordinates: [[1, 3]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "2877562e-ae8c-4468-8b06-b37d2897d19d",
                "parentUUID": "b8535e85-e98e-4c92-a3d4-bb48f4e427a0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 7,
            "totalPasses": 7,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 16
          },
          {
            "title": "ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS",
            "suites": [],
            "tests": [
              {
                "title": "Should leave invalidUnitSlotCoordinates empty if there are no invalid unit slots",
                "fullTitle": "REDUCER: CourseStructure ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS Should leave invalidUnitSlotCoordinates empty if there are no invalid unit slots",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2015,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: false\n};\nvar action = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: {\n        unitCode: \"TEST1001\",\n        unitName: \"Test unit\",\n        locationAndTime: [{\n            location: \"Caulfield\",\n            time: [\"First semester 2017 (Day)\"]\n        }]\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2015,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d367c16b-8865-482a-9fb7-9bf9ee27aee7",
                "parentUUID": "a0cb971b-2bab-4c20-b416-6549d814e364",
                "skipped": false
              },
              {
                "title": "Should highlight teaching periods that contains the same unit",
                "fullTitle": "REDUCER: CourseStructure ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS Should highlight teaching periods that contains the same unit",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var currentYear = new Date().getFullYear();\nvar stateBefore = {\n    teachingPeriods: [{\n        year: currentYear - 2,\n        code: \"FY-01\",\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        year: currentYear - 1,\n        code: \"FY-01\",\n        units: [null, null, {\n            unitCode: \"DEF2345\"\n        }, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: false\n};\nvar action = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: {\n        unitCode: \"ABC1234\",\n        locationAndTime: [{\n            location: \"Parkville\",\n            time: [\"Full year 2018 (Day)\"]\n        }]\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: currentYear - 2,\n        code: \"FY-01\",\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        year: currentYear - 1,\n        code: \"FY-01\",\n        units: [null, null, {\n            unitCode: \"DEF2345\"\n        }, null]\n    }],\n    invalidUnitSlotCoordinates: [[0, null]],\n    highlightingInvalidUnitSlots: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c92950aa-236d-4cc4-876b-bd538393167a",
                "parentUUID": "a0cb971b-2bab-4c20-b416-6549d814e364",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "a0cb971b-2bab-4c20-b416-6549d814e364",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should leave invalidUnitSlotCoordinates empty if there are no invalid unit slots",
                "fullTitle": "REDUCER: CourseStructure ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS Should leave invalidUnitSlotCoordinates empty if there are no invalid unit slots",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2015,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: false\n};\nvar action = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: {\n        unitCode: \"TEST1001\",\n        unitName: \"Test unit\",\n        locationAndTime: [{\n            location: \"Caulfield\",\n            time: [\"First semester 2017 (Day)\"]\n        }]\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2015,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d367c16b-8865-482a-9fb7-9bf9ee27aee7",
                "parentUUID": "a0cb971b-2bab-4c20-b416-6549d814e364",
                "skipped": false
              },
              {
                "title": "Should highlight teaching periods that contains the same unit",
                "fullTitle": "REDUCER: CourseStructure ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS Should highlight teaching periods that contains the same unit",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var currentYear = new Date().getFullYear();\nvar stateBefore = {\n    teachingPeriods: [{\n        year: currentYear - 2,\n        code: \"FY-01\",\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        year: currentYear - 1,\n        code: \"FY-01\",\n        units: [null, null, {\n            unitCode: \"DEF2345\"\n        }, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: false\n};\nvar action = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: {\n        unitCode: \"ABC1234\",\n        locationAndTime: [{\n            location: \"Parkville\",\n            time: [\"Full year 2018 (Day)\"]\n        }]\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: currentYear - 2,\n        code: \"FY-01\",\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        year: currentYear - 1,\n        code: \"FY-01\",\n        units: [null, null, {\n            unitCode: \"DEF2345\"\n        }, null]\n    }],\n    invalidUnitSlotCoordinates: [[0, null]],\n    highlightingInvalidUnitSlots: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c92950aa-236d-4cc4-876b-bd538393167a",
                "parentUUID": "a0cb971b-2bab-4c20-b416-6549d814e364",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "DEFAULT",
            "suites": [],
            "tests": [
              {
                "title": "should not change the state if it receives an unknown action",
                "fullTitle": "REDUCER: CourseStructure DEFAULT should not change the state if it receives an unknown action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "f262eb37-a47c-4f1d-b8cb-4557d4a8bb00",
                "parentUUID": "be9dc2ec-3f25-4ae1-ab47-8a62e89f3f5b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "be9dc2ec-3f25-4ae1-ab47-8a62e89f3f5b",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "should not change the state if it receives an unknown action",
                "fullTitle": "REDUCER: CourseStructure DEFAULT should not change the state if it receives an unknown action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "f262eb37-a47c-4f1d-b8cb-4557d4a8bb00",
                "parentUUID": "be9dc2ec-3f25-4ae1-ab47-8a62e89f3f5b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/reducers/CourseStructure.spec.js",
        "uuid": "a16dbf9c-9de8-4305-aa90-219076f4485a",
        "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "REDUCER: Notifications",
        "suites": [
          {
            "title": "ACTION: ADD_NOTIFICATION",
            "suites": [],
            "tests": [
              {
                "title": "should insert a notification from an empty list",
                "fullTitle": "REDUCER: Notifications ACTION: ADD_NOTIFICATION should insert a notification from an empty list",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: []\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "015375d5-5a46-4aec-b393-03737898a279",
                "parentUUID": "7d35afd1-c6cd-44d6-930f-070679a9d39d",
                "skipped": false
              },
              {
                "title": "should prepend a notification into an list of a few existing notifications.",
                "fullTitle": "REDUCER: Notifications ACTION: ADD_NOTIFICATION should prepend a notification into an list of a few existing notifications.",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b1aea3a7-b020-497c-8d30-f8db1640102b",
                "parentUUID": "7d35afd1-c6cd-44d6-930f-070679a9d39d",
                "skipped": false
              },
              {
                "title": "should replace a notification if it already exists with a specified ID",
                "fullTitle": "REDUCER: Notifications ACTION: ADD_NOTIFICATION should replace a notification if it already exists with a specified ID",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    message: \"New message goes over here\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"New message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f553a09f-49ea-493b-9768-cd69ae9c87b4",
                "parentUUID": "7d35afd1-c6cd-44d6-930f-070679a9d39d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Notifications.spec.js",
            "uuid": "7d35afd1-c6cd-44d6-930f-070679a9d39d",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Notifications.spec.js",
            "passes": [
              {
                "title": "should insert a notification from an empty list",
                "fullTitle": "REDUCER: Notifications ACTION: ADD_NOTIFICATION should insert a notification from an empty list",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: []\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "015375d5-5a46-4aec-b393-03737898a279",
                "parentUUID": "7d35afd1-c6cd-44d6-930f-070679a9d39d",
                "skipped": false
              },
              {
                "title": "should prepend a notification into an list of a few existing notifications.",
                "fullTitle": "REDUCER: Notifications ACTION: ADD_NOTIFICATION should prepend a notification into an list of a few existing notifications.",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b1aea3a7-b020-497c-8d30-f8db1640102b",
                "parentUUID": "7d35afd1-c6cd-44d6-930f-070679a9d39d",
                "skipped": false
              },
              {
                "title": "should replace a notification if it already exists with a specified ID",
                "fullTitle": "REDUCER: Notifications ACTION: ADD_NOTIFICATION should replace a notification if it already exists with a specified ID",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    message: \"New message goes over here\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"New message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f553a09f-49ea-493b-9768-cd69ae9c87b4",
                "parentUUID": "7d35afd1-c6cd-44d6-930f-070679a9d39d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          },
          {
            "title": "ACTION: REMOVE_NOTIFICATION",
            "suites": [],
            "tests": [
              {
                "title": "Should remove a notification given its ID",
                "fullTitle": "REDUCER: Notifications ACTION: REMOVE_NOTIFICATION Should remove a notification given its ID",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    id: \"CONNECTION_LOST\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "40393e3d-d38a-4039-b773-1ba92a483d9b",
                "parentUUID": "cae96494-ed1b-4ea6-a011-76175db8e25e",
                "skipped": false
              },
              {
                "title": "Should remove a notification given its index",
                "fullTitle": "REDUCER: Notifications ACTION: REMOVE_NOTIFICATION Should remove a notification given its index",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    index: 1\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "65abc6cf-b334-47c6-be71-c91bc4620d72",
                "parentUUID": "cae96494-ed1b-4ea6-a011-76175db8e25e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Notifications.spec.js",
            "uuid": "cae96494-ed1b-4ea6-a011-76175db8e25e",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Notifications.spec.js",
            "passes": [
              {
                "title": "Should remove a notification given its ID",
                "fullTitle": "REDUCER: Notifications ACTION: REMOVE_NOTIFICATION Should remove a notification given its ID",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    id: \"CONNECTION_LOST\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "40393e3d-d38a-4039-b773-1ba92a483d9b",
                "parentUUID": "cae96494-ed1b-4ea6-a011-76175db8e25e",
                "skipped": false
              },
              {
                "title": "Should remove a notification given its index",
                "fullTitle": "REDUCER: Notifications ACTION: REMOVE_NOTIFICATION Should remove a notification given its index",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    index: 1\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "65abc6cf-b334-47c6-be71-c91bc4620d72",
                "parentUUID": "cae96494-ed1b-4ea6-a011-76175db8e25e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "DEFAULT",
            "suites": [],
            "tests": [
              {
                "title": "Should not change state if it does not recognise an action",
                "fullTitle": "REDUCER: Notifications DEFAULT Should not change state if it does not recognise an action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Notifications2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "deaaae42-ff89-49ec-9a7e-5e6a528d8471",
                "parentUUID": "0503af5a-8a38-45fc-b872-ece0599ca25d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Notifications.spec.js",
            "uuid": "0503af5a-8a38-45fc-b872-ece0599ca25d",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Notifications.spec.js",
            "passes": [
              {
                "title": "Should not change state if it does not recognise an action",
                "fullTitle": "REDUCER: Notifications DEFAULT Should not change state if it does not recognise an action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Notifications2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "deaaae42-ff89-49ec-9a7e-5e6a528d8471",
                "parentUUID": "0503af5a-8a38-45fc-b872-ece0599ca25d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/reducers/Notifications.spec.js",
        "uuid": "f1e6f152-4100-454f-a5fe-d13b74c5de94",
        "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Notifications.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "REDUCER: UI",
        "suites": [
          {
            "title": "ACTION: SHOW_INSERT_TEACHING_PERIOD_UI",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly toggle the insert teaching period UI boolean",
                "fullTitle": "REDUCER: UI ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: true,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f24997d9-4909-4109-9d23-615ec7e13155",
                "parentUUID": "10f8b57f-6b07-4998-8d2d-24ac040d1464",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "10f8b57f-6b07-4998-8d2d-24ac040d1464",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly toggle the insert teaching period UI boolean",
                "fullTitle": "REDUCER: UI ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: true,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f24997d9-4909-4109-9d23-615ec7e13155",
                "parentUUID": "10f8b57f-6b07-4998-8d2d-24ac040d1464",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: HIDE_INSERT_TEACHING_PERIOD_UI",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly toggle the insert teaching period UI boolean",
                "fullTitle": "REDUCER: UI ACTION: HIDE_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: true,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "98287053-e0df-4788-90d9-96c59ee709be",
                "parentUUID": "feb664ce-bd4d-49d3-b455-224d45d15b5d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "feb664ce-bd4d-49d3-b455-224d45d15b5d",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly toggle the insert teaching period UI boolean",
                "fullTitle": "REDUCER: UI ACTION: HIDE_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: true,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "98287053-e0df-4788-90d9-96c59ee709be",
                "parentUUID": "feb664ce-bd4d-49d3-b455-224d45d15b5d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: ADDING_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set the add unit UI boolean to true and correctly hide the sidebar when a unit is being added",
                "fullTitle": "REDUCER: UI ACTION: ADDING_UNIT Should correctly set the add unit UI boolean to true and correctly hide the sidebar when a unit is being added",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b27d80c9-6cda-44d8-9d62-97ea7abc9d6d",
                "parentUUID": "b905b8d9-bce7-4129-ba26-fc21ba409be1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "b905b8d9-bce7-4129-ba26-fc21ba409be1",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly set the add unit UI boolean to true and correctly hide the sidebar when a unit is being added",
                "fullTitle": "REDUCER: UI ACTION: ADDING_UNIT Should correctly set the add unit UI boolean to true and correctly hide the sidebar when a unit is being added",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b27d80c9-6cda-44d8-9d62-97ea7abc9d6d",
                "parentUUID": "b905b8d9-bce7-4129-ba26-fc21ba409be1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: ADD_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set the add unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: ADD_UNIT Should correctly set the add unit UI boolean to false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true\n};\nvar action = {\n    type: \"ADD_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a9b9d47c-a87a-4e56-b684-b6c198c0f9af",
                "parentUUID": "9f380ce7-e29f-492f-932f-5b01b35132b1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "9f380ce7-e29f-492f-932f-5b01b35132b1",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly set the add unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: ADD_UNIT Should correctly set the add unit UI boolean to false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true\n};\nvar action = {\n    type: \"ADD_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a9b9d47c-a87a-4e56-b684-b6c198c0f9af",
                "parentUUID": "9f380ce7-e29f-492f-932f-5b01b35132b1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: CANCEL_ADDING_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set the add unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: CANCEL_ADDING_UNIT Should correctly set the add unit UI boolean to false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true\n};\nvar action = {\n    type: \"CANCEL_ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a8dd42aa-f3a6-4290-bf42-ba8f23239584",
                "parentUUID": "a2d23069-0b8d-42bc-9e8c-577616ebcfd8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "a2d23069-0b8d-42bc-9e8c-577616ebcfd8",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly set the add unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: CANCEL_ADDING_UNIT Should correctly set the add unit UI boolean to false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true\n};\nvar action = {\n    type: \"CANCEL_ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a8dd42aa-f3a6-4290-bf42-ba8f23239584",
                "parentUUID": "a2d23069-0b8d-42bc-9e8c-577616ebcfd8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: MOVING_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set the move unit UI boolean to true",
                "fullTitle": "REDUCER: UI ACTION: MOVING_UNIT Should correctly set the move unit UI boolean to true",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"MOVING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a665df3a-03fa-4ecc-81c6-3188dafadcc7",
                "parentUUID": "06936baa-f237-4676-a6d3-0e93746808e9",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "06936baa-f237-4676-a6d3-0e93746808e9",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly set the move unit UI boolean to true",
                "fullTitle": "REDUCER: UI ACTION: MOVING_UNIT Should correctly set the move unit UI boolean to true",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"MOVING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a665df3a-03fa-4ecc-81c6-3188dafadcc7",
                "parentUUID": "06936baa-f237-4676-a6d3-0e93746808e9",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: MOVE_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set the move unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: MOVE_UNIT Should correctly set the move unit UI boolean to false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"MOVE_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e1c65a89-2c31-4e8e-b3db-e175527c5eb8",
                "parentUUID": "9f37509e-a247-40c1-b203-c0e58d4d96ac",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "9f37509e-a247-40c1-b203-c0e58d4d96ac",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly set the move unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: MOVE_UNIT Should correctly set the move unit UI boolean to false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"MOVE_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e1c65a89-2c31-4e8e-b3db-e175527c5eb8",
                "parentUUID": "9f37509e-a247-40c1-b203-c0e58d4d96ac",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: SWAP_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set the move unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: SWAP_UNIT Should correctly set the move unit UI boolean to false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"SWAP_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a0e79d44-b7b2-46da-b99d-497494cba3a9",
                "parentUUID": "c417cbbc-f505-41d2-b139-fa5440e6f14c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "c417cbbc-f505-41d2-b139-fa5440e6f14c",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly set the move unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: SWAP_UNIT Should correctly set the move unit UI boolean to false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"SWAP_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a0e79d44-b7b2-46da-b99d-497494cba3a9",
                "parentUUID": "c417cbbc-f505-41d2-b139-fa5440e6f14c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: CANCEL_MOVING_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set the move unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: CANCEL_MOVING_UNIT Should correctly set the move unit UI boolean to false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "6303a968-55fa-45bd-821a-7e5a1421507a",
                "parentUUID": "9a32a21e-2581-45cd-8183-02c7f0a3e923",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "9a32a21e-2581-45cd-8183-02c7f0a3e923",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly set the move unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: CANCEL_MOVING_UNIT Should correctly set the move unit UI boolean to false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "6303a968-55fa-45bd-821a-7e5a1421507a",
                "parentUUID": "9a32a21e-2581-45cd-8183-02c7f0a3e923",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: SET_COURSE_READ_ONLY",
            "suites": [],
            "tests": [
              {
                "title": "Should set the course to read only correctly",
                "fullTitle": "REDUCER: UI ACTION: SET_COURSE_READ_ONLY Should set the course to read only correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: false\n};\nvar action = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d24793b9-108c-4a71-8435-018f20d5c67c",
                "parentUUID": "e2d1d000-744e-4824-8226-b78e0270689c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "e2d1d000-744e-4824-8226-b78e0270689c",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should set the course to read only correctly",
                "fullTitle": "REDUCER: UI ACTION: SET_COURSE_READ_ONLY Should set the course to read only correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: false\n};\nvar action = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d24793b9-108c-4a71-8435-018f20d5c67c",
                "parentUUID": "e2d1d000-744e-4824-8226-b78e0270689c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: SET_COURSE_READ_AND_WRITE",
            "suites": [],
            "tests": [
              {
                "title": "Should set the course to allow edits correctly",
                "fullTitle": "REDUCER: UI ACTION: SET_COURSE_READ_AND_WRITE Should set the course to allow edits correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: true\n};\nvar action = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b9d82d36-f26b-440b-89aa-676164dc5dd5",
                "parentUUID": "6990c4ba-bb99-495b-b753-d67f54b246dc",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "6990c4ba-bb99-495b-b753-d67f54b246dc",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should set the course to allow edits correctly",
                "fullTitle": "REDUCER: UI ACTION: SET_COURSE_READ_AND_WRITE Should set the course to allow edits correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: true\n};\nvar action = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b9d82d36-f26b-440b-89aa-676164dc5dd5",
                "parentUUID": "6990c4ba-bb99-495b-b753-d67f54b246dc",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly toggle the confirm delete teaching period modal UI to show",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to show",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "4f7ccaa8-e487-4af3-9ff8-983ab4ff6eed",
                "parentUUID": "a0b24409-73de-472f-93fc-7fd00d5cb138",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "a0b24409-73de-472f-93fc-7fd00d5cb138",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly toggle the confirm delete teaching period modal UI to show",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to show",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "4f7ccaa8-e487-4af3-9ff8-983ab4ff6eed",
                "parentUUID": "a0b24409-73de-472f-93fc-7fd00d5cb138",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly toggle the confirm delete teaching period modal UI to hide",
                "fullTitle": "REDUCER: UI ACTION: HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to hide",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "2073c4c8-5832-464b-a885-bd3f15142f62",
                "parentUUID": "3085e266-3f31-4574-a25d-87858bcf62fc",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "3085e266-3f31-4574-a25d-87858bcf62fc",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly toggle the confirm delete teaching period modal UI to hide",
                "fullTitle": "REDUCER: UI ACTION: HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to hide",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "2073c4c8-5832-464b-a885-bd3f15142f62",
                "parentUUID": "3085e266-3f31-4574-a25d-87858bcf62fc",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly toggle the confirm decrease study load modal UI to show",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to show",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "71c62957-8861-451d-a46a-d5fdad4eb206",
                "parentUUID": "dd5bd440-2331-4d3a-9635-c807c783c041",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "dd5bd440-2331-4d3a-9635-c807c783c041",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly toggle the confirm decrease study load modal UI to show",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to show",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "71c62957-8861-451d-a46a-d5fdad4eb206",
                "parentUUID": "dd5bd440-2331-4d3a-9635-c807c783c041",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly toggle the confirm decrease study load modal UI to hide",
                "fullTitle": "REDUCER: UI ACTION: HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to hide",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b476b514-1e94-425e-bd9b-ded2780d8689",
                "parentUUID": "39c6aee8-e099-4450-bd9f-64d521c7c976",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "39c6aee8-e099-4450-bd9f-64d521c7c976",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly toggle the confirm decrease study load modal UI to hide",
                "fullTitle": "REDUCER: UI ACTION: HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to hide",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b476b514-1e94-425e-bd9b-ded2780d8689",
                "parentUUID": "39c6aee8-e099-4450-bd9f-64d521c7c976",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: SHOW_CUSTOM_UNIT_MODAL",
            "suites": [],
            "tests": [
              {
                "title": "Should set show flag for custom unit modal to be true",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be true",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "78510545-c2ee-449c-8ac4-bc9a65cc7c53",
                "parentUUID": "942b76a2-2ef7-41ce-bfa5-d0f7a49b51ab",
                "skipped": false
              },
              {
                "title": "Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CUSTOM_UNIT_MODAL Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"ABC1234\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: \"ABC1234\",\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5f7e3ac1-9f35-4ac6-a11d-2331a8f1fb87",
                "parentUUID": "942b76a2-2ef7-41ce-bfa5-d0f7a49b51ab",
                "skipped": false
              },
              {
                "title": "Should set unit code and position if it exists on top of setting show flag for custom unit modal to be true",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CUSTOM_UNIT_MODAL Should set unit code and position if it exists on top of setting show flag for custom unit modal to be true",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"ABC1234\",\n    tpIndex: 0,\n    unitIndex: 2\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: \"ABC1234\",\n    customTpIndex: 0,\n    customUnitIndex: 2\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "8215e458-ee28-40da-a49e-eb1af4b7be84",
                "parentUUID": "942b76a2-2ef7-41ce-bfa5-d0f7a49b51ab",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "942b76a2-2ef7-41ce-bfa5-d0f7a49b51ab",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should set show flag for custom unit modal to be true",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be true",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "78510545-c2ee-449c-8ac4-bc9a65cc7c53",
                "parentUUID": "942b76a2-2ef7-41ce-bfa5-d0f7a49b51ab",
                "skipped": false
              },
              {
                "title": "Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CUSTOM_UNIT_MODAL Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"ABC1234\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: \"ABC1234\",\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5f7e3ac1-9f35-4ac6-a11d-2331a8f1fb87",
                "parentUUID": "942b76a2-2ef7-41ce-bfa5-d0f7a49b51ab",
                "skipped": false
              },
              {
                "title": "Should set unit code and position if it exists on top of setting show flag for custom unit modal to be true",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CUSTOM_UNIT_MODAL Should set unit code and position if it exists on top of setting show flag for custom unit modal to be true",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"ABC1234\",\n    tpIndex: 0,\n    unitIndex: 2\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: \"ABC1234\",\n    customTpIndex: 0,\n    customUnitIndex: 2\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "8215e458-ee28-40da-a49e-eb1af4b7be84",
                "parentUUID": "942b76a2-2ef7-41ce-bfa5-d0f7a49b51ab",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: HIDE_CUSTOM_UNIT_MODAL",
            "suites": [],
            "tests": [
              {
                "title": "Should set show flag for custom unit modal to be false",
                "fullTitle": "REDUCER: UI ACTION: HIDE_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be false",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: true\n};\nvar action = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d771e637-7215-42a8-8ae9-0c7b8125502c",
                "parentUUID": "bc29205d-70e9-430a-8146-9ef5551215b2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "bc29205d-70e9-430a-8146-9ef5551215b2",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should set show flag for custom unit modal to be false",
                "fullTitle": "REDUCER: UI ACTION: HIDE_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be false",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: true\n};\nvar action = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d771e637-7215-42a8-8ae9-0c7b8125502c",
                "parentUUID": "bc29205d-70e9-430a-8146-9ef5551215b2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: SHOW_SIDEBAR",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show the sidebar when called",
                "fullTitle": "REDUCER: UI ACTION: SHOW_SIDEBAR Should correctly show the sidebar when called",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: false\n};\nvar action = {\n    type: \"SHOW_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "3f74b8ef-dfc9-4237-91a8-8719dccab796",
                "parentUUID": "dea2bdfd-dbdd-4149-bffd-5eba997fbe4e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "dea2bdfd-dbdd-4149-bffd-5eba997fbe4e",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly show the sidebar when called",
                "fullTitle": "REDUCER: UI ACTION: SHOW_SIDEBAR Should correctly show the sidebar when called",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: false\n};\nvar action = {\n    type: \"SHOW_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "3f74b8ef-dfc9-4237-91a8-8719dccab796",
                "parentUUID": "dea2bdfd-dbdd-4149-bffd-5eba997fbe4e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: HIDE_SIDEBAR",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly hide the sidebar when called",
                "fullTitle": "REDUCER: UI ACTION: HIDE_SIDEBAR Should correctly hide the sidebar when called",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"HIDE_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "00a2ed11-228d-4a27-b597-298eae09bda8",
                "parentUUID": "7e197f1f-bceb-4b6d-a157-fc9c60dffeeb",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "7e197f1f-bceb-4b6d-a157-fc9c60dffeeb",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly hide the sidebar when called",
                "fullTitle": "REDUCER: UI ACTION: HIDE_SIDEBAR Should correctly hide the sidebar when called",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"HIDE_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "00a2ed11-228d-4a27-b597-298eae09bda8",
                "parentUUID": "7e197f1f-bceb-4b6d-a157-fc9c60dffeeb",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "DEFAULT",
            "suites": [],
            "tests": [
              {
                "title": "Should not change state if it does not recognise the action",
                "fullTitle": "REDUCER: UI DEFAULT Should not change state if it does not recognise the action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_UI2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "f8856bb6-3546-470c-abcc-68d04d1e5ef2",
                "parentUUID": "9e747afe-c9b8-4bde-9461-ed4ff9bfb759",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "9e747afe-c9b8-4bde-9461-ed4ff9bfb759",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should not change state if it does not recognise the action",
                "fullTitle": "REDUCER: UI DEFAULT Should not change state if it does not recognise the action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_UI2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "f8856bb6-3546-470c-abcc-68d04d1e5ef2",
                "parentUUID": "9e747afe-c9b8-4bde-9461-ed4ff9bfb759",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/reducers/UI.spec.js",
        "uuid": "432c5d57-d42a-427e-a378-c5c6de282269",
        "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "UTILS: CostCalc",
        "suites": [],
        "tests": [
          {
            "title": "Should return a non-negative number",
            "fullTitle": "UTILS: CostCalc Should return a non-negative number",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_CostCalc2.default.calculateCost(0, 0)).to.be.gte(0);\nexpect(_CostCalc2.default.calculateCost(2, 6)).to.be.gte(0);",
            "err": {},
            "isRoot": false,
            "uuid": "e0e3255e-7fc6-4448-985a-e000f55f9350",
            "parentUUID": "81feca0f-c77d-47a9-8f13-fde7ba6d17d7",
            "skipped": false
          },
          {
            "title": "Should multiply SCA band cost with credit points",
            "fullTitle": "UTILS: CostCalc Should multiply SCA band cost with credit points",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var scaBand = 3;\nvar creditPoints = 6;\nvar scaBandCost = _CostCalc2.default.calculateCost(scaBand, 1);\nexpect(_CostCalc2.default.calculateCost(scaBand, creditPoints)).to.equal(scaBandCost * creditPoints);",
            "err": {},
            "isRoot": false,
            "uuid": "b1b5f1ed-d12f-40f2-9b66-0f257d13dd34",
            "parentUUID": "81feca0f-c77d-47a9-8f13-fde7ba6d17d7",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/utils/CostCalc.spec.js",
        "uuid": "81feca0f-c77d-47a9-8f13-fde7ba6d17d7",
        "fullFile": "/home/staff01/Documents/monPlanR/test/utils/CostCalc.spec.js",
        "passes": [
          {
            "title": "Should return a non-negative number",
            "fullTitle": "UTILS: CostCalc Should return a non-negative number",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_CostCalc2.default.calculateCost(0, 0)).to.be.gte(0);\nexpect(_CostCalc2.default.calculateCost(2, 6)).to.be.gte(0);",
            "err": {},
            "isRoot": false,
            "uuid": "e0e3255e-7fc6-4448-985a-e000f55f9350",
            "parentUUID": "81feca0f-c77d-47a9-8f13-fde7ba6d17d7",
            "skipped": false
          },
          {
            "title": "Should multiply SCA band cost with credit points",
            "fullTitle": "UTILS: CostCalc Should multiply SCA band cost with credit points",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var scaBand = 3;\nvar creditPoints = 6;\nvar scaBandCost = _CostCalc2.default.calculateCost(scaBand, 1);\nexpect(_CostCalc2.default.calculateCost(scaBand, creditPoints)).to.equal(scaBandCost * creditPoints);",
            "err": {},
            "isRoot": false,
            "uuid": "b1b5f1ed-d12f-40f2-9b66-0f257d13dd34",
            "parentUUID": "81feca0f-c77d-47a9-8f13-fde7ba6d17d7",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 2,
        "totalPasses": 2,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "UTILS: NextSemesterString",
        "suites": [
          {
            "title": "nextSemester",
            "suites": [],
            "tests": [
              {
                "title": "Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([], 2011, [])).to.deep.equal({\n    index: 0,\n    year: 2011,\n    code: \"S1-01\",\n    teachingPeriodData: []\n});",
                "err": {},
                "isRoot": false,
                "uuid": "c2c203e6-ea9e-4aab-a12a-e54a7f40d68c",
                "parentUUID": "fc4b11ff-e15d-4ce1-8cd2-efcef1a4db5e",
                "skipped": false
              },
              {
                "title": "Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([], 2029, sortedTeachingPeriodData)).to.deep.equal({\n    index: 0,\n    year: 2029,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
                "err": {},
                "isRoot": false,
                "uuid": "53d69522-833a-470b-a7ff-c1adccca1fb5",
                "parentUUID": "fc4b11ff-e15d-4ce1-8cd2-efcef1a4db5e",
                "skipped": false
              },
              {
                "title": "Should return semester two if the last teaching period is in semester one, with the same year",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should return semester two if the last teaching period is in semester one, with the same year",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2025,\n    code: \"S1-01\"\n}, {\n    year: 2025,\n    code: \"S2-01\"\n}, {\n    year: 2026,\n    code: \"S1-01\"\n}, {\n    year: 2026,\n    code: \"S2-01\"\n}, {\n    year: 2027,\n    code: \"S1-01\"\n}], 2023, sortedTeachingPeriodData)).to.deep.equal({\n    index: 5,\n    year: 2027,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
                "err": {},
                "isRoot": false,
                "uuid": "53165e39-8320-4afa-ba78-d6f09abbc0fd",
                "parentUUID": "fc4b11ff-e15d-4ce1-8cd2-efcef1a4db5e",
                "skipped": false
              },
              {
                "title": "Should return semester one next year if the last teaching period is in semester two",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should return semester one next year if the last teaching period is in semester two",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2015,\n    code: \"FY-01\"\n}, {\n    year: 2017,\n    code: \"S2-01\"\n}], 2015, sortedTeachingPeriodData)).to.deep.equal({\n    index: 2,\n    year: 2018,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
                "err": {},
                "isRoot": false,
                "uuid": "f0ca5044-0a9e-46f8-9d62-1c2404c553d4",
                "parentUUID": "fc4b11ff-e15d-4ce1-8cd2-efcef1a4db5e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/utils/NextSemesterString.spec.js",
            "uuid": "fc4b11ff-e15d-4ce1-8cd2-efcef1a4db5e",
            "fullFile": "/home/staff01/Documents/monPlanR/test/utils/NextSemesterString.spec.js",
            "passes": [
              {
                "title": "Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([], 2011, [])).to.deep.equal({\n    index: 0,\n    year: 2011,\n    code: \"S1-01\",\n    teachingPeriodData: []\n});",
                "err": {},
                "isRoot": false,
                "uuid": "c2c203e6-ea9e-4aab-a12a-e54a7f40d68c",
                "parentUUID": "fc4b11ff-e15d-4ce1-8cd2-efcef1a4db5e",
                "skipped": false
              },
              {
                "title": "Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([], 2029, sortedTeachingPeriodData)).to.deep.equal({\n    index: 0,\n    year: 2029,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
                "err": {},
                "isRoot": false,
                "uuid": "53d69522-833a-470b-a7ff-c1adccca1fb5",
                "parentUUID": "fc4b11ff-e15d-4ce1-8cd2-efcef1a4db5e",
                "skipped": false
              },
              {
                "title": "Should return semester two if the last teaching period is in semester one, with the same year",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should return semester two if the last teaching period is in semester one, with the same year",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2025,\n    code: \"S1-01\"\n}, {\n    year: 2025,\n    code: \"S2-01\"\n}, {\n    year: 2026,\n    code: \"S1-01\"\n}, {\n    year: 2026,\n    code: \"S2-01\"\n}, {\n    year: 2027,\n    code: \"S1-01\"\n}], 2023, sortedTeachingPeriodData)).to.deep.equal({\n    index: 5,\n    year: 2027,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
                "err": {},
                "isRoot": false,
                "uuid": "53165e39-8320-4afa-ba78-d6f09abbc0fd",
                "parentUUID": "fc4b11ff-e15d-4ce1-8cd2-efcef1a4db5e",
                "skipped": false
              },
              {
                "title": "Should return semester one next year if the last teaching period is in semester two",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should return semester one next year if the last teaching period is in semester two",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2015,\n    code: \"FY-01\"\n}, {\n    year: 2017,\n    code: \"S2-01\"\n}], 2015, sortedTeachingPeriodData)).to.deep.equal({\n    index: 2,\n    year: 2018,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
                "err": {},
                "isRoot": false,
                "uuid": "f0ca5044-0a9e-46f8-9d62-1c2404c553d4",
                "parentUUID": "fc4b11ff-e15d-4ce1-8cd2-efcef1a4db5e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "getSemesterString",
            "suites": [],
            "tests": [
              {
                "title": "Should render a semester string",
                "fullTitle": "UTILS: NextSemesterString getSemesterString Should render a semester string",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2019,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n})).to.equal(\"Semester 2, 2019\");",
                "err": {},
                "isRoot": false,
                "uuid": "12d90013-f3d7-4492-9bc3-1a322cb7c7b5",
                "parentUUID": "01ccef8b-8c81-4973-bc21-5a59e2a49190",
                "skipped": false
              },
              {
                "title": "Should revert back to semester codes if teachingPeriodData is not available",
                "fullTitle": "UTILS: NextSemesterString getSemesterString Should revert back to semester codes if teachingPeriodData is not available",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2015,\n    code: \"S1-01\"\n})).to.equal(\"S1-01, 2015\");",
                "err": {},
                "isRoot": false,
                "uuid": "b860c275-e291-4a2a-afd0-f51bf0817301",
                "parentUUID": "01ccef8b-8c81-4973-bc21-5a59e2a49190",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/utils/NextSemesterString.spec.js",
            "uuid": "01ccef8b-8c81-4973-bc21-5a59e2a49190",
            "fullFile": "/home/staff01/Documents/monPlanR/test/utils/NextSemesterString.spec.js",
            "passes": [
              {
                "title": "Should render a semester string",
                "fullTitle": "UTILS: NextSemesterString getSemesterString Should render a semester string",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2019,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n})).to.equal(\"Semester 2, 2019\");",
                "err": {},
                "isRoot": false,
                "uuid": "12d90013-f3d7-4492-9bc3-1a322cb7c7b5",
                "parentUUID": "01ccef8b-8c81-4973-bc21-5a59e2a49190",
                "skipped": false
              },
              {
                "title": "Should revert back to semester codes if teachingPeriodData is not available",
                "fullTitle": "UTILS: NextSemesterString getSemesterString Should revert back to semester codes if teachingPeriodData is not available",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2015,\n    code: \"S1-01\"\n})).to.equal(\"S1-01, 2015\");",
                "err": {},
                "isRoot": false,
                "uuid": "b860c275-e291-4a2a-afd0-f51bf0817301",
                "parentUUID": "01ccef8b-8c81-4973-bc21-5a59e2a49190",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/utils/NextSemesterString.spec.js",
        "uuid": "262496fa-6520-445c-af79-693b8bf2d3ed",
        "fullFile": "/home/staff01/Documents/monPlanR/test/utils/NextSemesterString.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "UTILS: ShowYear",
        "suites": [],
        "tests": [
          {
            "title": "Should return the right year based off current month",
            "fullTitle": "UTILS: ShowYear Should return the right year based off current month",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "if (new Date().getMonth() + 1 >= 11) {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear() + 1);\n} else {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear());\n}",
            "err": {},
            "isRoot": false,
            "uuid": "4c4e4cb1-3c7f-4e71-9318-106581c5d412",
            "parentUUID": "9f98491a-0100-401e-8d48-47678c8737d8",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/utils/ShowYear.spec.js",
        "uuid": "9f98491a-0100-401e-8d48-47678c8737d8",
        "fullFile": "/home/staff01/Documents/monPlanR/test/utils/ShowYear.spec.js",
        "passes": [
          {
            "title": "Should return the right year based off current month",
            "fullTitle": "UTILS: ShowYear Should return the right year based off current month",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "if (new Date().getMonth() + 1 >= 11) {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear() + 1);\n} else {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear());\n}",
            "err": {},
            "isRoot": false,
            "uuid": "4c4e4cb1-3c7f-4e71-9318-106581c5d412",
            "parentUUID": "9f98491a-0100-401e-8d48-47678c8737d8",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 1
      },
      {
        "title": "UTILS: YearCalc",
        "suites": [],
        "tests": [
          {
            "title": "Should contain the same year as it was specified",
            "fullTitle": "UTILS: YearCalc Should contain the same year as it was specified",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getStartYearVals(2016).find(function (year) {\n    return year.value === 2016;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2017).find(function (year) {\n    return year.value === 2017;\n})).to.be.ok;",
            "err": {},
            "isRoot": false,
            "uuid": "aa49a0e3-3e8a-4d8e-8dec-065a3de02e51",
            "parentUUID": "516c8a42-b876-45af-ae77-d8e5e6f49181",
            "skipped": false
          },
          {
            "title": "Should contain a year that is ten years from now",
            "fullTitle": "UTILS: YearCalc Should contain a year that is ten years from now",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getStartYearVals(2019).find(function (year) {\n    return year.value === 2029;\n})).to.be.ok;\nexpect(_YearCalc2.default.getStartYearVals(2012).find(function (year) {\n    return year.value === 2002;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2028;\n})).to.be.ok;",
            "err": {},
            "isRoot": false,
            "uuid": "9c521a67-edb1-4e80-8083-467ed0d6125c",
            "parentUUID": "516c8a42-b876-45af-ae77-d8e5e6f49181",
            "skipped": false
          },
          {
            "title": "Should not contain any past year when computing end years",
            "fullTitle": "UTILS: YearCalc Should not contain any past year when computing end years",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2017;\n})).to.be.not.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2008;\n})).to.be.not.ok;",
            "err": {},
            "isRoot": false,
            "uuid": "c88dbe63-6f62-45a8-82ea-17b525975d1c",
            "parentUUID": "516c8a42-b876-45af-ae77-d8e5e6f49181",
            "skipped": false
          },
          {
            "title": "Should have starting years go in decreasing order from one year ahead to the minimum",
            "fullTitle": "UTILS: YearCalc Should have starting years go in decreasing order from one year ahead to the minimum",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getStartYearVals(2019).slice(0, 12)).to.deep.equal([{\n    text: \"2020\",\n    value: 2020\n}, {\n    text: \"2019\",\n    value: 2019\n}, {\n    text: \"2018\",\n    value: 2018\n}, {\n    text: \"2017\",\n    value: 2017\n}, {\n    text: \"2016\",\n    value: 2016\n}, {\n    text: \"2015\",\n    value: 2015\n}, {\n    text: \"2014\",\n    value: 2014\n}, {\n    text: \"2013\",\n    value: 2013\n}, {\n    text: \"2012\",\n    value: 2012\n}, {\n    text: \"2011\",\n    value: 2011\n}, {\n    text: \"2010\",\n    value: 2010\n}, {\n    text: \"2009\",\n    value: 2009\n}]);",
            "err": {},
            "isRoot": false,
            "uuid": "12c3eb28-bf88-41c5-b387-5dfd73435cf0",
            "parentUUID": "516c8a42-b876-45af-ae77-d8e5e6f49181",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/utils/YearCalc.spec.js",
        "uuid": "516c8a42-b876-45af-ae77-d8e5e6f49181",
        "fullFile": "/home/staff01/Documents/monPlanR/test/utils/YearCalc.spec.js",
        "passes": [
          {
            "title": "Should contain the same year as it was specified",
            "fullTitle": "UTILS: YearCalc Should contain the same year as it was specified",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getStartYearVals(2016).find(function (year) {\n    return year.value === 2016;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2017).find(function (year) {\n    return year.value === 2017;\n})).to.be.ok;",
            "err": {},
            "isRoot": false,
            "uuid": "aa49a0e3-3e8a-4d8e-8dec-065a3de02e51",
            "parentUUID": "516c8a42-b876-45af-ae77-d8e5e6f49181",
            "skipped": false
          },
          {
            "title": "Should contain a year that is ten years from now",
            "fullTitle": "UTILS: YearCalc Should contain a year that is ten years from now",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getStartYearVals(2019).find(function (year) {\n    return year.value === 2029;\n})).to.be.ok;\nexpect(_YearCalc2.default.getStartYearVals(2012).find(function (year) {\n    return year.value === 2002;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2028;\n})).to.be.ok;",
            "err": {},
            "isRoot": false,
            "uuid": "9c521a67-edb1-4e80-8083-467ed0d6125c",
            "parentUUID": "516c8a42-b876-45af-ae77-d8e5e6f49181",
            "skipped": false
          },
          {
            "title": "Should not contain any past year when computing end years",
            "fullTitle": "UTILS: YearCalc Should not contain any past year when computing end years",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2017;\n})).to.be.not.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2008;\n})).to.be.not.ok;",
            "err": {},
            "isRoot": false,
            "uuid": "c88dbe63-6f62-45a8-82ea-17b525975d1c",
            "parentUUID": "516c8a42-b876-45af-ae77-d8e5e6f49181",
            "skipped": false
          },
          {
            "title": "Should have starting years go in decreasing order from one year ahead to the minimum",
            "fullTitle": "UTILS: YearCalc Should have starting years go in decreasing order from one year ahead to the minimum",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getStartYearVals(2019).slice(0, 12)).to.deep.equal([{\n    text: \"2020\",\n    value: 2020\n}, {\n    text: \"2019\",\n    value: 2019\n}, {\n    text: \"2018\",\n    value: 2018\n}, {\n    text: \"2017\",\n    value: 2017\n}, {\n    text: \"2016\",\n    value: 2016\n}, {\n    text: \"2015\",\n    value: 2015\n}, {\n    text: \"2014\",\n    value: 2014\n}, {\n    text: \"2013\",\n    value: 2013\n}, {\n    text: \"2012\",\n    value: 2012\n}, {\n    text: \"2011\",\n    value: 2011\n}, {\n    text: \"2010\",\n    value: 2010\n}, {\n    text: \"2009\",\n    value: 2009\n}]);",
            "err": {},
            "isRoot": false,
            "uuid": "12c3eb28-bf88-41c5-b387-5dfd73435cf0",
            "parentUUID": "516c8a42-b876-45af-ae77-d8e5e6f49181",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 4,
        "totalPasses": 4,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "6577c517-1919-416d-93f9-e63c50082ade",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "Should create an action to increment credit points counter",
      "fullTitle": "AC: incrementCreditPoints Should create an action to increment credit points counter",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 5\n};\n(0, _expect2.default)(actions.incrementCreditPoints(5)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "c1d305e5-0eb5-4e91-bcb5-19bdb91265a5",
      "parentUUID": "2efcbc05-8d2f-44a9-bf92-270ee59edeb5",
      "skipped": false
    },
    {
      "title": "Should create an action to decrement credit points counter",
      "fullTitle": "AC: decrementCreditPoints Should create an action to decrement credit points counter",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 5\n};\n(0, _expect2.default)(actions.decrementCreditPoints(5)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "e3e58b1a-a1bc-493a-9c1e-90fc635bec6d",
      "parentUUID": "c401688b-b055-486c-b9bb-68368ab39293",
      "skipped": false
    },
    {
      "title": "Should create an action to increment cost counter",
      "fullTitle": "AC: incrementCost Should create an action to increment cost counter",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"INCREMENT_COST\",\n    value: 5\n};\n(0, _expect2.default)(actions.incrementCost(5)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "fe3acbd1-bd7a-44df-86a1-3b880099c38b",
      "parentUUID": "63c175f5-4994-45b0-9457-7b478651db45",
      "skipped": false
    },
    {
      "title": "Should create an action to decrement cost counter",
      "fullTitle": "AC: decrementCosts Should create an action to decrement cost counter",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"DECREMENT_COST\",\n    value: 5\n};\n(0, _expect2.default)(actions.decrementCost(5)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "70c3f0af-5951-40e9-b3a2-aa92d89df6e9",
      "parentUUID": "ce03ad4c-dabf-4704-ab74-bf1387801084",
      "skipped": false
    },
    {
      "title": "Should create an action to insert a teaching period",
      "fullTitle": "AC: insertTeachingPeriod Should create an action to insert a teaching period",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{\n    type: \"INSERT_TEACHING_PERIOD\",\n    index: 1,\n    year: 2016,\n    code: \"tpCode\"\n}, {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n}];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.insertTeachingPeriod(1, 2016, \"tpCode\"));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "0af32da9-a89a-43a5-bfb1-8bd9e9338d6a",
      "parentUUID": "1fb8d8f6-19b5-4468-b19c-d1dc5da6cf1e",
      "skipped": false
    },
    {
      "title": "Should create an action to remove a teaching period",
      "fullTitle": "AC: removeTeachingPeriod Should create an action to remove a teaching period",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1,\n    units: [\"unit1\", \"unit2\", \"unit3\", null]\n}, {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n}];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.removeTeachingPeriod(1, [\"unit1\", \"unit2\", \"unit3\", null]));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "f1f66ad2-f0bd-4bad-b143-11ec66a10162",
      "parentUUID": "a3f99806-42e9-4a35-bbf5-a169de4ffed2",
      "skipped": false
    },
    {
      "title": "Should create an action to increase the study load",
      "fullTitle": "AC: increaseStudyLoad Should create an action to increase the study load",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\n(0, _expect2.default)(actions.increaseStudyLoad()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "6c20ed4d-1ec0-46a2-9cb7-f2fe8edf895b",
      "parentUUID": "0b6e961b-8228-4954-a605-221228ed677d",
      "skipped": false
    },
    {
      "title": "Should create an action to increase the study load with units affected",
      "fullTitle": "AC: decreaseStudyLoad Should create an action to increase the study load with units affected",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockTeachingPeriods = [{ year: 2018, code: \"S1-01\", units: [null, null, null, null, \"unit1\"] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }, { year: 2019, code: \"S1-01\", units: [null, null, null, null, \"unit2\"] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null, null] }];\nvar expectedAction = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [\"unit1\", \"unit2\"]\n};\n(0, _expect2.default)(actions.decreaseStudyLoad(mockTeachingPeriods, 4)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "c60467b8-9aad-4816-8d05-0f120ba80464",
      "parentUUID": "32f2f0ea-ac7f-489c-a4ea-b61951b1a174",
      "skipped": false
    },
    {
      "title": "Should create an action to increase the study load with no units affected",
      "fullTitle": "AC: decreaseStudyLoad Should create an action to increase the study load with no units affected",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockTeachingPeriods = [{ year: 2018, code: \"S1-01\", units: [null, null, null, \"unit1\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }, { year: 2019, code: \"S1-01\", units: [null, null, null, \"unit2\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null, null] }];\nvar expectedAction = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: []\n};\n(0, _expect2.default)(actions.decreaseStudyLoad(mockTeachingPeriods, 4)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "5c7858ee-d352-4aa9-9638-e24de34ba6b3",
      "parentUUID": "32f2f0ea-ac7f-489c-a4ea-b61951b1a174",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for the addition of a unit that is not a custom unit being dragged",
      "fullTitle": "AC: addUnit Should correctly create the actions required for the addition of a unit that is not a custom unit being dragged",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockUnit = {\n                customUnitDragging: false,\n                cost: 200,\n                creditPoints: 6,\n                unitCode: \"TEST1001\"\n            };\n            var expectedActions = [{ type: \"ADD_UNIT\", tpIndex: 1, unitIndex: 1, unit: mockUnit, cost: 200, creditPoints: 6 }, { type: \"CLEAR_HIGHLIGHTING_INVALID_UNIT_SLOTS\" }, { type: \"VALIDATE_COURSE\" }];\n            var store = mockStore({});\n            store.dispatch(actions.addUnit(1, 1, mockUnit));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "a8ebee8c-6226-4cab-909f-993778cee9a4",
      "parentUUID": "2c24e9e1-a9fb-4c8e-874b-f01ab173193c",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for the addition of a unit that is a custom unit being dragged",
      "fullTitle": "AC: addUnit Should correctly create the actions required for the addition of a unit that is a custom unit being dragged",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockUnit = {\n                customUnitDragging: true,\n                cost: 200,\n                creditPoints: 6,\n                unitCode: \"TEST1001\"\n            };\n            var expectedActions = [{\n                type: \"SHOW_CUSTOM_UNIT_MODAL\",\n                unitCode: \"TEST1001\",\n                tpIndex: 1,\n                unitIndex: 1\n            }];\n            var store = mockStore({});\n            store.dispatch(actions.addUnit(1, 1, mockUnit));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "297e0750-527e-4b6a-94ea-553047d18a3b",
      "parentUUID": "2c24e9e1-a9fb-4c8e-874b-f01ab173193c",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for removal of a unit",
      "fullTitle": "AC: removeUnit Should correctly create the actions required for removal of a unit",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{ type: \"REMOVE_UNIT\", tpIndex: 1, unitIndex: 1, cost: 200, creditPoints: 6 }, { type: \"VALIDATE_COURSE\" }];\n            var store = mockStore({});\n            store.dispatch(actions.removeUnit(1, 1, 6, 200));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "77f18625-3ff7-4a19-bdd6-6f6dd5385d67",
      "parentUUID": "ea741c1c-980d-49d6-8bd5-f9a40021c9df",
      "skipped": false
    },
    {
      "title": "Should create the actions for clearing the course",
      "fullTitle": "AC: clearCourse Should create the actions for clearing the course",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{ type: \"CLEAR_COURSE\" }, { type: \"GET_NEXT_SEMESTER_STRING\" }, { type: \"VALIDATE_COURSE\" }];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.clearCourse());\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "4ed2b03a-517a-4482-b3fb-17ec8842e6f4",
      "parentUUID": "182ade64-f610-4918-86e2-6db6866092e2",
      "skipped": false
    },
    {
      "title": "Should create the action for generating the course",
      "fullTitle": "AC: generateCourse Should create the action for generating the course",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2016,\n    endYear: 2019\n};\n(0, _expect2.default)(actions.generateCourse(2016, 2019)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "727adeb5-24d4-4fe3-bd9b-e39b249343a5",
      "parentUUID": "db34c188-904d-47d4-a4fe-1b8dee20ec83",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for submission of a year form",
      "fullTitle": "AC: submitYearForm Should correctly create the actions required for submission of a year form",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{ type: \"SUBMIT_YEAR_FORM\", startYear: 2016, endYear: 2019 }, { type: \"GENERATE_COURSE\", startYear: 2016, endYear: 2019 }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\n            var store = mockStore({});\n            store.dispatch(actions.submitYearForm(2016, 2019));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "3567ab4b-f034-4e93-aeaf-9813321dab67",
      "parentUUID": "5c089343-721e-46b2-8b06-54c2bd4fbf54",
      "skipped": false
    },
    {
      "title": "Should correctly create actions required to change the start year",
      "fullTitle": "AC: changeStartYear Should correctly create actions required to change the start year",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{ type: \"CHANGE_START_YEAR\", year: 2020 }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\nvar store = mockStore({});\nstore.dispatch(actions.changeStartYear(2020));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "1e74c3c8-32e2-4911-a6d1-e6ec144ebcaa",
      "parentUUID": "bbfbe05d-9ae8-43e3-86b2-429878bd70b8",
      "skipped": false
    },
    {
      "title": "Should create the action for generating the course",
      "fullTitle": "AC: getNextSemesterString Should create the action for generating the course",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n};\n(0, _expect2.default)(actions.getNextSemesterString()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "27fa669d-b251-44d3-b7d1-73da76a93e09",
      "parentUUID": "1e93760f-d78a-4341-8972-179a767a8e47",
      "skipped": false
    },
    {
      "title": "Should create the action for getting affected units in an overload column",
      "fullTitle": "AC: getAffectedUnitsInColumn Should create the action for getting affected units in an overload column",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"GET_AFFECTED_UNITS_IN_OVERLOAD_COLUMN\",\n    index: 4\n};\n(0, _expect2.default)(actions.getAffectedUnitsInColumn(4)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "5f93a71c-8150-4eb5-b42a-c77cb688516f",
      "parentUUID": "3c0418df-4408-45d2-aa3e-bfbeee568d06",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for deletion of a teaching period with units affected",
      "fullTitle": "AC: attemptToDeleteTeachingPeriod Should correctly create the actions required for deletion of a teaching period with units affected",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockUnits = [{ unitCode: \"TEST101\", unitName: \"unit1\" }, null, { unitCode: \"TEST102\", unitName: \"unit2\" }, null, null];\nvar expectedActions = [{ type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\" }, { type: \"UPDATE_AFFECTED_UNITS\", affectedUnits: [\"TEST101 - unit1\", \"TEST102 - unit2\"] }, { type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\", index: 1 }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDeleteTeachingPeriod(1, mockUnits));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "35af28ff-959d-41b8-8974-775a9036d761",
      "parentUUID": "f4456503-1978-4621-8c94-bad63aa78cda",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for deletion of a teaching period with no units affected",
      "fullTitle": "AC: attemptToDeleteTeachingPeriod Should correctly create the actions required for deletion of a teaching period with no units affected",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockUnits = [null, null, null, null, null];\nvar expectedActions = [{ type: \"REMOVE_TEACHING_PERIOD\", index: 1, units: [null, null, null, null, null] }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDeleteTeachingPeriod(1, mockUnits));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "0e1b55fa-bb18-464e-a4eb-830b78028dbb",
      "parentUUID": "f4456503-1978-4621-8c94-bad63aa78cda",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for decrease of a study load with units affected",
      "fullTitle": "AC: attemptToDecreaseStudyLoad Should correctly create the actions required for decrease of a study load with units affected",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockTeachingPeriods = [{ units: [null, null, { unitCode: \"TEST10A\", unitName: \"unitA\" }, null, { unitCode: \"TEST101\", unitName: \"unit1\" }] }, { units: [null, null, { unitCode: \"TEST10B\", unitName: \"unitB\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10C\", unitName: \"unitC\" }, null, { unitCode: \"TEST102\", unitName: \"unit2\" }] }, { units: [null, null, { unitCode: \"TEST10D\", unitName: \"unitD\" }, null, null] }];\nvar expectedActions = [{ type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\" }, { type: \"UPDATE_AFFECTED_UNITS\", affectedUnits: [\"TEST101 - unit1\", \"TEST102 - unit2\"] }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDecreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "52c8074a-bc3b-4c61-aa20-1d91f775e730",
      "parentUUID": "ea3209c5-a24c-405e-ad8e-8ea4265efe8d",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for decrease of a study load with no units affected",
      "fullTitle": "AC: attemptToDecreaseStudyLoad Should correctly create the actions required for decrease of a study load with no units affected",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockTeachingPeriods = [{ units: [null, null, { unitCode: \"TEST10A\", unitName: \"unitA\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10B\", unitName: \"unitB\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10C\", unitName: \"unitC\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10D\", unitName: \"unitD\" }, null, null] }];\nvar expectedActions = [{ type: \"DECREASE_STUDY_LOAD\", units: [] }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDecreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "d1cf8c38-4bd6-4e7f-99e3-941f6d9a674f",
      "parentUUID": "ea3209c5-a24c-405e-ad8e-8ea4265efe8d",
      "skipped": false
    },
    {
      "title": "Should create the action for getting affected units in an teaching period row",
      "fullTitle": "AC: getAffectedUnitsInRow Should create the action for getting affected units in an teaching period row",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"GET_AFFECTED_UNITS_IN_TEACHING_PERIOD_ROW\",\n    index: 4\n};\n(0, _expect2.default)(actions.getAffectedUnitsInRow(4)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "cd38fdd9-c9be-4d82-9bcf-4f8758f4188b",
      "parentUUID": "e588834e-977c-496c-ae41-0aaf79452cd2",
      "skipped": false
    },
    {
      "title": "Should create the action for validating the course",
      "fullTitle": "AC: validateCourse Should create the action for validating the course",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"VALIDATE_COURSE\"\n};\n(0, _expect2.default)(actions.validateCourse()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "0c5b9f30-abc9-4eb4-b808-0f1ec5336344",
      "parentUUID": "e8f660e7-3a93-4a0a-8e34-928db996e704",
      "skipped": false
    },
    {
      "title": "Should create the action for highlighting the invalid unit slots",
      "fullTitle": "AC: highlightInvalidUnitSlots Should create the action for highlighting the invalid unit slots",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: \"UnitTest\",\n    ignoreCoordinate: false\n};\n(0, _expect2.default)(actions.highlightInvalidUnitSlots(\"UnitTest\", false)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "23cf8c92-5319-4483-89ec-233e98979c78",
      "parentUUID": "065fb2d7-c01f-490f-8ad6-e22593849d9d",
      "skipped": false
    },
    {
      "title": "Should create the action for clearing the highlighting for invalid unit slots",
      "fullTitle": "AC: clearHighlightingInvalidUnitSlots Should create the action for clearing the highlighting for invalid unit slots",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"CLEAR_HIGHLIGHTING_INVALID_UNIT_SLOTS\"\n};\n(0, _expect2.default)(actions.clearHighlightingInvalidUnitSlots()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "7bdb515f-ce41-4a84-9216-eab75c30fa86",
      "parentUUID": "2ecff9c0-bab6-4d19-be65-5b9823b032ce",
      "skipped": false
    },
    {
      "title": "Should create an action to show the insert teaching period UI",
      "fullTitle": "AC: showInsertTeachingPeriodUI Should create an action to show the insert teaching period UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"testTPCode\"\n};\n(0, _expect2.default)(actions.showInsertTeachingPeriodUI(\"testTPCode\")).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "52f5e1c4-3c49-40bf-9dda-4e98c8aabd66",
      "parentUUID": "9504f655-89c4-453a-887e-f6e721bde885",
      "skipped": false
    },
    {
      "title": "Should create an action to hide the insert teaching period UI",
      "fullTitle": "AC: hideInsertTeachingPeriodUI Should create an action to hide the insert teaching period UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\n(0, _expect2.default)(actions.hideInsertTeachingPeriodUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "4637f6e4-3d6e-4b41-86ea-4e51bd968fbd",
      "parentUUID": "fa953ef3-d1e6-4c1e-80f1-e78ffcc13029",
      "skipped": false
    },
    {
      "title": "Should create an action to show the add unit UI",
      "fullTitle": "AC: showAddingUnitUI Should create an action to show the add unit UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_ADD_UNIT_UI\"\n};\n(0, _expect2.default)(actions.showAddingUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "09127e59-c61f-41b2-b09c-83ebd864319d",
      "parentUUID": "51b567d0-ceb9-4268-b191-4706cad44cc7",
      "skipped": false
    },
    {
      "title": "Should create an action to hide the add unit UI",
      "fullTitle": "AC: hideAddingUnitUI Should create an action to hide the add unit UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_ADD_UNIT_UI\"\n};\n(0, _expect2.default)(actions.hideAddingUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "63b54948-7191-4cee-b152-58ca4af084b6",
      "parentUUID": "c3d58188-b10f-4ede-9a6c-df0919049953",
      "skipped": false
    },
    {
      "title": "Should create an action to show the move unit UI",
      "fullTitle": "AC: showMoveUnitUI Should create an action to show the move unit UI",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_MOVE_UNIT_UI\"\n};\n(0, _expect2.default)(actions.showMoveUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "b6e4408b-f076-4c80-bc25-2b2291d8bfa9",
      "parentUUID": "07f078e8-8776-407e-8db9-43c9a09d7ea3",
      "skipped": false
    },
    {
      "title": "Should create an action to hide move unit UI",
      "fullTitle": "AC: hideMoveUnitUI Should create an action to hide move unit UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_MOVE_UNIT_UI\"\n};\n(0, _expect2.default)(actions.hideMoveUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "09188614-493b-4740-a8f8-970e6c0ee4f1",
      "parentUUID": "00e72cb8-3e02-402b-866b-1c019f5c63df",
      "skipped": false
    },
    {
      "title": "Should create an action to show confirm delete teaching period UI",
      "fullTitle": "AC: showConfirmDeleteTeachingPeriodUI Should create an action to show confirm delete teaching period UI",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\n(0, _expect2.default)(actions.showConfirmDeleteTeachingPeriodUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "03934356-23c9-433a-b8a4-7f6abf099d3e",
      "parentUUID": "93eb5b3c-c5ab-4ceb-9097-f3efcc30f9bc",
      "skipped": false
    },
    {
      "title": "Should create an action to hide confirm delete teaching period UI",
      "fullTitle": "AC: hideConfirmDeleteTeachingPeriodUI Should create an action to hide confirm delete teaching period UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\n(0, _expect2.default)(actions.hideConfirmDeleteTeachingPeriodUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "df8a6299-2c00-40b2-83c4-123c4ffd215e",
      "parentUUID": "920c7783-e0fb-4303-a05b-8f2510c3c272",
      "skipped": false
    },
    {
      "title": "Should create an action to show confirm decrease study load UI",
      "fullTitle": "AC: showConfirmDecreaseStudyLoadUI Should create an action to show confirm decrease study load UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\n(0, _expect2.default)(actions.showConfirmDecreaseStudyLoadUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "9151390a-de53-4697-b608-6d942e6586a5",
      "parentUUID": "f5bbb22e-4659-41d9-8b95-0951de30b261",
      "skipped": false
    },
    {
      "title": "Should create an action to hide confirm decrease study load UI",
      "fullTitle": "AC: hideConfirmDecreaseStudyLoadUI Should create an action to hide confirm decrease study load UI",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\n(0, _expect2.default)(actions.hideConfirmDecreaseStudyLoadUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "2b50b48c-7c44-4bb7-9635-450e123d4f04",
      "parentUUID": "ba80fb59-7737-43e0-9fab-78a637c55042",
      "skipped": false
    },
    {
      "title": "Should create an action to show custum unit UI",
      "fullTitle": "AC: showCustomUnitUI Should create an action to show custum unit UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"TEST1001\"\n};\n(0, _expect2.default)(actions.showCustomUnitUI(\"TEST1001\")).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "2abde51c-aeb5-4527-887d-b4f96dca3f0e",
      "parentUUID": "59e942d7-c361-4ab2-af25-210672256eeb",
      "skipped": false
    },
    {
      "title": "Should create an action to hide custom unit UI",
      "fullTitle": "AC: hideCustomUnitUI Should create an action to hide custom unit UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\n(0, _expect2.default)(actions.hideCustomUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "3dc7c467-f7d4-40f0-bb74-ba306e7e4af3",
      "parentUUID": "d67901ac-337a-426d-86bb-c350462d6d9f",
      "skipped": false
    },
    {
      "title": "Should create an action to show sidebar",
      "fullTitle": "AC: showSidebar Should create an action to show sidebar",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_SIDEBAR\"\n};\n(0, _expect2.default)(actions.showSidebar()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "8e7e79f2-ac37-4a26-97ac-00b5581729c0",
      "parentUUID": "02c728d2-088f-4fd7-bd28-c47e5e378f99",
      "skipped": false
    },
    {
      "title": "Should create an action to hide sidebar",
      "fullTitle": "AC: hideSidebar Should create an action to hide sidebar",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_SIDEBAR\"\n};\n(0, _expect2.default)(actions.hideSidebar()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "ee5d3cf1-8031-407b-abca-6f6f6ae543c7",
      "parentUUID": "85df46e8-5a54-4329-9496-4971c8f97b44",
      "skipped": false
    },
    {
      "title": "Should create an action to set the course to read only",
      "fullTitle": "AC: setCourseReadOnly Should create an action to set the course to read only",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\n(0, _expect2.default)(actions.setCourseReadOnly()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "b02a53b9-c13f-4d03-b625-8971281546d5",
      "parentUUID": "e33604bf-080b-4c68-92f6-5c23b60b9e55",
      "skipped": false
    },
    {
      "title": "Should create an action to set the course to read and write",
      "fullTitle": "AC: setCourseReadAndWrite Should create an action to set the course to read and write",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\n(0, _expect2.default)(actions.setCourseReadAndWrite()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "d9ab0d70-889b-40f1-9f87-6d5672a3c876",
      "parentUUID": "a719fcb8-f6f3-492f-993b-68458ef2d241",
      "skipped": false
    },
    {
      "title": "Should render a notification title and a message",
      "fullTitle": "COMPONENT: Notification Should render a notification title and a message",
      "timedOut": false,
      "duration": 67,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, {\n    title: \"This is a test\",\n    message: \"Some message goes over here\"\n}));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(\"This is a test\");\nexpect(wrapper.text().replace(\"This is a test\", \"\").trim()).to.equal(\"Some message goes over here\");",
      "err": {},
      "isRoot": false,
      "uuid": "84d5b2e4-5da8-4b79-a642-672353baf53c",
      "parentUUID": "cac71d72-bf28-48fa-bb9a-9dff7bbf12cd",
      "skipped": false
    },
    {
      "title": "Should have a default level to be info if it is not specified",
      "fullTitle": "COMPONENT: Notification Should have a default level to be info if it is not specified",
      "timedOut": false,
      "duration": 15,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, null)).find(\".info.message\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "06235992-7146-486d-8242-5478127f01fb",
      "parentUUID": "cac71d72-bf28-48fa-bb9a-9dff7bbf12cd",
      "skipped": false
    },
    {
      "title": "Should follow a specified level",
      "fullTitle": "COMPONENT: Notification Should follow a specified level",
      "timedOut": false,
      "duration": 45,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"info\" })).find(\".info.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"warning\" })).find(\".warning.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"error\" })).find(\".negative.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"success\" })).find(\".positive.message\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "5604f493-578d-4061-8f22-8ce650e0a161",
      "parentUUID": "cac71d72-bf28-48fa-bb9a-9dff7bbf12cd",
      "skipped": false
    },
    {
      "title": "should be called exactly once when main button has been clicked",
      "fullTitle": "#addSemester() should be called exactly once when main button has been clicked",
      "timedOut": false,
      "duration": 26,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var addSemester = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: identity,\n    addSemester: addSemester }));\nwrapper.find(\"Button\").forEach(function (button) {\n    button.simulate(\"click\");\n});\nexpect(addSemester).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "432bfafb-4067-4b71-b23c-c3707989f9b3",
      "parentUUID": "5dbe8b5a-06a7-4690-8eff-3023f4d3114d",
      "skipped": false
    },
    {
      "title": "should be called as many times as the number of insert teaching periods options upon click",
      "fullTitle": "#insert() should be called as many times as the number of insert teaching periods options upon click",
      "timedOut": false,
      "duration": 30,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var insert = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: insert,\n    addSemester: identity }));\nvar dropdownItems = wrapper.find(\".item\");\ndropdownItems.forEach(function (node) {\n    return node.simulate(\"click\");\n});\nexpect(insert).to.have.callCount(dropdownItems.length);",
      "err": {},
      "isRoot": false,
      "uuid": "fc97fb72-dfe6-4d32-8044-37cc9e519f7d",
      "parentUUID": "b2904d35-5a4d-4c0a-8eca-749db59b6169",
      "skipped": false
    },
    {
      "title": "should render two ratings",
      "fullTitle": "COMPONENT: SetuRating should render two ratings",
      "timedOut": false,
      "duration": 54,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, null)).find(\".rating\")).to.have.length(2);",
      "err": {},
      "isRoot": false,
      "uuid": "e36df675-08be-4aaf-8d8e-79af760923ab",
      "parentUUID": "710da798-d16d-4b2e-8977-28698a232f40",
      "skipped": false
    },
    {
      "title": "should render a book if learning ratings is >=2.5",
      "fullTitle": "COMPONENT: SetuRating should render a book if learning ratings is >=2.5",
      "timedOut": false,
      "duration": 86,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 4.13 })).find(\".book\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.50 })).find(\".book\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "fb29c8e4-6d57-42c5-9e9d-bb178f1dcfaa",
      "parentUUID": "710da798-d16d-4b2e-8977-28698a232f40",
      "skipped": false
    },
    {
      "title": "should render a remove circle if learning ratings is <2.5",
      "fullTitle": "COMPONENT: SetuRating should render a remove circle if learning ratings is <2.5",
      "timedOut": false,
      "duration": 67,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 1.51 })).find(\".remove.circle\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.49 })).find(\".remove.circle\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "37771e66-c1c5-4105-94a2-a4bdcfd421f8",
      "parentUUID": "710da798-d16d-4b2e-8977-28698a232f40",
      "skipped": false
    },
    {
      "title": "should render a thumbs up if enjoyment ratings is >=2.5",
      "fullTitle": "COMPONENT: SetuRating should render a thumbs up if enjoyment ratings is >=2.5",
      "timedOut": false,
      "duration": 60,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 4.13 })).find(\".thumbs.up\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.50 })).find(\".thumbs.up\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "226cef7c-80a5-48b2-a134-b5f306a23a30",
      "parentUUID": "710da798-d16d-4b2e-8977-28698a232f40",
      "skipped": false
    },
    {
      "title": "should render a thumbs down if enjoyment ratings is <2.5",
      "fullTitle": "COMPONENT: SetuRating should render a thumbs down if enjoyment ratings is <2.5",
      "timedOut": false,
      "duration": 44,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 1.51 })).find(\".thumbs.down\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.49 })).find(\".thumbs.down\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "73e9cdac-fbe9-4f69-9aa4-b1d3f91a5832",
      "parentUUID": "710da798-d16d-4b2e-8977-28698a232f40",
      "skipped": false
    },
    {
      "title": "should only render a unit code and a unit name",
      "fullTitle": "#presentational should only render a unit code and a unit name",
      "timedOut": false,
      "duration": 46,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var unitCode = \"ABC1234\";\nvar unitName = \"Example unit\";\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: unitCode,\n    name: unitName }));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(unitCode);\nexpect(wrapper.find(\".message\").text().replace(unitCode, \"\").trim()).to.equal(unitName);",
      "err": {},
      "isRoot": false,
      "uuid": "f4b7e66e-fd7d-456d-8739-361f79bdc686",
      "parentUUID": "ba9fc389-de68-4fdb-94c6-1c1413d7bdce",
      "skipped": false
    },
    {
      "title": "should render a close button only when mouse is over the unit",
      "fullTitle": "#presentational should render a close button only when mouse is over the unit",
      "timedOut": false,
      "duration": 70,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    hovering: false }));\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");\nwrapper.setProps({\n    hovering: true\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"visible\");\nwrapper.setProps({\n    hovering: false\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");",
      "err": {},
      "isRoot": false,
      "uuid": "cf2594e6-91fd-4b9c-ae95-2dccd829e5bb",
      "parentUUID": "ba9fc389-de68-4fdb-94c6-1c1413d7bdce",
      "skipped": false
    },
    {
      "title": "Should call willAddUnit if unit is a newUnit and it has been clicked",
      "fullTitle": "#events Should call willAddUnit if unit is a newUnit and it has been clicked",
      "timedOut": false,
      "duration": 49,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    newUnit: true,\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    willAddUnit: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"click\");\nexpect(eventFunc).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "b9b2d2fc-3136-4193-8816-58758d51be53",
      "parentUUID": "da8766ae-bfb0-437c-ac06-f90c8de0321e",
      "skipped": false
    },
    {
      "title": "Should call handleUnitMouseOver when mouse is over the unit",
      "fullTitle": "#events Should call handleUnitMouseOver when mouse is over the unit",
      "timedOut": false,
      "duration": 22,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseOver: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseOver\");\nexpect(eventFunc).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "941c9444-5e28-4c60-b190-ce851e95a2bb",
      "parentUUID": "da8766ae-bfb0-437c-ac06-f90c8de0321e",
      "skipped": false
    },
    {
      "title": "Should call handleUnitMouseMove when mouse moves over the unit",
      "fullTitle": "#events Should call handleUnitMouseMove when mouse moves over the unit",
      "timedOut": false,
      "duration": 19,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseMove: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseMove\");\nexpect(eventFunc).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "01e158b5-d35b-4932-8433-de65efb73903",
      "parentUUID": "da8766ae-bfb0-437c-ac06-f90c8de0321e",
      "skipped": false
    },
    {
      "title": "Should call handleUnitMouseOut when mouse is over the unit",
      "fullTitle": "#events Should call handleUnitMouseOut when mouse is over the unit",
      "timedOut": false,
      "duration": 22,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseOut: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseOut\");\nexpect(eventFunc).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "8907117a-1235-487b-bcda-60e92e775258",
      "parentUUID": "da8766ae-bfb0-437c-ac06-f90c8de0321e",
      "skipped": false
    },
    {
      "title": "Should correctly call movingUnit when it is being dragged",
      "fullTitle": "#DnD Should correctly call movingUnit when it is being dragged",
      "timedOut": false,
      "duration": 11,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "testingBeginDrag = true;\ntestingEndDrag = false;\nbackend.simulateBeginDrag([sourceId]);\nexpect(movingUnitSpy).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "9286ec1c-91c1-4d34-9426-76c2bd5dd0e4",
      "parentUUID": "b0e86869-8cb0-4ba6-8a08-2016bd3bedd6",
      "skipped": false
    },
    {
      "title": "Should correctylc call cancelMovingUnit ",
      "fullTitle": "#DnD Should correctylc call cancelMovingUnit ",
      "timedOut": false,
      "duration": 25,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "testingBeginDrag = false;\ntestingEndDrag = true;\nbackend.simulateBeginDrag([sourceId]);\nbackend.simulateEndDrag(sourceId);\nexpect(cancelMovingUnitSpy).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "d067675c-d533-4a07-9722-dbd893ca6709",
      "parentUUID": "b0e86869-8cb0-4ba6-8a08-2016bd3bedd6",
      "skipped": false
    },
    {
      "title": "Should increment the credit point state by a given value",
      "fullTitle": "ACTION: INCREMENT_CREDIT_POINTS Should increment the credit point state by a given value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 2, creditPoints: 0 };\nvar action = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 2,\n    creditPoints: 1\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5158fb3e-42e9-4b2b-bae4-e875a6cd5b16",
      "parentUUID": "ea5f9000-969e-4aa5-ac5e-a938ac5c85d9",
      "skipped": false
    },
    {
      "title": "Should decrement the credit point state by a given value",
      "fullTitle": "ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state by a given value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "46a368d7-1d88-43a7-93ee-7e3323216a30",
      "parentUUID": "499f086b-0474-4f1c-8ccc-4cd4d65fad23",
      "skipped": false
    },
    {
      "title": "Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
      "fullTitle": "ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 0\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ef802a05-d1fa-4619-aa03-9b713195f842",
      "parentUUID": "499f086b-0474-4f1c-8ccc-4cd4d65fad23",
      "skipped": false
    },
    {
      "title": "Should increment the cost state by a given value",
      "fullTitle": "ACTION: INCREMENT_COST Should increment the cost state by a given value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 20, creditPoints: 13 };\nvar action = {\n    type: \"INCREMENT_COST\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 21,\n    creditPoints: 13\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "3f183446-eda7-4b3f-9998-4e1a5831ca50",
      "parentUUID": "6c5ec425-9917-4e88-b489-90e076f846ee",
      "skipped": false
    },
    {
      "title": "Should decrement the cost state by a given value",
      "fullTitle": "ACTION: DECREMENT_COST Should decrement the cost state by a given value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e1be90de-f4e5-4154-937d-0a296d20dbc1",
      "parentUUID": "1352c9ea-aefe-47ad-a980-d1021cb7f8d0",
      "skipped": false
    },
    {
      "title": "Should decrement the cost state to 0 if a value given is larger than the current credit point value",
      "fullTitle": "ACTION: DECREMENT_COST Should decrement the cost state to 0 if a value given is larger than the current credit point value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 0,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "526f4846-a284-4965-815e-033ad41f20be",
      "parentUUID": "1352c9ea-aefe-47ad-a980-d1021cb7f8d0",
      "skipped": false
    },
    {
      "title": "Should reset the cost and credit point counters to 0",
      "fullTitle": "ACTION: CLEAR_COURSE Should reset the cost and credit point counters to 0",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c362930b-03ad-4ff3-a3f7-c577430c0650",
      "parentUUID": "090297bf-d8fc-475b-884a-d2545cf8ed79",
      "skipped": false
    },
    {
      "title": "Should correctly go through and decrement the counters for each value ",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should correctly go through and decrement the counters for each value ",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { cost: 2, creditPoints: 20 }, { cost: 5, creditPoints: 10 }, null]\n};\nvar stateAfter = { cost: 43, creditPoints: 10 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "bc5c70d6-367c-4f8f-b92f-d850beadef5a",
      "parentUUID": "39318b8d-f95d-4769-ad70-cb15cc09baaf",
      "skipped": false
    },
    {
      "title": "Should not decrement the counters below 0 ",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should not decrement the counters below 0 ",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { cost: 25, creditPoints: 20 }, { cost: 30, creditPoints: 30 }, { cost: 0, creditPoints: 10 }]\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "55f2c507-607c-40f1-9ef7-03d12cea67da",
      "parentUUID": "39318b8d-f95d-4769-ad70-cb15cc09baaf",
      "skipped": false
    },
    {
      "title": "Should correctly decrement the counters based on the given units creditpoints and cost",
      "fullTitle": "ACTION: REMOVE_UNIT Should correctly decrement the counters based on the given units creditpoints and cost",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 20 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "6ddc8edf-9883-472e-bd41-c7edf354c025",
      "parentUUID": "d528a00c-abf0-4b88-a793-893d23826868",
      "skipped": false
    },
    {
      "title": "Should not decrement the counters below 0",
      "fullTitle": "ACTION: REMOVE_UNIT Should not decrement the counters below 0",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "8ed04fab-606a-4ae8-819c-70878c0f99c9",
      "parentUUID": "d528a00c-abf0-4b88-a793-893d23826868",
      "skipped": false
    },
    {
      "title": "Should correctly increment the counters when a unit is added to the plan",
      "fullTitle": "ACTION: ADD_UNIT Should correctly increment the counters when a unit is added to the plan",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"ADD_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 30 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9dee1772-01d3-49f7-9aaf-4408876f6163",
      "parentUUID": "3afe3b59-82a8-4c1b-b4b9-b0615e17a5ab",
      "skipped": false
    },
    {
      "title": "Should not decrease counters if there are no units in the overload column",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units in the overload column",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: []\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "6af4859b-0fbb-482e-b35f-f5fac677031c",
      "parentUUID": "af013257-ba48-4568-b32d-e0e2b02f8eb4",
      "skipped": false
    },
    {
      "title": "Should not decrease counters if there are no units which have values in the overload column",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units which have values in the overload column",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [null, {}]\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "48af4fe8-1c34-461e-a724-a2708f8eab85",
      "parentUUID": "af013257-ba48-4568-b32d-e0e2b02f8eb4",
      "skipped": false
    },
    {
      "title": "Should decrease counters correctly for units in the overload column",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should decrease counters correctly for units in the overload column",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [{\n        CreditPoints: 6,\n        Cost: 1134\n    }, {\n        CreditPoints: 12,\n        Cost: 2256\n    }]\n};\nvar stateAfter = { cost: 36610, creditPoints: 126 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a22f8acf-44c2-4dfc-96c1-6591a898383b",
      "parentUUID": "af013257-ba48-4568-b32d-e0e2b02f8eb4",
      "skipped": false
    },
    {
      "title": "Should not change state if it does not recognise an action",
      "fullTitle": "DEFAULT Should not change state if it does not recognise an action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "a7bbbf28-7b02-4fc7-86ed-b1b3bee1444a",
      "parentUUID": "a50b88ad-2d01-48f7-8638-75ac764389b2",
      "skipped": false
    },
    {
      "title": "Should insert a teaching period with the given info correctly into middle of array",
      "fullTitle": "ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into middle of array",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2018,\n    code: \"S2-01\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9d5ba52d-57c9-42a3-9ceb-a016346a4f3c",
      "parentUUID": "14700c63-46ae-48ec-8b2b-c2ebc1a3d143",
      "skipped": false
    },
    {
      "title": "Should insert a teaching period with the given info correctly into start of array",
      "fullTitle": "ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into start of array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2016,\n    code: \"S2-01\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2016, code: \"S2-01\", units: [null, null, null, null] }, { year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "52869f4e-0d33-4f8b-8292-dbc7929cdadf",
      "parentUUID": "14700c63-46ae-48ec-8b2b-c2ebc1a3d143",
      "skipped": false
    },
    {
      "title": "Should remove a teaching period at the given index",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the given index",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5d44b768-4f45-4bd9-8a36-bf1572d07bb9",
      "parentUUID": "8af83cc7-1975-4985-823d-f22ef092ee58",
      "skipped": false
    },
    {
      "title": "Should remove a teaching period at the start of the array",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the start of the array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "dfdd3014-edb0-4cac-af7c-3ee721467a70",
      "parentUUID": "8af83cc7-1975-4985-823d-f22ef092ee58",
      "skipped": false
    },
    {
      "title": "Should add the given teaching period to the end of the array",
      "fullTitle": "ACTION: APPEND_TEACHING_PERIOD Should add the given teaching period to the end of the array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"APPEND_TEACHING_PERIOD\",\n    year: 2020,\n    code: \"S2-01\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }, { year: 2020, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e8358eed-0e42-49a5-b540-9a887183d3e1",
      "parentUUID": "8c822e7c-3dfa-4d81-a7cd-81e4a8604b6e",
      "skipped": false
    },
    {
      "title": "Should increase the study load if the study load is less than 4",
      "fullTitle": "ACTION: INCREASE_STUDY_LOAD Should increase the study load if the study load is less than 4",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e9146988-935b-4f74-87c4-a7a12f85a490",
      "parentUUID": "86d8887f-254d-4b4c-90c0-b44a0e468a28",
      "skipped": false
    },
    {
      "title": "Should not increase the study load if the study load is 6 or greater",
      "fullTitle": "ACTION: INCREASE_STUDY_LOAD Should not increase the study load if the study load is 6 or greater",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null, null] }],\n    numberOfUnits: 6\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null, null] }],\n    numberOfUnits: 6\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "75e1f619-4d21-4e45-bb5e-d44b08b9cff7",
      "parentUUID": "86d8887f-254d-4b4c-90c0-b44a0e468a28",
      "skipped": false
    },
    {
      "title": "Should decrease the study load if the study load is greater than 4",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should decrease the study load if the study load is greater than 4",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "392c409d-9b8e-4fec-8f19-5ddb1eef952f",
      "parentUUID": "4b54ebac-46d9-4c00-ad73-2efbf3b47afd",
      "skipped": false
    },
    {
      "title": "Should not decrease the study load if the study load is 4 or less",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should not decrease the study load if the study load is 4 or less",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "8de85e39-34c3-4205-9649-9faf93e0c53a",
      "parentUUID": "4b54ebac-46d9-4c00-ad73-2efbf3b47afd",
      "skipped": false
    },
    {
      "title": "Should remove all teaching periods and set the amount of units to 4",
      "fullTitle": "ACTION: CLEAR_COURSE Should remove all teaching periods and set the amount of units to 4",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = {\n    courseInfo: {\n        courseName: \"\",\n        faculty: \"\",\n        creditPoints: 0,\n        courseDescription: \"\",\n        durationStr: \"\",\n        modeAndLocation: \"\",\n        awards: \"\",\n        abrTitle: \"\"\n    },\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "2c057ef1-8b18-4647-8760-9a527fe5f532",
      "parentUUID": "6eed4c03-bc8d-40ff-b2b6-f4a1f76bec55",
      "skipped": false
    },
    {
      "title": "Should add a unit correctly to the start of an array",
      "fullTitle": "ACTION: ADD_UNIT Should add a unit correctly to the start of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "dced8990-9c78-4a79-b6c1-c69ba3a3ab2a",
      "parentUUID": "f113d6f1-0e9a-40ee-902d-f14faff53eeb",
      "skipped": false
    },
    {
      "title": "Should add a unit correctly to the middle of an array",
      "fullTitle": "ACTION: ADD_UNIT Should add a unit correctly to the middle of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f0f3cb3c-c94e-4ac2-9d86-d35ca3c4ed9a",
      "parentUUID": "f113d6f1-0e9a-40ee-902d-f14faff53eeb",
      "skipped": false
    },
    {
      "title": "Should add a unit correctly to the end of an array",
      "fullTitle": "ACTION: ADD_UNIT Should add a unit correctly to the end of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "95fca861-c9b3-4f8c-a065-d2d932c306b3",
      "parentUUID": "f113d6f1-0e9a-40ee-902d-f14faff53eeb",
      "skipped": false
    },
    {
      "title": "Should remove a unit correctly frpm the start of an array",
      "fullTitle": "ACTION: REMOVE_UNIT Should remove a unit correctly frpm the start of an array",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c018a928-180c-4d5d-91be-cf7be1869601",
      "parentUUID": "499b0598-425a-4cc3-bbbb-abf0d0010220",
      "skipped": false
    },
    {
      "title": "Should remove a unit correctly from the middle of an array",
      "fullTitle": "ACTION: REMOVE_UNIT Should remove a unit correctly from the middle of an array",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5c985ecb-efb2-4d84-9125-e52ace273ab6",
      "parentUUID": "499b0598-425a-4cc3-bbbb-abf0d0010220",
      "skipped": false
    },
    {
      "title": "Should remove a unit correctly from the end of an array",
      "fullTitle": "ACTION: REMOVE_UNIT Should remove a unit correctly from the end of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5cebc2b0-5891-4e12-bdfc-3914bf93f5ec",
      "parentUUID": "499b0598-425a-4cc3-bbbb-abf0d0010220",
      "skipped": false
    },
    {
      "title": "Should generate a course structure with valid start and end years",
      "fullTitle": "ACTION: GENERATE_COURSE Should generate a course structure with valid start and end years",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2014,\n    endYear: 2016\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "24f0b1c5-e4c9-459f-97a7-cfb708603603",
      "parentUUID": "19aa5777-2a75-40d1-8972-81181ace6c54",
      "skipped": false
    },
    {
      "title": "Should return an empty course structure with invalid start and end years.",
      "fullTitle": "ACTION: GENERATE_COURSE Should return an empty course structure with invalid start and end years.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2017,\n    endYear: 2013\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "70c73086-3f1b-4eb0-8d47-cbba4e20ae24",
      "parentUUID": "19aa5777-2a75-40d1-8972-81181ace6c54",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course info is loading",
      "fullTitle": "ACTION: FETCH_COURSE_INFO_PENDING Should correctly show that the course info is loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "aa26c0b8-8075-4175-bcb0-aaf1a755f4b0",
      "parentUUID": "e9ec103e-10af-487d-9e0b-12bc49a35c9d",
      "skipped": false
    },
    {
      "title": "Should correctly return the payload and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    focusedCourse: null,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_FULFILLED\",\n    payload: { data: {\n            \"propertyMap\": {\n                courseCode: \"Test Code\",\n                courseName: \"Test Course\",\n                mangFac: \"Test Faculty\",\n                creditPoints: 100,\n                courseDescrip: {\n                    \"value\": \"Test Description\"\n                },\n                courseDuration: \"Test Duration\",\n                modeLoc: {\n                    \"value\": \"Test mode and location\"\n                },\n                courseAward: \"Test awards\",\n                abrevTitle: \"Test abreviated title\"\n            }\n        } },\n    courseCode: \"COURSE101\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: {\n        courseCode: \"Test Code\",\n        courseName: \"Test Course\",\n        faculty: \"Test Faculty\",\n        creditPoints: 100,\n        courseDescription: \"Test Description\",\n        durationStr: \"Test Duration\",\n        modeAndLocation: \"Test mode and location\",\n        awards: \"Test awards\",\n        abrTitle: \"Test abreviated title\"\n    },\n    focusedCourse: \"COURSE101\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a42bd739-f223-4ef6-97fe-9dd33e73f73a",
      "parentUUID": "5b58efcc-be7a-4926-a42d-3a4dac56bd25",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course info fetch failed and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_INFO_REJECTED Should correctly show that the course info fetch failed and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: true,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b359b471-9d1b-4bda-b527-4c6c44e9f4cd",
      "parentUUID": "f3a218f7-5550-4423-8b39-cdc7633a73da",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course template is loading",
      "fullTitle": "ACTION: FETCH_COURSE_TEMPLATE_PENDING Should correctly show that the course template is loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "87f969a5-bf60-4f63-9952-74fa06490a1f",
      "parentUUID": "5ecd24a3-fef1-4a0d-87f2-679fe3d9037e",
      "skipped": false
    },
    {
      "title": "Should correctly return the payload and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_TEMPLATE_FULFILLED Should correctly return the payload and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_FULFILLED\",\n    payload: {\n        data: {\n            propertyMap: \"Fake Course Template\"\n        }\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: \"Fake Course Template\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a83a0156-0246-4245-8290-79320cbef83d",
      "parentUUID": "f1d16b5e-28cb-45e4-9d6c-cdb14d9af2ac",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course template fetch failed and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_TEMPLATE_REJECTED Should correctly show that the course template fetch failed and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: true,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1066ba4c-49f6-4131-918b-41a9d16fbe13",
      "parentUUID": "acf54a3f-c868-47ed-ba1e-dd2196f2a27f",
      "skipped": false
    },
    {
      "title": "Should correctly show that the unit info is loading",
      "fullTitle": "ACTION: FETCH_UNIT_INFO_PENDING Should correctly show that the unit info is loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: {\n        preqs: \"\",\n        creditPoints: 0,\n        rules: [],\n        locationAndTime: \"\",\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"\",\n        eftsl: 0,\n        descriptions: \"\"\n    },\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: {\n        preqs: \"\",\n        creditPoints: 0,\n        rules: [],\n        locationAndTime: \"\",\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"\",\n        eftsl: 0,\n        descriptions: \"\"\n    },\n    focusedUnitCode: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d6534370-40fb-43a2-9d89-77e591ffcc02",
      "parentUUID": "10c3a48f-67a5-43b1-a40c-d930ee113f0a",
      "skipped": false
    },
    {
      "title": "Should correctly return the payload and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_UNIT_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_FULFILLED\",\n    payload: { data: \"Fake Unit Info\" },\n    unitCode: \"FAKE1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: \"Fake Unit Info\",\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a4cbf929-965f-4a03-87a1-5d23ddbe2984",
      "parentUUID": "ef7c4694-e6a7-4596-aba3-790c7ab053c4",
      "skipped": false
    },
    {
      "title": "Should correctly show that the unit info fetch failed and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_UNIT_INFO_REJECTED Should correctly show that the unit info fetch failed and show that it is no longer loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_REJECTED\",\n    payload: {\n        response: {\n            status: 404\n        }\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: {\n        response: {\n            status: 404\n        }\n    },\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b66316e2-0160-4595-89e9-28b47e796c2f",
      "parentUUID": "731edd35-c664-4b6b-8f24-e848b9471c52",
      "skipped": false
    },
    {
      "title": "Should accurately set the start year and the focused course on submission",
      "fullTitle": "ACTION: SUBMIT_COURSE_FORM Should accurately set the start year and the focused course on submission",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_COURSE_FORM\",\n    startYear: 2020,\n    courseCode: \"TEST1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: \"TEST1001\",\n    startYear: 2020,\n    endYear: 2020\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d290aec2-531a-419d-81c5-e6d69bdafdf2",
      "parentUUID": "b0ab8f27-a168-447b-94dd-5ffcab4196b6",
      "skipped": false
    },
    {
      "title": "Should accurately set the start year and end year on submission",
      "fullTitle": "ACTION: SUBMIT_YEAR_FORM Should accurately set the start year and end year on submission",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_YEAR_FORM\",\n    startYear: 2020,\n    endYear: 2025\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2020,\n    endYear: 2025\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "60eebaee-ec2f-41a1-8658-8d37db786861",
      "parentUUID": "dedc3bba-cf99-43d6-ac95-8a141ac13e40",
      "skipped": false
    },
    {
      "title": "Should correctly handle  of teaching periods data",
      "fullTitle": "ACTION: FETCH_TEACHING_PERIODS_PENDING Should correctly handle  of teaching periods data",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f34ff6fb-83b4-4eb6-833e-7fa8474cabf5",
      "parentUUID": "5fe3efca-a15f-4349-beae-7a4b8aa09681",
      "skipped": false
    },
    {
      "title": "Should correctly handle  of teaching periods data",
      "fullTitle": "ACTION: FETCH_TEACHING_PERIODS_FULFILLED Should correctly handle  of teaching periods data",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_FULFILLED\",\n    payload: \"Teaching period strings\"\n};\nvar stateAfter = {\n    teachingPeriodData: \"Teaching period strings\",\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a4308971-6d7b-49b1-a723-e0509fb8505c",
      "parentUUID": "4fdc7ce7-bc92-43a2-9392-b1723abde982",
      "skipped": false
    },
    {
      "title": "Should correctly handle  of teaching periods data",
      "fullTitle": "ACTION: FETCH_TEACHING_PERIODS_REJECTED Should correctly handle  of teaching periods data",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "fdb75bd4-061c-4aa6-9a24-d11ab8e92935",
      "parentUUID": "f6f841a1-46d4-4809-b51f-859c65896038",
      "skipped": false
    },
    {
      "title": "Should set the teaching period code to insert value correctly",
      "fullTitle": "ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should set the teaching period code to insert value correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodCodeToInsert: null,\n    testParam1: 1,\n    testParam2: \"test\"\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"S1-02\"\n};\nvar stateAfter = {\n    teachingPeriodCodeToInsert: \"S1-02\",\n    testParam1: 1,\n    testParam2: \"test\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b70254d2-6d3b-45ba-a560-135058f6e7a6",
      "parentUUID": "80823b81-5c7d-438f-97c4-9f0e307e78ca",
      "skipped": false
    },
    {
      "title": "Should handle the initiation of a course snapshot upload correctly",
      "fullTitle": "ACTION: UPLOAD_COURSE_SNAPSHOT_PENDING Should handle the initiation of a course snapshot upload correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: true\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9bea4ef2-f508-4a0e-bb00-2cbcbd715c1a",
      "parentUUID": "716ef698-3249-49f9-80ad-4f8e9950957d",
      "skipped": false
    },
    {
      "title": "Should handle the successful upload of a course snapshot correctly",
      "fullTitle": "ACTION: UPLOAD_COURSE_SNAPSHOT_FULFILLED Should handle the successful upload of a course snapshot correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"upload string\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: \"upload string\",\n    courseSnapshotUploadSucessful: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9353a121-0422-4454-9e01-2ea5419d91e5",
      "parentUUID": "689cd8cb-f290-4ead-9e29-7ad9d65407b9",
      "skipped": false
    },
    {
      "title": "Should do handle the rejected upload of a course snapshot correctly",
      "fullTitle": "ACTION: UPLOAD_COURSE_SNAPSHOT_REJECTED Should do handle the rejected upload of a course snapshot correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "76f7899a-3924-4ba1-a4b6-bc36850dfd48",
      "parentUUID": "05081bd6-d254-4921-8619-296a11be7d8f",
      "skipped": false
    },
    {
      "title": "Should begin fetching a course snapshot correctly",
      "fullTitle": "ACTION: FETCH_COURSE_SNAPSHOT_PENDING Should begin fetching a course snapshot correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "90ed49b7-2384-49f1-9016-c64a747c9f34",
      "parentUUID": "07da5a46-5686-480a-8ad1-f545fcd8b28e",
      "skipped": false
    },
    {
      "title": "Should handle a successful course snapshot fetch correctly",
      "fullTitle": "ACTION: FETCH_COURSE_SNAPSHOT_FULFILLED Should handle a successful course snapshot fetch correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"Snap data\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: \"Snap data\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a7f8a974-4109-4129-a5c9-66adc0f3b562",
      "parentUUID": "119bc74c-f76d-4172-96ea-7a4d4d84b377",
      "skipped": false
    },
    {
      "title": "Should handle a rejected course snapshot fetch correctly",
      "fullTitle": "ACTION: FETCH_COURSE_SNAPSHOT_REJECTED Should handle a rejected course snapshot fetch correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9701b69f-c7ec-437e-ae07-cdd39de3f9d7",
      "parentUUID": "cc600b1a-1e0a-49da-977b-56aa94b4d212",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_COURSES_PENDING Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: false,\n    courseSearchError: true //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: true,\n    courseSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "eff1bde8-b2d2-4ab5-bf48-4116ee2a685a",
      "parentUUID": "802c0478-916b-4000-bfd8-da832232c245",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_COURSES_FULFILLED Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: true,\n    courseSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_FULFILLED\",\n    payload: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    courseSearchIsLoading: false,\n    courseSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "aa0e836a-5388-4fd6-9358-5f24a2da22f5",
      "parentUUID": "4404a1cf-16ec-48c2-bbca-2469b3c54d6f",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_COURSES_REJECTED Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    courseSearchIsLoading: true,\n    courseSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: false,\n    courseSearchError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d594db1a-ae52-4d99-851c-1be9a15b4ce8",
      "parentUUID": "745498fe-4cb9-45c6-89ba-dc430785ec8a",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_AOS_PENDING Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: false,\n    aosSearchError: true //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: true,\n    aosSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "2c16c5c2-0f43-48f2-95d5-9067221f4dde",
      "parentUUID": "cdd17b70-0492-440f-9475-c104cfadee56",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_AOS_FULFILLED Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: true,\n    aosSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_FULFILLED\",\n    payload: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    aosSearchIsLoading: false,\n    aosSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4eda708e-ac12-4f54-91de-e199656095cf",
      "parentUUID": "8152809b-80f2-4458-b292-29ac977ba1e6",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_AOS_REJECTED Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    aosSearchIsLoading: true,\n    aosSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: false,\n    aosSearchError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "2e56f565-29f6-414e-8553-2b5172c84553",
      "parentUUID": "f3642d57-6435-41f2-a517-94610a9f2e6c",
      "skipped": false
    },
    {
      "title": "Should correctly update the affected units value to the given array",
      "fullTitle": "ACTION: UPDATE_AFFECTED_UNITS Should correctly update the affected units value to the given array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: []\n};\nvar action = {\n    type: \"UPDATE_AFFECTED_UNITS\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d2a1f261-9c98-456d-9dfd-f58e739a41a1",
      "parentUUID": "4465336d-01fa-4f76-b3cb-2318ca11a7c5",
      "skipped": false
    },
    {
      "title": "Should correctly update the index of tp to remove value to the given value",
      "fullTitle": "ACTION: UPDATE_INDEX_OF_TP_TO_REMOVE Should correctly update the index of tp to remove value to the given value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 0\n};\nvar action = {\n    type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\",\n    index: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 1\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7105ce63-3cec-4b9b-b93c-3d50c72408b0",
      "parentUUID": "1d1c23cb-deba-40da-978e-74120d3eb5e8",
      "skipped": false
    },
    {
      "title": "Should correctly set the unit to add to the new unit",
      "fullTitle": "ACTION: UPDATE_UNIT_TO_ADD Should correctly set the unit to add to the new unit",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitInfo: \"TestUnit\",\n    unitToAdd: undefined\n};\nvar action = {\n    type: \"UPDATE_UNIT_TO_ADD\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitInfo: \"TestUnit\",\n    unitToAdd: \"TestUnit\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0a6474e9-7a4f-4d66-b0f2-68c0f86437d5",
      "parentUUID": "bdca03cc-6155-4a59-8a5e-b15f9c8ae989",
      "skipped": false
    },
    {
      "title": "Should correctly set a non-dragging unit being dragged",
      "fullTitle": "ACTION: UPDATE_UNIT_IS_BEING_DRAGGED Should correctly set a non-dragging unit being dragged",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: false\n};\nvar action = {\n    type: \"UPDATE_UNIT_IS_BEING_DRAGGED\",\n    isDragging: true\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "71101dcd-ec51-4e5b-bcb4-7a9aa5597e24",
      "parentUUID": "3556d9f4-83c2-48e4-85bd-e2e0add92859",
      "skipped": false
    },
    {
      "title": "Should correctly set a dragging unit to be not dragged",
      "fullTitle": "ACTION: UPDATE_UNIT_IS_BEING_DRAGGED Should correctly set a dragging unit to be not dragged",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: true\n};\nvar action = {\n    type: \"UPDATE_UNIT_IS_BEING_DRAGGED\",\n    isDragging: false\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c6a2efb8-06a7-48b4-bfe4-679f2f0949e0",
      "parentUUID": "3556d9f4-83c2-48e4-85bd-e2e0add92859",
      "skipped": false
    },
    {
      "title": "Should correctly begin moving a unit",
      "fullTitle": "ACTION: MOVING_UNIT Should correctly begin moving a unit",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0\n};\nvar action = {\n    type: \"MOVING_UNIT\",\n    unit: \"TEST-UNIT\",\n    unitIndex: 3,\n    tpIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TEST-UNIT\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 3\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "155dbdda-b7ef-458f-a188-111861c85c6e",
      "parentUUID": "c2e08aa2-6dd1-40f0-a47d-e86a0167bc80",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to a teaching period earlier than it",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period earlier than it",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5c67d8d4-bc5b-4c87-9b88-deeb8c1566bb",
      "parentUUID": "45c03603-58a2-4a88-ba7b-33db74ee4604",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to a teaching period later than it",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period later than it",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ccc6a734-770a-45e0-b3c1-33da4e61fddc",
      "parentUUID": "45c03603-58a2-4a88-ba7b-33db74ee4604",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to the same teaching period but earlier position",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but earlier position",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "526768e5-5b71-4599-a1c0-143d7a0729c7",
      "parentUUID": "45c03603-58a2-4a88-ba7b-33db74ee4604",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to the same teaching period but later position",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but later position",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, \"PlaceToMoveTo\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f9c03e5f-2e6d-4866-8f38-b6b3cb1a3484",
      "parentUUID": "45c03603-58a2-4a88-ba7b-33db74ee4604",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to the same teaching period and exact same position",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period and exact same position",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "2a6ae87f-c649-41ca-8b53-5c82b44fbda7",
      "parentUUID": "45c03603-58a2-4a88-ba7b-33db74ee4604",
      "skipped": false
    },
    {
      "title": "should cancel moving unit",
      "fullTitle": "ACTION: CANCEL_MOVING_UNIT should cancel moving unit",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: \"TestUnit2\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: undefined,\n    unitsIndexOfUnitToBeMoved: undefined\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9b228a18-4c77-4061-a9fb-5eaa615ea37d",
      "parentUUID": "898e6118-1274-465f-9e06-cc1579de340a",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to a teaching period earlier than it",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period earlier than it",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5d001452-947d-4f6e-8b8c-9cd7b13cf263",
      "parentUUID": "d0434581-ff7c-432a-9371-3aa2cf64c9e0",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to a teaching period later than it",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period later than it",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5dbe9e7f-3840-441d-a1ce-4c082c32715e",
      "parentUUID": "d0434581-ff7c-432a-9371-3aa2cf64c9e0",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to the same teaching period but earlier position",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but earlier position",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a0a0cb91-6493-4033-bf71-a1f37b19fef0",
      "parentUUID": "d0434581-ff7c-432a-9371-3aa2cf64c9e0",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to the same teaching period but later position",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but later position",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, \"PlaceToMoveTo\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", null, \"TestUnit\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "31030968-cfc6-4f8e-999b-5b0f8208913b",
      "parentUUID": "d0434581-ff7c-432a-9371-3aa2cf64c9e0",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to the same teaching period and exact same position",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period and exact same position",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1f431c9d-be49-4ac7-8142-43957dbbca77",
      "parentUUID": "d0434581-ff7c-432a-9371-3aa2cf64c9e0",
      "skipped": false
    },
    {
      "title": "should give no errors for an empty course plan.",
      "fullTitle": "ACTION: VALIDATE_COURSE should give no errors for an empty course plan.",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan.\"\n    }],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    courseErrors: [],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "2dbfd910-2fc2-465f-ba3e-a5569b9424e1",
      "parentUUID": "b8535e85-e98e-4c92-a3d4-bb48f4e427a0",
      "skipped": false
    },
    {
      "title": "Should not give duplicate unit errors if the first attempt is in the past, and the second attempt is not two or more years into the future.",
      "fullTitle": "ACTION: VALIDATE_COURSE Should not give duplicate unit errors if the first attempt is in the past, and the second attempt is not two or more years into the future.",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: new Date().getFullYear() - 1,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, null]\n    }, {\n        code: \"S1-01\",\n        year: new Date().getFullYear() + 1,\n        units: [null, null, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "345abd18-f4d8-4395-bcd6-1ab5f824e8f5",
      "parentUUID": "b8535e85-e98e-4c92-a3d4-bb48f4e427a0",
      "skipped": false
    },
    {
      "title": "Should give a duplicate unit error if there are two same units in the same teaching period",
      "fullTitle": "ACTION: VALIDATE_COURSE Should give a duplicate unit error if there are two same units in the same teaching period",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2015,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }, {\n        code: \"S2-01\",\n        year: 2015,\n        units: [null, null, null, {\n            unitCode: \"GJQ2039\"\n        }]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2015,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }, {\n        code: \"S2-01\",\n        year: 2015,\n        units: [null, null, null, {\n            unitCode: \"GJQ2039\"\n        }]\n    }],\n    courseErrors: [{\n        message: \"ABCD1234 already exists in the same teaching period. Please remove this unit.\",\n        coordinates: [[0, 3]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7f9b732b-2d4b-4714-a1e5-f173a99680e2",
      "parentUUID": "b8535e85-e98e-4c92-a3d4-bb48f4e427a0",
      "skipped": false
    },
    {
      "title": "Should give a duplicate error if a duplicate unit is placed in a teaching period two years from now",
      "fullTitle": "ACTION: VALIDATE_COURSE Should give a duplicate error if a duplicate unit is placed in a teaching period two years from now",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var currentYear = new Date().getFullYear();\nvar stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: currentYear,\n        units: [{\n            unitCode: \"ABC1234\"\n        }, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 2,\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 2,\n        units: [null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: currentYear,\n        units: [{\n            unitCode: \"ABC1234\"\n        }, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 2,\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 2,\n        units: [null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan. Please plan as if you will pass all units.\",\n        coordinates: [[4, 1]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "804539b2-d5d2-49f0-8724-07a51da06995",
      "parentUUID": "b8535e85-e98e-4c92-a3d4-bb48f4e427a0",
      "skipped": false
    },
    {
      "title": "Should give a course error for a unit not being offered in the teaching period it is in",
      "fullTitle": "ACTION: VALIDATE_COURSE Should give a course error for a unit not being offered in the teaching period it is in",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: 2017,\n        units: [null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"First semester 2017 (Day)\"]\n            }]\n        }, null]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: 2017,\n        units: [null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"First semester 2017 (Day)\"]\n            }]\n        }, null]\n    }],\n    courseErrors: [{\n        message: \"ABC1234 is not offered in second semester.\",\n        coordinates: [[1, 2]]\n    }],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d3b7ca34-6791-42c1-be14-3300133b115d",
      "parentUUID": "b8535e85-e98e-4c92-a3d4-bb48f4e427a0",
      "skipped": false
    },
    {
      "title": "Should give a course error for a missing prereq",
      "fullTitle": "ACTION: VALIDATE_COURSE Should give a course error for a missing prereq",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"Must have passed an (I/W) unit in {DEF2345, QLS2029}\",\n                endDate: \"\"\n            }]\n        }]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"Must have passed an (I/W) unit in {DEF2345, QLS2029}\",\n                endDate: \"\"\n            }]\n        }]\n    }],\n    courseErrors: [{\n        message: \"You must complete DEF2345 or QLS2029 before you can do ABC1234.\",\n        coordinates: [[0, 3]]\n    }],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b565216f-5b91-4052-8944-2f1694cf9872",
      "parentUUID": "b8535e85-e98e-4c92-a3d4-bb48f4e427a0",
      "skipped": false
    },
    {
      "title": "Should correctly handle the Otherwise branch of FOR COURSE_CODE syntax",
      "fullTitle": "ACTION: VALIDATE_COURSE Should correctly handle the Otherwise branch of FOR COURSE_CODE syntax",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }, {\n        year: 2018,\n        code: \"WS-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"Winter semester 2018 (Day)\"]\n            }],\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {Q2001, Q2003} Do true Otherwise Must have passed 1 (I/W) units in {TEST1001}\",\n                endDate: \"\"\n            }]\n        }]\n    }, {\n        year: 2018,\n        code: \"S2-01\",\n        units: [null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }, {\n        year: 2018,\n        code: \"WS-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"Winter semester 2018 (Day)\"]\n            }],\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {Q2001, Q2003} Do true Otherwise Must have passed 1 (I/W) units in {TEST1001}\",\n                endDate: \"\"\n            }]\n        }]\n    }, {\n        year: 2018,\n        code: \"S2-01\",\n        units: [null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"You must complete TEST1001 before you can do ABC1234.\",\n        coordinates: [[1, 3]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "2877562e-ae8c-4468-8b06-b37d2897d19d",
      "parentUUID": "b8535e85-e98e-4c92-a3d4-bb48f4e427a0",
      "skipped": false
    },
    {
      "title": "Should leave invalidUnitSlotCoordinates empty if there are no invalid unit slots",
      "fullTitle": "ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS Should leave invalidUnitSlotCoordinates empty if there are no invalid unit slots",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2015,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: false\n};\nvar action = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: {\n        unitCode: \"TEST1001\",\n        unitName: \"Test unit\",\n        locationAndTime: [{\n            location: \"Caulfield\",\n            time: [\"First semester 2017 (Day)\"]\n        }]\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2015,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d367c16b-8865-482a-9fb7-9bf9ee27aee7",
      "parentUUID": "a0cb971b-2bab-4c20-b416-6549d814e364",
      "skipped": false
    },
    {
      "title": "Should highlight teaching periods that contains the same unit",
      "fullTitle": "ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS Should highlight teaching periods that contains the same unit",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var currentYear = new Date().getFullYear();\nvar stateBefore = {\n    teachingPeriods: [{\n        year: currentYear - 2,\n        code: \"FY-01\",\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        year: currentYear - 1,\n        code: \"FY-01\",\n        units: [null, null, {\n            unitCode: \"DEF2345\"\n        }, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: false\n};\nvar action = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: {\n        unitCode: \"ABC1234\",\n        locationAndTime: [{\n            location: \"Parkville\",\n            time: [\"Full year 2018 (Day)\"]\n        }]\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: currentYear - 2,\n        code: \"FY-01\",\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        year: currentYear - 1,\n        code: \"FY-01\",\n        units: [null, null, {\n            unitCode: \"DEF2345\"\n        }, null]\n    }],\n    invalidUnitSlotCoordinates: [[0, null]],\n    highlightingInvalidUnitSlots: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c92950aa-236d-4cc4-876b-bd538393167a",
      "parentUUID": "a0cb971b-2bab-4c20-b416-6549d814e364",
      "skipped": false
    },
    {
      "title": "should not change the state if it receives an unknown action",
      "fullTitle": "DEFAULT should not change the state if it receives an unknown action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "f262eb37-a47c-4f1d-b8cb-4557d4a8bb00",
      "parentUUID": "be9dc2ec-3f25-4ae1-ab47-8a62e89f3f5b",
      "skipped": false
    },
    {
      "title": "should insert a notification from an empty list",
      "fullTitle": "ACTION: ADD_NOTIFICATION should insert a notification from an empty list",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: []\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "015375d5-5a46-4aec-b393-03737898a279",
      "parentUUID": "7d35afd1-c6cd-44d6-930f-070679a9d39d",
      "skipped": false
    },
    {
      "title": "should prepend a notification into an list of a few existing notifications.",
      "fullTitle": "ACTION: ADD_NOTIFICATION should prepend a notification into an list of a few existing notifications.",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b1aea3a7-b020-497c-8d30-f8db1640102b",
      "parentUUID": "7d35afd1-c6cd-44d6-930f-070679a9d39d",
      "skipped": false
    },
    {
      "title": "should replace a notification if it already exists with a specified ID",
      "fullTitle": "ACTION: ADD_NOTIFICATION should replace a notification if it already exists with a specified ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    message: \"New message goes over here\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"New message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f553a09f-49ea-493b-9768-cd69ae9c87b4",
      "parentUUID": "7d35afd1-c6cd-44d6-930f-070679a9d39d",
      "skipped": false
    },
    {
      "title": "Should remove a notification given its ID",
      "fullTitle": "ACTION: REMOVE_NOTIFICATION Should remove a notification given its ID",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    id: \"CONNECTION_LOST\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "40393e3d-d38a-4039-b773-1ba92a483d9b",
      "parentUUID": "cae96494-ed1b-4ea6-a011-76175db8e25e",
      "skipped": false
    },
    {
      "title": "Should remove a notification given its index",
      "fullTitle": "ACTION: REMOVE_NOTIFICATION Should remove a notification given its index",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    index: 1\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "65abc6cf-b334-47c6-be71-c91bc4620d72",
      "parentUUID": "cae96494-ed1b-4ea6-a011-76175db8e25e",
      "skipped": false
    },
    {
      "title": "Should not change state if it does not recognise an action",
      "fullTitle": "DEFAULT Should not change state if it does not recognise an action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Notifications2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "deaaae42-ff89-49ec-9a7e-5e6a528d8471",
      "parentUUID": "0503af5a-8a38-45fc-b872-ece0599ca25d",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the insert teaching period UI boolean",
      "fullTitle": "ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: true,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f24997d9-4909-4109-9d23-615ec7e13155",
      "parentUUID": "10f8b57f-6b07-4998-8d2d-24ac040d1464",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the insert teaching period UI boolean",
      "fullTitle": "ACTION: HIDE_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: true,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "98287053-e0df-4788-90d9-96c59ee709be",
      "parentUUID": "feb664ce-bd4d-49d3-b455-224d45d15b5d",
      "skipped": false
    },
    {
      "title": "Should correctly set the add unit UI boolean to true and correctly hide the sidebar when a unit is being added",
      "fullTitle": "ACTION: ADDING_UNIT Should correctly set the add unit UI boolean to true and correctly hide the sidebar when a unit is being added",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b27d80c9-6cda-44d8-9d62-97ea7abc9d6d",
      "parentUUID": "b905b8d9-bce7-4129-ba26-fc21ba409be1",
      "skipped": false
    },
    {
      "title": "Should correctly set the add unit UI boolean to false",
      "fullTitle": "ACTION: ADD_UNIT Should correctly set the add unit UI boolean to false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true\n};\nvar action = {\n    type: \"ADD_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a9b9d47c-a87a-4e56-b684-b6c198c0f9af",
      "parentUUID": "9f380ce7-e29f-492f-932f-5b01b35132b1",
      "skipped": false
    },
    {
      "title": "Should correctly set the add unit UI boolean to false",
      "fullTitle": "ACTION: CANCEL_ADDING_UNIT Should correctly set the add unit UI boolean to false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true\n};\nvar action = {\n    type: \"CANCEL_ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a8dd42aa-f3a6-4290-bf42-ba8f23239584",
      "parentUUID": "a2d23069-0b8d-42bc-9e8c-577616ebcfd8",
      "skipped": false
    },
    {
      "title": "Should correctly set the move unit UI boolean to true",
      "fullTitle": "ACTION: MOVING_UNIT Should correctly set the move unit UI boolean to true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"MOVING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a665df3a-03fa-4ecc-81c6-3188dafadcc7",
      "parentUUID": "06936baa-f237-4676-a6d3-0e93746808e9",
      "skipped": false
    },
    {
      "title": "Should correctly set the move unit UI boolean to false",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly set the move unit UI boolean to false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"MOVE_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e1c65a89-2c31-4e8e-b3db-e175527c5eb8",
      "parentUUID": "9f37509e-a247-40c1-b203-c0e58d4d96ac",
      "skipped": false
    },
    {
      "title": "Should correctly set the move unit UI boolean to false",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly set the move unit UI boolean to false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"SWAP_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a0e79d44-b7b2-46da-b99d-497494cba3a9",
      "parentUUID": "c417cbbc-f505-41d2-b139-fa5440e6f14c",
      "skipped": false
    },
    {
      "title": "Should correctly set the move unit UI boolean to false",
      "fullTitle": "ACTION: CANCEL_MOVING_UNIT Should correctly set the move unit UI boolean to false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "6303a968-55fa-45bd-821a-7e5a1421507a",
      "parentUUID": "9a32a21e-2581-45cd-8183-02c7f0a3e923",
      "skipped": false
    },
    {
      "title": "Should set the course to read only correctly",
      "fullTitle": "ACTION: SET_COURSE_READ_ONLY Should set the course to read only correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: false\n};\nvar action = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d24793b9-108c-4a71-8435-018f20d5c67c",
      "parentUUID": "e2d1d000-744e-4824-8226-b78e0270689c",
      "skipped": false
    },
    {
      "title": "Should set the course to allow edits correctly",
      "fullTitle": "ACTION: SET_COURSE_READ_AND_WRITE Should set the course to allow edits correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: true\n};\nvar action = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b9d82d36-f26b-440b-89aa-676164dc5dd5",
      "parentUUID": "6990c4ba-bb99-495b-b753-d67f54b246dc",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm delete teaching period modal UI to show",
      "fullTitle": "ACTION: SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to show",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4f7ccaa8-e487-4af3-9ff8-983ab4ff6eed",
      "parentUUID": "a0b24409-73de-472f-93fc-7fd00d5cb138",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm delete teaching period modal UI to hide",
      "fullTitle": "ACTION: HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to hide",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "2073c4c8-5832-464b-a885-bd3f15142f62",
      "parentUUID": "3085e266-3f31-4574-a25d-87858bcf62fc",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm decrease study load modal UI to show",
      "fullTitle": "ACTION: SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to show",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "71c62957-8861-451d-a46a-d5fdad4eb206",
      "parentUUID": "dd5bd440-2331-4d3a-9635-c807c783c041",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm decrease study load modal UI to hide",
      "fullTitle": "ACTION: HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to hide",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b476b514-1e94-425e-bd9b-ded2780d8689",
      "parentUUID": "39c6aee8-e099-4450-bd9f-64d521c7c976",
      "skipped": false
    },
    {
      "title": "Should set show flag for custom unit modal to be true",
      "fullTitle": "ACTION: SHOW_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "78510545-c2ee-449c-8ac4-bc9a65cc7c53",
      "parentUUID": "942b76a2-2ef7-41ce-bfa5-d0f7a49b51ab",
      "skipped": false
    },
    {
      "title": "Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
      "fullTitle": "ACTION: SHOW_CUSTOM_UNIT_MODAL Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"ABC1234\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: \"ABC1234\",\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5f7e3ac1-9f35-4ac6-a11d-2331a8f1fb87",
      "parentUUID": "942b76a2-2ef7-41ce-bfa5-d0f7a49b51ab",
      "skipped": false
    },
    {
      "title": "Should set unit code and position if it exists on top of setting show flag for custom unit modal to be true",
      "fullTitle": "ACTION: SHOW_CUSTOM_UNIT_MODAL Should set unit code and position if it exists on top of setting show flag for custom unit modal to be true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"ABC1234\",\n    tpIndex: 0,\n    unitIndex: 2\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: \"ABC1234\",\n    customTpIndex: 0,\n    customUnitIndex: 2\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "8215e458-ee28-40da-a49e-eb1af4b7be84",
      "parentUUID": "942b76a2-2ef7-41ce-bfa5-d0f7a49b51ab",
      "skipped": false
    },
    {
      "title": "Should set show flag for custom unit modal to be false",
      "fullTitle": "ACTION: HIDE_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be false",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: true\n};\nvar action = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d771e637-7215-42a8-8ae9-0c7b8125502c",
      "parentUUID": "bc29205d-70e9-430a-8146-9ef5551215b2",
      "skipped": false
    },
    {
      "title": "Should correctly show the sidebar when called",
      "fullTitle": "ACTION: SHOW_SIDEBAR Should correctly show the sidebar when called",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: false\n};\nvar action = {\n    type: \"SHOW_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "3f74b8ef-dfc9-4237-91a8-8719dccab796",
      "parentUUID": "dea2bdfd-dbdd-4149-bffd-5eba997fbe4e",
      "skipped": false
    },
    {
      "title": "Should correctly hide the sidebar when called",
      "fullTitle": "ACTION: HIDE_SIDEBAR Should correctly hide the sidebar when called",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"HIDE_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "00a2ed11-228d-4a27-b597-298eae09bda8",
      "parentUUID": "7e197f1f-bceb-4b6d-a157-fc9c60dffeeb",
      "skipped": false
    },
    {
      "title": "Should not change state if it does not recognise the action",
      "fullTitle": "DEFAULT Should not change state if it does not recognise the action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_UI2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "f8856bb6-3546-470c-abcc-68d04d1e5ef2",
      "parentUUID": "9e747afe-c9b8-4bde-9461-ed4ff9bfb759",
      "skipped": false
    },
    {
      "title": "Should return a non-negative number",
      "fullTitle": "UTILS: CostCalc Should return a non-negative number",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_CostCalc2.default.calculateCost(0, 0)).to.be.gte(0);\nexpect(_CostCalc2.default.calculateCost(2, 6)).to.be.gte(0);",
      "err": {},
      "isRoot": false,
      "uuid": "e0e3255e-7fc6-4448-985a-e000f55f9350",
      "parentUUID": "81feca0f-c77d-47a9-8f13-fde7ba6d17d7",
      "skipped": false
    },
    {
      "title": "Should multiply SCA band cost with credit points",
      "fullTitle": "UTILS: CostCalc Should multiply SCA band cost with credit points",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var scaBand = 3;\nvar creditPoints = 6;\nvar scaBandCost = _CostCalc2.default.calculateCost(scaBand, 1);\nexpect(_CostCalc2.default.calculateCost(scaBand, creditPoints)).to.equal(scaBandCost * creditPoints);",
      "err": {},
      "isRoot": false,
      "uuid": "b1b5f1ed-d12f-40f2-9b66-0f257d13dd34",
      "parentUUID": "81feca0f-c77d-47a9-8f13-fde7ba6d17d7",
      "skipped": false
    },
    {
      "title": "Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
      "fullTitle": "nextSemester Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([], 2011, [])).to.deep.equal({\n    index: 0,\n    year: 2011,\n    code: \"S1-01\",\n    teachingPeriodData: []\n});",
      "err": {},
      "isRoot": false,
      "uuid": "c2c203e6-ea9e-4aab-a12a-e54a7f40d68c",
      "parentUUID": "fc4b11ff-e15d-4ce1-8cd2-efcef1a4db5e",
      "skipped": false
    },
    {
      "title": "Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
      "fullTitle": "nextSemester Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([], 2029, sortedTeachingPeriodData)).to.deep.equal({\n    index: 0,\n    year: 2029,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
      "err": {},
      "isRoot": false,
      "uuid": "53d69522-833a-470b-a7ff-c1adccca1fb5",
      "parentUUID": "fc4b11ff-e15d-4ce1-8cd2-efcef1a4db5e",
      "skipped": false
    },
    {
      "title": "Should return semester two if the last teaching period is in semester one, with the same year",
      "fullTitle": "nextSemester Should return semester two if the last teaching period is in semester one, with the same year",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2025,\n    code: \"S1-01\"\n}, {\n    year: 2025,\n    code: \"S2-01\"\n}, {\n    year: 2026,\n    code: \"S1-01\"\n}, {\n    year: 2026,\n    code: \"S2-01\"\n}, {\n    year: 2027,\n    code: \"S1-01\"\n}], 2023, sortedTeachingPeriodData)).to.deep.equal({\n    index: 5,\n    year: 2027,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
      "err": {},
      "isRoot": false,
      "uuid": "53165e39-8320-4afa-ba78-d6f09abbc0fd",
      "parentUUID": "fc4b11ff-e15d-4ce1-8cd2-efcef1a4db5e",
      "skipped": false
    },
    {
      "title": "Should return semester one next year if the last teaching period is in semester two",
      "fullTitle": "nextSemester Should return semester one next year if the last teaching period is in semester two",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2015,\n    code: \"FY-01\"\n}, {\n    year: 2017,\n    code: \"S2-01\"\n}], 2015, sortedTeachingPeriodData)).to.deep.equal({\n    index: 2,\n    year: 2018,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
      "err": {},
      "isRoot": false,
      "uuid": "f0ca5044-0a9e-46f8-9d62-1c2404c553d4",
      "parentUUID": "fc4b11ff-e15d-4ce1-8cd2-efcef1a4db5e",
      "skipped": false
    },
    {
      "title": "Should render a semester string",
      "fullTitle": "getSemesterString Should render a semester string",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2019,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n})).to.equal(\"Semester 2, 2019\");",
      "err": {},
      "isRoot": false,
      "uuid": "12d90013-f3d7-4492-9bc3-1a322cb7c7b5",
      "parentUUID": "01ccef8b-8c81-4973-bc21-5a59e2a49190",
      "skipped": false
    },
    {
      "title": "Should revert back to semester codes if teachingPeriodData is not available",
      "fullTitle": "getSemesterString Should revert back to semester codes if teachingPeriodData is not available",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2015,\n    code: \"S1-01\"\n})).to.equal(\"S1-01, 2015\");",
      "err": {},
      "isRoot": false,
      "uuid": "b860c275-e291-4a2a-afd0-f51bf0817301",
      "parentUUID": "01ccef8b-8c81-4973-bc21-5a59e2a49190",
      "skipped": false
    },
    {
      "title": "Should return the right year based off current month",
      "fullTitle": "UTILS: ShowYear Should return the right year based off current month",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "if (new Date().getMonth() + 1 >= 11) {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear() + 1);\n} else {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear());\n}",
      "err": {},
      "isRoot": false,
      "uuid": "4c4e4cb1-3c7f-4e71-9318-106581c5d412",
      "parentUUID": "9f98491a-0100-401e-8d48-47678c8737d8",
      "skipped": false
    },
    {
      "title": "Should contain the same year as it was specified",
      "fullTitle": "UTILS: YearCalc Should contain the same year as it was specified",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getStartYearVals(2016).find(function (year) {\n    return year.value === 2016;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2017).find(function (year) {\n    return year.value === 2017;\n})).to.be.ok;",
      "err": {},
      "isRoot": false,
      "uuid": "aa49a0e3-3e8a-4d8e-8dec-065a3de02e51",
      "parentUUID": "516c8a42-b876-45af-ae77-d8e5e6f49181",
      "skipped": false
    },
    {
      "title": "Should contain a year that is ten years from now",
      "fullTitle": "UTILS: YearCalc Should contain a year that is ten years from now",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getStartYearVals(2019).find(function (year) {\n    return year.value === 2029;\n})).to.be.ok;\nexpect(_YearCalc2.default.getStartYearVals(2012).find(function (year) {\n    return year.value === 2002;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2028;\n})).to.be.ok;",
      "err": {},
      "isRoot": false,
      "uuid": "9c521a67-edb1-4e80-8083-467ed0d6125c",
      "parentUUID": "516c8a42-b876-45af-ae77-d8e5e6f49181",
      "skipped": false
    },
    {
      "title": "Should not contain any past year when computing end years",
      "fullTitle": "UTILS: YearCalc Should not contain any past year when computing end years",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2017;\n})).to.be.not.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2008;\n})).to.be.not.ok;",
      "err": {},
      "isRoot": false,
      "uuid": "c88dbe63-6f62-45a8-82ea-17b525975d1c",
      "parentUUID": "516c8a42-b876-45af-ae77-d8e5e6f49181",
      "skipped": false
    },
    {
      "title": "Should have starting years go in decreasing order from one year ahead to the minimum",
      "fullTitle": "UTILS: YearCalc Should have starting years go in decreasing order from one year ahead to the minimum",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getStartYearVals(2019).slice(0, 12)).to.deep.equal([{\n    text: \"2020\",\n    value: 2020\n}, {\n    text: \"2019\",\n    value: 2019\n}, {\n    text: \"2018\",\n    value: 2018\n}, {\n    text: \"2017\",\n    value: 2017\n}, {\n    text: \"2016\",\n    value: 2016\n}, {\n    text: \"2015\",\n    value: 2015\n}, {\n    text: \"2014\",\n    value: 2014\n}, {\n    text: \"2013\",\n    value: 2013\n}, {\n    text: \"2012\",\n    value: 2012\n}, {\n    text: \"2011\",\n    value: 2011\n}, {\n    text: \"2010\",\n    value: 2010\n}, {\n    text: \"2009\",\n    value: 2009\n}]);",
      "err": {},
      "isRoot": false,
      "uuid": "12c3eb28-bf88-41c5-b387-5dfd73435cf0",
      "parentUUID": "516c8a42-b876-45af-ae77-d8e5e6f49181",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "Should create an action to increment credit points counter",
      "fullTitle": "AC: incrementCreditPoints Should create an action to increment credit points counter",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 5\n};\n(0, _expect2.default)(actions.incrementCreditPoints(5)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "c1d305e5-0eb5-4e91-bcb5-19bdb91265a5",
      "parentUUID": "2efcbc05-8d2f-44a9-bf92-270ee59edeb5",
      "skipped": false
    },
    {
      "title": "Should create an action to decrement credit points counter",
      "fullTitle": "AC: decrementCreditPoints Should create an action to decrement credit points counter",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 5\n};\n(0, _expect2.default)(actions.decrementCreditPoints(5)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "e3e58b1a-a1bc-493a-9c1e-90fc635bec6d",
      "parentUUID": "c401688b-b055-486c-b9bb-68368ab39293",
      "skipped": false
    },
    {
      "title": "Should create an action to increment cost counter",
      "fullTitle": "AC: incrementCost Should create an action to increment cost counter",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"INCREMENT_COST\",\n    value: 5\n};\n(0, _expect2.default)(actions.incrementCost(5)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "fe3acbd1-bd7a-44df-86a1-3b880099c38b",
      "parentUUID": "63c175f5-4994-45b0-9457-7b478651db45",
      "skipped": false
    },
    {
      "title": "Should create an action to decrement cost counter",
      "fullTitle": "AC: decrementCosts Should create an action to decrement cost counter",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"DECREMENT_COST\",\n    value: 5\n};\n(0, _expect2.default)(actions.decrementCost(5)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "70c3f0af-5951-40e9-b3a2-aa92d89df6e9",
      "parentUUID": "ce03ad4c-dabf-4704-ab74-bf1387801084",
      "skipped": false
    },
    {
      "title": "Should create an action to insert a teaching period",
      "fullTitle": "AC: insertTeachingPeriod Should create an action to insert a teaching period",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{\n    type: \"INSERT_TEACHING_PERIOD\",\n    index: 1,\n    year: 2016,\n    code: \"tpCode\"\n}, {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n}];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.insertTeachingPeriod(1, 2016, \"tpCode\"));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "0af32da9-a89a-43a5-bfb1-8bd9e9338d6a",
      "parentUUID": "1fb8d8f6-19b5-4468-b19c-d1dc5da6cf1e",
      "skipped": false
    },
    {
      "title": "Should create an action to remove a teaching period",
      "fullTitle": "AC: removeTeachingPeriod Should create an action to remove a teaching period",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1,\n    units: [\"unit1\", \"unit2\", \"unit3\", null]\n}, {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n}];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.removeTeachingPeriod(1, [\"unit1\", \"unit2\", \"unit3\", null]));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "f1f66ad2-f0bd-4bad-b143-11ec66a10162",
      "parentUUID": "a3f99806-42e9-4a35-bbf5-a169de4ffed2",
      "skipped": false
    },
    {
      "title": "Should create an action to increase the study load",
      "fullTitle": "AC: increaseStudyLoad Should create an action to increase the study load",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\n(0, _expect2.default)(actions.increaseStudyLoad()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "6c20ed4d-1ec0-46a2-9cb7-f2fe8edf895b",
      "parentUUID": "0b6e961b-8228-4954-a605-221228ed677d",
      "skipped": false
    },
    {
      "title": "Should create an action to increase the study load with units affected",
      "fullTitle": "AC: decreaseStudyLoad Should create an action to increase the study load with units affected",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockTeachingPeriods = [{ year: 2018, code: \"S1-01\", units: [null, null, null, null, \"unit1\"] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }, { year: 2019, code: \"S1-01\", units: [null, null, null, null, \"unit2\"] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null, null] }];\nvar expectedAction = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [\"unit1\", \"unit2\"]\n};\n(0, _expect2.default)(actions.decreaseStudyLoad(mockTeachingPeriods, 4)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "c60467b8-9aad-4816-8d05-0f120ba80464",
      "parentUUID": "32f2f0ea-ac7f-489c-a4ea-b61951b1a174",
      "skipped": false
    },
    {
      "title": "Should create an action to increase the study load with no units affected",
      "fullTitle": "AC: decreaseStudyLoad Should create an action to increase the study load with no units affected",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockTeachingPeriods = [{ year: 2018, code: \"S1-01\", units: [null, null, null, \"unit1\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }, { year: 2019, code: \"S1-01\", units: [null, null, null, \"unit2\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null, null] }];\nvar expectedAction = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: []\n};\n(0, _expect2.default)(actions.decreaseStudyLoad(mockTeachingPeriods, 4)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "5c7858ee-d352-4aa9-9638-e24de34ba6b3",
      "parentUUID": "32f2f0ea-ac7f-489c-a4ea-b61951b1a174",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for the addition of a unit that is not a custom unit being dragged",
      "fullTitle": "AC: addUnit Should correctly create the actions required for the addition of a unit that is not a custom unit being dragged",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockUnit = {\n                customUnitDragging: false,\n                cost: 200,\n                creditPoints: 6,\n                unitCode: \"TEST1001\"\n            };\n            var expectedActions = [{ type: \"ADD_UNIT\", tpIndex: 1, unitIndex: 1, unit: mockUnit, cost: 200, creditPoints: 6 }, { type: \"CLEAR_HIGHLIGHTING_INVALID_UNIT_SLOTS\" }, { type: \"VALIDATE_COURSE\" }];\n            var store = mockStore({});\n            store.dispatch(actions.addUnit(1, 1, mockUnit));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "a8ebee8c-6226-4cab-909f-993778cee9a4",
      "parentUUID": "2c24e9e1-a9fb-4c8e-874b-f01ab173193c",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for the addition of a unit that is a custom unit being dragged",
      "fullTitle": "AC: addUnit Should correctly create the actions required for the addition of a unit that is a custom unit being dragged",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockUnit = {\n                customUnitDragging: true,\n                cost: 200,\n                creditPoints: 6,\n                unitCode: \"TEST1001\"\n            };\n            var expectedActions = [{\n                type: \"SHOW_CUSTOM_UNIT_MODAL\",\n                unitCode: \"TEST1001\",\n                tpIndex: 1,\n                unitIndex: 1\n            }];\n            var store = mockStore({});\n            store.dispatch(actions.addUnit(1, 1, mockUnit));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "297e0750-527e-4b6a-94ea-553047d18a3b",
      "parentUUID": "2c24e9e1-a9fb-4c8e-874b-f01ab173193c",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for removal of a unit",
      "fullTitle": "AC: removeUnit Should correctly create the actions required for removal of a unit",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{ type: \"REMOVE_UNIT\", tpIndex: 1, unitIndex: 1, cost: 200, creditPoints: 6 }, { type: \"VALIDATE_COURSE\" }];\n            var store = mockStore({});\n            store.dispatch(actions.removeUnit(1, 1, 6, 200));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "77f18625-3ff7-4a19-bdd6-6f6dd5385d67",
      "parentUUID": "ea741c1c-980d-49d6-8bd5-f9a40021c9df",
      "skipped": false
    },
    {
      "title": "Should create the actions for clearing the course",
      "fullTitle": "AC: clearCourse Should create the actions for clearing the course",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{ type: \"CLEAR_COURSE\" }, { type: \"GET_NEXT_SEMESTER_STRING\" }, { type: \"VALIDATE_COURSE\" }];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.clearCourse());\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "4ed2b03a-517a-4482-b3fb-17ec8842e6f4",
      "parentUUID": "182ade64-f610-4918-86e2-6db6866092e2",
      "skipped": false
    },
    {
      "title": "Should create the action for generating the course",
      "fullTitle": "AC: generateCourse Should create the action for generating the course",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2016,\n    endYear: 2019\n};\n(0, _expect2.default)(actions.generateCourse(2016, 2019)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "727adeb5-24d4-4fe3-bd9b-e39b249343a5",
      "parentUUID": "db34c188-904d-47d4-a4fe-1b8dee20ec83",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for submission of a year form",
      "fullTitle": "AC: submitYearForm Should correctly create the actions required for submission of a year form",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{ type: \"SUBMIT_YEAR_FORM\", startYear: 2016, endYear: 2019 }, { type: \"GENERATE_COURSE\", startYear: 2016, endYear: 2019 }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\n            var store = mockStore({});\n            store.dispatch(actions.submitYearForm(2016, 2019));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "3567ab4b-f034-4e93-aeaf-9813321dab67",
      "parentUUID": "5c089343-721e-46b2-8b06-54c2bd4fbf54",
      "skipped": false
    },
    {
      "title": "Should correctly create actions required to change the start year",
      "fullTitle": "AC: changeStartYear Should correctly create actions required to change the start year",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{ type: \"CHANGE_START_YEAR\", year: 2020 }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\nvar store = mockStore({});\nstore.dispatch(actions.changeStartYear(2020));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "1e74c3c8-32e2-4911-a6d1-e6ec144ebcaa",
      "parentUUID": "bbfbe05d-9ae8-43e3-86b2-429878bd70b8",
      "skipped": false
    },
    {
      "title": "Should create the action for generating the course",
      "fullTitle": "AC: getNextSemesterString Should create the action for generating the course",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n};\n(0, _expect2.default)(actions.getNextSemesterString()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "27fa669d-b251-44d3-b7d1-73da76a93e09",
      "parentUUID": "1e93760f-d78a-4341-8972-179a767a8e47",
      "skipped": false
    },
    {
      "title": "Should create the action for getting affected units in an overload column",
      "fullTitle": "AC: getAffectedUnitsInColumn Should create the action for getting affected units in an overload column",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"GET_AFFECTED_UNITS_IN_OVERLOAD_COLUMN\",\n    index: 4\n};\n(0, _expect2.default)(actions.getAffectedUnitsInColumn(4)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "5f93a71c-8150-4eb5-b42a-c77cb688516f",
      "parentUUID": "3c0418df-4408-45d2-aa3e-bfbeee568d06",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for deletion of a teaching period with units affected",
      "fullTitle": "AC: attemptToDeleteTeachingPeriod Should correctly create the actions required for deletion of a teaching period with units affected",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockUnits = [{ unitCode: \"TEST101\", unitName: \"unit1\" }, null, { unitCode: \"TEST102\", unitName: \"unit2\" }, null, null];\nvar expectedActions = [{ type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\" }, { type: \"UPDATE_AFFECTED_UNITS\", affectedUnits: [\"TEST101 - unit1\", \"TEST102 - unit2\"] }, { type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\", index: 1 }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDeleteTeachingPeriod(1, mockUnits));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "35af28ff-959d-41b8-8974-775a9036d761",
      "parentUUID": "f4456503-1978-4621-8c94-bad63aa78cda",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for deletion of a teaching period with no units affected",
      "fullTitle": "AC: attemptToDeleteTeachingPeriod Should correctly create the actions required for deletion of a teaching period with no units affected",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockUnits = [null, null, null, null, null];\nvar expectedActions = [{ type: \"REMOVE_TEACHING_PERIOD\", index: 1, units: [null, null, null, null, null] }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDeleteTeachingPeriod(1, mockUnits));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "0e1b55fa-bb18-464e-a4eb-830b78028dbb",
      "parentUUID": "f4456503-1978-4621-8c94-bad63aa78cda",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for decrease of a study load with units affected",
      "fullTitle": "AC: attemptToDecreaseStudyLoad Should correctly create the actions required for decrease of a study load with units affected",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockTeachingPeriods = [{ units: [null, null, { unitCode: \"TEST10A\", unitName: \"unitA\" }, null, { unitCode: \"TEST101\", unitName: \"unit1\" }] }, { units: [null, null, { unitCode: \"TEST10B\", unitName: \"unitB\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10C\", unitName: \"unitC\" }, null, { unitCode: \"TEST102\", unitName: \"unit2\" }] }, { units: [null, null, { unitCode: \"TEST10D\", unitName: \"unitD\" }, null, null] }];\nvar expectedActions = [{ type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\" }, { type: \"UPDATE_AFFECTED_UNITS\", affectedUnits: [\"TEST101 - unit1\", \"TEST102 - unit2\"] }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDecreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "52c8074a-bc3b-4c61-aa20-1d91f775e730",
      "parentUUID": "ea3209c5-a24c-405e-ad8e-8ea4265efe8d",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for decrease of a study load with no units affected",
      "fullTitle": "AC: attemptToDecreaseStudyLoad Should correctly create the actions required for decrease of a study load with no units affected",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockTeachingPeriods = [{ units: [null, null, { unitCode: \"TEST10A\", unitName: \"unitA\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10B\", unitName: \"unitB\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10C\", unitName: \"unitC\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10D\", unitName: \"unitD\" }, null, null] }];\nvar expectedActions = [{ type: \"DECREASE_STUDY_LOAD\", units: [] }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDecreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "d1cf8c38-4bd6-4e7f-99e3-941f6d9a674f",
      "parentUUID": "ea3209c5-a24c-405e-ad8e-8ea4265efe8d",
      "skipped": false
    },
    {
      "title": "Should create the action for getting affected units in an teaching period row",
      "fullTitle": "AC: getAffectedUnitsInRow Should create the action for getting affected units in an teaching period row",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"GET_AFFECTED_UNITS_IN_TEACHING_PERIOD_ROW\",\n    index: 4\n};\n(0, _expect2.default)(actions.getAffectedUnitsInRow(4)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "cd38fdd9-c9be-4d82-9bcf-4f8758f4188b",
      "parentUUID": "e588834e-977c-496c-ae41-0aaf79452cd2",
      "skipped": false
    },
    {
      "title": "Should create the action for validating the course",
      "fullTitle": "AC: validateCourse Should create the action for validating the course",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"VALIDATE_COURSE\"\n};\n(0, _expect2.default)(actions.validateCourse()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "0c5b9f30-abc9-4eb4-b808-0f1ec5336344",
      "parentUUID": "e8f660e7-3a93-4a0a-8e34-928db996e704",
      "skipped": false
    },
    {
      "title": "Should create the action for highlighting the invalid unit slots",
      "fullTitle": "AC: highlightInvalidUnitSlots Should create the action for highlighting the invalid unit slots",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: \"UnitTest\",\n    ignoreCoordinate: false\n};\n(0, _expect2.default)(actions.highlightInvalidUnitSlots(\"UnitTest\", false)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "23cf8c92-5319-4483-89ec-233e98979c78",
      "parentUUID": "065fb2d7-c01f-490f-8ad6-e22593849d9d",
      "skipped": false
    },
    {
      "title": "Should create the action for clearing the highlighting for invalid unit slots",
      "fullTitle": "AC: clearHighlightingInvalidUnitSlots Should create the action for clearing the highlighting for invalid unit slots",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"CLEAR_HIGHLIGHTING_INVALID_UNIT_SLOTS\"\n};\n(0, _expect2.default)(actions.clearHighlightingInvalidUnitSlots()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "7bdb515f-ce41-4a84-9216-eab75c30fa86",
      "parentUUID": "2ecff9c0-bab6-4d19-be65-5b9823b032ce",
      "skipped": false
    },
    {
      "title": "Should create an action to show the insert teaching period UI",
      "fullTitle": "AC: showInsertTeachingPeriodUI Should create an action to show the insert teaching period UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"testTPCode\"\n};\n(0, _expect2.default)(actions.showInsertTeachingPeriodUI(\"testTPCode\")).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "52f5e1c4-3c49-40bf-9dda-4e98c8aabd66",
      "parentUUID": "9504f655-89c4-453a-887e-f6e721bde885",
      "skipped": false
    },
    {
      "title": "Should create an action to hide the insert teaching period UI",
      "fullTitle": "AC: hideInsertTeachingPeriodUI Should create an action to hide the insert teaching period UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\n(0, _expect2.default)(actions.hideInsertTeachingPeriodUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "4637f6e4-3d6e-4b41-86ea-4e51bd968fbd",
      "parentUUID": "fa953ef3-d1e6-4c1e-80f1-e78ffcc13029",
      "skipped": false
    },
    {
      "title": "Should create an action to show the add unit UI",
      "fullTitle": "AC: showAddingUnitUI Should create an action to show the add unit UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_ADD_UNIT_UI\"\n};\n(0, _expect2.default)(actions.showAddingUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "09127e59-c61f-41b2-b09c-83ebd864319d",
      "parentUUID": "51b567d0-ceb9-4268-b191-4706cad44cc7",
      "skipped": false
    },
    {
      "title": "Should create an action to hide the add unit UI",
      "fullTitle": "AC: hideAddingUnitUI Should create an action to hide the add unit UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_ADD_UNIT_UI\"\n};\n(0, _expect2.default)(actions.hideAddingUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "63b54948-7191-4cee-b152-58ca4af084b6",
      "parentUUID": "c3d58188-b10f-4ede-9a6c-df0919049953",
      "skipped": false
    },
    {
      "title": "Should create an action to show the move unit UI",
      "fullTitle": "AC: showMoveUnitUI Should create an action to show the move unit UI",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_MOVE_UNIT_UI\"\n};\n(0, _expect2.default)(actions.showMoveUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "b6e4408b-f076-4c80-bc25-2b2291d8bfa9",
      "parentUUID": "07f078e8-8776-407e-8db9-43c9a09d7ea3",
      "skipped": false
    },
    {
      "title": "Should create an action to hide move unit UI",
      "fullTitle": "AC: hideMoveUnitUI Should create an action to hide move unit UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_MOVE_UNIT_UI\"\n};\n(0, _expect2.default)(actions.hideMoveUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "09188614-493b-4740-a8f8-970e6c0ee4f1",
      "parentUUID": "00e72cb8-3e02-402b-866b-1c019f5c63df",
      "skipped": false
    },
    {
      "title": "Should create an action to show confirm delete teaching period UI",
      "fullTitle": "AC: showConfirmDeleteTeachingPeriodUI Should create an action to show confirm delete teaching period UI",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\n(0, _expect2.default)(actions.showConfirmDeleteTeachingPeriodUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "03934356-23c9-433a-b8a4-7f6abf099d3e",
      "parentUUID": "93eb5b3c-c5ab-4ceb-9097-f3efcc30f9bc",
      "skipped": false
    },
    {
      "title": "Should create an action to hide confirm delete teaching period UI",
      "fullTitle": "AC: hideConfirmDeleteTeachingPeriodUI Should create an action to hide confirm delete teaching period UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\n(0, _expect2.default)(actions.hideConfirmDeleteTeachingPeriodUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "df8a6299-2c00-40b2-83c4-123c4ffd215e",
      "parentUUID": "920c7783-e0fb-4303-a05b-8f2510c3c272",
      "skipped": false
    },
    {
      "title": "Should create an action to show confirm decrease study load UI",
      "fullTitle": "AC: showConfirmDecreaseStudyLoadUI Should create an action to show confirm decrease study load UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\n(0, _expect2.default)(actions.showConfirmDecreaseStudyLoadUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "9151390a-de53-4697-b608-6d942e6586a5",
      "parentUUID": "f5bbb22e-4659-41d9-8b95-0951de30b261",
      "skipped": false
    },
    {
      "title": "Should create an action to hide confirm decrease study load UI",
      "fullTitle": "AC: hideConfirmDecreaseStudyLoadUI Should create an action to hide confirm decrease study load UI",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\n(0, _expect2.default)(actions.hideConfirmDecreaseStudyLoadUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "2b50b48c-7c44-4bb7-9635-450e123d4f04",
      "parentUUID": "ba80fb59-7737-43e0-9fab-78a637c55042",
      "skipped": false
    },
    {
      "title": "Should create an action to show custum unit UI",
      "fullTitle": "AC: showCustomUnitUI Should create an action to show custum unit UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"TEST1001\"\n};\n(0, _expect2.default)(actions.showCustomUnitUI(\"TEST1001\")).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "2abde51c-aeb5-4527-887d-b4f96dca3f0e",
      "parentUUID": "59e942d7-c361-4ab2-af25-210672256eeb",
      "skipped": false
    },
    {
      "title": "Should create an action to hide custom unit UI",
      "fullTitle": "AC: hideCustomUnitUI Should create an action to hide custom unit UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\n(0, _expect2.default)(actions.hideCustomUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "3dc7c467-f7d4-40f0-bb74-ba306e7e4af3",
      "parentUUID": "d67901ac-337a-426d-86bb-c350462d6d9f",
      "skipped": false
    },
    {
      "title": "Should create an action to show sidebar",
      "fullTitle": "AC: showSidebar Should create an action to show sidebar",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_SIDEBAR\"\n};\n(0, _expect2.default)(actions.showSidebar()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "8e7e79f2-ac37-4a26-97ac-00b5581729c0",
      "parentUUID": "02c728d2-088f-4fd7-bd28-c47e5e378f99",
      "skipped": false
    },
    {
      "title": "Should create an action to hide sidebar",
      "fullTitle": "AC: hideSidebar Should create an action to hide sidebar",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_SIDEBAR\"\n};\n(0, _expect2.default)(actions.hideSidebar()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "ee5d3cf1-8031-407b-abca-6f6f6ae543c7",
      "parentUUID": "85df46e8-5a54-4329-9496-4971c8f97b44",
      "skipped": false
    },
    {
      "title": "Should create an action to set the course to read only",
      "fullTitle": "AC: setCourseReadOnly Should create an action to set the course to read only",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\n(0, _expect2.default)(actions.setCourseReadOnly()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "b02a53b9-c13f-4d03-b625-8971281546d5",
      "parentUUID": "e33604bf-080b-4c68-92f6-5c23b60b9e55",
      "skipped": false
    },
    {
      "title": "Should create an action to set the course to read and write",
      "fullTitle": "AC: setCourseReadAndWrite Should create an action to set the course to read and write",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\n(0, _expect2.default)(actions.setCourseReadAndWrite()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "d9ab0d70-889b-40f1-9f87-6d5672a3c876",
      "parentUUID": "a719fcb8-f6f3-492f-993b-68458ef2d241",
      "skipped": false
    },
    {
      "title": "Should render a notification title and a message",
      "fullTitle": "COMPONENT: Notification Should render a notification title and a message",
      "timedOut": false,
      "duration": 67,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, {\n    title: \"This is a test\",\n    message: \"Some message goes over here\"\n}));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(\"This is a test\");\nexpect(wrapper.text().replace(\"This is a test\", \"\").trim()).to.equal(\"Some message goes over here\");",
      "err": {},
      "isRoot": false,
      "uuid": "84d5b2e4-5da8-4b79-a642-672353baf53c",
      "parentUUID": "cac71d72-bf28-48fa-bb9a-9dff7bbf12cd",
      "skipped": false
    },
    {
      "title": "Should have a default level to be info if it is not specified",
      "fullTitle": "COMPONENT: Notification Should have a default level to be info if it is not specified",
      "timedOut": false,
      "duration": 15,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, null)).find(\".info.message\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "06235992-7146-486d-8242-5478127f01fb",
      "parentUUID": "cac71d72-bf28-48fa-bb9a-9dff7bbf12cd",
      "skipped": false
    },
    {
      "title": "Should follow a specified level",
      "fullTitle": "COMPONENT: Notification Should follow a specified level",
      "timedOut": false,
      "duration": 45,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"info\" })).find(\".info.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"warning\" })).find(\".warning.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"error\" })).find(\".negative.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"success\" })).find(\".positive.message\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "5604f493-578d-4061-8f22-8ce650e0a161",
      "parentUUID": "cac71d72-bf28-48fa-bb9a-9dff7bbf12cd",
      "skipped": false
    },
    {
      "title": "should be called exactly once when main button has been clicked",
      "fullTitle": "#addSemester() should be called exactly once when main button has been clicked",
      "timedOut": false,
      "duration": 26,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var addSemester = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: identity,\n    addSemester: addSemester }));\nwrapper.find(\"Button\").forEach(function (button) {\n    button.simulate(\"click\");\n});\nexpect(addSemester).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "432bfafb-4067-4b71-b23c-c3707989f9b3",
      "parentUUID": "5dbe8b5a-06a7-4690-8eff-3023f4d3114d",
      "skipped": false
    },
    {
      "title": "should be called as many times as the number of insert teaching periods options upon click",
      "fullTitle": "#insert() should be called as many times as the number of insert teaching periods options upon click",
      "timedOut": false,
      "duration": 30,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var insert = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: insert,\n    addSemester: identity }));\nvar dropdownItems = wrapper.find(\".item\");\ndropdownItems.forEach(function (node) {\n    return node.simulate(\"click\");\n});\nexpect(insert).to.have.callCount(dropdownItems.length);",
      "err": {},
      "isRoot": false,
      "uuid": "fc97fb72-dfe6-4d32-8044-37cc9e519f7d",
      "parentUUID": "b2904d35-5a4d-4c0a-8eca-749db59b6169",
      "skipped": false
    },
    {
      "title": "should render two ratings",
      "fullTitle": "COMPONENT: SetuRating should render two ratings",
      "timedOut": false,
      "duration": 54,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, null)).find(\".rating\")).to.have.length(2);",
      "err": {},
      "isRoot": false,
      "uuid": "e36df675-08be-4aaf-8d8e-79af760923ab",
      "parentUUID": "710da798-d16d-4b2e-8977-28698a232f40",
      "skipped": false
    },
    {
      "title": "should render a book if learning ratings is >=2.5",
      "fullTitle": "COMPONENT: SetuRating should render a book if learning ratings is >=2.5",
      "timedOut": false,
      "duration": 86,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 4.13 })).find(\".book\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.50 })).find(\".book\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "fb29c8e4-6d57-42c5-9e9d-bb178f1dcfaa",
      "parentUUID": "710da798-d16d-4b2e-8977-28698a232f40",
      "skipped": false
    },
    {
      "title": "should render a remove circle if learning ratings is <2.5",
      "fullTitle": "COMPONENT: SetuRating should render a remove circle if learning ratings is <2.5",
      "timedOut": false,
      "duration": 67,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 1.51 })).find(\".remove.circle\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.49 })).find(\".remove.circle\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "37771e66-c1c5-4105-94a2-a4bdcfd421f8",
      "parentUUID": "710da798-d16d-4b2e-8977-28698a232f40",
      "skipped": false
    },
    {
      "title": "should render a thumbs up if enjoyment ratings is >=2.5",
      "fullTitle": "COMPONENT: SetuRating should render a thumbs up if enjoyment ratings is >=2.5",
      "timedOut": false,
      "duration": 60,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 4.13 })).find(\".thumbs.up\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.50 })).find(\".thumbs.up\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "226cef7c-80a5-48b2-a134-b5f306a23a30",
      "parentUUID": "710da798-d16d-4b2e-8977-28698a232f40",
      "skipped": false
    },
    {
      "title": "should render a thumbs down if enjoyment ratings is <2.5",
      "fullTitle": "COMPONENT: SetuRating should render a thumbs down if enjoyment ratings is <2.5",
      "timedOut": false,
      "duration": 44,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 1.51 })).find(\".thumbs.down\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.49 })).find(\".thumbs.down\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "73e9cdac-fbe9-4f69-9aa4-b1d3f91a5832",
      "parentUUID": "710da798-d16d-4b2e-8977-28698a232f40",
      "skipped": false
    },
    {
      "title": "should only render a unit code and a unit name",
      "fullTitle": "#presentational should only render a unit code and a unit name",
      "timedOut": false,
      "duration": 46,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var unitCode = \"ABC1234\";\nvar unitName = \"Example unit\";\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: unitCode,\n    name: unitName }));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(unitCode);\nexpect(wrapper.find(\".message\").text().replace(unitCode, \"\").trim()).to.equal(unitName);",
      "err": {},
      "isRoot": false,
      "uuid": "f4b7e66e-fd7d-456d-8739-361f79bdc686",
      "parentUUID": "ba9fc389-de68-4fdb-94c6-1c1413d7bdce",
      "skipped": false
    },
    {
      "title": "should render a close button only when mouse is over the unit",
      "fullTitle": "#presentational should render a close button only when mouse is over the unit",
      "timedOut": false,
      "duration": 70,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    hovering: false }));\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");\nwrapper.setProps({\n    hovering: true\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"visible\");\nwrapper.setProps({\n    hovering: false\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");",
      "err": {},
      "isRoot": false,
      "uuid": "cf2594e6-91fd-4b9c-ae95-2dccd829e5bb",
      "parentUUID": "ba9fc389-de68-4fdb-94c6-1c1413d7bdce",
      "skipped": false
    },
    {
      "title": "Should call willAddUnit if unit is a newUnit and it has been clicked",
      "fullTitle": "#events Should call willAddUnit if unit is a newUnit and it has been clicked",
      "timedOut": false,
      "duration": 49,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    newUnit: true,\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    willAddUnit: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"click\");\nexpect(eventFunc).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "b9b2d2fc-3136-4193-8816-58758d51be53",
      "parentUUID": "da8766ae-bfb0-437c-ac06-f90c8de0321e",
      "skipped": false
    },
    {
      "title": "Should call handleUnitMouseOver when mouse is over the unit",
      "fullTitle": "#events Should call handleUnitMouseOver when mouse is over the unit",
      "timedOut": false,
      "duration": 22,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseOver: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseOver\");\nexpect(eventFunc).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "941c9444-5e28-4c60-b190-ce851e95a2bb",
      "parentUUID": "da8766ae-bfb0-437c-ac06-f90c8de0321e",
      "skipped": false
    },
    {
      "title": "Should call handleUnitMouseMove when mouse moves over the unit",
      "fullTitle": "#events Should call handleUnitMouseMove when mouse moves over the unit",
      "timedOut": false,
      "duration": 19,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseMove: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseMove\");\nexpect(eventFunc).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "01e158b5-d35b-4932-8433-de65efb73903",
      "parentUUID": "da8766ae-bfb0-437c-ac06-f90c8de0321e",
      "skipped": false
    },
    {
      "title": "Should call handleUnitMouseOut when mouse is over the unit",
      "fullTitle": "#events Should call handleUnitMouseOut when mouse is over the unit",
      "timedOut": false,
      "duration": 22,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseOut: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseOut\");\nexpect(eventFunc).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "8907117a-1235-487b-bcda-60e92e775258",
      "parentUUID": "da8766ae-bfb0-437c-ac06-f90c8de0321e",
      "skipped": false
    },
    {
      "title": "Should correctly call movingUnit when it is being dragged",
      "fullTitle": "#DnD Should correctly call movingUnit when it is being dragged",
      "timedOut": false,
      "duration": 11,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "testingBeginDrag = true;\ntestingEndDrag = false;\nbackend.simulateBeginDrag([sourceId]);\nexpect(movingUnitSpy).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "9286ec1c-91c1-4d34-9426-76c2bd5dd0e4",
      "parentUUID": "b0e86869-8cb0-4ba6-8a08-2016bd3bedd6",
      "skipped": false
    },
    {
      "title": "Should correctylc call cancelMovingUnit ",
      "fullTitle": "#DnD Should correctylc call cancelMovingUnit ",
      "timedOut": false,
      "duration": 25,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "testingBeginDrag = false;\ntestingEndDrag = true;\nbackend.simulateBeginDrag([sourceId]);\nbackend.simulateEndDrag(sourceId);\nexpect(cancelMovingUnitSpy).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "d067675c-d533-4a07-9722-dbd893ca6709",
      "parentUUID": "b0e86869-8cb0-4ba6-8a08-2016bd3bedd6",
      "skipped": false
    },
    {
      "title": "Should increment the credit point state by a given value",
      "fullTitle": "ACTION: INCREMENT_CREDIT_POINTS Should increment the credit point state by a given value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 2, creditPoints: 0 };\nvar action = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 2,\n    creditPoints: 1\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5158fb3e-42e9-4b2b-bae4-e875a6cd5b16",
      "parentUUID": "ea5f9000-969e-4aa5-ac5e-a938ac5c85d9",
      "skipped": false
    },
    {
      "title": "Should decrement the credit point state by a given value",
      "fullTitle": "ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state by a given value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "46a368d7-1d88-43a7-93ee-7e3323216a30",
      "parentUUID": "499f086b-0474-4f1c-8ccc-4cd4d65fad23",
      "skipped": false
    },
    {
      "title": "Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
      "fullTitle": "ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 0\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ef802a05-d1fa-4619-aa03-9b713195f842",
      "parentUUID": "499f086b-0474-4f1c-8ccc-4cd4d65fad23",
      "skipped": false
    },
    {
      "title": "Should increment the cost state by a given value",
      "fullTitle": "ACTION: INCREMENT_COST Should increment the cost state by a given value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 20, creditPoints: 13 };\nvar action = {\n    type: \"INCREMENT_COST\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 21,\n    creditPoints: 13\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "3f183446-eda7-4b3f-9998-4e1a5831ca50",
      "parentUUID": "6c5ec425-9917-4e88-b489-90e076f846ee",
      "skipped": false
    },
    {
      "title": "Should decrement the cost state by a given value",
      "fullTitle": "ACTION: DECREMENT_COST Should decrement the cost state by a given value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e1be90de-f4e5-4154-937d-0a296d20dbc1",
      "parentUUID": "1352c9ea-aefe-47ad-a980-d1021cb7f8d0",
      "skipped": false
    },
    {
      "title": "Should decrement the cost state to 0 if a value given is larger than the current credit point value",
      "fullTitle": "ACTION: DECREMENT_COST Should decrement the cost state to 0 if a value given is larger than the current credit point value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 0,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "526f4846-a284-4965-815e-033ad41f20be",
      "parentUUID": "1352c9ea-aefe-47ad-a980-d1021cb7f8d0",
      "skipped": false
    },
    {
      "title": "Should reset the cost and credit point counters to 0",
      "fullTitle": "ACTION: CLEAR_COURSE Should reset the cost and credit point counters to 0",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c362930b-03ad-4ff3-a3f7-c577430c0650",
      "parentUUID": "090297bf-d8fc-475b-884a-d2545cf8ed79",
      "skipped": false
    },
    {
      "title": "Should correctly go through and decrement the counters for each value ",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should correctly go through and decrement the counters for each value ",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { cost: 2, creditPoints: 20 }, { cost: 5, creditPoints: 10 }, null]\n};\nvar stateAfter = { cost: 43, creditPoints: 10 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "bc5c70d6-367c-4f8f-b92f-d850beadef5a",
      "parentUUID": "39318b8d-f95d-4769-ad70-cb15cc09baaf",
      "skipped": false
    },
    {
      "title": "Should not decrement the counters below 0 ",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should not decrement the counters below 0 ",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { cost: 25, creditPoints: 20 }, { cost: 30, creditPoints: 30 }, { cost: 0, creditPoints: 10 }]\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "55f2c507-607c-40f1-9ef7-03d12cea67da",
      "parentUUID": "39318b8d-f95d-4769-ad70-cb15cc09baaf",
      "skipped": false
    },
    {
      "title": "Should correctly decrement the counters based on the given units creditpoints and cost",
      "fullTitle": "ACTION: REMOVE_UNIT Should correctly decrement the counters based on the given units creditpoints and cost",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 20 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "6ddc8edf-9883-472e-bd41-c7edf354c025",
      "parentUUID": "d528a00c-abf0-4b88-a793-893d23826868",
      "skipped": false
    },
    {
      "title": "Should not decrement the counters below 0",
      "fullTitle": "ACTION: REMOVE_UNIT Should not decrement the counters below 0",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "8ed04fab-606a-4ae8-819c-70878c0f99c9",
      "parentUUID": "d528a00c-abf0-4b88-a793-893d23826868",
      "skipped": false
    },
    {
      "title": "Should correctly increment the counters when a unit is added to the plan",
      "fullTitle": "ACTION: ADD_UNIT Should correctly increment the counters when a unit is added to the plan",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"ADD_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 30 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9dee1772-01d3-49f7-9aaf-4408876f6163",
      "parentUUID": "3afe3b59-82a8-4c1b-b4b9-b0615e17a5ab",
      "skipped": false
    },
    {
      "title": "Should not decrease counters if there are no units in the overload column",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units in the overload column",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: []\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "6af4859b-0fbb-482e-b35f-f5fac677031c",
      "parentUUID": "af013257-ba48-4568-b32d-e0e2b02f8eb4",
      "skipped": false
    },
    {
      "title": "Should not decrease counters if there are no units which have values in the overload column",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units which have values in the overload column",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [null, {}]\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "48af4fe8-1c34-461e-a724-a2708f8eab85",
      "parentUUID": "af013257-ba48-4568-b32d-e0e2b02f8eb4",
      "skipped": false
    },
    {
      "title": "Should decrease counters correctly for units in the overload column",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should decrease counters correctly for units in the overload column",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [{\n        CreditPoints: 6,\n        Cost: 1134\n    }, {\n        CreditPoints: 12,\n        Cost: 2256\n    }]\n};\nvar stateAfter = { cost: 36610, creditPoints: 126 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a22f8acf-44c2-4dfc-96c1-6591a898383b",
      "parentUUID": "af013257-ba48-4568-b32d-e0e2b02f8eb4",
      "skipped": false
    },
    {
      "title": "Should not change state if it does not recognise an action",
      "fullTitle": "DEFAULT Should not change state if it does not recognise an action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "a7bbbf28-7b02-4fc7-86ed-b1b3bee1444a",
      "parentUUID": "a50b88ad-2d01-48f7-8638-75ac764389b2",
      "skipped": false
    },
    {
      "title": "Should insert a teaching period with the given info correctly into middle of array",
      "fullTitle": "ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into middle of array",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2018,\n    code: \"S2-01\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9d5ba52d-57c9-42a3-9ceb-a016346a4f3c",
      "parentUUID": "14700c63-46ae-48ec-8b2b-c2ebc1a3d143",
      "skipped": false
    },
    {
      "title": "Should insert a teaching period with the given info correctly into start of array",
      "fullTitle": "ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into start of array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2016,\n    code: \"S2-01\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2016, code: \"S2-01\", units: [null, null, null, null] }, { year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "52869f4e-0d33-4f8b-8292-dbc7929cdadf",
      "parentUUID": "14700c63-46ae-48ec-8b2b-c2ebc1a3d143",
      "skipped": false
    },
    {
      "title": "Should remove a teaching period at the given index",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the given index",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5d44b768-4f45-4bd9-8a36-bf1572d07bb9",
      "parentUUID": "8af83cc7-1975-4985-823d-f22ef092ee58",
      "skipped": false
    },
    {
      "title": "Should remove a teaching period at the start of the array",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the start of the array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "dfdd3014-edb0-4cac-af7c-3ee721467a70",
      "parentUUID": "8af83cc7-1975-4985-823d-f22ef092ee58",
      "skipped": false
    },
    {
      "title": "Should add the given teaching period to the end of the array",
      "fullTitle": "ACTION: APPEND_TEACHING_PERIOD Should add the given teaching period to the end of the array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"APPEND_TEACHING_PERIOD\",\n    year: 2020,\n    code: \"S2-01\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }, { year: 2020, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e8358eed-0e42-49a5-b540-9a887183d3e1",
      "parentUUID": "8c822e7c-3dfa-4d81-a7cd-81e4a8604b6e",
      "skipped": false
    },
    {
      "title": "Should increase the study load if the study load is less than 4",
      "fullTitle": "ACTION: INCREASE_STUDY_LOAD Should increase the study load if the study load is less than 4",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e9146988-935b-4f74-87c4-a7a12f85a490",
      "parentUUID": "86d8887f-254d-4b4c-90c0-b44a0e468a28",
      "skipped": false
    },
    {
      "title": "Should not increase the study load if the study load is 6 or greater",
      "fullTitle": "ACTION: INCREASE_STUDY_LOAD Should not increase the study load if the study load is 6 or greater",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null, null] }],\n    numberOfUnits: 6\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null, null] }],\n    numberOfUnits: 6\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "75e1f619-4d21-4e45-bb5e-d44b08b9cff7",
      "parentUUID": "86d8887f-254d-4b4c-90c0-b44a0e468a28",
      "skipped": false
    },
    {
      "title": "Should decrease the study load if the study load is greater than 4",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should decrease the study load if the study load is greater than 4",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "392c409d-9b8e-4fec-8f19-5ddb1eef952f",
      "parentUUID": "4b54ebac-46d9-4c00-ad73-2efbf3b47afd",
      "skipped": false
    },
    {
      "title": "Should not decrease the study load if the study load is 4 or less",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should not decrease the study load if the study load is 4 or less",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "8de85e39-34c3-4205-9649-9faf93e0c53a",
      "parentUUID": "4b54ebac-46d9-4c00-ad73-2efbf3b47afd",
      "skipped": false
    },
    {
      "title": "Should remove all teaching periods and set the amount of units to 4",
      "fullTitle": "ACTION: CLEAR_COURSE Should remove all teaching periods and set the amount of units to 4",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = {\n    courseInfo: {\n        courseName: \"\",\n        faculty: \"\",\n        creditPoints: 0,\n        courseDescription: \"\",\n        durationStr: \"\",\n        modeAndLocation: \"\",\n        awards: \"\",\n        abrTitle: \"\"\n    },\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "2c057ef1-8b18-4647-8760-9a527fe5f532",
      "parentUUID": "6eed4c03-bc8d-40ff-b2b6-f4a1f76bec55",
      "skipped": false
    },
    {
      "title": "Should add a unit correctly to the start of an array",
      "fullTitle": "ACTION: ADD_UNIT Should add a unit correctly to the start of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "dced8990-9c78-4a79-b6c1-c69ba3a3ab2a",
      "parentUUID": "f113d6f1-0e9a-40ee-902d-f14faff53eeb",
      "skipped": false
    },
    {
      "title": "Should add a unit correctly to the middle of an array",
      "fullTitle": "ACTION: ADD_UNIT Should add a unit correctly to the middle of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f0f3cb3c-c94e-4ac2-9d86-d35ca3c4ed9a",
      "parentUUID": "f113d6f1-0e9a-40ee-902d-f14faff53eeb",
      "skipped": false
    },
    {
      "title": "Should add a unit correctly to the end of an array",
      "fullTitle": "ACTION: ADD_UNIT Should add a unit correctly to the end of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "95fca861-c9b3-4f8c-a065-d2d932c306b3",
      "parentUUID": "f113d6f1-0e9a-40ee-902d-f14faff53eeb",
      "skipped": false
    },
    {
      "title": "Should remove a unit correctly frpm the start of an array",
      "fullTitle": "ACTION: REMOVE_UNIT Should remove a unit correctly frpm the start of an array",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c018a928-180c-4d5d-91be-cf7be1869601",
      "parentUUID": "499b0598-425a-4cc3-bbbb-abf0d0010220",
      "skipped": false
    },
    {
      "title": "Should remove a unit correctly from the middle of an array",
      "fullTitle": "ACTION: REMOVE_UNIT Should remove a unit correctly from the middle of an array",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5c985ecb-efb2-4d84-9125-e52ace273ab6",
      "parentUUID": "499b0598-425a-4cc3-bbbb-abf0d0010220",
      "skipped": false
    },
    {
      "title": "Should remove a unit correctly from the end of an array",
      "fullTitle": "ACTION: REMOVE_UNIT Should remove a unit correctly from the end of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5cebc2b0-5891-4e12-bdfc-3914bf93f5ec",
      "parentUUID": "499b0598-425a-4cc3-bbbb-abf0d0010220",
      "skipped": false
    },
    {
      "title": "Should generate a course structure with valid start and end years",
      "fullTitle": "ACTION: GENERATE_COURSE Should generate a course structure with valid start and end years",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2014,\n    endYear: 2016\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "24f0b1c5-e4c9-459f-97a7-cfb708603603",
      "parentUUID": "19aa5777-2a75-40d1-8972-81181ace6c54",
      "skipped": false
    },
    {
      "title": "Should return an empty course structure with invalid start and end years.",
      "fullTitle": "ACTION: GENERATE_COURSE Should return an empty course structure with invalid start and end years.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2017,\n    endYear: 2013\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "70c73086-3f1b-4eb0-8d47-cbba4e20ae24",
      "parentUUID": "19aa5777-2a75-40d1-8972-81181ace6c54",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course info is loading",
      "fullTitle": "ACTION: FETCH_COURSE_INFO_PENDING Should correctly show that the course info is loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "aa26c0b8-8075-4175-bcb0-aaf1a755f4b0",
      "parentUUID": "e9ec103e-10af-487d-9e0b-12bc49a35c9d",
      "skipped": false
    },
    {
      "title": "Should correctly return the payload and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    focusedCourse: null,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_FULFILLED\",\n    payload: { data: {\n            \"propertyMap\": {\n                courseCode: \"Test Code\",\n                courseName: \"Test Course\",\n                mangFac: \"Test Faculty\",\n                creditPoints: 100,\n                courseDescrip: {\n                    \"value\": \"Test Description\"\n                },\n                courseDuration: \"Test Duration\",\n                modeLoc: {\n                    \"value\": \"Test mode and location\"\n                },\n                courseAward: \"Test awards\",\n                abrevTitle: \"Test abreviated title\"\n            }\n        } },\n    courseCode: \"COURSE101\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: {\n        courseCode: \"Test Code\",\n        courseName: \"Test Course\",\n        faculty: \"Test Faculty\",\n        creditPoints: 100,\n        courseDescription: \"Test Description\",\n        durationStr: \"Test Duration\",\n        modeAndLocation: \"Test mode and location\",\n        awards: \"Test awards\",\n        abrTitle: \"Test abreviated title\"\n    },\n    focusedCourse: \"COURSE101\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a42bd739-f223-4ef6-97fe-9dd33e73f73a",
      "parentUUID": "5b58efcc-be7a-4926-a42d-3a4dac56bd25",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course info fetch failed and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_INFO_REJECTED Should correctly show that the course info fetch failed and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: true,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b359b471-9d1b-4bda-b527-4c6c44e9f4cd",
      "parentUUID": "f3a218f7-5550-4423-8b39-cdc7633a73da",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course template is loading",
      "fullTitle": "ACTION: FETCH_COURSE_TEMPLATE_PENDING Should correctly show that the course template is loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "87f969a5-bf60-4f63-9952-74fa06490a1f",
      "parentUUID": "5ecd24a3-fef1-4a0d-87f2-679fe3d9037e",
      "skipped": false
    },
    {
      "title": "Should correctly return the payload and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_TEMPLATE_FULFILLED Should correctly return the payload and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_FULFILLED\",\n    payload: {\n        data: {\n            propertyMap: \"Fake Course Template\"\n        }\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: \"Fake Course Template\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a83a0156-0246-4245-8290-79320cbef83d",
      "parentUUID": "f1d16b5e-28cb-45e4-9d6c-cdb14d9af2ac",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course template fetch failed and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_TEMPLATE_REJECTED Should correctly show that the course template fetch failed and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: true,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1066ba4c-49f6-4131-918b-41a9d16fbe13",
      "parentUUID": "acf54a3f-c868-47ed-ba1e-dd2196f2a27f",
      "skipped": false
    },
    {
      "title": "Should correctly show that the unit info is loading",
      "fullTitle": "ACTION: FETCH_UNIT_INFO_PENDING Should correctly show that the unit info is loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: {\n        preqs: \"\",\n        creditPoints: 0,\n        rules: [],\n        locationAndTime: \"\",\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"\",\n        eftsl: 0,\n        descriptions: \"\"\n    },\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: {\n        preqs: \"\",\n        creditPoints: 0,\n        rules: [],\n        locationAndTime: \"\",\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"\",\n        eftsl: 0,\n        descriptions: \"\"\n    },\n    focusedUnitCode: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d6534370-40fb-43a2-9d89-77e591ffcc02",
      "parentUUID": "10c3a48f-67a5-43b1-a40c-d930ee113f0a",
      "skipped": false
    },
    {
      "title": "Should correctly return the payload and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_UNIT_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_FULFILLED\",\n    payload: { data: \"Fake Unit Info\" },\n    unitCode: \"FAKE1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: \"Fake Unit Info\",\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a4cbf929-965f-4a03-87a1-5d23ddbe2984",
      "parentUUID": "ef7c4694-e6a7-4596-aba3-790c7ab053c4",
      "skipped": false
    },
    {
      "title": "Should correctly show that the unit info fetch failed and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_UNIT_INFO_REJECTED Should correctly show that the unit info fetch failed and show that it is no longer loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_REJECTED\",\n    payload: {\n        response: {\n            status: 404\n        }\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: {\n        response: {\n            status: 404\n        }\n    },\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b66316e2-0160-4595-89e9-28b47e796c2f",
      "parentUUID": "731edd35-c664-4b6b-8f24-e848b9471c52",
      "skipped": false
    },
    {
      "title": "Should accurately set the start year and the focused course on submission",
      "fullTitle": "ACTION: SUBMIT_COURSE_FORM Should accurately set the start year and the focused course on submission",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_COURSE_FORM\",\n    startYear: 2020,\n    courseCode: \"TEST1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: \"TEST1001\",\n    startYear: 2020,\n    endYear: 2020\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d290aec2-531a-419d-81c5-e6d69bdafdf2",
      "parentUUID": "b0ab8f27-a168-447b-94dd-5ffcab4196b6",
      "skipped": false
    },
    {
      "title": "Should accurately set the start year and end year on submission",
      "fullTitle": "ACTION: SUBMIT_YEAR_FORM Should accurately set the start year and end year on submission",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_YEAR_FORM\",\n    startYear: 2020,\n    endYear: 2025\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2020,\n    endYear: 2025\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "60eebaee-ec2f-41a1-8658-8d37db786861",
      "parentUUID": "dedc3bba-cf99-43d6-ac95-8a141ac13e40",
      "skipped": false
    },
    {
      "title": "Should correctly handle  of teaching periods data",
      "fullTitle": "ACTION: FETCH_TEACHING_PERIODS_PENDING Should correctly handle  of teaching periods data",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f34ff6fb-83b4-4eb6-833e-7fa8474cabf5",
      "parentUUID": "5fe3efca-a15f-4349-beae-7a4b8aa09681",
      "skipped": false
    },
    {
      "title": "Should correctly handle  of teaching periods data",
      "fullTitle": "ACTION: FETCH_TEACHING_PERIODS_FULFILLED Should correctly handle  of teaching periods data",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_FULFILLED\",\n    payload: \"Teaching period strings\"\n};\nvar stateAfter = {\n    teachingPeriodData: \"Teaching period strings\",\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a4308971-6d7b-49b1-a723-e0509fb8505c",
      "parentUUID": "4fdc7ce7-bc92-43a2-9392-b1723abde982",
      "skipped": false
    },
    {
      "title": "Should correctly handle  of teaching periods data",
      "fullTitle": "ACTION: FETCH_TEACHING_PERIODS_REJECTED Should correctly handle  of teaching periods data",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "fdb75bd4-061c-4aa6-9a24-d11ab8e92935",
      "parentUUID": "f6f841a1-46d4-4809-b51f-859c65896038",
      "skipped": false
    },
    {
      "title": "Should set the teaching period code to insert value correctly",
      "fullTitle": "ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should set the teaching period code to insert value correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodCodeToInsert: null,\n    testParam1: 1,\n    testParam2: \"test\"\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"S1-02\"\n};\nvar stateAfter = {\n    teachingPeriodCodeToInsert: \"S1-02\",\n    testParam1: 1,\n    testParam2: \"test\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b70254d2-6d3b-45ba-a560-135058f6e7a6",
      "parentUUID": "80823b81-5c7d-438f-97c4-9f0e307e78ca",
      "skipped": false
    },
    {
      "title": "Should handle the initiation of a course snapshot upload correctly",
      "fullTitle": "ACTION: UPLOAD_COURSE_SNAPSHOT_PENDING Should handle the initiation of a course snapshot upload correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: true\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9bea4ef2-f508-4a0e-bb00-2cbcbd715c1a",
      "parentUUID": "716ef698-3249-49f9-80ad-4f8e9950957d",
      "skipped": false
    },
    {
      "title": "Should handle the successful upload of a course snapshot correctly",
      "fullTitle": "ACTION: UPLOAD_COURSE_SNAPSHOT_FULFILLED Should handle the successful upload of a course snapshot correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"upload string\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: \"upload string\",\n    courseSnapshotUploadSucessful: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9353a121-0422-4454-9e01-2ea5419d91e5",
      "parentUUID": "689cd8cb-f290-4ead-9e29-7ad9d65407b9",
      "skipped": false
    },
    {
      "title": "Should do handle the rejected upload of a course snapshot correctly",
      "fullTitle": "ACTION: UPLOAD_COURSE_SNAPSHOT_REJECTED Should do handle the rejected upload of a course snapshot correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "76f7899a-3924-4ba1-a4b6-bc36850dfd48",
      "parentUUID": "05081bd6-d254-4921-8619-296a11be7d8f",
      "skipped": false
    },
    {
      "title": "Should begin fetching a course snapshot correctly",
      "fullTitle": "ACTION: FETCH_COURSE_SNAPSHOT_PENDING Should begin fetching a course snapshot correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "90ed49b7-2384-49f1-9016-c64a747c9f34",
      "parentUUID": "07da5a46-5686-480a-8ad1-f545fcd8b28e",
      "skipped": false
    },
    {
      "title": "Should handle a successful course snapshot fetch correctly",
      "fullTitle": "ACTION: FETCH_COURSE_SNAPSHOT_FULFILLED Should handle a successful course snapshot fetch correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"Snap data\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: \"Snap data\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a7f8a974-4109-4129-a5c9-66adc0f3b562",
      "parentUUID": "119bc74c-f76d-4172-96ea-7a4d4d84b377",
      "skipped": false
    },
    {
      "title": "Should handle a rejected course snapshot fetch correctly",
      "fullTitle": "ACTION: FETCH_COURSE_SNAPSHOT_REJECTED Should handle a rejected course snapshot fetch correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9701b69f-c7ec-437e-ae07-cdd39de3f9d7",
      "parentUUID": "cc600b1a-1e0a-49da-977b-56aa94b4d212",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_COURSES_PENDING Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: false,\n    courseSearchError: true //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: true,\n    courseSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "eff1bde8-b2d2-4ab5-bf48-4116ee2a685a",
      "parentUUID": "802c0478-916b-4000-bfd8-da832232c245",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_COURSES_FULFILLED Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: true,\n    courseSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_FULFILLED\",\n    payload: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    courseSearchIsLoading: false,\n    courseSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "aa0e836a-5388-4fd6-9358-5f24a2da22f5",
      "parentUUID": "4404a1cf-16ec-48c2-bbca-2469b3c54d6f",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_COURSES_REJECTED Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    courseSearchIsLoading: true,\n    courseSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: false,\n    courseSearchError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d594db1a-ae52-4d99-851c-1be9a15b4ce8",
      "parentUUID": "745498fe-4cb9-45c6-89ba-dc430785ec8a",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_AOS_PENDING Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: false,\n    aosSearchError: true //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: true,\n    aosSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "2c16c5c2-0f43-48f2-95d5-9067221f4dde",
      "parentUUID": "cdd17b70-0492-440f-9475-c104cfadee56",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_AOS_FULFILLED Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: true,\n    aosSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_FULFILLED\",\n    payload: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    aosSearchIsLoading: false,\n    aosSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4eda708e-ac12-4f54-91de-e199656095cf",
      "parentUUID": "8152809b-80f2-4458-b292-29ac977ba1e6",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_AOS_REJECTED Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    aosSearchIsLoading: true,\n    aosSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: false,\n    aosSearchError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "2e56f565-29f6-414e-8553-2b5172c84553",
      "parentUUID": "f3642d57-6435-41f2-a517-94610a9f2e6c",
      "skipped": false
    },
    {
      "title": "Should correctly update the affected units value to the given array",
      "fullTitle": "ACTION: UPDATE_AFFECTED_UNITS Should correctly update the affected units value to the given array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: []\n};\nvar action = {\n    type: \"UPDATE_AFFECTED_UNITS\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d2a1f261-9c98-456d-9dfd-f58e739a41a1",
      "parentUUID": "4465336d-01fa-4f76-b3cb-2318ca11a7c5",
      "skipped": false
    },
    {
      "title": "Should correctly update the index of tp to remove value to the given value",
      "fullTitle": "ACTION: UPDATE_INDEX_OF_TP_TO_REMOVE Should correctly update the index of tp to remove value to the given value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 0\n};\nvar action = {\n    type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\",\n    index: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 1\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7105ce63-3cec-4b9b-b93c-3d50c72408b0",
      "parentUUID": "1d1c23cb-deba-40da-978e-74120d3eb5e8",
      "skipped": false
    },
    {
      "title": "Should correctly set the unit to add to the new unit",
      "fullTitle": "ACTION: UPDATE_UNIT_TO_ADD Should correctly set the unit to add to the new unit",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitInfo: \"TestUnit\",\n    unitToAdd: undefined\n};\nvar action = {\n    type: \"UPDATE_UNIT_TO_ADD\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitInfo: \"TestUnit\",\n    unitToAdd: \"TestUnit\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0a6474e9-7a4f-4d66-b0f2-68c0f86437d5",
      "parentUUID": "bdca03cc-6155-4a59-8a5e-b15f9c8ae989",
      "skipped": false
    },
    {
      "title": "Should correctly set a non-dragging unit being dragged",
      "fullTitle": "ACTION: UPDATE_UNIT_IS_BEING_DRAGGED Should correctly set a non-dragging unit being dragged",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: false\n};\nvar action = {\n    type: \"UPDATE_UNIT_IS_BEING_DRAGGED\",\n    isDragging: true\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "71101dcd-ec51-4e5b-bcb4-7a9aa5597e24",
      "parentUUID": "3556d9f4-83c2-48e4-85bd-e2e0add92859",
      "skipped": false
    },
    {
      "title": "Should correctly set a dragging unit to be not dragged",
      "fullTitle": "ACTION: UPDATE_UNIT_IS_BEING_DRAGGED Should correctly set a dragging unit to be not dragged",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: true\n};\nvar action = {\n    type: \"UPDATE_UNIT_IS_BEING_DRAGGED\",\n    isDragging: false\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c6a2efb8-06a7-48b4-bfe4-679f2f0949e0",
      "parentUUID": "3556d9f4-83c2-48e4-85bd-e2e0add92859",
      "skipped": false
    },
    {
      "title": "Should correctly begin moving a unit",
      "fullTitle": "ACTION: MOVING_UNIT Should correctly begin moving a unit",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0\n};\nvar action = {\n    type: \"MOVING_UNIT\",\n    unit: \"TEST-UNIT\",\n    unitIndex: 3,\n    tpIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TEST-UNIT\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 3\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "155dbdda-b7ef-458f-a188-111861c85c6e",
      "parentUUID": "c2e08aa2-6dd1-40f0-a47d-e86a0167bc80",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to a teaching period earlier than it",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period earlier than it",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5c67d8d4-bc5b-4c87-9b88-deeb8c1566bb",
      "parentUUID": "45c03603-58a2-4a88-ba7b-33db74ee4604",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to a teaching period later than it",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period later than it",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ccc6a734-770a-45e0-b3c1-33da4e61fddc",
      "parentUUID": "45c03603-58a2-4a88-ba7b-33db74ee4604",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to the same teaching period but earlier position",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but earlier position",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "526768e5-5b71-4599-a1c0-143d7a0729c7",
      "parentUUID": "45c03603-58a2-4a88-ba7b-33db74ee4604",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to the same teaching period but later position",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but later position",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, \"PlaceToMoveTo\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f9c03e5f-2e6d-4866-8f38-b6b3cb1a3484",
      "parentUUID": "45c03603-58a2-4a88-ba7b-33db74ee4604",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to the same teaching period and exact same position",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period and exact same position",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "2a6ae87f-c649-41ca-8b53-5c82b44fbda7",
      "parentUUID": "45c03603-58a2-4a88-ba7b-33db74ee4604",
      "skipped": false
    },
    {
      "title": "should cancel moving unit",
      "fullTitle": "ACTION: CANCEL_MOVING_UNIT should cancel moving unit",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: \"TestUnit2\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: undefined,\n    unitsIndexOfUnitToBeMoved: undefined\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9b228a18-4c77-4061-a9fb-5eaa615ea37d",
      "parentUUID": "898e6118-1274-465f-9e06-cc1579de340a",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to a teaching period earlier than it",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period earlier than it",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5d001452-947d-4f6e-8b8c-9cd7b13cf263",
      "parentUUID": "d0434581-ff7c-432a-9371-3aa2cf64c9e0",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to a teaching period later than it",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period later than it",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5dbe9e7f-3840-441d-a1ce-4c082c32715e",
      "parentUUID": "d0434581-ff7c-432a-9371-3aa2cf64c9e0",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to the same teaching period but earlier position",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but earlier position",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a0a0cb91-6493-4033-bf71-a1f37b19fef0",
      "parentUUID": "d0434581-ff7c-432a-9371-3aa2cf64c9e0",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to the same teaching period but later position",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but later position",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, \"PlaceToMoveTo\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", null, \"TestUnit\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "31030968-cfc6-4f8e-999b-5b0f8208913b",
      "parentUUID": "d0434581-ff7c-432a-9371-3aa2cf64c9e0",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to the same teaching period and exact same position",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period and exact same position",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1f431c9d-be49-4ac7-8142-43957dbbca77",
      "parentUUID": "d0434581-ff7c-432a-9371-3aa2cf64c9e0",
      "skipped": false
    },
    {
      "title": "should give no errors for an empty course plan.",
      "fullTitle": "ACTION: VALIDATE_COURSE should give no errors for an empty course plan.",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan.\"\n    }],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    courseErrors: [],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "2dbfd910-2fc2-465f-ba3e-a5569b9424e1",
      "parentUUID": "b8535e85-e98e-4c92-a3d4-bb48f4e427a0",
      "skipped": false
    },
    {
      "title": "Should not give duplicate unit errors if the first attempt is in the past, and the second attempt is not two or more years into the future.",
      "fullTitle": "ACTION: VALIDATE_COURSE Should not give duplicate unit errors if the first attempt is in the past, and the second attempt is not two or more years into the future.",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: new Date().getFullYear() - 1,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, null]\n    }, {\n        code: \"S1-01\",\n        year: new Date().getFullYear() + 1,\n        units: [null, null, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "345abd18-f4d8-4395-bcd6-1ab5f824e8f5",
      "parentUUID": "b8535e85-e98e-4c92-a3d4-bb48f4e427a0",
      "skipped": false
    },
    {
      "title": "Should give a duplicate unit error if there are two same units in the same teaching period",
      "fullTitle": "ACTION: VALIDATE_COURSE Should give a duplicate unit error if there are two same units in the same teaching period",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2015,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }, {\n        code: \"S2-01\",\n        year: 2015,\n        units: [null, null, null, {\n            unitCode: \"GJQ2039\"\n        }]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2015,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }, {\n        code: \"S2-01\",\n        year: 2015,\n        units: [null, null, null, {\n            unitCode: \"GJQ2039\"\n        }]\n    }],\n    courseErrors: [{\n        message: \"ABCD1234 already exists in the same teaching period. Please remove this unit.\",\n        coordinates: [[0, 3]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7f9b732b-2d4b-4714-a1e5-f173a99680e2",
      "parentUUID": "b8535e85-e98e-4c92-a3d4-bb48f4e427a0",
      "skipped": false
    },
    {
      "title": "Should give a duplicate error if a duplicate unit is placed in a teaching period two years from now",
      "fullTitle": "ACTION: VALIDATE_COURSE Should give a duplicate error if a duplicate unit is placed in a teaching period two years from now",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var currentYear = new Date().getFullYear();\nvar stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: currentYear,\n        units: [{\n            unitCode: \"ABC1234\"\n        }, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 2,\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 2,\n        units: [null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: currentYear,\n        units: [{\n            unitCode: \"ABC1234\"\n        }, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 2,\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 2,\n        units: [null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan. Please plan as if you will pass all units.\",\n        coordinates: [[4, 1]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "804539b2-d5d2-49f0-8724-07a51da06995",
      "parentUUID": "b8535e85-e98e-4c92-a3d4-bb48f4e427a0",
      "skipped": false
    },
    {
      "title": "Should give a course error for a unit not being offered in the teaching period it is in",
      "fullTitle": "ACTION: VALIDATE_COURSE Should give a course error for a unit not being offered in the teaching period it is in",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: 2017,\n        units: [null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"First semester 2017 (Day)\"]\n            }]\n        }, null]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: 2017,\n        units: [null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"First semester 2017 (Day)\"]\n            }]\n        }, null]\n    }],\n    courseErrors: [{\n        message: \"ABC1234 is not offered in second semester.\",\n        coordinates: [[1, 2]]\n    }],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d3b7ca34-6791-42c1-be14-3300133b115d",
      "parentUUID": "b8535e85-e98e-4c92-a3d4-bb48f4e427a0",
      "skipped": false
    },
    {
      "title": "Should give a course error for a missing prereq",
      "fullTitle": "ACTION: VALIDATE_COURSE Should give a course error for a missing prereq",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"Must have passed an (I/W) unit in {DEF2345, QLS2029}\",\n                endDate: \"\"\n            }]\n        }]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"Must have passed an (I/W) unit in {DEF2345, QLS2029}\",\n                endDate: \"\"\n            }]\n        }]\n    }],\n    courseErrors: [{\n        message: \"You must complete DEF2345 or QLS2029 before you can do ABC1234.\",\n        coordinates: [[0, 3]]\n    }],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b565216f-5b91-4052-8944-2f1694cf9872",
      "parentUUID": "b8535e85-e98e-4c92-a3d4-bb48f4e427a0",
      "skipped": false
    },
    {
      "title": "Should correctly handle the Otherwise branch of FOR COURSE_CODE syntax",
      "fullTitle": "ACTION: VALIDATE_COURSE Should correctly handle the Otherwise branch of FOR COURSE_CODE syntax",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }, {\n        year: 2018,\n        code: \"WS-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"Winter semester 2018 (Day)\"]\n            }],\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {Q2001, Q2003} Do true Otherwise Must have passed 1 (I/W) units in {TEST1001}\",\n                endDate: \"\"\n            }]\n        }]\n    }, {\n        year: 2018,\n        code: \"S2-01\",\n        units: [null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }, {\n        year: 2018,\n        code: \"WS-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"Winter semester 2018 (Day)\"]\n            }],\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {Q2001, Q2003} Do true Otherwise Must have passed 1 (I/W) units in {TEST1001}\",\n                endDate: \"\"\n            }]\n        }]\n    }, {\n        year: 2018,\n        code: \"S2-01\",\n        units: [null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"You must complete TEST1001 before you can do ABC1234.\",\n        coordinates: [[1, 3]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "2877562e-ae8c-4468-8b06-b37d2897d19d",
      "parentUUID": "b8535e85-e98e-4c92-a3d4-bb48f4e427a0",
      "skipped": false
    },
    {
      "title": "Should leave invalidUnitSlotCoordinates empty if there are no invalid unit slots",
      "fullTitle": "ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS Should leave invalidUnitSlotCoordinates empty if there are no invalid unit slots",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2015,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: false\n};\nvar action = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: {\n        unitCode: \"TEST1001\",\n        unitName: \"Test unit\",\n        locationAndTime: [{\n            location: \"Caulfield\",\n            time: [\"First semester 2017 (Day)\"]\n        }]\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2015,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d367c16b-8865-482a-9fb7-9bf9ee27aee7",
      "parentUUID": "a0cb971b-2bab-4c20-b416-6549d814e364",
      "skipped": false
    },
    {
      "title": "Should highlight teaching periods that contains the same unit",
      "fullTitle": "ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS Should highlight teaching periods that contains the same unit",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var currentYear = new Date().getFullYear();\nvar stateBefore = {\n    teachingPeriods: [{\n        year: currentYear - 2,\n        code: \"FY-01\",\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        year: currentYear - 1,\n        code: \"FY-01\",\n        units: [null, null, {\n            unitCode: \"DEF2345\"\n        }, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: false\n};\nvar action = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: {\n        unitCode: \"ABC1234\",\n        locationAndTime: [{\n            location: \"Parkville\",\n            time: [\"Full year 2018 (Day)\"]\n        }]\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: currentYear - 2,\n        code: \"FY-01\",\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        year: currentYear - 1,\n        code: \"FY-01\",\n        units: [null, null, {\n            unitCode: \"DEF2345\"\n        }, null]\n    }],\n    invalidUnitSlotCoordinates: [[0, null]],\n    highlightingInvalidUnitSlots: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c92950aa-236d-4cc4-876b-bd538393167a",
      "parentUUID": "a0cb971b-2bab-4c20-b416-6549d814e364",
      "skipped": false
    },
    {
      "title": "should not change the state if it receives an unknown action",
      "fullTitle": "DEFAULT should not change the state if it receives an unknown action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "f262eb37-a47c-4f1d-b8cb-4557d4a8bb00",
      "parentUUID": "be9dc2ec-3f25-4ae1-ab47-8a62e89f3f5b",
      "skipped": false
    },
    {
      "title": "should insert a notification from an empty list",
      "fullTitle": "ACTION: ADD_NOTIFICATION should insert a notification from an empty list",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: []\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "015375d5-5a46-4aec-b393-03737898a279",
      "parentUUID": "7d35afd1-c6cd-44d6-930f-070679a9d39d",
      "skipped": false
    },
    {
      "title": "should prepend a notification into an list of a few existing notifications.",
      "fullTitle": "ACTION: ADD_NOTIFICATION should prepend a notification into an list of a few existing notifications.",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b1aea3a7-b020-497c-8d30-f8db1640102b",
      "parentUUID": "7d35afd1-c6cd-44d6-930f-070679a9d39d",
      "skipped": false
    },
    {
      "title": "should replace a notification if it already exists with a specified ID",
      "fullTitle": "ACTION: ADD_NOTIFICATION should replace a notification if it already exists with a specified ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    message: \"New message goes over here\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"New message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f553a09f-49ea-493b-9768-cd69ae9c87b4",
      "parentUUID": "7d35afd1-c6cd-44d6-930f-070679a9d39d",
      "skipped": false
    },
    {
      "title": "Should remove a notification given its ID",
      "fullTitle": "ACTION: REMOVE_NOTIFICATION Should remove a notification given its ID",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    id: \"CONNECTION_LOST\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "40393e3d-d38a-4039-b773-1ba92a483d9b",
      "parentUUID": "cae96494-ed1b-4ea6-a011-76175db8e25e",
      "skipped": false
    },
    {
      "title": "Should remove a notification given its index",
      "fullTitle": "ACTION: REMOVE_NOTIFICATION Should remove a notification given its index",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    index: 1\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "65abc6cf-b334-47c6-be71-c91bc4620d72",
      "parentUUID": "cae96494-ed1b-4ea6-a011-76175db8e25e",
      "skipped": false
    },
    {
      "title": "Should not change state if it does not recognise an action",
      "fullTitle": "DEFAULT Should not change state if it does not recognise an action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Notifications2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "deaaae42-ff89-49ec-9a7e-5e6a528d8471",
      "parentUUID": "0503af5a-8a38-45fc-b872-ece0599ca25d",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the insert teaching period UI boolean",
      "fullTitle": "ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: true,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f24997d9-4909-4109-9d23-615ec7e13155",
      "parentUUID": "10f8b57f-6b07-4998-8d2d-24ac040d1464",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the insert teaching period UI boolean",
      "fullTitle": "ACTION: HIDE_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: true,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "98287053-e0df-4788-90d9-96c59ee709be",
      "parentUUID": "feb664ce-bd4d-49d3-b455-224d45d15b5d",
      "skipped": false
    },
    {
      "title": "Should correctly set the add unit UI boolean to true and correctly hide the sidebar when a unit is being added",
      "fullTitle": "ACTION: ADDING_UNIT Should correctly set the add unit UI boolean to true and correctly hide the sidebar when a unit is being added",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b27d80c9-6cda-44d8-9d62-97ea7abc9d6d",
      "parentUUID": "b905b8d9-bce7-4129-ba26-fc21ba409be1",
      "skipped": false
    },
    {
      "title": "Should correctly set the add unit UI boolean to false",
      "fullTitle": "ACTION: ADD_UNIT Should correctly set the add unit UI boolean to false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true\n};\nvar action = {\n    type: \"ADD_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a9b9d47c-a87a-4e56-b684-b6c198c0f9af",
      "parentUUID": "9f380ce7-e29f-492f-932f-5b01b35132b1",
      "skipped": false
    },
    {
      "title": "Should correctly set the add unit UI boolean to false",
      "fullTitle": "ACTION: CANCEL_ADDING_UNIT Should correctly set the add unit UI boolean to false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true\n};\nvar action = {\n    type: \"CANCEL_ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a8dd42aa-f3a6-4290-bf42-ba8f23239584",
      "parentUUID": "a2d23069-0b8d-42bc-9e8c-577616ebcfd8",
      "skipped": false
    },
    {
      "title": "Should correctly set the move unit UI boolean to true",
      "fullTitle": "ACTION: MOVING_UNIT Should correctly set the move unit UI boolean to true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"MOVING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a665df3a-03fa-4ecc-81c6-3188dafadcc7",
      "parentUUID": "06936baa-f237-4676-a6d3-0e93746808e9",
      "skipped": false
    },
    {
      "title": "Should correctly set the move unit UI boolean to false",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly set the move unit UI boolean to false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"MOVE_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e1c65a89-2c31-4e8e-b3db-e175527c5eb8",
      "parentUUID": "9f37509e-a247-40c1-b203-c0e58d4d96ac",
      "skipped": false
    },
    {
      "title": "Should correctly set the move unit UI boolean to false",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly set the move unit UI boolean to false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"SWAP_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a0e79d44-b7b2-46da-b99d-497494cba3a9",
      "parentUUID": "c417cbbc-f505-41d2-b139-fa5440e6f14c",
      "skipped": false
    },
    {
      "title": "Should correctly set the move unit UI boolean to false",
      "fullTitle": "ACTION: CANCEL_MOVING_UNIT Should correctly set the move unit UI boolean to false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "6303a968-55fa-45bd-821a-7e5a1421507a",
      "parentUUID": "9a32a21e-2581-45cd-8183-02c7f0a3e923",
      "skipped": false
    },
    {
      "title": "Should set the course to read only correctly",
      "fullTitle": "ACTION: SET_COURSE_READ_ONLY Should set the course to read only correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: false\n};\nvar action = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d24793b9-108c-4a71-8435-018f20d5c67c",
      "parentUUID": "e2d1d000-744e-4824-8226-b78e0270689c",
      "skipped": false
    },
    {
      "title": "Should set the course to allow edits correctly",
      "fullTitle": "ACTION: SET_COURSE_READ_AND_WRITE Should set the course to allow edits correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: true\n};\nvar action = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b9d82d36-f26b-440b-89aa-676164dc5dd5",
      "parentUUID": "6990c4ba-bb99-495b-b753-d67f54b246dc",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm delete teaching period modal UI to show",
      "fullTitle": "ACTION: SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to show",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4f7ccaa8-e487-4af3-9ff8-983ab4ff6eed",
      "parentUUID": "a0b24409-73de-472f-93fc-7fd00d5cb138",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm delete teaching period modal UI to hide",
      "fullTitle": "ACTION: HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to hide",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "2073c4c8-5832-464b-a885-bd3f15142f62",
      "parentUUID": "3085e266-3f31-4574-a25d-87858bcf62fc",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm decrease study load modal UI to show",
      "fullTitle": "ACTION: SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to show",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "71c62957-8861-451d-a46a-d5fdad4eb206",
      "parentUUID": "dd5bd440-2331-4d3a-9635-c807c783c041",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm decrease study load modal UI to hide",
      "fullTitle": "ACTION: HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to hide",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b476b514-1e94-425e-bd9b-ded2780d8689",
      "parentUUID": "39c6aee8-e099-4450-bd9f-64d521c7c976",
      "skipped": false
    },
    {
      "title": "Should set show flag for custom unit modal to be true",
      "fullTitle": "ACTION: SHOW_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "78510545-c2ee-449c-8ac4-bc9a65cc7c53",
      "parentUUID": "942b76a2-2ef7-41ce-bfa5-d0f7a49b51ab",
      "skipped": false
    },
    {
      "title": "Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
      "fullTitle": "ACTION: SHOW_CUSTOM_UNIT_MODAL Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"ABC1234\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: \"ABC1234\",\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5f7e3ac1-9f35-4ac6-a11d-2331a8f1fb87",
      "parentUUID": "942b76a2-2ef7-41ce-bfa5-d0f7a49b51ab",
      "skipped": false
    },
    {
      "title": "Should set unit code and position if it exists on top of setting show flag for custom unit modal to be true",
      "fullTitle": "ACTION: SHOW_CUSTOM_UNIT_MODAL Should set unit code and position if it exists on top of setting show flag for custom unit modal to be true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"ABC1234\",\n    tpIndex: 0,\n    unitIndex: 2\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: \"ABC1234\",\n    customTpIndex: 0,\n    customUnitIndex: 2\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "8215e458-ee28-40da-a49e-eb1af4b7be84",
      "parentUUID": "942b76a2-2ef7-41ce-bfa5-d0f7a49b51ab",
      "skipped": false
    },
    {
      "title": "Should set show flag for custom unit modal to be false",
      "fullTitle": "ACTION: HIDE_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be false",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: true\n};\nvar action = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d771e637-7215-42a8-8ae9-0c7b8125502c",
      "parentUUID": "bc29205d-70e9-430a-8146-9ef5551215b2",
      "skipped": false
    },
    {
      "title": "Should correctly show the sidebar when called",
      "fullTitle": "ACTION: SHOW_SIDEBAR Should correctly show the sidebar when called",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: false\n};\nvar action = {\n    type: \"SHOW_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "3f74b8ef-dfc9-4237-91a8-8719dccab796",
      "parentUUID": "dea2bdfd-dbdd-4149-bffd-5eba997fbe4e",
      "skipped": false
    },
    {
      "title": "Should correctly hide the sidebar when called",
      "fullTitle": "ACTION: HIDE_SIDEBAR Should correctly hide the sidebar when called",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"HIDE_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "00a2ed11-228d-4a27-b597-298eae09bda8",
      "parentUUID": "7e197f1f-bceb-4b6d-a157-fc9c60dffeeb",
      "skipped": false
    },
    {
      "title": "Should not change state if it does not recognise the action",
      "fullTitle": "DEFAULT Should not change state if it does not recognise the action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_UI2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "f8856bb6-3546-470c-abcc-68d04d1e5ef2",
      "parentUUID": "9e747afe-c9b8-4bde-9461-ed4ff9bfb759",
      "skipped": false
    },
    {
      "title": "Should return a non-negative number",
      "fullTitle": "UTILS: CostCalc Should return a non-negative number",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_CostCalc2.default.calculateCost(0, 0)).to.be.gte(0);\nexpect(_CostCalc2.default.calculateCost(2, 6)).to.be.gte(0);",
      "err": {},
      "isRoot": false,
      "uuid": "e0e3255e-7fc6-4448-985a-e000f55f9350",
      "parentUUID": "81feca0f-c77d-47a9-8f13-fde7ba6d17d7",
      "skipped": false
    },
    {
      "title": "Should multiply SCA band cost with credit points",
      "fullTitle": "UTILS: CostCalc Should multiply SCA band cost with credit points",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var scaBand = 3;\nvar creditPoints = 6;\nvar scaBandCost = _CostCalc2.default.calculateCost(scaBand, 1);\nexpect(_CostCalc2.default.calculateCost(scaBand, creditPoints)).to.equal(scaBandCost * creditPoints);",
      "err": {},
      "isRoot": false,
      "uuid": "b1b5f1ed-d12f-40f2-9b66-0f257d13dd34",
      "parentUUID": "81feca0f-c77d-47a9-8f13-fde7ba6d17d7",
      "skipped": false
    },
    {
      "title": "Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
      "fullTitle": "nextSemester Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([], 2011, [])).to.deep.equal({\n    index: 0,\n    year: 2011,\n    code: \"S1-01\",\n    teachingPeriodData: []\n});",
      "err": {},
      "isRoot": false,
      "uuid": "c2c203e6-ea9e-4aab-a12a-e54a7f40d68c",
      "parentUUID": "fc4b11ff-e15d-4ce1-8cd2-efcef1a4db5e",
      "skipped": false
    },
    {
      "title": "Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
      "fullTitle": "nextSemester Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([], 2029, sortedTeachingPeriodData)).to.deep.equal({\n    index: 0,\n    year: 2029,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
      "err": {},
      "isRoot": false,
      "uuid": "53d69522-833a-470b-a7ff-c1adccca1fb5",
      "parentUUID": "fc4b11ff-e15d-4ce1-8cd2-efcef1a4db5e",
      "skipped": false
    },
    {
      "title": "Should return semester two if the last teaching period is in semester one, with the same year",
      "fullTitle": "nextSemester Should return semester two if the last teaching period is in semester one, with the same year",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2025,\n    code: \"S1-01\"\n}, {\n    year: 2025,\n    code: \"S2-01\"\n}, {\n    year: 2026,\n    code: \"S1-01\"\n}, {\n    year: 2026,\n    code: \"S2-01\"\n}, {\n    year: 2027,\n    code: \"S1-01\"\n}], 2023, sortedTeachingPeriodData)).to.deep.equal({\n    index: 5,\n    year: 2027,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
      "err": {},
      "isRoot": false,
      "uuid": "53165e39-8320-4afa-ba78-d6f09abbc0fd",
      "parentUUID": "fc4b11ff-e15d-4ce1-8cd2-efcef1a4db5e",
      "skipped": false
    },
    {
      "title": "Should return semester one next year if the last teaching period is in semester two",
      "fullTitle": "nextSemester Should return semester one next year if the last teaching period is in semester two",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2015,\n    code: \"FY-01\"\n}, {\n    year: 2017,\n    code: \"S2-01\"\n}], 2015, sortedTeachingPeriodData)).to.deep.equal({\n    index: 2,\n    year: 2018,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
      "err": {},
      "isRoot": false,
      "uuid": "f0ca5044-0a9e-46f8-9d62-1c2404c553d4",
      "parentUUID": "fc4b11ff-e15d-4ce1-8cd2-efcef1a4db5e",
      "skipped": false
    },
    {
      "title": "Should render a semester string",
      "fullTitle": "getSemesterString Should render a semester string",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2019,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n})).to.equal(\"Semester 2, 2019\");",
      "err": {},
      "isRoot": false,
      "uuid": "12d90013-f3d7-4492-9bc3-1a322cb7c7b5",
      "parentUUID": "01ccef8b-8c81-4973-bc21-5a59e2a49190",
      "skipped": false
    },
    {
      "title": "Should revert back to semester codes if teachingPeriodData is not available",
      "fullTitle": "getSemesterString Should revert back to semester codes if teachingPeriodData is not available",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2015,\n    code: \"S1-01\"\n})).to.equal(\"S1-01, 2015\");",
      "err": {},
      "isRoot": false,
      "uuid": "b860c275-e291-4a2a-afd0-f51bf0817301",
      "parentUUID": "01ccef8b-8c81-4973-bc21-5a59e2a49190",
      "skipped": false
    },
    {
      "title": "Should return the right year based off current month",
      "fullTitle": "UTILS: ShowYear Should return the right year based off current month",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "if (new Date().getMonth() + 1 >= 11) {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear() + 1);\n} else {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear());\n}",
      "err": {},
      "isRoot": false,
      "uuid": "4c4e4cb1-3c7f-4e71-9318-106581c5d412",
      "parentUUID": "9f98491a-0100-401e-8d48-47678c8737d8",
      "skipped": false
    },
    {
      "title": "Should contain the same year as it was specified",
      "fullTitle": "UTILS: YearCalc Should contain the same year as it was specified",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getStartYearVals(2016).find(function (year) {\n    return year.value === 2016;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2017).find(function (year) {\n    return year.value === 2017;\n})).to.be.ok;",
      "err": {},
      "isRoot": false,
      "uuid": "aa49a0e3-3e8a-4d8e-8dec-065a3de02e51",
      "parentUUID": "516c8a42-b876-45af-ae77-d8e5e6f49181",
      "skipped": false
    },
    {
      "title": "Should contain a year that is ten years from now",
      "fullTitle": "UTILS: YearCalc Should contain a year that is ten years from now",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getStartYearVals(2019).find(function (year) {\n    return year.value === 2029;\n})).to.be.ok;\nexpect(_YearCalc2.default.getStartYearVals(2012).find(function (year) {\n    return year.value === 2002;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2028;\n})).to.be.ok;",
      "err": {},
      "isRoot": false,
      "uuid": "9c521a67-edb1-4e80-8083-467ed0d6125c",
      "parentUUID": "516c8a42-b876-45af-ae77-d8e5e6f49181",
      "skipped": false
    },
    {
      "title": "Should not contain any past year when computing end years",
      "fullTitle": "UTILS: YearCalc Should not contain any past year when computing end years",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2017;\n})).to.be.not.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2008;\n})).to.be.not.ok;",
      "err": {},
      "isRoot": false,
      "uuid": "c88dbe63-6f62-45a8-82ea-17b525975d1c",
      "parentUUID": "516c8a42-b876-45af-ae77-d8e5e6f49181",
      "skipped": false
    },
    {
      "title": "Should have starting years go in decreasing order from one year ahead to the minimum",
      "fullTitle": "UTILS: YearCalc Should have starting years go in decreasing order from one year ahead to the minimum",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getStartYearVals(2019).slice(0, 12)).to.deep.equal([{\n    text: \"2020\",\n    value: 2020\n}, {\n    text: \"2019\",\n    value: 2019\n}, {\n    text: \"2018\",\n    value: 2018\n}, {\n    text: \"2017\",\n    value: 2017\n}, {\n    text: \"2016\",\n    value: 2016\n}, {\n    text: \"2015\",\n    value: 2015\n}, {\n    text: \"2014\",\n    value: 2014\n}, {\n    text: \"2013\",\n    value: 2013\n}, {\n    text: \"2012\",\n    value: 2012\n}, {\n    text: \"2011\",\n    value: 2011\n}, {\n    text: \"2010\",\n    value: 2010\n}, {\n    text: \"2009\",\n    value: 2009\n}]);",
      "err": {},
      "isRoot": false,
      "uuid": "12c3eb28-bf88-41c5-b387-5dfd73435cf0",
      "parentUUID": "516c8a42-b876-45af-ae77-d8e5e6f49181",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2017
}