{
  "stats": {
    "suites": 155,
    "tests": 196,
    "passes": 196,
    "pending": 0,
    "failures": 0,
    "start": "2017-04-05T03:30:41.254Z",
    "end": "2017-04-05T03:30:42.916Z",
    "duration": 1662,
    "testsRegistered": 196,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "ACTION-CREATOR: CounterActions",
        "suites": [
          {
            "title": "AC: incrementCreditPoints",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to increment credit points counter",
                "fullTitle": "ACTION-CREATOR: CounterActions AC: incrementCreditPoints Should create an action to increment credit points counter",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 5\n};\n(0, _expect2.default)(actions.incrementCreditPoints(5)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "25966038-8d2a-4e35-86cc-b69be3c79e8c",
                "parentUUID": "df5d7470-7141-4396-8f03-fd6ecbe723e1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CounterActions.spec.js",
            "uuid": "df5d7470-7141-4396-8f03-fd6ecbe723e1",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/actionCreators/CounterActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to increment credit points counter",
                "fullTitle": "ACTION-CREATOR: CounterActions AC: incrementCreditPoints Should create an action to increment credit points counter",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 5\n};\n(0, _expect2.default)(actions.incrementCreditPoints(5)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "25966038-8d2a-4e35-86cc-b69be3c79e8c",
                "parentUUID": "df5d7470-7141-4396-8f03-fd6ecbe723e1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 4
          },
          {
            "title": "AC: decrementCreditPoints",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to decrement credit points counter",
                "fullTitle": "ACTION-CREATOR: CounterActions AC: decrementCreditPoints Should create an action to decrement credit points counter",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 5\n};\n(0, _expect2.default)(actions.decrementCreditPoints(5)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "7d92dab8-5143-459a-ab64-8556df7a9236",
                "parentUUID": "09b50ff7-4a7d-4cd9-9512-9fac898bbbb1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CounterActions.spec.js",
            "uuid": "09b50ff7-4a7d-4cd9-9512-9fac898bbbb1",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/actionCreators/CounterActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to decrement credit points counter",
                "fullTitle": "ACTION-CREATOR: CounterActions AC: decrementCreditPoints Should create an action to decrement credit points counter",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 5\n};\n(0, _expect2.default)(actions.decrementCreditPoints(5)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "7d92dab8-5143-459a-ab64-8556df7a9236",
                "parentUUID": "09b50ff7-4a7d-4cd9-9512-9fac898bbbb1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: incrementCost",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to increment cost counter",
                "fullTitle": "ACTION-CREATOR: CounterActions AC: incrementCost Should create an action to increment cost counter",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"INCREMENT_COST\",\n    value: 5\n};\n(0, _expect2.default)(actions.incrementCost(5)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "1be2ead0-156b-4c3c-8377-8b3d7838fd8e",
                "parentUUID": "d496dc99-1d50-47fa-a3fa-a7996a0cf772",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CounterActions.spec.js",
            "uuid": "d496dc99-1d50-47fa-a3fa-a7996a0cf772",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/actionCreators/CounterActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to increment cost counter",
                "fullTitle": "ACTION-CREATOR: CounterActions AC: incrementCost Should create an action to increment cost counter",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"INCREMENT_COST\",\n    value: 5\n};\n(0, _expect2.default)(actions.incrementCost(5)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "1be2ead0-156b-4c3c-8377-8b3d7838fd8e",
                "parentUUID": "d496dc99-1d50-47fa-a3fa-a7996a0cf772",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: decrementCosts",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to decrement cost counter",
                "fullTitle": "ACTION-CREATOR: CounterActions AC: decrementCosts Should create an action to decrement cost counter",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"DECREMENT_COST\",\n    value: 5\n};\n(0, _expect2.default)(actions.decrementCost(5)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "e7d54640-ec24-4174-aac4-bf42d97f67e1",
                "parentUUID": "6df5b491-4e69-4e30-a03f-b152d4d2348f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CounterActions.spec.js",
            "uuid": "6df5b491-4e69-4e30-a03f-b152d4d2348f",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/actionCreators/CounterActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to decrement cost counter",
                "fullTitle": "ACTION-CREATOR: CounterActions AC: decrementCosts Should create an action to decrement cost counter",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"DECREMENT_COST\",\n    value: 5\n};\n(0, _expect2.default)(actions.decrementCost(5)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "e7d54640-ec24-4174-aac4-bf42d97f67e1",
                "parentUUID": "6df5b491-4e69-4e30-a03f-b152d4d2348f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/actionCreators/CounterActions.spec.js",
        "uuid": "8625dfb4-a7c1-43fc-a363-7fc81f274498",
        "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/actionCreators/CounterActions.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "ACTION-CREATOR: CourseActions",
        "suites": [
          {
            "title": "AC: insertTeachingPeriod",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to insert a teaching period",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: insertTeachingPeriod Should create an action to insert a teaching period",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{\n    type: \"INSERT_TEACHING_PERIOD\",\n    index: 1,\n    year: 2016,\n    code: \"tpCode\"\n}, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n}];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.insertTeachingPeriod(1, 2016, \"tpCode\"));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "dd766a99-626f-41b7-a796-6b66c3ff6769",
                "parentUUID": "24e790f9-1de3-4498-ad21-363a418f01d7",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "24e790f9-1de3-4498-ad21-363a418f01d7",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to insert a teaching period",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: insertTeachingPeriod Should create an action to insert a teaching period",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{\n    type: \"INSERT_TEACHING_PERIOD\",\n    index: 1,\n    year: 2016,\n    code: \"tpCode\"\n}, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n}];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.insertTeachingPeriod(1, 2016, \"tpCode\"));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "dd766a99-626f-41b7-a796-6b66c3ff6769",
                "parentUUID": "24e790f9-1de3-4498-ad21-363a418f01d7",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 4
          },
          {
            "title": "AC: removeTeachingPeriod",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to remove a teaching period",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: removeTeachingPeriod Should create an action to remove a teaching period",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1,\n    units: [\"unit1\", \"unit2\", \"unit3\", null]\n}, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n}];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.removeTeachingPeriod(1, [\"unit1\", \"unit2\", \"unit3\", null]));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "3ab6039d-d600-4c19-bc70-38b00eaf6146",
                "parentUUID": "4b2f5475-481b-420d-8785-ab52bfbc6471",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "4b2f5475-481b-420d-8785-ab52bfbc6471",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to remove a teaching period",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: removeTeachingPeriod Should create an action to remove a teaching period",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1,\n    units: [\"unit1\", \"unit2\", \"unit3\", null]\n}, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n}];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.removeTeachingPeriod(1, [\"unit1\", \"unit2\", \"unit3\", null]));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "3ab6039d-d600-4c19-bc70-38b00eaf6146",
                "parentUUID": "4b2f5475-481b-420d-8785-ab52bfbc6471",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "AC: increaseStudyLoad",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to increase the study load",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: increaseStudyLoad Should create an action to increase the study load",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\n(0, _expect2.default)(actions.increaseStudyLoad()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "561ef96a-482b-41a3-bc30-f85e6327cf91",
                "parentUUID": "81b083c0-6848-425f-950c-8b44b33ce846",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "81b083c0-6848-425f-950c-8b44b33ce846",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to increase the study load",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: increaseStudyLoad Should create an action to increase the study load",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\n(0, _expect2.default)(actions.increaseStudyLoad()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "561ef96a-482b-41a3-bc30-f85e6327cf91",
                "parentUUID": "81b083c0-6848-425f-950c-8b44b33ce846",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: decreaseStudyLoad",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to increase the study load with units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: decreaseStudyLoad Should create an action to increase the study load with units affected",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockTeachingPeriods = [{ year: 2018, code: \"S1-01\", units: [null, null, null, null, { unitName: \"unit1\", creditPoints: 6 }] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }, { year: 2019, code: \"S1-01\", units: [null, null, null, null, { unitName: \"unit2\", creditPoints: 6 }] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null, null] }];\nvar expectedActions = [{ type: \"PREP_FOR_DELETION\", unitCoords: [[0, 4], [2, 4]] }, { type: \"DECREASE_STUDY_LOAD\", units: [{ unitName: \"unit1\", creditPoints: 6 }, { unitName: \"unit2\", creditPoints: 6 }] }];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.decreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "df99fd9f-3bf4-4526-92ec-e7e6e5a3c8df",
                "parentUUID": "a31cf461-8f22-450e-9586-febd39d576a1",
                "skipped": false
              },
              {
                "title": "Should create an action to increase the study load with no units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: decreaseStudyLoad Should create an action to increase the study load with no units affected",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockTeachingPeriods = [{ year: 2018, code: \"S1-01\", units: [null, null, null, \"unit1\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }, { year: 2019, code: \"S1-01\", units: [null, null, null, \"unit2\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null, null] }];\nvar expectedActions = [{ type: \"PREP_FOR_DELETION\", unitCoords: [] }, { type: \"DECREASE_STUDY_LOAD\", units: [] }];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.decreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "3a72281d-ea34-4d57-b9d6-14a19152d359",
                "parentUUID": "a31cf461-8f22-450e-9586-febd39d576a1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "a31cf461-8f22-450e-9586-febd39d576a1",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to increase the study load with units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: decreaseStudyLoad Should create an action to increase the study load with units affected",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockTeachingPeriods = [{ year: 2018, code: \"S1-01\", units: [null, null, null, null, { unitName: \"unit1\", creditPoints: 6 }] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }, { year: 2019, code: \"S1-01\", units: [null, null, null, null, { unitName: \"unit2\", creditPoints: 6 }] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null, null] }];\nvar expectedActions = [{ type: \"PREP_FOR_DELETION\", unitCoords: [[0, 4], [2, 4]] }, { type: \"DECREASE_STUDY_LOAD\", units: [{ unitName: \"unit1\", creditPoints: 6 }, { unitName: \"unit2\", creditPoints: 6 }] }];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.decreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "df99fd9f-3bf4-4526-92ec-e7e6e5a3c8df",
                "parentUUID": "a31cf461-8f22-450e-9586-febd39d576a1",
                "skipped": false
              },
              {
                "title": "Should create an action to increase the study load with no units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: decreaseStudyLoad Should create an action to increase the study load with no units affected",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockTeachingPeriods = [{ year: 2018, code: \"S1-01\", units: [null, null, null, \"unit1\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }, { year: 2019, code: \"S1-01\", units: [null, null, null, \"unit2\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null, null] }];\nvar expectedActions = [{ type: \"PREP_FOR_DELETION\", unitCoords: [] }, { type: \"DECREASE_STUDY_LOAD\", units: [] }];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.decreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "3a72281d-ea34-4d57-b9d6-14a19152d359",
                "parentUUID": "a31cf461-8f22-450e-9586-febd39d576a1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 5
          },
          {
            "title": "AC: addUnit",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly create the actions required for the addition of a unit that is not a custom unit being dragged",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: addUnit Should correctly create the actions required for the addition of a unit that is not a custom unit being dragged",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockUnit = {\n                customUnitDragging: false,\n                cost: 200,\n                creditPoints: 6,\n                unitCode: \"TEST1001\"\n            };\n            var expectedActions = [{ type: \"ADD_UNIT\", tpIndex: 1, unitIndex: 1, unit: mockUnit, cost: 200, creditPoints: 6 }, { type: \"CLEAR_HIGHLIGHTING_INVALID_UNIT_SLOTS\" }, { type: \"VALIDATE_COURSE\" }, { type: \"MODIFIED_COURSE_PLAN\" }];\n            var store = mockStore({});\n            store.dispatch(actions.addUnit(1, 1, mockUnit));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "fa78fe3b-d2a8-43ba-9cc5-0e22f053c93a",
                "parentUUID": "c483441d-2825-46ce-9feb-00edc7404463",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "c483441d-2825-46ce-9feb-00edc7404463",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should correctly create the actions required for the addition of a unit that is not a custom unit being dragged",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: addUnit Should correctly create the actions required for the addition of a unit that is not a custom unit being dragged",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockUnit = {\n                customUnitDragging: false,\n                cost: 200,\n                creditPoints: 6,\n                unitCode: \"TEST1001\"\n            };\n            var expectedActions = [{ type: \"ADD_UNIT\", tpIndex: 1, unitIndex: 1, unit: mockUnit, cost: 200, creditPoints: 6 }, { type: \"CLEAR_HIGHLIGHTING_INVALID_UNIT_SLOTS\" }, { type: \"VALIDATE_COURSE\" }, { type: \"MODIFIED_COURSE_PLAN\" }];\n            var store = mockStore({});\n            store.dispatch(actions.addUnit(1, 1, mockUnit));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "fa78fe3b-d2a8-43ba-9cc5-0e22f053c93a",
                "parentUUID": "c483441d-2825-46ce-9feb-00edc7404463",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 9
          },
          {
            "title": "AC: removeUnit",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly create the actions required for removal of a unit",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: removeUnit Should correctly create the actions required for removal of a unit",
                "timedOut": false,
                "duration": 11,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{ type: \"REMOVE_UNIT\", tpIndex: 1, unitIndex: 1, cost: 200, creditPoints: 6 }, { type: \"VALIDATE_COURSE\" }, { type: \"MODIFIED_COURSE_PLAN\" }];\n            var store = mockStore({});\n            store.dispatch(actions.removeUnit(1, 1, 6, 200));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "efa9813c-0c53-486b-80d6-6465555dc150",
                "parentUUID": "35903164-18f6-4f6e-b0ae-80e7945feba5",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "35903164-18f6-4f6e-b0ae-80e7945feba5",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should correctly create the actions required for removal of a unit",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: removeUnit Should correctly create the actions required for removal of a unit",
                "timedOut": false,
                "duration": 11,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{ type: \"REMOVE_UNIT\", tpIndex: 1, unitIndex: 1, cost: 200, creditPoints: 6 }, { type: \"VALIDATE_COURSE\" }, { type: \"MODIFIED_COURSE_PLAN\" }];\n            var store = mockStore({});\n            store.dispatch(actions.removeUnit(1, 1, 6, 200));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "efa9813c-0c53-486b-80d6-6465555dc150",
                "parentUUID": "35903164-18f6-4f6e-b0ae-80e7945feba5",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 11
          },
          {
            "title": "AC: clearCourse",
            "suites": [],
            "tests": [
              {
                "title": "Should create the actions for clearing the course",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: clearCourse Should create the actions for clearing the course",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{ type: \"CLEAR_COURSE\" }, { type: \"GET_NEXT_SEMESTER_STRING\" }, { type: \"VALIDATE_COURSE\" }];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.clearCourse());\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "92c218b1-0964-4a05-8755-6dbaa5c51e55",
                "parentUUID": "2b124f1b-b95c-40d5-8833-47dadec25c87",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "2b124f1b-b95c-40d5-8833-47dadec25c87",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create the actions for clearing the course",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: clearCourse Should create the actions for clearing the course",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{ type: \"CLEAR_COURSE\" }, { type: \"GET_NEXT_SEMESTER_STRING\" }, { type: \"VALIDATE_COURSE\" }];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.clearCourse());\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "92c218b1-0964-4a05-8755-6dbaa5c51e55",
                "parentUUID": "2b124f1b-b95c-40d5-8833-47dadec25c87",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 4
          },
          {
            "title": "AC: generateCourse",
            "suites": [],
            "tests": [
              {
                "title": "Should create the action for generating the course",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: generateCourse Should create the action for generating the course",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2016,\n    endYear: 2019\n};\n(0, _expect2.default)(actions.generateCourse(2016, 2019)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "84842ffc-fd55-4824-8a42-bc83779ec40a",
                "parentUUID": "60af4c7a-a03d-4f99-a28b-d1aa5559487e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "60af4c7a-a03d-4f99-a28b-d1aa5559487e",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create the action for generating the course",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: generateCourse Should create the action for generating the course",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2016,\n    endYear: 2019\n};\n(0, _expect2.default)(actions.generateCourse(2016, 2019)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "84842ffc-fd55-4824-8a42-bc83779ec40a",
                "parentUUID": "60af4c7a-a03d-4f99-a28b-d1aa5559487e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: submitYearForm",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly create the actions required for submission of a year form",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: submitYearForm Should correctly create the actions required for submission of a year form",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{ type: \"SUBMIT_YEAR_FORM\", startYear: 2016, endYear: 2019 }, { type: \"GENERATE_COURSE\", startYear: 2016, endYear: 2019 }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\n            var store = mockStore({});\n            store.dispatch(actions.submitYearForm(2016, 2019));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "84cd70a1-dd2e-4429-92dc-3edea591a54c",
                "parentUUID": "be71fd50-b262-4760-aa88-30fb3049f932",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "be71fd50-b262-4760-aa88-30fb3049f932",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should correctly create the actions required for submission of a year form",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: submitYearForm Should correctly create the actions required for submission of a year form",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{ type: \"SUBMIT_YEAR_FORM\", startYear: 2016, endYear: 2019 }, { type: \"GENERATE_COURSE\", startYear: 2016, endYear: 2019 }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\n            var store = mockStore({});\n            store.dispatch(actions.submitYearForm(2016, 2019));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "84cd70a1-dd2e-4429-92dc-3edea591a54c",
                "parentUUID": "be71fd50-b262-4760-aa88-30fb3049f932",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 9
          },
          {
            "title": "AC: changeStartYear",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly create actions required to change the start year",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: changeStartYear Should correctly create actions required to change the start year",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{ type: \"CHANGE_START_YEAR\", year: 2020 }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\nvar store = mockStore({});\nstore.dispatch(actions.changeStartYear(2020));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "2b60d89b-f3a0-40ac-b9c7-bcde8a9c4466",
                "parentUUID": "829e6918-afe6-46a3-97fa-986082a5c9fc",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "829e6918-afe6-46a3-97fa-986082a5c9fc",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should correctly create actions required to change the start year",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: changeStartYear Should correctly create actions required to change the start year",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{ type: \"CHANGE_START_YEAR\", year: 2020 }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\nvar store = mockStore({});\nstore.dispatch(actions.changeStartYear(2020));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "2b60d89b-f3a0-40ac-b9c7-bcde8a9c4466",
                "parentUUID": "829e6918-afe6-46a3-97fa-986082a5c9fc",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "AC: getNextSemesterString",
            "suites": [],
            "tests": [
              {
                "title": "Should create the action for generating the course",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: getNextSemesterString Should create the action for generating the course",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n};\n(0, _expect2.default)(actions.getNextSemesterString()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "68551c55-0574-41da-8d04-4f055a5ff584",
                "parentUUID": "9da95fbe-1e4a-43a2-9932-b9f1b965e320",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "9da95fbe-1e4a-43a2-9932-b9f1b965e320",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create the action for generating the course",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: getNextSemesterString Should create the action for generating the course",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n};\n(0, _expect2.default)(actions.getNextSemesterString()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "68551c55-0574-41da-8d04-4f055a5ff584",
                "parentUUID": "9da95fbe-1e4a-43a2-9932-b9f1b965e320",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: getAffectedUnitsInColumn",
            "suites": [],
            "tests": [
              {
                "title": "Should create the action for getting affected units in an overload column",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: getAffectedUnitsInColumn Should create the action for getting affected units in an overload column",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"GET_AFFECTED_UNITS_IN_OVERLOAD_COLUMN\",\n    index: 4\n};\n(0, _expect2.default)(actions.getAffectedUnitsInColumn(4)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "5dd9e680-3ebb-4756-9525-fcdf8bd246a7",
                "parentUUID": "e837b136-5a3e-4819-8078-94340496158b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "e837b136-5a3e-4819-8078-94340496158b",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create the action for getting affected units in an overload column",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: getAffectedUnitsInColumn Should create the action for getting affected units in an overload column",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"GET_AFFECTED_UNITS_IN_OVERLOAD_COLUMN\",\n    index: 4\n};\n(0, _expect2.default)(actions.getAffectedUnitsInColumn(4)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "5dd9e680-3ebb-4756-9525-fcdf8bd246a7",
                "parentUUID": "e837b136-5a3e-4819-8078-94340496158b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: attemptToDeleteTeachingPeriod",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly create the actions required for deletion of a teaching period with units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: attemptToDeleteTeachingPeriod Should correctly create the actions required for deletion of a teaching period with units affected",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockUnits = [{ unitCode: \"TEST101\", unitName: \"unit1\" }, null, { unitCode: \"TEST102\", unitName: \"unit2\" }, null, null];\nvar expectedActions = [{ type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\" }, { type: \"UPDATE_AFFECTED_UNITS\", affectedUnits: [\"TEST101 - unit1\", \"TEST102 - unit2\"] }, { type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\", index: 1 }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDeleteTeachingPeriod(1, mockUnits));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "0388377c-f3d2-4a9f-8986-a835c141e366",
                "parentUUID": "3495a9c5-559f-48e0-9bd2-6c496b90e833",
                "skipped": false
              },
              {
                "title": "Should correctly create the actions required for deletion of a teaching period with no units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: attemptToDeleteTeachingPeriod Should correctly create the actions required for deletion of a teaching period with no units affected",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockUnits = [null, null, null, null, null];\nvar expectedActions = [{ type: \"REMOVE_TEACHING_PERIOD\", index: 1, units: [null, null, null, null, null] }, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, { type: \"GET_NEXT_SEMESTER_STRING\" }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDeleteTeachingPeriod(1, mockUnits));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "0342c46d-7b06-4f5f-8fff-fc266df8418f",
                "parentUUID": "3495a9c5-559f-48e0-9bd2-6c496b90e833",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "3495a9c5-559f-48e0-9bd2-6c496b90e833",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should correctly create the actions required for deletion of a teaching period with units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: attemptToDeleteTeachingPeriod Should correctly create the actions required for deletion of a teaching period with units affected",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockUnits = [{ unitCode: \"TEST101\", unitName: \"unit1\" }, null, { unitCode: \"TEST102\", unitName: \"unit2\" }, null, null];\nvar expectedActions = [{ type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\" }, { type: \"UPDATE_AFFECTED_UNITS\", affectedUnits: [\"TEST101 - unit1\", \"TEST102 - unit2\"] }, { type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\", index: 1 }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDeleteTeachingPeriod(1, mockUnits));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "0388377c-f3d2-4a9f-8986-a835c141e366",
                "parentUUID": "3495a9c5-559f-48e0-9bd2-6c496b90e833",
                "skipped": false
              },
              {
                "title": "Should correctly create the actions required for deletion of a teaching period with no units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: attemptToDeleteTeachingPeriod Should correctly create the actions required for deletion of a teaching period with no units affected",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockUnits = [null, null, null, null, null];\nvar expectedActions = [{ type: \"REMOVE_TEACHING_PERIOD\", index: 1, units: [null, null, null, null, null] }, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, { type: \"GET_NEXT_SEMESTER_STRING\" }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDeleteTeachingPeriod(1, mockUnits));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "0342c46d-7b06-4f5f-8fff-fc266df8418f",
                "parentUUID": "3495a9c5-559f-48e0-9bd2-6c496b90e833",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          },
          {
            "title": "AC: attemptToDecreaseStudyLoad",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly create the actions required for decrease of a study load with units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: attemptToDecreaseStudyLoad Should correctly create the actions required for decrease of a study load with units affected",
                "timedOut": false,
                "duration": 25,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockTeachingPeriods = [{ units: [null, null, { unitCode: \"TEST10A\", unitName: \"unitA\" }, null, { unitCode: \"TEST101\", unitName: \"unit1\", creditPoints: 6 }] }, { units: [null, null, { unitCode: \"TEST10B\", unitName: \"unitB\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10C\", unitName: \"unitC\" }, null, { unitCode: \"TEST102\", unitName: \"unit2\", creditPoints: 6 }] }, { units: [null, null, { unitCode: \"TEST10D\", unitName: \"unitD\" }, null, null] }];\nvar expectedActions = [{ type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\" }, { type: \"UPDATE_AFFECTED_UNITS\", affectedUnits: [\"TEST101 - unit1\", \"TEST102 - unit2\"] }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDecreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "f8c36d85-e675-4fa8-bf26-3a8a5e42a2cb",
                "parentUUID": "0588407f-7644-4680-b207-cf33205e118d",
                "skipped": false
              },
              {
                "title": "Should correctly create the actions required for decrease of a study load with no units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: attemptToDecreaseStudyLoad Should correctly create the actions required for decrease of a study load with no units affected",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockTeachingPeriods = [{ units: [null, null, { unitCode: \"TEST10A\", unitName: \"unitA\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10B\", unitName: \"unitB\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10C\", unitName: \"unitC\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10D\", unitName: \"unitD\" }, null, null] }];\nvar expectedActions = [{ type: \"PREP_FOR_DELETION\", unitCoords: [] }, { type: \"DECREASE_STUDY_LOAD\", units: [] }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDecreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "479da44c-71bd-4fc5-aec3-e00c2aaf21f8",
                "parentUUID": "0588407f-7644-4680-b207-cf33205e118d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "0588407f-7644-4680-b207-cf33205e118d",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should correctly create the actions required for decrease of a study load with units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: attemptToDecreaseStudyLoad Should correctly create the actions required for decrease of a study load with units affected",
                "timedOut": false,
                "duration": 25,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockTeachingPeriods = [{ units: [null, null, { unitCode: \"TEST10A\", unitName: \"unitA\" }, null, { unitCode: \"TEST101\", unitName: \"unit1\", creditPoints: 6 }] }, { units: [null, null, { unitCode: \"TEST10B\", unitName: \"unitB\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10C\", unitName: \"unitC\" }, null, { unitCode: \"TEST102\", unitName: \"unit2\", creditPoints: 6 }] }, { units: [null, null, { unitCode: \"TEST10D\", unitName: \"unitD\" }, null, null] }];\nvar expectedActions = [{ type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\" }, { type: \"UPDATE_AFFECTED_UNITS\", affectedUnits: [\"TEST101 - unit1\", \"TEST102 - unit2\"] }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDecreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "f8c36d85-e675-4fa8-bf26-3a8a5e42a2cb",
                "parentUUID": "0588407f-7644-4680-b207-cf33205e118d",
                "skipped": false
              },
              {
                "title": "Should correctly create the actions required for decrease of a study load with no units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: attemptToDecreaseStudyLoad Should correctly create the actions required for decrease of a study load with no units affected",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockTeachingPeriods = [{ units: [null, null, { unitCode: \"TEST10A\", unitName: \"unitA\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10B\", unitName: \"unitB\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10C\", unitName: \"unitC\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10D\", unitName: \"unitD\" }, null, null] }];\nvar expectedActions = [{ type: \"PREP_FOR_DELETION\", unitCoords: [] }, { type: \"DECREASE_STUDY_LOAD\", units: [] }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDecreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "479da44c-71bd-4fc5-aec3-e00c2aaf21f8",
                "parentUUID": "0588407f-7644-4680-b207-cf33205e118d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 27
          },
          {
            "title": "AC: getAffectedUnitsInRow",
            "suites": [],
            "tests": [
              {
                "title": "Should create the action for getting affected units in an teaching period row",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: getAffectedUnitsInRow Should create the action for getting affected units in an teaching period row",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"GET_AFFECTED_UNITS_IN_TEACHING_PERIOD_ROW\",\n    index: 4\n};\n(0, _expect2.default)(actions.getAffectedUnitsInRow(4)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "29c6d808-bc3a-4e92-9607-00e0e4583fb2",
                "parentUUID": "61ed7d2e-791d-4c75-9e10-b75b6228db31",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "61ed7d2e-791d-4c75-9e10-b75b6228db31",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create the action for getting affected units in an teaching period row",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: getAffectedUnitsInRow Should create the action for getting affected units in an teaching period row",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"GET_AFFECTED_UNITS_IN_TEACHING_PERIOD_ROW\",\n    index: 4\n};\n(0, _expect2.default)(actions.getAffectedUnitsInRow(4)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "29c6d808-bc3a-4e92-9607-00e0e4583fb2",
                "parentUUID": "61ed7d2e-791d-4c75-9e10-b75b6228db31",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: validateCourse",
            "suites": [],
            "tests": [
              {
                "title": "Should create the action for validating the course",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: validateCourse Should create the action for validating the course",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"VALIDATE_COURSE\"\n};\n(0, _expect2.default)(actions.validateCourse()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "b3afbe73-ceec-4633-ab8f-fad10b880a86",
                "parentUUID": "f7393ff4-90bb-4cab-9b49-f40d745ed058",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "f7393ff4-90bb-4cab-9b49-f40d745ed058",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create the action for validating the course",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: validateCourse Should create the action for validating the course",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"VALIDATE_COURSE\"\n};\n(0, _expect2.default)(actions.validateCourse()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "b3afbe73-ceec-4633-ab8f-fad10b880a86",
                "parentUUID": "f7393ff4-90bb-4cab-9b49-f40d745ed058",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: highlightInvalidUnitSlots",
            "suites": [],
            "tests": [
              {
                "title": "Should create the action for highlighting the invalid unit slots",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: highlightInvalidUnitSlots Should create the action for highlighting the invalid unit slots",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: \"UnitTest\",\n    ignoreCoordinate: false\n};\n(0, _expect2.default)(actions.highlightInvalidUnitSlots(\"UnitTest\", false)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "6fccaa57-fda4-4e86-8354-ec16225410a0",
                "parentUUID": "7d3262b5-b55d-473c-ac2e-397852142c81",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "7d3262b5-b55d-473c-ac2e-397852142c81",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create the action for highlighting the invalid unit slots",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: highlightInvalidUnitSlots Should create the action for highlighting the invalid unit slots",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: \"UnitTest\",\n    ignoreCoordinate: false\n};\n(0, _expect2.default)(actions.highlightInvalidUnitSlots(\"UnitTest\", false)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "6fccaa57-fda4-4e86-8354-ec16225410a0",
                "parentUUID": "7d3262b5-b55d-473c-ac2e-397852142c81",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: clearHighlightingInvalidUnitSlots",
            "suites": [],
            "tests": [
              {
                "title": "Should create the action for clearing the highlighting for invalid unit slots",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: clearHighlightingInvalidUnitSlots Should create the action for clearing the highlighting for invalid unit slots",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"CLEAR_HIGHLIGHTING_INVALID_UNIT_SLOTS\"\n};\n(0, _expect2.default)(actions.clearHighlightingInvalidUnitSlots()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "c772c39f-ba88-4b74-97cc-5d746c3d70f9",
                "parentUUID": "caee6b36-4905-4790-b4d8-93c1b51b7f94",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "caee6b36-4905-4790-b4d8-93c1b51b7f94",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create the action for clearing the highlighting for invalid unit slots",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: clearHighlightingInvalidUnitSlots Should create the action for clearing the highlighting for invalid unit slots",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"CLEAR_HIGHLIGHTING_INVALID_UNIT_SLOTS\"\n};\n(0, _expect2.default)(actions.clearHighlightingInvalidUnitSlots()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "c772c39f-ba88-4b74-97cc-5d746c3d70f9",
                "parentUUID": "caee6b36-4905-4790-b4d8-93c1b51b7f94",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/actionCreators/CourseActions.spec.js",
        "uuid": "a7b5aefe-da1a-4f88-b019-6996ff6e898c",
        "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/actionCreators/CourseActions.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "ACTION-CREATOR: UIActions",
        "suites": [
          {
            "title": "AC: showInsertTeachingPeriodUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to show the insert teaching period UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showInsertTeachingPeriodUI Should create an action to show the insert teaching period UI",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"testTPCode\"\n};\n(0, _expect2.default)(actions.showInsertTeachingPeriodUI(\"testTPCode\")).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "92bd614e-5d23-450f-b9fc-632c3cf67e69",
                "parentUUID": "a5661734-3c34-47a6-a7b5-d5f3c4992364",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "a5661734-3c34-47a6-a7b5-d5f3c4992364",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to show the insert teaching period UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showInsertTeachingPeriodUI Should create an action to show the insert teaching period UI",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"testTPCode\"\n};\n(0, _expect2.default)(actions.showInsertTeachingPeriodUI(\"testTPCode\")).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "92bd614e-5d23-450f-b9fc-632c3cf67e69",
                "parentUUID": "a5661734-3c34-47a6-a7b5-d5f3c4992364",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: hideInsertTeachingPeriodUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to hide the insert teaching period UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideInsertTeachingPeriodUI Should create an action to hide the insert teaching period UI",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\n(0, _expect2.default)(actions.hideInsertTeachingPeriodUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "e02ab0b7-1455-4d15-a3a2-1c167fabf341",
                "parentUUID": "fa1252a0-f537-40db-887f-a831cdb56115",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "fa1252a0-f537-40db-887f-a831cdb56115",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to hide the insert teaching period UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideInsertTeachingPeriodUI Should create an action to hide the insert teaching period UI",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\n(0, _expect2.default)(actions.hideInsertTeachingPeriodUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "e02ab0b7-1455-4d15-a3a2-1c167fabf341",
                "parentUUID": "fa1252a0-f537-40db-887f-a831cdb56115",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: showAddingUnitUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to show the add unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showAddingUnitUI Should create an action to show the add unit UI",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_ADD_UNIT_UI\"\n};\n(0, _expect2.default)(actions.showAddingUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "63400c56-3bd0-4261-8c41-42d591b0a2f5",
                "parentUUID": "df481485-c6f0-4b7b-805c-38c49bca848c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "df481485-c6f0-4b7b-805c-38c49bca848c",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to show the add unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showAddingUnitUI Should create an action to show the add unit UI",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_ADD_UNIT_UI\"\n};\n(0, _expect2.default)(actions.showAddingUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "63400c56-3bd0-4261-8c41-42d591b0a2f5",
                "parentUUID": "df481485-c6f0-4b7b-805c-38c49bca848c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: hideAddingUnitUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to hide the add unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideAddingUnitUI Should create an action to hide the add unit UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_ADD_UNIT_UI\"\n};\n(0, _expect2.default)(actions.hideAddingUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "e6fb0fce-aa35-42dc-802a-3e2b7a136e45",
                "parentUUID": "0e4783ef-237f-4439-ac49-7cc4648854ec",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "0e4783ef-237f-4439-ac49-7cc4648854ec",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to hide the add unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideAddingUnitUI Should create an action to hide the add unit UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_ADD_UNIT_UI\"\n};\n(0, _expect2.default)(actions.hideAddingUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "e6fb0fce-aa35-42dc-802a-3e2b7a136e45",
                "parentUUID": "0e4783ef-237f-4439-ac49-7cc4648854ec",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: showMoveUnitUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to show the move unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showMoveUnitUI Should create an action to show the move unit UI",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_MOVE_UNIT_UI\"\n};\n(0, _expect2.default)(actions.showMoveUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "28491137-954d-4a80-ae5f-41ffe78da068",
                "parentUUID": "b2e71052-8f0d-4bdc-a103-fd5abbba5274",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "b2e71052-8f0d-4bdc-a103-fd5abbba5274",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to show the move unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showMoveUnitUI Should create an action to show the move unit UI",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_MOVE_UNIT_UI\"\n};\n(0, _expect2.default)(actions.showMoveUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "28491137-954d-4a80-ae5f-41ffe78da068",
                "parentUUID": "b2e71052-8f0d-4bdc-a103-fd5abbba5274",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: hideMoveUnitUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to hide move unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideMoveUnitUI Should create an action to hide move unit UI",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_MOVE_UNIT_UI\"\n};\n(0, _expect2.default)(actions.hideMoveUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "a73d37b1-cc3c-4cc6-ac16-72d446a6e837",
                "parentUUID": "4ff7c37f-ab6b-49ca-94f8-d5c7311cf8ce",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "4ff7c37f-ab6b-49ca-94f8-d5c7311cf8ce",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to hide move unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideMoveUnitUI Should create an action to hide move unit UI",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_MOVE_UNIT_UI\"\n};\n(0, _expect2.default)(actions.hideMoveUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "a73d37b1-cc3c-4cc6-ac16-72d446a6e837",
                "parentUUID": "4ff7c37f-ab6b-49ca-94f8-d5c7311cf8ce",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: showConfirmDeleteTeachingPeriodUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to show confirm delete teaching period UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showConfirmDeleteTeachingPeriodUI Should create an action to show confirm delete teaching period UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\n(0, _expect2.default)(actions.showConfirmDeleteTeachingPeriodUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "f933b6f1-0dc1-4929-95d5-7ac64b23e7ad",
                "parentUUID": "69870a77-4940-46fe-b654-c90993a7e91d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "69870a77-4940-46fe-b654-c90993a7e91d",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to show confirm delete teaching period UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showConfirmDeleteTeachingPeriodUI Should create an action to show confirm delete teaching period UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\n(0, _expect2.default)(actions.showConfirmDeleteTeachingPeriodUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "f933b6f1-0dc1-4929-95d5-7ac64b23e7ad",
                "parentUUID": "69870a77-4940-46fe-b654-c90993a7e91d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: hideConfirmDeleteTeachingPeriodUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to hide confirm delete teaching period UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideConfirmDeleteTeachingPeriodUI Should create an action to hide confirm delete teaching period UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\n(0, _expect2.default)(actions.hideConfirmDeleteTeachingPeriodUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "f02966e1-4673-4e8e-b4d6-26e022527e45",
                "parentUUID": "150cb608-a4d7-4eb8-b412-4ed959ca4b48",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "150cb608-a4d7-4eb8-b412-4ed959ca4b48",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to hide confirm delete teaching period UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideConfirmDeleteTeachingPeriodUI Should create an action to hide confirm delete teaching period UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\n(0, _expect2.default)(actions.hideConfirmDeleteTeachingPeriodUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "f02966e1-4673-4e8e-b4d6-26e022527e45",
                "parentUUID": "150cb608-a4d7-4eb8-b412-4ed959ca4b48",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: showConfirmDecreaseStudyLoadUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to show confirm decrease study load UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showConfirmDecreaseStudyLoadUI Should create an action to show confirm decrease study load UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\n(0, _expect2.default)(actions.showConfirmDecreaseStudyLoadUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "8d2dcae8-0bae-4872-8d11-e3c697d0a212",
                "parentUUID": "59d8ba5c-4054-44e4-8c1b-a72916e8ca15",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "59d8ba5c-4054-44e4-8c1b-a72916e8ca15",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to show confirm decrease study load UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showConfirmDecreaseStudyLoadUI Should create an action to show confirm decrease study load UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\n(0, _expect2.default)(actions.showConfirmDecreaseStudyLoadUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "8d2dcae8-0bae-4872-8d11-e3c697d0a212",
                "parentUUID": "59d8ba5c-4054-44e4-8c1b-a72916e8ca15",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: hideConfirmDecreaseStudyLoadUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to hide confirm decrease study load UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideConfirmDecreaseStudyLoadUI Should create an action to hide confirm decrease study load UI",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\n(0, _expect2.default)(actions.hideConfirmDecreaseStudyLoadUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "9df1efe4-fa5e-43dc-94f8-f47c224c52ef",
                "parentUUID": "889e77fe-a871-4751-84f8-a28b98463994",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "889e77fe-a871-4751-84f8-a28b98463994",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to hide confirm decrease study load UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideConfirmDecreaseStudyLoadUI Should create an action to hide confirm decrease study load UI",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\n(0, _expect2.default)(actions.hideConfirmDecreaseStudyLoadUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "9df1efe4-fa5e-43dc-94f8-f47c224c52ef",
                "parentUUID": "889e77fe-a871-4751-84f8-a28b98463994",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: showCustomUnitUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to show custum unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showCustomUnitUI Should create an action to show custum unit UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"TEST1001\"\n};\n(0, _expect2.default)(actions.showCustomUnitUI(\"TEST1001\")).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "01c2542c-37c1-472f-a40d-61cbb810bdac",
                "parentUUID": "b0e17e51-7380-4d64-8991-8f14edd413c6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "b0e17e51-7380-4d64-8991-8f14edd413c6",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to show custum unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showCustomUnitUI Should create an action to show custum unit UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"TEST1001\"\n};\n(0, _expect2.default)(actions.showCustomUnitUI(\"TEST1001\")).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "01c2542c-37c1-472f-a40d-61cbb810bdac",
                "parentUUID": "b0e17e51-7380-4d64-8991-8f14edd413c6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: hideCustomUnitUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to hide custom unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideCustomUnitUI Should create an action to hide custom unit UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\n(0, _expect2.default)(actions.hideCustomUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "c87e79bf-82ac-4725-adc3-f91ab3990f79",
                "parentUUID": "c7b7f634-0eeb-4ea6-bfd6-c4ae34a59bcc",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "c7b7f634-0eeb-4ea6-bfd6-c4ae34a59bcc",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to hide custom unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideCustomUnitUI Should create an action to hide custom unit UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\n(0, _expect2.default)(actions.hideCustomUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "c87e79bf-82ac-4725-adc3-f91ab3990f79",
                "parentUUID": "c7b7f634-0eeb-4ea6-bfd6-c4ae34a59bcc",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: showSidebar",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to show sidebar",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showSidebar Should create an action to show sidebar",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_SIDEBAR\"\n};\n(0, _expect2.default)(actions.showSidebar()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "d9cb2d6a-6b64-4c5c-8195-58d71afaba7a",
                "parentUUID": "0ad70d18-e979-4c6a-8aee-1c5f4765610e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "0ad70d18-e979-4c6a-8aee-1c5f4765610e",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to show sidebar",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showSidebar Should create an action to show sidebar",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_SIDEBAR\"\n};\n(0, _expect2.default)(actions.showSidebar()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "d9cb2d6a-6b64-4c5c-8195-58d71afaba7a",
                "parentUUID": "0ad70d18-e979-4c6a-8aee-1c5f4765610e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: hideSidebar",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to hide sidebar",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideSidebar Should create an action to hide sidebar",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_SIDEBAR\"\n};\n(0, _expect2.default)(actions.hideSidebar()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "872f6506-190e-4aff-9022-97dec613cc7e",
                "parentUUID": "e7fd9fc6-9e76-468e-8bcf-8d068ead76c0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "e7fd9fc6-9e76-468e-8bcf-8d068ead76c0",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to hide sidebar",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideSidebar Should create an action to hide sidebar",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_SIDEBAR\"\n};\n(0, _expect2.default)(actions.hideSidebar()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "872f6506-190e-4aff-9022-97dec613cc7e",
                "parentUUID": "e7fd9fc6-9e76-468e-8bcf-8d068ead76c0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          },
          {
            "title": "AC: setCourseReadOnly",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to set the course to read only",
                "fullTitle": "ACTION-CREATOR: UIActions AC: setCourseReadOnly Should create an action to set the course to read only",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\n(0, _expect2.default)(actions.setCourseReadOnly()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "1caf947d-c41d-4ded-ae92-dacf2a233d41",
                "parentUUID": "854b0be6-4e6a-4611-b7e5-567d59c0110d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "854b0be6-4e6a-4611-b7e5-567d59c0110d",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to set the course to read only",
                "fullTitle": "ACTION-CREATOR: UIActions AC: setCourseReadOnly Should create an action to set the course to read only",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\n(0, _expect2.default)(actions.setCourseReadOnly()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "1caf947d-c41d-4ded-ae92-dacf2a233d41",
                "parentUUID": "854b0be6-4e6a-4611-b7e5-567d59c0110d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: setCourseReadAndWrite",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to set the course to read and write",
                "fullTitle": "ACTION-CREATOR: UIActions AC: setCourseReadAndWrite Should create an action to set the course to read and write",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\n(0, _expect2.default)(actions.setCourseReadAndWrite()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "fb0a5aed-4e89-4f65-8442-b7268a2ecf9a",
                "parentUUID": "d5d78a5c-0ee5-45ca-92ce-9880838858bb",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "d5d78a5c-0ee5-45ca-92ce-9880838858bb",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to set the course to read and write",
                "fullTitle": "ACTION-CREATOR: UIActions AC: setCourseReadAndWrite Should create an action to set the course to read and write",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\n(0, _expect2.default)(actions.setCourseReadAndWrite()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "fb0a5aed-4e89-4f65-8442-b7268a2ecf9a",
                "parentUUID": "d5d78a5c-0ee5-45ca-92ce-9880838858bb",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/actionCreators/UIActions.spec.js",
        "uuid": "74f28aa0-88ca-4640-9587-b42c28a790af",
        "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/actionCreators/UIActions.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "COMPONENT: Notification",
        "suites": [],
        "tests": [
          {
            "title": "Should render a notification title and a message",
            "fullTitle": "COMPONENT: Notification Should render a notification title and a message",
            "timedOut": false,
            "duration": 70,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, {\n    title: \"This is a test\",\n    message: \"Some message goes over here\"\n}));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(\"This is a test\");\nexpect(wrapper.text().replace(\"This is a test\", \"\").trim()).to.equal(\"Some message goes over here\");",
            "err": {},
            "isRoot": false,
            "uuid": "bcdde386-8d4b-4275-a1f6-c6a25076cc62",
            "parentUUID": "27b10d69-82fd-4bd7-ad24-894ff2a53be2",
            "skipped": false
          },
          {
            "title": "Should have a default level to be info if it is not specified",
            "fullTitle": "COMPONENT: Notification Should have a default level to be info if it is not specified",
            "timedOut": false,
            "duration": 16,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, null)).find(\".info.message\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "8f01d467-3187-43b2-853d-d1a332472d21",
            "parentUUID": "27b10d69-82fd-4bd7-ad24-894ff2a53be2",
            "skipped": false
          },
          {
            "title": "Should follow a specified level",
            "fullTitle": "COMPONENT: Notification Should follow a specified level",
            "timedOut": false,
            "duration": 63,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"info\" })).find(\".info.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"warning\" })).find(\".warning.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"error\" })).find(\".negative.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"success\" })).find(\".positive.message\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "708768f0-f6ba-472d-b2d2-8726cdbd58b9",
            "parentUUID": "27b10d69-82fd-4bd7-ad24-894ff2a53be2",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/components/Notifications/Notification.spec.jsx",
        "uuid": "27b10d69-82fd-4bd7-ad24-894ff2a53be2",
        "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/components/Notifications/Notification.spec.jsx",
        "passes": [
          {
            "title": "Should render a notification title and a message",
            "fullTitle": "COMPONENT: Notification Should render a notification title and a message",
            "timedOut": false,
            "duration": 70,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, {\n    title: \"This is a test\",\n    message: \"Some message goes over here\"\n}));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(\"This is a test\");\nexpect(wrapper.text().replace(\"This is a test\", \"\").trim()).to.equal(\"Some message goes over here\");",
            "err": {},
            "isRoot": false,
            "uuid": "bcdde386-8d4b-4275-a1f6-c6a25076cc62",
            "parentUUID": "27b10d69-82fd-4bd7-ad24-894ff2a53be2",
            "skipped": false
          },
          {
            "title": "Should have a default level to be info if it is not specified",
            "fullTitle": "COMPONENT: Notification Should have a default level to be info if it is not specified",
            "timedOut": false,
            "duration": 16,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, null)).find(\".info.message\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "8f01d467-3187-43b2-853d-d1a332472d21",
            "parentUUID": "27b10d69-82fd-4bd7-ad24-894ff2a53be2",
            "skipped": false
          },
          {
            "title": "Should follow a specified level",
            "fullTitle": "COMPONENT: Notification Should follow a specified level",
            "timedOut": false,
            "duration": 63,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"info\" })).find(\".info.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"warning\" })).find(\".warning.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"error\" })).find(\".negative.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"success\" })).find(\".positive.message\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "708768f0-f6ba-472d-b2d2-8726cdbd58b9",
            "parentUUID": "27b10d69-82fd-4bd7-ad24-894ff2a53be2",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 3,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 149
      },
      {
        "title": "COMPONENT: InsertTeachingPeriodButton",
        "suites": [
          {
            "title": "#addSemester()",
            "suites": [],
            "tests": [
              {
                "title": "should be called exactly once when main button has been clicked",
                "fullTitle": "COMPONENT: InsertTeachingPeriodButton #addSemester() should be called exactly once when main button has been clicked",
                "timedOut": false,
                "duration": 53,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var addSemester = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: identity,\n    addSemester: addSemester }));\nwrapper.find(\"Button\").forEach(function (button) {\n    button.simulate(\"click\");\n});\nexpect(addSemester).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "5a6e6d54-3ad2-4105-830b-f7c31e006123",
                "parentUUID": "727c40dd-e26f-41aa-9c60-5b980c42121d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/components/TeachingPeriod/InsertTeachingPeriodButton.spec.jsx",
            "uuid": "727c40dd-e26f-41aa-9c60-5b980c42121d",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/components/TeachingPeriod/InsertTeachingPeriodButton.spec.jsx",
            "passes": [
              {
                "title": "should be called exactly once when main button has been clicked",
                "fullTitle": "COMPONENT: InsertTeachingPeriodButton #addSemester() should be called exactly once when main button has been clicked",
                "timedOut": false,
                "duration": 53,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var addSemester = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: identity,\n    addSemester: addSemester }));\nwrapper.find(\"Button\").forEach(function (button) {\n    button.simulate(\"click\");\n});\nexpect(addSemester).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "5a6e6d54-3ad2-4105-830b-f7c31e006123",
                "parentUUID": "727c40dd-e26f-41aa-9c60-5b980c42121d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 53
          },
          {
            "title": "#insert()",
            "suites": [],
            "tests": [
              {
                "title": "should be called as many times as the number of insert teaching periods options upon click",
                "fullTitle": "COMPONENT: InsertTeachingPeriodButton #insert() should be called as many times as the number of insert teaching periods options upon click",
                "timedOut": false,
                "duration": 41,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var insert = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: insert,\n    addSemester: identity }));\nvar dropdownItems = wrapper.find(\".item\");\ndropdownItems.forEach(function (node) {\n    return node.simulate(\"click\");\n});\nexpect(insert).to.have.callCount(dropdownItems.length);",
                "err": {},
                "isRoot": false,
                "uuid": "ee96f284-9c94-466a-99f7-ecf6ac7432f1",
                "parentUUID": "12f040b8-a400-4c2a-ab72-4e19e6b8b59b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/components/TeachingPeriod/InsertTeachingPeriodButton.spec.jsx",
            "uuid": "12f040b8-a400-4c2a-ab72-4e19e6b8b59b",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/components/TeachingPeriod/InsertTeachingPeriodButton.spec.jsx",
            "passes": [
              {
                "title": "should be called as many times as the number of insert teaching periods options upon click",
                "fullTitle": "COMPONENT: InsertTeachingPeriodButton #insert() should be called as many times as the number of insert teaching periods options upon click",
                "timedOut": false,
                "duration": 41,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var insert = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: insert,\n    addSemester: identity }));\nvar dropdownItems = wrapper.find(\".item\");\ndropdownItems.forEach(function (node) {\n    return node.simulate(\"click\");\n});\nexpect(insert).to.have.callCount(dropdownItems.length);",
                "err": {},
                "isRoot": false,
                "uuid": "ee96f284-9c94-466a-99f7-ecf6ac7432f1",
                "parentUUID": "12f040b8-a400-4c2a-ab72-4e19e6b8b59b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 41
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/components/TeachingPeriod/InsertTeachingPeriodButton.spec.jsx",
        "uuid": "c645c6f7-8351-48e2-bbb6-6cc0c08b7425",
        "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/components/TeachingPeriod/InsertTeachingPeriodButton.spec.jsx",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "COMPONENT: SetuRating",
        "suites": [],
        "tests": [
          {
            "title": "should render two ratings",
            "fullTitle": "COMPONENT: SetuRating should render two ratings",
            "timedOut": false,
            "duration": 74,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, null)).find(\".rating\")).to.have.length(2);",
            "err": {},
            "isRoot": false,
            "uuid": "cc1ff08e-a438-4f09-b047-7f931fbb4ac6",
            "parentUUID": "acbef847-4481-46cf-8674-9754a0863fdc",
            "skipped": false
          },
          {
            "title": "should render a book if learning ratings is >=2.5",
            "fullTitle": "COMPONENT: SetuRating should render a book if learning ratings is >=2.5",
            "timedOut": false,
            "duration": 97,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 4.13 })).find(\".book\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.50 })).find(\".book\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "4ec1159f-5eb2-47d6-b714-059b5b053e24",
            "parentUUID": "acbef847-4481-46cf-8674-9754a0863fdc",
            "skipped": false
          },
          {
            "title": "should render a remove circle if learning ratings is <2.5",
            "fullTitle": "COMPONENT: SetuRating should render a remove circle if learning ratings is <2.5",
            "timedOut": false,
            "duration": 71,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 1.51 })).find(\".remove.circle\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.49 })).find(\".remove.circle\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "97ecd34b-4828-4237-9a46-77f4f4510ca6",
            "parentUUID": "acbef847-4481-46cf-8674-9754a0863fdc",
            "skipped": false
          },
          {
            "title": "should render a thumbs up if enjoyment ratings is >=2.5",
            "fullTitle": "COMPONENT: SetuRating should render a thumbs up if enjoyment ratings is >=2.5",
            "timedOut": false,
            "duration": 76,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 4.13 })).find(\".thumbs.up\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.50 })).find(\".thumbs.up\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "6047f8f3-297d-456d-a039-4a064dc6d8d3",
            "parentUUID": "acbef847-4481-46cf-8674-9754a0863fdc",
            "skipped": false
          },
          {
            "title": "should render a thumbs down if enjoyment ratings is <2.5",
            "fullTitle": "COMPONENT: SetuRating should render a thumbs down if enjoyment ratings is <2.5",
            "timedOut": false,
            "duration": 57,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 1.51 })).find(\".thumbs.down\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.49 })).find(\".thumbs.down\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "1d5876cb-4ebd-487e-b9c5-6774cab57574",
            "parentUUID": "acbef847-4481-46cf-8674-9754a0863fdc",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/components/Unit/SetuRating.spec.jsx",
        "uuid": "acbef847-4481-46cf-8674-9754a0863fdc",
        "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/components/Unit/SetuRating.spec.jsx",
        "passes": [
          {
            "title": "should render two ratings",
            "fullTitle": "COMPONENT: SetuRating should render two ratings",
            "timedOut": false,
            "duration": 74,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, null)).find(\".rating\")).to.have.length(2);",
            "err": {},
            "isRoot": false,
            "uuid": "cc1ff08e-a438-4f09-b047-7f931fbb4ac6",
            "parentUUID": "acbef847-4481-46cf-8674-9754a0863fdc",
            "skipped": false
          },
          {
            "title": "should render a book if learning ratings is >=2.5",
            "fullTitle": "COMPONENT: SetuRating should render a book if learning ratings is >=2.5",
            "timedOut": false,
            "duration": 97,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 4.13 })).find(\".book\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.50 })).find(\".book\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "4ec1159f-5eb2-47d6-b714-059b5b053e24",
            "parentUUID": "acbef847-4481-46cf-8674-9754a0863fdc",
            "skipped": false
          },
          {
            "title": "should render a remove circle if learning ratings is <2.5",
            "fullTitle": "COMPONENT: SetuRating should render a remove circle if learning ratings is <2.5",
            "timedOut": false,
            "duration": 71,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 1.51 })).find(\".remove.circle\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.49 })).find(\".remove.circle\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "97ecd34b-4828-4237-9a46-77f4f4510ca6",
            "parentUUID": "acbef847-4481-46cf-8674-9754a0863fdc",
            "skipped": false
          },
          {
            "title": "should render a thumbs up if enjoyment ratings is >=2.5",
            "fullTitle": "COMPONENT: SetuRating should render a thumbs up if enjoyment ratings is >=2.5",
            "timedOut": false,
            "duration": 76,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 4.13 })).find(\".thumbs.up\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.50 })).find(\".thumbs.up\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "6047f8f3-297d-456d-a039-4a064dc6d8d3",
            "parentUUID": "acbef847-4481-46cf-8674-9754a0863fdc",
            "skipped": false
          },
          {
            "title": "should render a thumbs down if enjoyment ratings is <2.5",
            "fullTitle": "COMPONENT: SetuRating should render a thumbs down if enjoyment ratings is <2.5",
            "timedOut": false,
            "duration": 57,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 1.51 })).find(\".thumbs.down\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.49 })).find(\".thumbs.down\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "1d5876cb-4ebd-487e-b9c5-6774cab57574",
            "parentUUID": "acbef847-4481-46cf-8674-9754a0863fdc",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 5,
        "totalPasses": 5,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 375
      },
      {
        "title": "COMPONENT: UnitMessage",
        "suites": [
          {
            "title": "#presentational",
            "suites": [],
            "tests": [
              {
                "title": "should only render a unit code and a unit name",
                "fullTitle": "COMPONENT: UnitMessage #presentational should only render a unit code and a unit name",
                "timedOut": false,
                "duration": 55,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var unitCode = \"ABC1234\";\nvar unitName = \"Example unit\";\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: unitCode,\n    name: unitName }));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(unitCode);\nexpect(wrapper.find(\".message\").text().replace(unitCode, \"\").trim()).to.equal(unitName);",
                "err": {},
                "isRoot": false,
                "uuid": "bd0ac374-d655-4fbb-8102-b2a76e62f1a1",
                "parentUUID": "3e5ab659-3c76-4a1a-802f-f021f36aea78",
                "skipped": false
              },
              {
                "title": "should render a close button only when mouse is over the unit",
                "fullTitle": "COMPONENT: UnitMessage #presentational should render a close button only when mouse is over the unit",
                "timedOut": false,
                "duration": 79,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    hovering: false }));\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");\nwrapper.setProps({\n    hovering: true\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"visible\");\nwrapper.setProps({\n    hovering: false\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");",
                "err": {},
                "isRoot": false,
                "uuid": "99d93f0c-8f02-4185-aac9-d2be37a1e1c4",
                "parentUUID": "3e5ab659-3c76-4a1a-802f-f021f36aea78",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/components/Unit/UnitMessage.spec.jsx",
            "uuid": "3e5ab659-3c76-4a1a-802f-f021f36aea78",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/components/Unit/UnitMessage.spec.jsx",
            "passes": [
              {
                "title": "should only render a unit code and a unit name",
                "fullTitle": "COMPONENT: UnitMessage #presentational should only render a unit code and a unit name",
                "timedOut": false,
                "duration": 55,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var unitCode = \"ABC1234\";\nvar unitName = \"Example unit\";\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: unitCode,\n    name: unitName }));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(unitCode);\nexpect(wrapper.find(\".message\").text().replace(unitCode, \"\").trim()).to.equal(unitName);",
                "err": {},
                "isRoot": false,
                "uuid": "bd0ac374-d655-4fbb-8102-b2a76e62f1a1",
                "parentUUID": "3e5ab659-3c76-4a1a-802f-f021f36aea78",
                "skipped": false
              },
              {
                "title": "should render a close button only when mouse is over the unit",
                "fullTitle": "COMPONENT: UnitMessage #presentational should render a close button only when mouse is over the unit",
                "timedOut": false,
                "duration": 79,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    hovering: false }));\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");\nwrapper.setProps({\n    hovering: true\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"visible\");\nwrapper.setProps({\n    hovering: false\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");",
                "err": {},
                "isRoot": false,
                "uuid": "99d93f0c-8f02-4185-aac9-d2be37a1e1c4",
                "parentUUID": "3e5ab659-3c76-4a1a-802f-f021f36aea78",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 134
          },
          {
            "title": "#events",
            "suites": [],
            "tests": [
              {
                "title": "Should call willAddUnit if unit is a newUnit and it has been clicked",
                "fullTitle": "COMPONENT: UnitMessage #events Should call willAddUnit if unit is a newUnit and it has been clicked",
                "timedOut": false,
                "duration": 79,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    newUnit: true,\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    willAddUnit: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"click\");\nexpect(eventFunc).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "5875d99d-4a14-4fd8-ad0c-61c80bea04e6",
                "parentUUID": "447acc74-18f6-49b0-85b9-eb1f2b0c2edc",
                "skipped": false
              },
              {
                "title": "Should call handleUnitMouseOver when mouse is over the unit",
                "fullTitle": "COMPONENT: UnitMessage #events Should call handleUnitMouseOver when mouse is over the unit",
                "timedOut": false,
                "duration": 24,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseOver: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseOver\");\nexpect(eventFunc).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "a0337fc0-1012-4987-98eb-f0c40f5617dc",
                "parentUUID": "447acc74-18f6-49b0-85b9-eb1f2b0c2edc",
                "skipped": false
              },
              {
                "title": "Should call handleUnitMouseMove when mouse moves over the unit",
                "fullTitle": "COMPONENT: UnitMessage #events Should call handleUnitMouseMove when mouse moves over the unit",
                "timedOut": false,
                "duration": 24,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseMove: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseMove\");\nexpect(eventFunc).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "403dd4a9-92b6-4741-b60f-f207a2616861",
                "parentUUID": "447acc74-18f6-49b0-85b9-eb1f2b0c2edc",
                "skipped": false
              },
              {
                "title": "Should call handleUnitMouseOut when mouse is over the unit",
                "fullTitle": "COMPONENT: UnitMessage #events Should call handleUnitMouseOut when mouse is over the unit",
                "timedOut": false,
                "duration": 37,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseOut: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseOut\");\nexpect(eventFunc).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "3253d103-5ab3-4585-afaf-1b536869c61b",
                "parentUUID": "447acc74-18f6-49b0-85b9-eb1f2b0c2edc",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/components/Unit/UnitMessage.spec.jsx",
            "uuid": "447acc74-18f6-49b0-85b9-eb1f2b0c2edc",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/components/Unit/UnitMessage.spec.jsx",
            "passes": [
              {
                "title": "Should call willAddUnit if unit is a newUnit and it has been clicked",
                "fullTitle": "COMPONENT: UnitMessage #events Should call willAddUnit if unit is a newUnit and it has been clicked",
                "timedOut": false,
                "duration": 79,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    newUnit: true,\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    willAddUnit: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"click\");\nexpect(eventFunc).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "5875d99d-4a14-4fd8-ad0c-61c80bea04e6",
                "parentUUID": "447acc74-18f6-49b0-85b9-eb1f2b0c2edc",
                "skipped": false
              },
              {
                "title": "Should call handleUnitMouseOver when mouse is over the unit",
                "fullTitle": "COMPONENT: UnitMessage #events Should call handleUnitMouseOver when mouse is over the unit",
                "timedOut": false,
                "duration": 24,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseOver: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseOver\");\nexpect(eventFunc).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "a0337fc0-1012-4987-98eb-f0c40f5617dc",
                "parentUUID": "447acc74-18f6-49b0-85b9-eb1f2b0c2edc",
                "skipped": false
              },
              {
                "title": "Should call handleUnitMouseMove when mouse moves over the unit",
                "fullTitle": "COMPONENT: UnitMessage #events Should call handleUnitMouseMove when mouse moves over the unit",
                "timedOut": false,
                "duration": 24,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseMove: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseMove\");\nexpect(eventFunc).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "403dd4a9-92b6-4741-b60f-f207a2616861",
                "parentUUID": "447acc74-18f6-49b0-85b9-eb1f2b0c2edc",
                "skipped": false
              },
              {
                "title": "Should call handleUnitMouseOut when mouse is over the unit",
                "fullTitle": "COMPONENT: UnitMessage #events Should call handleUnitMouseOut when mouse is over the unit",
                "timedOut": false,
                "duration": 37,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseOut: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseOut\");\nexpect(eventFunc).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "3253d103-5ab3-4585-afaf-1b536869c61b",
                "parentUUID": "447acc74-18f6-49b0-85b9-eb1f2b0c2edc",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 164
          },
          {
            "title": "#DnD",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly call movingUnit when it is being dragged",
                "fullTitle": "COMPONENT: UnitMessage #DnD Should correctly call movingUnit when it is being dragged",
                "timedOut": false,
                "duration": 14,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "testingBeginDrag = true;\ntestingEndDrag = false;\nbackend.simulateBeginDrag([sourceId]);\nexpect(movingUnitSpy).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "fd438d5e-4f00-422a-bee1-a4cfe2b563df",
                "parentUUID": "635b0e9e-a23e-4a15-aad6-fb79fbb7e7d5",
                "skipped": false
              },
              {
                "title": "Should correctylc call cancelMovingUnit ",
                "fullTitle": "COMPONENT: UnitMessage #DnD Should correctylc call cancelMovingUnit ",
                "timedOut": false,
                "duration": 21,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "testingBeginDrag = false;\ntestingEndDrag = true;\nbackend.simulateBeginDrag([sourceId]);\nbackend.simulateEndDrag(sourceId);\nexpect(cancelMovingUnitSpy).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "ded15184-32f6-4c35-abea-0648caee6154",
                "parentUUID": "635b0e9e-a23e-4a15-aad6-fb79fbb7e7d5",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/components/Unit/UnitMessage.spec.jsx",
            "uuid": "635b0e9e-a23e-4a15-aad6-fb79fbb7e7d5",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/components/Unit/UnitMessage.spec.jsx",
            "passes": [
              {
                "title": "Should correctly call movingUnit when it is being dragged",
                "fullTitle": "COMPONENT: UnitMessage #DnD Should correctly call movingUnit when it is being dragged",
                "timedOut": false,
                "duration": 14,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "testingBeginDrag = true;\ntestingEndDrag = false;\nbackend.simulateBeginDrag([sourceId]);\nexpect(movingUnitSpy).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "fd438d5e-4f00-422a-bee1-a4cfe2b563df",
                "parentUUID": "635b0e9e-a23e-4a15-aad6-fb79fbb7e7d5",
                "skipped": false
              },
              {
                "title": "Should correctylc call cancelMovingUnit ",
                "fullTitle": "COMPONENT: UnitMessage #DnD Should correctylc call cancelMovingUnit ",
                "timedOut": false,
                "duration": 21,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "testingBeginDrag = false;\ntestingEndDrag = true;\nbackend.simulateBeginDrag([sourceId]);\nbackend.simulateEndDrag(sourceId);\nexpect(cancelMovingUnitSpy).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "ded15184-32f6-4c35-abea-0648caee6154",
                "parentUUID": "635b0e9e-a23e-4a15-aad6-fb79fbb7e7d5",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 35
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/components/Unit/UnitMessage.spec.jsx",
        "uuid": "2a3404d2-0497-498c-bb22-35d49b4f822d",
        "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/components/Unit/UnitMessage.spec.jsx",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "REDUCER: Counter",
        "suites": [
          {
            "title": "ACTION: INCREMENT_CREDIT_POINTS",
            "suites": [],
            "tests": [
              {
                "title": "Should increment the credit point state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: INCREMENT_CREDIT_POINTS Should increment the credit point state by a given value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 2, creditPoints: 0 };\nvar action = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 2,\n    creditPoints: 1\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "75933e67-ffd6-4a8e-94f8-222c8ac57951",
                "parentUUID": "b165b342-1562-484a-91f5-2465cb37f9e4",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "b165b342-1562-484a-91f5-2465cb37f9e4",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should increment the credit point state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: INCREMENT_CREDIT_POINTS Should increment the credit point state by a given value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 2, creditPoints: 0 };\nvar action = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 2,\n    creditPoints: 1\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "75933e67-ffd6-4a8e-94f8-222c8ac57951",
                "parentUUID": "b165b342-1562-484a-91f5-2465cb37f9e4",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: DECREMENT_CREDIT_POINTS",
            "suites": [],
            "tests": [
              {
                "title": "Should decrement the credit point state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state by a given value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f356e781-66a1-4ee1-a9f9-4aa46fa68b5b",
                "parentUUID": "3aca5da4-a2bd-4402-bddf-8bebcb56a227",
                "skipped": false
              },
              {
                "title": "Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 0\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "fea554f8-2595-4436-b08e-0fed3fd00a2c",
                "parentUUID": "3aca5da4-a2bd-4402-bddf-8bebcb56a227",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "3aca5da4-a2bd-4402-bddf-8bebcb56a227",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should decrement the credit point state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state by a given value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f356e781-66a1-4ee1-a9f9-4aa46fa68b5b",
                "parentUUID": "3aca5da4-a2bd-4402-bddf-8bebcb56a227",
                "skipped": false
              },
              {
                "title": "Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 0\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "fea554f8-2595-4436-b08e-0fed3fd00a2c",
                "parentUUID": "3aca5da4-a2bd-4402-bddf-8bebcb56a227",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: INCREMENT_COST",
            "suites": [],
            "tests": [
              {
                "title": "Should increment the cost state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: INCREMENT_COST Should increment the cost state by a given value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 20, creditPoints: 13 };\nvar action = {\n    type: \"INCREMENT_COST\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 21,\n    creditPoints: 13\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "aa3851ed-cf6b-4676-84c1-61c6a490573c",
                "parentUUID": "78406e44-e31c-44e4-b238-169e2e93c44d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "78406e44-e31c-44e4-b238-169e2e93c44d",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should increment the cost state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: INCREMENT_COST Should increment the cost state by a given value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 20, creditPoints: 13 };\nvar action = {\n    type: \"INCREMENT_COST\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 21,\n    creditPoints: 13\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "aa3851ed-cf6b-4676-84c1-61c6a490573c",
                "parentUUID": "78406e44-e31c-44e4-b238-169e2e93c44d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: DECREMENT_COST",
            "suites": [],
            "tests": [
              {
                "title": "Should decrement the cost state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_COST Should decrement the cost state by a given value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "fc69cf6b-c140-4af9-bbeb-5d3564bf5992",
                "parentUUID": "73f57a6f-6155-477d-bb9a-79c4c621365e",
                "skipped": false
              },
              {
                "title": "Should decrement the cost state to 0 if a value given is larger than the current credit point value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_COST Should decrement the cost state to 0 if a value given is larger than the current credit point value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 0,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "adfc5eee-c8ae-4eee-b329-8b8ae43bcc5a",
                "parentUUID": "73f57a6f-6155-477d-bb9a-79c4c621365e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "73f57a6f-6155-477d-bb9a-79c4c621365e",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should decrement the cost state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_COST Should decrement the cost state by a given value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "fc69cf6b-c140-4af9-bbeb-5d3564bf5992",
                "parentUUID": "73f57a6f-6155-477d-bb9a-79c4c621365e",
                "skipped": false
              },
              {
                "title": "Should decrement the cost state to 0 if a value given is larger than the current credit point value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_COST Should decrement the cost state to 0 if a value given is larger than the current credit point value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 0,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "adfc5eee-c8ae-4eee-b329-8b8ae43bcc5a",
                "parentUUID": "73f57a6f-6155-477d-bb9a-79c4c621365e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: CLEAR_COURSE",
            "suites": [],
            "tests": [
              {
                "title": "Should reset the cost and credit point counters to 0",
                "fullTitle": "REDUCER: Counter ACTION: CLEAR_COURSE Should reset the cost and credit point counters to 0",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "15a40e2d-a9b4-402f-8faf-c762287d13fc",
                "parentUUID": "83716695-5d51-4953-95b1-8db70af682b9",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "83716695-5d51-4953-95b1-8db70af682b9",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should reset the cost and credit point counters to 0",
                "fullTitle": "REDUCER: Counter ACTION: CLEAR_COURSE Should reset the cost and credit point counters to 0",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "15a40e2d-a9b4-402f-8faf-c762287d13fc",
                "parentUUID": "83716695-5d51-4953-95b1-8db70af682b9",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: REMOVE_TEACHING_PERIOD",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly go through and decrement the counters for each value ",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_TEACHING_PERIOD Should correctly go through and decrement the counters for each value ",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { cost: 2, creditPoints: 20 }, { cost: 5, creditPoints: 10 }, null]\n};\nvar stateAfter = { cost: 43, creditPoints: 10 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "278cb215-ad94-47ee-81b2-6d2d6e51ba73",
                "parentUUID": "1a2588e2-3dac-48d8-a631-26c5d49a2f71",
                "skipped": false
              },
              {
                "title": "Should not decrement the counters below 0 ",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_TEACHING_PERIOD Should not decrement the counters below 0 ",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { cost: 25, creditPoints: 20 }, { cost: 30, creditPoints: 30 }, { cost: 0, creditPoints: 10 }]\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "570542b7-d7a8-456d-8d76-c66f12a33b0e",
                "parentUUID": "1a2588e2-3dac-48d8-a631-26c5d49a2f71",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "1a2588e2-3dac-48d8-a631-26c5d49a2f71",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should correctly go through and decrement the counters for each value ",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_TEACHING_PERIOD Should correctly go through and decrement the counters for each value ",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { cost: 2, creditPoints: 20 }, { cost: 5, creditPoints: 10 }, null]\n};\nvar stateAfter = { cost: 43, creditPoints: 10 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "278cb215-ad94-47ee-81b2-6d2d6e51ba73",
                "parentUUID": "1a2588e2-3dac-48d8-a631-26c5d49a2f71",
                "skipped": false
              },
              {
                "title": "Should not decrement the counters below 0 ",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_TEACHING_PERIOD Should not decrement the counters below 0 ",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { cost: 25, creditPoints: 20 }, { cost: 30, creditPoints: 30 }, { cost: 0, creditPoints: 10 }]\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "570542b7-d7a8-456d-8d76-c66f12a33b0e",
                "parentUUID": "1a2588e2-3dac-48d8-a631-26c5d49a2f71",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          },
          {
            "title": "ACTION: REMOVE_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly decrement the counters based on the given units creditpoints and cost",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_UNIT Should correctly decrement the counters based on the given units creditpoints and cost",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 20 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "67121774-ebde-4e66-b864-fa7faa7767ed",
                "parentUUID": "e5890c56-7847-4796-b256-d6a96b36c81d",
                "skipped": false
              },
              {
                "title": "Should not decrement the counters below 0",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_UNIT Should not decrement the counters below 0",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "241eeee1-7a48-4d91-8662-0beb91358c91",
                "parentUUID": "e5890c56-7847-4796-b256-d6a96b36c81d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "e5890c56-7847-4796-b256-d6a96b36c81d",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should correctly decrement the counters based on the given units creditpoints and cost",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_UNIT Should correctly decrement the counters based on the given units creditpoints and cost",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 20 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "67121774-ebde-4e66-b864-fa7faa7767ed",
                "parentUUID": "e5890c56-7847-4796-b256-d6a96b36c81d",
                "skipped": false
              },
              {
                "title": "Should not decrement the counters below 0",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_UNIT Should not decrement the counters below 0",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "241eeee1-7a48-4d91-8662-0beb91358c91",
                "parentUUID": "e5890c56-7847-4796-b256-d6a96b36c81d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: ADD_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly increment the counters when a unit is added to the plan",
                "fullTitle": "REDUCER: Counter ACTION: ADD_UNIT Should correctly increment the counters when a unit is added to the plan",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"ADD_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 30 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ed4ea79e-9c68-493e-b064-5356ce18e4fe",
                "parentUUID": "7166f4e8-3f00-488b-8b4e-6d7faba63466",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "7166f4e8-3f00-488b-8b4e-6d7faba63466",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should correctly increment the counters when a unit is added to the plan",
                "fullTitle": "REDUCER: Counter ACTION: ADD_UNIT Should correctly increment the counters when a unit is added to the plan",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"ADD_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 30 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ed4ea79e-9c68-493e-b064-5356ce18e4fe",
                "parentUUID": "7166f4e8-3f00-488b-8b4e-6d7faba63466",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: DECREASE_STUDY_LOAD",
            "suites": [],
            "tests": [
              {
                "title": "Should not decrease counters if there are no units in the overload column",
                "fullTitle": "REDUCER: Counter ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units in the overload column",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: []\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "9cb19402-0904-4785-a8c8-a72f6f4d1819",
                "parentUUID": "18a375aa-af0b-4dc8-a3b3-16a9949fe05d",
                "skipped": false
              },
              {
                "title": "Should not decrease counters if there are no units which have values in the overload column",
                "fullTitle": "REDUCER: Counter ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units which have values in the overload column",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [null, {}]\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "b592d939-a35c-474f-85b6-798ac0310b9d",
                "parentUUID": "18a375aa-af0b-4dc8-a3b3-16a9949fe05d",
                "skipped": false
              },
              {
                "title": "Should decrease counters correctly for units in the overload column",
                "fullTitle": "REDUCER: Counter ACTION: DECREASE_STUDY_LOAD Should decrease counters correctly for units in the overload column",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [{\n        CreditPoints: 6,\n        Cost: 1134\n    }, {\n        CreditPoints: 12,\n        Cost: 2256\n    }]\n};\nvar stateAfter = { cost: 36610, creditPoints: 126 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b15b4e3e-824e-481a-b14d-cc1f5b9bccea",
                "parentUUID": "18a375aa-af0b-4dc8-a3b3-16a9949fe05d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "18a375aa-af0b-4dc8-a3b3-16a9949fe05d",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should not decrease counters if there are no units in the overload column",
                "fullTitle": "REDUCER: Counter ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units in the overload column",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: []\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "9cb19402-0904-4785-a8c8-a72f6f4d1819",
                "parentUUID": "18a375aa-af0b-4dc8-a3b3-16a9949fe05d",
                "skipped": false
              },
              {
                "title": "Should not decrease counters if there are no units which have values in the overload column",
                "fullTitle": "REDUCER: Counter ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units which have values in the overload column",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [null, {}]\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "b592d939-a35c-474f-85b6-798ac0310b9d",
                "parentUUID": "18a375aa-af0b-4dc8-a3b3-16a9949fe05d",
                "skipped": false
              },
              {
                "title": "Should decrease counters correctly for units in the overload column",
                "fullTitle": "REDUCER: Counter ACTION: DECREASE_STUDY_LOAD Should decrease counters correctly for units in the overload column",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [{\n        CreditPoints: 6,\n        Cost: 1134\n    }, {\n        CreditPoints: 12,\n        Cost: 2256\n    }]\n};\nvar stateAfter = { cost: 36610, creditPoints: 126 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b15b4e3e-824e-481a-b14d-cc1f5b9bccea",
                "parentUUID": "18a375aa-af0b-4dc8-a3b3-16a9949fe05d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "DEFAULT",
            "suites": [],
            "tests": [
              {
                "title": "Should not change state if it does not recognise an action",
                "fullTitle": "REDUCER: Counter DEFAULT Should not change state if it does not recognise an action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "c97eea00-4f13-4345-9f1e-2929533977bc",
                "parentUUID": "34b40d7c-8de4-4ea2-9460-6fb313719ba0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "34b40d7c-8de4-4ea2-9460-6fb313719ba0",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should not change state if it does not recognise an action",
                "fullTitle": "REDUCER: Counter DEFAULT Should not change state if it does not recognise an action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "c97eea00-4f13-4345-9f1e-2929533977bc",
                "parentUUID": "34b40d7c-8de4-4ea2-9460-6fb313719ba0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/reducers/Counter.spec.js",
        "uuid": "1816710e-bab2-402e-a7ea-6116483b5cfd",
        "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/Counter.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "REDUCER: CourseSearch",
        "suites": [
          {
            "title": "ACTION: FETCH_COURSES_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseSearch ACTION: FETCH_COURSES_PENDING Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: false,\n    courseSearchError: true //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: true,\n    courseSearchError: false\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "4ca8492b-2672-41c4-b5e0-ae742c51aeb6",
                "parentUUID": "96255582-0fe8-4adb-be2b-420e943c3857",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseSearchReducer.spec.js",
            "uuid": "96255582-0fe8-4adb-be2b-420e943c3857",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseSearchReducer.spec.js",
            "passes": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseSearch ACTION: FETCH_COURSES_PENDING Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: false,\n    courseSearchError: true //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: true,\n    courseSearchError: false\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "4ca8492b-2672-41c4-b5e0-ae742c51aeb6",
                "parentUUID": "96255582-0fe8-4adb-be2b-420e943c3857",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_COURSES_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseSearch ACTION: FETCH_COURSES_FULFILLED Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: true,\n    courseSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_FULFILLED\",\n    payload: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    courseSearchIsLoading: false,\n    courseSearchError: false\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "aa0e7a18-8c93-457c-9a4f-331d054f2cff",
                "parentUUID": "09514144-d388-45dd-8871-3fd3bdc7d44c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseSearchReducer.spec.js",
            "uuid": "09514144-d388-45dd-8871-3fd3bdc7d44c",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseSearchReducer.spec.js",
            "passes": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseSearch ACTION: FETCH_COURSES_FULFILLED Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: true,\n    courseSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_FULFILLED\",\n    payload: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    courseSearchIsLoading: false,\n    courseSearchError: false\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "aa0e7a18-8c93-457c-9a4f-331d054f2cff",
                "parentUUID": "09514144-d388-45dd-8871-3fd3bdc7d44c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_COURSES_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseSearch ACTION: FETCH_COURSES_REJECTED Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    courseSearchIsLoading: true,\n    courseSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: false,\n    courseSearchError: true\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a4a44094-a634-43ba-ba6b-5471f4c59bd5",
                "parentUUID": "7ff288b0-2eb0-4431-ac14-5a0979fa8385",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseSearchReducer.spec.js",
            "uuid": "7ff288b0-2eb0-4431-ac14-5a0979fa8385",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseSearchReducer.spec.js",
            "passes": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseSearch ACTION: FETCH_COURSES_REJECTED Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    courseSearchIsLoading: true,\n    courseSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: false,\n    courseSearchError: true\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a4a44094-a634-43ba-ba6b-5471f4c59bd5",
                "parentUUID": "7ff288b0-2eb0-4431-ac14-5a0979fa8385",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_AOS_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseSearch ACTION: FETCH_AOS_PENDING Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: false,\n    aosSearchError: true //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: true,\n    aosSearchError: false\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1d4b27d1-da62-4d67-af27-b4e68191397a",
                "parentUUID": "0c306942-0069-4d6d-91cc-4c6a3f29c056",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseSearchReducer.spec.js",
            "uuid": "0c306942-0069-4d6d-91cc-4c6a3f29c056",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseSearchReducer.spec.js",
            "passes": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseSearch ACTION: FETCH_AOS_PENDING Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: false,\n    aosSearchError: true //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: true,\n    aosSearchError: false\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1d4b27d1-da62-4d67-af27-b4e68191397a",
                "parentUUID": "0c306942-0069-4d6d-91cc-4c6a3f29c056",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_AOS_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseSearch ACTION: FETCH_AOS_FULFILLED Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: true,\n    aosSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_FULFILLED\",\n    payload: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    aosSearchIsLoading: false,\n    aosSearchError: false\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "4d4f4817-b55c-44c3-9215-e519e17b9707",
                "parentUUID": "bbafa259-1b6c-40d8-989f-8f2a1caec50b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseSearchReducer.spec.js",
            "uuid": "bbafa259-1b6c-40d8-989f-8f2a1caec50b",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseSearchReducer.spec.js",
            "passes": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseSearch ACTION: FETCH_AOS_FULFILLED Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: true,\n    aosSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_FULFILLED\",\n    payload: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    aosSearchIsLoading: false,\n    aosSearchError: false\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "4d4f4817-b55c-44c3-9215-e519e17b9707",
                "parentUUID": "bbafa259-1b6c-40d8-989f-8f2a1caec50b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_AOS_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseSearch ACTION: FETCH_AOS_REJECTED Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    aosSearchIsLoading: true,\n    aosSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: false,\n    aosSearchError: true\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "66fd5573-a1b5-4944-8eeb-093d420f3f4c",
                "parentUUID": "c5fb9f02-9673-4a6c-9c54-487a80fe4fee",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseSearchReducer.spec.js",
            "uuid": "c5fb9f02-9673-4a6c-9c54-487a80fe4fee",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseSearchReducer.spec.js",
            "passes": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseSearch ACTION: FETCH_AOS_REJECTED Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    aosSearchIsLoading: true,\n    aosSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: false,\n    aosSearchError: true\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "66fd5573-a1b5-4944-8eeb-093d420f3f4c",
                "parentUUID": "c5fb9f02-9673-4a6c-9c54-487a80fe4fee",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/reducers/CourseSearchReducer.spec.js",
        "uuid": "eb97f493-3a35-4c66-8b34-a6ebc79a94fa",
        "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseSearchReducer.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "REDUCER: CourseSnapshot",
        "suites": [
          {
            "title": "ACTION: UPLOAD_COURSE_SNAPSHOT_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should handle the initiation of a course snapshot upload correctly",
                "fullTitle": "REDUCER: CourseSnapshot ACTION: UPLOAD_COURSE_SNAPSHOT_PENDING Should handle the initiation of a course snapshot upload correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: true\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f23a3a80-247d-4f29-af17-433a9db18956",
                "parentUUID": "b5c4a4fc-f531-4da4-ba10-a17924c37ace",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseSnapshotReducer.spec.js",
            "uuid": "b5c4a4fc-f531-4da4-ba10-a17924c37ace",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseSnapshotReducer.spec.js",
            "passes": [
              {
                "title": "Should handle the initiation of a course snapshot upload correctly",
                "fullTitle": "REDUCER: CourseSnapshot ACTION: UPLOAD_COURSE_SNAPSHOT_PENDING Should handle the initiation of a course snapshot upload correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: true\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f23a3a80-247d-4f29-af17-433a9db18956",
                "parentUUID": "b5c4a4fc-f531-4da4-ba10-a17924c37ace",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: UPLOAD_COURSE_SNAPSHOT_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should handle the successful upload of a course snapshot correctly",
                "fullTitle": "REDUCER: CourseSnapshot ACTION: UPLOAD_COURSE_SNAPSHOT_FULFILLED Should handle the successful upload of a course snapshot correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"upload string\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: \"upload string\",\n    courseSnapshotUploadSucessful: true\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "592e2188-7db4-4066-ab83-e9d755d14bc7",
                "parentUUID": "04e130eb-48e0-4ebb-8447-a08b6a8c5a26",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseSnapshotReducer.spec.js",
            "uuid": "04e130eb-48e0-4ebb-8447-a08b6a8c5a26",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseSnapshotReducer.spec.js",
            "passes": [
              {
                "title": "Should handle the successful upload of a course snapshot correctly",
                "fullTitle": "REDUCER: CourseSnapshot ACTION: UPLOAD_COURSE_SNAPSHOT_FULFILLED Should handle the successful upload of a course snapshot correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"upload string\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: \"upload string\",\n    courseSnapshotUploadSucessful: true\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "592e2188-7db4-4066-ab83-e9d755d14bc7",
                "parentUUID": "04e130eb-48e0-4ebb-8447-a08b6a8c5a26",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: UPLOAD_COURSE_SNAPSHOT_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should do handle the rejected upload of a course snapshot correctly",
                "fullTitle": "REDUCER: CourseSnapshot ACTION: UPLOAD_COURSE_SNAPSHOT_REJECTED Should do handle the rejected upload of a course snapshot correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "6b5d19e1-f175-4838-a66c-9d7109d95136",
                "parentUUID": "418a9e82-6ef7-4634-a669-221084d4069b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseSnapshotReducer.spec.js",
            "uuid": "418a9e82-6ef7-4634-a669-221084d4069b",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseSnapshotReducer.spec.js",
            "passes": [
              {
                "title": "Should do handle the rejected upload of a course snapshot correctly",
                "fullTitle": "REDUCER: CourseSnapshot ACTION: UPLOAD_COURSE_SNAPSHOT_REJECTED Should do handle the rejected upload of a course snapshot correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "6b5d19e1-f175-4838-a66c-9d7109d95136",
                "parentUUID": "418a9e82-6ef7-4634-a669-221084d4069b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_COURSE_SNAPSHOT_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should begin fetching a course snapshot correctly",
                "fullTitle": "REDUCER: CourseSnapshot ACTION: FETCH_COURSE_SNAPSHOT_PENDING Should begin fetching a course snapshot correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "6bd93c17-995e-469a-816f-2ab254a19280",
                "parentUUID": "cdd4668f-9ae4-4410-97ee-d5bfc81772f9",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseSnapshotReducer.spec.js",
            "uuid": "cdd4668f-9ae4-4410-97ee-d5bfc81772f9",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseSnapshotReducer.spec.js",
            "passes": [
              {
                "title": "Should begin fetching a course snapshot correctly",
                "fullTitle": "REDUCER: CourseSnapshot ACTION: FETCH_COURSE_SNAPSHOT_PENDING Should begin fetching a course snapshot correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "6bd93c17-995e-469a-816f-2ab254a19280",
                "parentUUID": "cdd4668f-9ae4-4410-97ee-d5bfc81772f9",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_COURSE_SNAPSHOT_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should handle a successful course snapshot fetch correctly",
                "fullTitle": "REDUCER: CourseSnapshot ACTION: FETCH_COURSE_SNAPSHOT_FULFILLED Should handle a successful course snapshot fetch correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"Snap data\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: \"Snap data\"\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "99f14fc7-33c2-4b6e-b829-619984090058",
                "parentUUID": "ef21f5f4-1896-43ea-b632-4e64016f7e15",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseSnapshotReducer.spec.js",
            "uuid": "ef21f5f4-1896-43ea-b632-4e64016f7e15",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseSnapshotReducer.spec.js",
            "passes": [
              {
                "title": "Should handle a successful course snapshot fetch correctly",
                "fullTitle": "REDUCER: CourseSnapshot ACTION: FETCH_COURSE_SNAPSHOT_FULFILLED Should handle a successful course snapshot fetch correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"Snap data\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: \"Snap data\"\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "99f14fc7-33c2-4b6e-b829-619984090058",
                "parentUUID": "ef21f5f4-1896-43ea-b632-4e64016f7e15",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_COURSE_SNAPSHOT_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should handle a rejected course snapshot fetch correctly",
                "fullTitle": "REDUCER: CourseSnapshot ACTION: FETCH_COURSE_SNAPSHOT_REJECTED Should handle a rejected course snapshot fetch correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d7feb20e-f291-406c-94fd-4b23602fb3c7",
                "parentUUID": "a385eacf-6906-4ebe-8447-9f77d64b2fa1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseSnapshotReducer.spec.js",
            "uuid": "a385eacf-6906-4ebe-8447-9f77d64b2fa1",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseSnapshotReducer.spec.js",
            "passes": [
              {
                "title": "Should handle a rejected course snapshot fetch correctly",
                "fullTitle": "REDUCER: CourseSnapshot ACTION: FETCH_COURSE_SNAPSHOT_REJECTED Should handle a rejected course snapshot fetch correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d7feb20e-f291-406c-94fd-4b23602fb3c7",
                "parentUUID": "a385eacf-6906-4ebe-8447-9f77d64b2fa1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/reducers/CourseSnapshotReducer.spec.js",
        "uuid": "e9e9f69f-282c-44a3-ba87-f8c9cba6f692",
        "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseSnapshotReducer.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "REDUCER: CourseStructure",
        "suites": [
          {
            "title": "ACTION: INSERT_TEACHING_PERIOD",
            "suites": [],
            "tests": [
              {
                "title": "Should insert a teaching period with the given info correctly into middle of array",
                "fullTitle": "REDUCER: CourseStructure ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into middle of array",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2018,\n    code: \"S2-01\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a95bb8ac-8d81-4ba4-b237-e08671285aef",
                "parentUUID": "b5dbb05b-6633-4c24-abf8-6d6d8fe6f47e",
                "skipped": false
              },
              {
                "title": "Should insert a teaching period with the given info correctly into start of array",
                "fullTitle": "REDUCER: CourseStructure ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into start of array",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2016,\n    code: \"S2-01\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2016, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ecf6c2a6-42f6-4436-a6c3-05b06b929d08",
                "parentUUID": "b5dbb05b-6633-4c24-abf8-6d6d8fe6f47e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "b5dbb05b-6633-4c24-abf8-6d6d8fe6f47e",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should insert a teaching period with the given info correctly into middle of array",
                "fullTitle": "REDUCER: CourseStructure ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into middle of array",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2018,\n    code: \"S2-01\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a95bb8ac-8d81-4ba4-b237-e08671285aef",
                "parentUUID": "b5dbb05b-6633-4c24-abf8-6d6d8fe6f47e",
                "skipped": false
              },
              {
                "title": "Should insert a teaching period with the given info correctly into start of array",
                "fullTitle": "REDUCER: CourseStructure ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into start of array",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2016,\n    code: \"S2-01\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2016, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ecf6c2a6-42f6-4436-a6c3-05b06b929d08",
                "parentUUID": "b5dbb05b-6633-4c24-abf8-6d6d8fe6f47e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 5
          },
          {
            "title": "ACTION: REMOVE_TEACHING_PERIOD",
            "suites": [],
            "tests": [
              {
                "title": "Should remove a teaching period at the given index",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the given index",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "108aff36-c555-45ec-b04d-107a51b18850",
                "parentUUID": "2acf978c-c495-4683-aa73-90c119289daf",
                "skipped": false
              },
              {
                "title": "Should remove a teaching period at the start of the array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the start of the array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "10f20d84-5399-47e8-b836-7e33d2be815f",
                "parentUUID": "2acf978c-c495-4683-aa73-90c119289daf",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "2acf978c-c495-4683-aa73-90c119289daf",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should remove a teaching period at the given index",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the given index",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "108aff36-c555-45ec-b04d-107a51b18850",
                "parentUUID": "2acf978c-c495-4683-aa73-90c119289daf",
                "skipped": false
              },
              {
                "title": "Should remove a teaching period at the start of the array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the start of the array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "10f20d84-5399-47e8-b836-7e33d2be815f",
                "parentUUID": "2acf978c-c495-4683-aa73-90c119289daf",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "ACTION: APPEND_TEACHING_PERIOD",
            "suites": [],
            "tests": [
              {
                "title": "Should add the given teaching period to the end of the array",
                "fullTitle": "REDUCER: CourseStructure ACTION: APPEND_TEACHING_PERIOD Should add the given teaching period to the end of the array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"APPEND_TEACHING_PERIOD\",\n    year: 2020,\n    code: \"S2-01\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2020, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "70dd9b75-c42a-4ea7-882c-82c62c2aacf1",
                "parentUUID": "dd4540c0-703c-4201-a123-2030bdc6b49d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "dd4540c0-703c-4201-a123-2030bdc6b49d",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should add the given teaching period to the end of the array",
                "fullTitle": "REDUCER: CourseStructure ACTION: APPEND_TEACHING_PERIOD Should add the given teaching period to the end of the array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"APPEND_TEACHING_PERIOD\",\n    year: 2020,\n    code: \"S2-01\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2020, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "70dd9b75-c42a-4ea7-882c-82c62c2aacf1",
                "parentUUID": "dd4540c0-703c-4201-a123-2030bdc6b49d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: INCREASE_STUDY_LOAD",
            "suites": [],
            "tests": [
              {
                "title": "Should increase the study load if the study load is less than 4",
                "fullTitle": "REDUCER: CourseStructure ACTION: INCREASE_STUDY_LOAD Should increase the study load if the study load is less than 4",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "fd152f61-95af-4e24-8473-6a6006118861",
                "parentUUID": "b317ee52-fbc8-4adc-be45-4b371d799038",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "b317ee52-fbc8-4adc-be45-4b371d799038",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should increase the study load if the study load is less than 4",
                "fullTitle": "REDUCER: CourseStructure ACTION: INCREASE_STUDY_LOAD Should increase the study load if the study load is less than 4",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "fd152f61-95af-4e24-8473-6a6006118861",
                "parentUUID": "b317ee52-fbc8-4adc-be45-4b371d799038",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 8
          },
          {
            "title": "ACTION: DECREASE_STUDY_LOAD",
            "suites": [],
            "tests": [
              {
                "title": "Should decrease the study load if the study load is greater than 4",
                "fullTitle": "REDUCER: CourseStructure ACTION: DECREASE_STUDY_LOAD Should decrease the study load if the study load is greater than 4",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "3e839bfd-4de7-4cb8-9794-122ef886cdb1",
                "parentUUID": "18ebe592-f95e-45c6-a9c2-1dfe6ed26c31",
                "skipped": false
              },
              {
                "title": "Should not decrease the study load if the study load is 4 or less",
                "fullTitle": "REDUCER: CourseStructure ACTION: DECREASE_STUDY_LOAD Should not decrease the study load if the study load is 4 or less",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0b00fe95-0ed2-4520-bdce-48f7d004dffe",
                "parentUUID": "18ebe592-f95e-45c6-a9c2-1dfe6ed26c31",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "18ebe592-f95e-45c6-a9c2-1dfe6ed26c31",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should decrease the study load if the study load is greater than 4",
                "fullTitle": "REDUCER: CourseStructure ACTION: DECREASE_STUDY_LOAD Should decrease the study load if the study load is greater than 4",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "3e839bfd-4de7-4cb8-9794-122ef886cdb1",
                "parentUUID": "18ebe592-f95e-45c6-a9c2-1dfe6ed26c31",
                "skipped": false
              },
              {
                "title": "Should not decrease the study load if the study load is 4 or less",
                "fullTitle": "REDUCER: CourseStructure ACTION: DECREASE_STUDY_LOAD Should not decrease the study load if the study load is 4 or less",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0b00fe95-0ed2-4520-bdce-48f7d004dffe",
                "parentUUID": "18ebe592-f95e-45c6-a9c2-1dfe6ed26c31",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          },
          {
            "title": "ACTION: CLEAR_COURSE",
            "suites": [],
            "tests": [
              {
                "title": "Should remove all teaching periods and set the amount of units to 4",
                "fullTitle": "REDUCER: CourseStructure ACTION: CLEAR_COURSE Should remove all teaching periods and set the amount of units to 4",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5,\n    courseInfoLoadError: false,\n    courseInfoLoading: false\n};\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = {\n    courseInfoLoadError: false,\n    courseInfoLoading: false,\n    courseInfo: {\n        courseName: \"\",\n        faculty: \"\",\n        creditPoints: 0,\n        courseDescription: \"\",\n        durationStr: \"\",\n        modeAndLocation: \"\",\n        awards: \"\",\n        abrTitle: \"\"\n    },\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "93e31c7d-59a3-4fc2-accd-57aa34e9e3d2",
                "parentUUID": "be915337-8e3d-4f33-baae-8e5629ec3575",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "be915337-8e3d-4f33-baae-8e5629ec3575",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should remove all teaching periods and set the amount of units to 4",
                "fullTitle": "REDUCER: CourseStructure ACTION: CLEAR_COURSE Should remove all teaching periods and set the amount of units to 4",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5,\n    courseInfoLoadError: false,\n    courseInfoLoading: false\n};\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = {\n    courseInfoLoadError: false,\n    courseInfoLoading: false,\n    courseInfo: {\n        courseName: \"\",\n        faculty: \"\",\n        creditPoints: 0,\n        courseDescription: \"\",\n        durationStr: \"\",\n        modeAndLocation: \"\",\n        awards: \"\",\n        abrTitle: \"\"\n    },\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "93e31c7d-59a3-4fc2-accd-57aa34e9e3d2",
                "parentUUID": "be915337-8e3d-4f33-baae-8e5629ec3575",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: ADD_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should add a unit correctly to the start of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: ADD_UNIT Should add a unit correctly to the start of an array",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", totalCreditpoints: 6, units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }, null, null, null] }, { year: 2018, code: \"S2-01\", totalCreditpoints: 0, units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", totalCreditpoints: 0, units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e3694853-ffb7-4797-9714-2f4a15ec6a9f",
                "parentUUID": "b868c311-5305-454d-8ac5-df7ec58fa9d8",
                "skipped": false
              },
              {
                "title": "Should add a unit correctly to the middle of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: ADD_UNIT Should add a unit correctly to the middle of an array",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "2ce8f198-cb20-49ed-833d-eed2ea071ac4",
                "parentUUID": "b868c311-5305-454d-8ac5-df7ec58fa9d8",
                "skipped": false
              },
              {
                "title": "Should add a unit correctly to the end of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: ADD_UNIT Should add a unit correctly to the end of an array",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d8d95837-afe9-4eee-9c16-c99399240b12",
                "parentUUID": "b868c311-5305-454d-8ac5-df7ec58fa9d8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "b868c311-5305-454d-8ac5-df7ec58fa9d8",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should add a unit correctly to the start of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: ADD_UNIT Should add a unit correctly to the start of an array",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", totalCreditpoints: 6, units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }, null, null, null] }, { year: 2018, code: \"S2-01\", totalCreditpoints: 0, units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", totalCreditpoints: 0, units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e3694853-ffb7-4797-9714-2f4a15ec6a9f",
                "parentUUID": "b868c311-5305-454d-8ac5-df7ec58fa9d8",
                "skipped": false
              },
              {
                "title": "Should add a unit correctly to the middle of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: ADD_UNIT Should add a unit correctly to the middle of an array",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "2ce8f198-cb20-49ed-833d-eed2ea071ac4",
                "parentUUID": "b868c311-5305-454d-8ac5-df7ec58fa9d8",
                "skipped": false
              },
              {
                "title": "Should add a unit correctly to the end of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: ADD_UNIT Should add a unit correctly to the end of an array",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d8d95837-afe9-4eee-9c16-c99399240b12",
                "parentUUID": "b868c311-5305-454d-8ac5-df7ec58fa9d8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 8
          },
          {
            "title": "ACTION: REMOVE_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should remove a unit correctly frpm the start of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_UNIT Should remove a unit correctly frpm the start of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0,\n    creditPoints: 6\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "09869e99-5e0a-4111-8225-abb1983d751c",
                "parentUUID": "2c6a07b2-a39f-4695-9357-3dd927102694",
                "skipped": false
              },
              {
                "title": "Should remove a unit correctly from the middle of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_UNIT Should remove a unit correctly from the middle of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1,\n    creditPoints: 6\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "18c90372-66ee-48dc-9a2c-b21011ed4da0",
                "parentUUID": "2c6a07b2-a39f-4695-9357-3dd927102694",
                "skipped": false
              },
              {
                "title": "Should remove a unit correctly from the end of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_UNIT Should remove a unit correctly from the end of an array",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3,\n    creditPoints: 6\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "566758cd-a4ec-424b-99f5-bc8877258103",
                "parentUUID": "2c6a07b2-a39f-4695-9357-3dd927102694",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "2c6a07b2-a39f-4695-9357-3dd927102694",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should remove a unit correctly frpm the start of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_UNIT Should remove a unit correctly frpm the start of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0,\n    creditPoints: 6\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "09869e99-5e0a-4111-8225-abb1983d751c",
                "parentUUID": "2c6a07b2-a39f-4695-9357-3dd927102694",
                "skipped": false
              },
              {
                "title": "Should remove a unit correctly from the middle of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_UNIT Should remove a unit correctly from the middle of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1,\n    creditPoints: 6\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "18c90372-66ee-48dc-9a2c-b21011ed4da0",
                "parentUUID": "2c6a07b2-a39f-4695-9357-3dd927102694",
                "skipped": false
              },
              {
                "title": "Should remove a unit correctly from the end of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_UNIT Should remove a unit correctly from the end of an array",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3,\n    creditPoints: 6\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "566758cd-a4ec-424b-99f5-bc8877258103",
                "parentUUID": "2c6a07b2-a39f-4695-9357-3dd927102694",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 4
          },
          {
            "title": "ACTION: GENERATE_COURSE",
            "suites": [],
            "tests": [
              {
                "title": "Should generate a course structure with valid start and end years",
                "fullTitle": "REDUCER: CourseStructure ACTION: GENERATE_COURSE Should generate a course structure with valid start and end years",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2014,\n    endYear: 2016\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f67c969e-7cea-4c70-8f06-7c1321bc85a3",
                "parentUUID": "3d4fdb44-89c4-4a8c-9ce8-74822967749f",
                "skipped": false
              },
              {
                "title": "Should return an empty course structure with invalid start and end years.",
                "fullTitle": "REDUCER: CourseStructure ACTION: GENERATE_COURSE Should return an empty course structure with invalid start and end years.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2017,\n    endYear: 2013\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7eaa5ca8-adb9-4ee1-a4b4-0afbeab4ddaf",
                "parentUUID": "3d4fdb44-89c4-4a8c-9ce8-74822967749f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "3d4fdb44-89c4-4a8c-9ce8-74822967749f",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should generate a course structure with valid start and end years",
                "fullTitle": "REDUCER: CourseStructure ACTION: GENERATE_COURSE Should generate a course structure with valid start and end years",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2014,\n    endYear: 2016\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f67c969e-7cea-4c70-8f06-7c1321bc85a3",
                "parentUUID": "3d4fdb44-89c4-4a8c-9ce8-74822967749f",
                "skipped": false
              },
              {
                "title": "Should return an empty course structure with invalid start and end years.",
                "fullTitle": "REDUCER: CourseStructure ACTION: GENERATE_COURSE Should return an empty course structure with invalid start and end years.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2017,\n    endYear: 2013\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7eaa5ca8-adb9-4ee1-a4b4-0afbeab4ddaf",
                "parentUUID": "3d4fdb44-89c4-4a8c-9ce8-74822967749f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 8
          },
          {
            "title": "ACTION: FETCH_COURSE_INFO_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show that the course info is loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_INFO_PENDING Should correctly show that the course info is loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1195b71f-429f-466a-9367-041615105bfc",
                "parentUUID": "e2e5567f-9073-44ec-bb6f-f70804b7efa7",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "e2e5567f-9073-44ec-bb6f-f70804b7efa7",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly show that the course info is loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_INFO_PENDING Should correctly show that the course info is loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1195b71f-429f-466a-9367-041615105bfc",
                "parentUUID": "e2e5567f-9073-44ec-bb6f-f70804b7efa7",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_COURSE_INFO_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly return the payload and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    focusedCourse: null,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_FULFILLED\",\n    payload: { data: {\n            \"propertyMap\": {\n                courseCode: \"Test Code\",\n                courseName: \"Test Course\",\n                mangFac: \"Test Faculty\",\n                creditPoints: 100,\n                courseDescrip: {\n                    \"value\": \"Test Description\"\n                },\n                courseDuration: \"Test Duration\",\n                modeLoc: {\n                    \"value\": \"Test mode and location\"\n                },\n                courseAward: \"Test awards\",\n                abrevTitle: \"Test abreviated title\"\n            }\n        } },\n    courseCode: \"COURSE101\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: {\n        courseCode: \"Test Code\",\n        courseName: \"Test Course\",\n        faculty: \"Test Faculty\",\n        creditPoints: 100,\n        courseDescription: \"Test Description\",\n        durationStr: \"Test Duration\",\n        modeAndLocation: \"Test mode and location\",\n        awards: \"Test awards\",\n        abrTitle: \"Test abreviated title\"\n    },\n    focusedCourse: \"COURSE101\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0524386d-cfde-4901-bbb5-863b7d4b2f63",
                "parentUUID": "184ab2fd-ae04-4bda-aaad-e1cff0141c50",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "184ab2fd-ae04-4bda-aaad-e1cff0141c50",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly return the payload and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    focusedCourse: null,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_FULFILLED\",\n    payload: { data: {\n            \"propertyMap\": {\n                courseCode: \"Test Code\",\n                courseName: \"Test Course\",\n                mangFac: \"Test Faculty\",\n                creditPoints: 100,\n                courseDescrip: {\n                    \"value\": \"Test Description\"\n                },\n                courseDuration: \"Test Duration\",\n                modeLoc: {\n                    \"value\": \"Test mode and location\"\n                },\n                courseAward: \"Test awards\",\n                abrevTitle: \"Test abreviated title\"\n            }\n        } },\n    courseCode: \"COURSE101\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: {\n        courseCode: \"Test Code\",\n        courseName: \"Test Course\",\n        faculty: \"Test Faculty\",\n        creditPoints: 100,\n        courseDescription: \"Test Description\",\n        durationStr: \"Test Duration\",\n        modeAndLocation: \"Test mode and location\",\n        awards: \"Test awards\",\n        abrTitle: \"Test abreviated title\"\n    },\n    focusedCourse: \"COURSE101\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0524386d-cfde-4901-bbb5-863b7d4b2f63",
                "parentUUID": "184ab2fd-ae04-4bda-aaad-e1cff0141c50",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "ACTION: FETCH_COURSE_INFO_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show that the course info fetch failed and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_INFO_REJECTED Should correctly show that the course info fetch failed and show that it is no longer loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: true,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "503243b3-4425-47dd-bc1c-b5c16cca476c",
                "parentUUID": "7894d4d6-f0fa-4eae-9380-5173edfd60af",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "7894d4d6-f0fa-4eae-9380-5173edfd60af",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly show that the course info fetch failed and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_INFO_REJECTED Should correctly show that the course info fetch failed and show that it is no longer loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: true,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "503243b3-4425-47dd-bc1c-b5c16cca476c",
                "parentUUID": "7894d4d6-f0fa-4eae-9380-5173edfd60af",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_COURSE_TEMPLATE_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show that the course template is loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_TEMPLATE_PENDING Should correctly show that the course template is loading",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1ad1252f-0c4b-49fb-8b78-906833b0617c",
                "parentUUID": "501ce1f9-352f-4a39-958c-f7ec8bca95dd",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "501ce1f9-352f-4a39-958c-f7ec8bca95dd",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly show that the course template is loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_TEMPLATE_PENDING Should correctly show that the course template is loading",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1ad1252f-0c4b-49fb-8b78-906833b0617c",
                "parentUUID": "501ce1f9-352f-4a39-958c-f7ec8bca95dd",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "ACTION: FETCH_COURSE_TEMPLATE_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly return the payload and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_TEMPLATE_FULFILLED Should correctly return the payload and show that it is no longer loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_FULFILLED\",\n    payload: {\n        data: {\n            propertyMap: \"Fake Course Template\"\n        }\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: \"Fake Course Template\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a3fadc32-3e2b-4cef-98e2-c2b3842bb654",
                "parentUUID": "4aec4859-53c2-4a66-bb72-0ba218ed08ee",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "4aec4859-53c2-4a66-bb72-0ba218ed08ee",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly return the payload and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_TEMPLATE_FULFILLED Should correctly return the payload and show that it is no longer loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_FULFILLED\",\n    payload: {\n        data: {\n            propertyMap: \"Fake Course Template\"\n        }\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: \"Fake Course Template\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a3fadc32-3e2b-4cef-98e2-c2b3842bb654",
                "parentUUID": "4aec4859-53c2-4a66-bb72-0ba218ed08ee",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_COURSE_TEMPLATE_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show that the course template fetch failed and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_TEMPLATE_REJECTED Should correctly show that the course template fetch failed and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: true,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b8a59bf3-e7cf-41ad-975c-d8697f5e1fd1",
                "parentUUID": "72e19ea3-804c-4b20-bccc-5061b394f3b0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "72e19ea3-804c-4b20-bccc-5061b394f3b0",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly show that the course template fetch failed and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_TEMPLATE_REJECTED Should correctly show that the course template fetch failed and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: true,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b8a59bf3-e7cf-41ad-975c-d8697f5e1fd1",
                "parentUUID": "72e19ea3-804c-4b20-bccc-5061b394f3b0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_UNIT_INFO_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show that the unit info is loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_UNIT_INFO_PENDING Should correctly show that the unit info is loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: {\n        preqs: \"\",\n        creditPoints: 0,\n        rules: [],\n        locationAndTime: \"\",\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"\",\n        eftsl: 0,\n        descriptions: \"\"\n    },\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: {\n        preqs: \"\",\n        creditPoints: 0,\n        rules: [],\n        locationAndTime: \"\",\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"\",\n        eftsl: 0,\n        descriptions: \"\"\n    },\n    focusedUnitCode: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "671afc48-d493-4bd1-bf57-76aaa972d623",
                "parentUUID": "a4386ed0-a688-47fb-834c-40c0a97d3401",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "a4386ed0-a688-47fb-834c-40c0a97d3401",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly show that the unit info is loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_UNIT_INFO_PENDING Should correctly show that the unit info is loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: {\n        preqs: \"\",\n        creditPoints: 0,\n        rules: [],\n        locationAndTime: \"\",\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"\",\n        eftsl: 0,\n        descriptions: \"\"\n    },\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: {\n        preqs: \"\",\n        creditPoints: 0,\n        rules: [],\n        locationAndTime: \"\",\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"\",\n        eftsl: 0,\n        descriptions: \"\"\n    },\n    focusedUnitCode: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "671afc48-d493-4bd1-bf57-76aaa972d623",
                "parentUUID": "a4386ed0-a688-47fb-834c-40c0a97d3401",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_UNIT_INFO_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly return the payload and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_UNIT_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_FULFILLED\",\n    payload: { data: \"Fake Unit Info\" },\n    unitCode: \"FAKE1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: \"Fake Unit Info\",\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "4e5aab25-6262-4ee5-a470-94bfe4f29c38",
                "parentUUID": "518732b4-a87d-442b-8e9b-3881dd3c8a9e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "518732b4-a87d-442b-8e9b-3881dd3c8a9e",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly return the payload and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_UNIT_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_FULFILLED\",\n    payload: { data: \"Fake Unit Info\" },\n    unitCode: \"FAKE1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: \"Fake Unit Info\",\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "4e5aab25-6262-4ee5-a470-94bfe4f29c38",
                "parentUUID": "518732b4-a87d-442b-8e9b-3881dd3c8a9e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_UNIT_INFO_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show that the unit info fetch failed and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_UNIT_INFO_REJECTED Should correctly show that the unit info fetch failed and show that it is no longer loading",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_REJECTED\",\n    payload: {\n        response: {\n            status: 404\n        }\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: {\n        response: {\n            status: 404\n        }\n    },\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ec6a18f1-1159-4512-b02a-959bcd1af440",
                "parentUUID": "47a270b1-e372-4db1-8207-dc2fa341818c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "47a270b1-e372-4db1-8207-dc2fa341818c",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly show that the unit info fetch failed and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_UNIT_INFO_REJECTED Should correctly show that the unit info fetch failed and show that it is no longer loading",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_REJECTED\",\n    payload: {\n        response: {\n            status: 404\n        }\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: {\n        response: {\n            status: 404\n        }\n    },\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ec6a18f1-1159-4512-b02a-959bcd1af440",
                "parentUUID": "47a270b1-e372-4db1-8207-dc2fa341818c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "ACTION: SUBMIT_COURSE_FORM",
            "suites": [],
            "tests": [
              {
                "title": "Should accurately set the start year and the focused course on submission",
                "fullTitle": "REDUCER: CourseStructure ACTION: SUBMIT_COURSE_FORM Should accurately set the start year and the focused course on submission",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_COURSE_FORM\",\n    startYear: 2020,\n    courseCode: \"TEST1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: \"TEST1001\",\n    startYear: 2020,\n    endYear: 2020\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "18d1a1ce-ce27-4ad2-a7af-598c3f8c9ccd",
                "parentUUID": "aa0ca187-07cc-430a-86b7-cbf6efce39a2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "aa0ca187-07cc-430a-86b7-cbf6efce39a2",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should accurately set the start year and the focused course on submission",
                "fullTitle": "REDUCER: CourseStructure ACTION: SUBMIT_COURSE_FORM Should accurately set the start year and the focused course on submission",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_COURSE_FORM\",\n    startYear: 2020,\n    courseCode: \"TEST1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: \"TEST1001\",\n    startYear: 2020,\n    endYear: 2020\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "18d1a1ce-ce27-4ad2-a7af-598c3f8c9ccd",
                "parentUUID": "aa0ca187-07cc-430a-86b7-cbf6efce39a2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: SUBMIT_YEAR_FORM",
            "suites": [],
            "tests": [
              {
                "title": "Should accurately set the start year and end year on submission",
                "fullTitle": "REDUCER: CourseStructure ACTION: SUBMIT_YEAR_FORM Should accurately set the start year and end year on submission",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_YEAR_FORM\",\n    startYear: 2020,\n    endYear: 2025\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2020,\n    endYear: 2025\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c676b09a-5eba-4bc2-8529-cc2cac650b70",
                "parentUUID": "bbef5b89-2dd3-43db-8210-c8cac045fa0c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "bbef5b89-2dd3-43db-8210-c8cac045fa0c",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should accurately set the start year and end year on submission",
                "fullTitle": "REDUCER: CourseStructure ACTION: SUBMIT_YEAR_FORM Should accurately set the start year and end year on submission",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_YEAR_FORM\",\n    startYear: 2020,\n    endYear: 2025\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2020,\n    endYear: 2025\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c676b09a-5eba-4bc2-8529-cc2cac650b70",
                "parentUUID": "bbef5b89-2dd3-43db-8210-c8cac045fa0c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_TEACHING_PERIODS_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly handle  of teaching periods data",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_TEACHING_PERIODS_PENDING Should correctly handle  of teaching periods data",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "919dd5f5-ac82-4d65-9127-83919a2c4d03",
                "parentUUID": "79ac9cec-1d71-4f30-9241-4fe022e06e60",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "79ac9cec-1d71-4f30-9241-4fe022e06e60",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly handle  of teaching periods data",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_TEACHING_PERIODS_PENDING Should correctly handle  of teaching periods data",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "919dd5f5-ac82-4d65-9127-83919a2c4d03",
                "parentUUID": "79ac9cec-1d71-4f30-9241-4fe022e06e60",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_TEACHING_PERIODS_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly handle  of teaching periods data",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_TEACHING_PERIODS_FULFILLED Should correctly handle  of teaching periods data",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_FULFILLED\",\n    payload: \"Teaching period strings\"\n};\nvar stateAfter = {\n    teachingPeriodData: \"Teaching period strings\",\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9e5ac7ee-1098-4e14-997a-1c186ce77820",
                "parentUUID": "e88a3dbb-5e5d-4d7c-8eca-0565ed6e2716",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "e88a3dbb-5e5d-4d7c-8eca-0565ed6e2716",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly handle  of teaching periods data",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_TEACHING_PERIODS_FULFILLED Should correctly handle  of teaching periods data",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_FULFILLED\",\n    payload: \"Teaching period strings\"\n};\nvar stateAfter = {\n    teachingPeriodData: \"Teaching period strings\",\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9e5ac7ee-1098-4e14-997a-1c186ce77820",
                "parentUUID": "e88a3dbb-5e5d-4d7c-8eca-0565ed6e2716",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_TEACHING_PERIODS_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly handle  of teaching periods data",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_TEACHING_PERIODS_REJECTED Should correctly handle  of teaching periods data",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "81686a35-b428-44b3-a015-466556f7d604",
                "parentUUID": "6da36940-23f3-4f53-96d3-f236dcb0b73c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "6da36940-23f3-4f53-96d3-f236dcb0b73c",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly handle  of teaching periods data",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_TEACHING_PERIODS_REJECTED Should correctly handle  of teaching periods data",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "81686a35-b428-44b3-a015-466556f7d604",
                "parentUUID": "6da36940-23f3-4f53-96d3-f236dcb0b73c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: SHOW_INSERT_TEACHING_PERIOD_UI",
            "suites": [],
            "tests": [
              {
                "title": "Should set the teaching period code to insert value correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should set the teaching period code to insert value correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodCodeToInsert: null,\n    testParam1: 1,\n    testParam2: \"test\"\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"S1-02\"\n};\nvar stateAfter = {\n    teachingPeriodCodeToInsert: \"S1-02\",\n    testParam1: 1,\n    testParam2: \"test\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d16fd564-04e9-45ae-9c58-dfb697120f43",
                "parentUUID": "ec895889-ad4e-47e8-8235-3864776f1378",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "ec895889-ad4e-47e8-8235-3864776f1378",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should set the teaching period code to insert value correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should set the teaching period code to insert value correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodCodeToInsert: null,\n    testParam1: 1,\n    testParam2: \"test\"\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"S1-02\"\n};\nvar stateAfter = {\n    teachingPeriodCodeToInsert: \"S1-02\",\n    testParam1: 1,\n    testParam2: \"test\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d16fd564-04e9-45ae-9c58-dfb697120f43",
                "parentUUID": "ec895889-ad4e-47e8-8235-3864776f1378",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: UPDATE_AFFECTED_UNITS",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly update the affected units value to the given array",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_AFFECTED_UNITS Should correctly update the affected units value to the given array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: []\n};\nvar action = {\n    type: \"UPDATE_AFFECTED_UNITS\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "da45eaa8-0fe7-4708-94a4-ce8aeff1d5f7",
                "parentUUID": "1be02c4a-7667-423b-bd15-05b9577b821e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "1be02c4a-7667-423b-bd15-05b9577b821e",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly update the affected units value to the given array",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_AFFECTED_UNITS Should correctly update the affected units value to the given array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: []\n};\nvar action = {\n    type: \"UPDATE_AFFECTED_UNITS\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "da45eaa8-0fe7-4708-94a4-ce8aeff1d5f7",
                "parentUUID": "1be02c4a-7667-423b-bd15-05b9577b821e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: UPDATE_INDEX_OF_TP_TO_REMOVE",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly update the index of tp to remove value to the given value",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_INDEX_OF_TP_TO_REMOVE Should correctly update the index of tp to remove value to the given value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 0\n};\nvar action = {\n    type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\",\n    index: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 1\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ec446901-fe4b-408b-899a-9459c149ca37",
                "parentUUID": "b3c1cd44-233d-4014-bca2-a52415801365",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "b3c1cd44-233d-4014-bca2-a52415801365",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly update the index of tp to remove value to the given value",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_INDEX_OF_TP_TO_REMOVE Should correctly update the index of tp to remove value to the given value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 0\n};\nvar action = {\n    type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\",\n    index: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 1\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ec446901-fe4b-408b-899a-9459c149ca37",
                "parentUUID": "b3c1cd44-233d-4014-bca2-a52415801365",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: MOVING_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly begin moving a unit",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVING_UNIT Should correctly begin moving a unit",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0\n};\nvar action = {\n    type: \"MOVING_UNIT\",\n    unit: \"TEST-UNIT\",\n    unitIndex: 3,\n    tpIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TEST-UNIT\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 3\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e7577499-4edf-4ac2-8bb4-16fbda739718",
                "parentUUID": "a578729e-68d1-41f3-a962-6e63b817020d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "a578729e-68d1-41f3-a962-6e63b817020d",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly begin moving a unit",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVING_UNIT Should correctly begin moving a unit",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0\n};\nvar action = {\n    type: \"MOVING_UNIT\",\n    unit: \"TEST-UNIT\",\n    unitIndex: 3,\n    tpIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TEST-UNIT\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 3\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e7577499-4edf-4ac2-8bb4-16fbda739718",
                "parentUUID": "a578729e-68d1-41f3-a962-6e63b817020d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: MOVE_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly handle moving a unit to a teaching period earlier than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period earlier than it",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitName: \"TestUnit\", creditPoints: 6 }, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "89c67b60-ae67-4d43-9a38-524f6c0d3115",
                "parentUUID": "09514264-c130-40ce-a3ec-13d1a031b0a2",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to a teaching period later than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period later than it",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitName: \"TestUnit\", creditPoints: 6 }, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ca60c32f-2ed3-461d-a019-bcfd97a7e5fc",
                "parentUUID": "09514264-c130-40ce-a3ec-13d1a031b0a2",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to the same teaching period but earlier position",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but earlier position",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [\"PlaceToMoveTo\", { unitName: \"TestUnit\", creditPoints: 6 }, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [{ unitName: \"TestUnit\", creditPoints: 6 }, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "00265a72-63d4-46dc-ab10-168003047cc8",
                "parentUUID": "09514264-c130-40ce-a3ec-13d1a031b0a2",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to the same teaching period but later position",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but later position",
                "timedOut": false,
                "duration": 16,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [{ unitName: \"TestUnit\", creditPoints: 6 }, null, \"PlaceToMoveTo\", null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "4f7440bd-373f-4ccd-aba1-9c0829621d3e",
                "parentUUID": "09514264-c130-40ce-a3ec-13d1a031b0a2",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to the same teaching period and exact same position",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period and exact same position",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7ac0142c-784a-4483-acea-057ac93d64a6",
                "parentUUID": "09514264-c130-40ce-a3ec-13d1a031b0a2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "09514264-c130-40ce-a3ec-13d1a031b0a2",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly handle moving a unit to a teaching period earlier than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period earlier than it",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitName: \"TestUnit\", creditPoints: 6 }, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "89c67b60-ae67-4d43-9a38-524f6c0d3115",
                "parentUUID": "09514264-c130-40ce-a3ec-13d1a031b0a2",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to a teaching period later than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period later than it",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitName: \"TestUnit\", creditPoints: 6 }, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ca60c32f-2ed3-461d-a019-bcfd97a7e5fc",
                "parentUUID": "09514264-c130-40ce-a3ec-13d1a031b0a2",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to the same teaching period but earlier position",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but earlier position",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [\"PlaceToMoveTo\", { unitName: \"TestUnit\", creditPoints: 6 }, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [{ unitName: \"TestUnit\", creditPoints: 6 }, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "00265a72-63d4-46dc-ab10-168003047cc8",
                "parentUUID": "09514264-c130-40ce-a3ec-13d1a031b0a2",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to the same teaching period but later position",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but later position",
                "timedOut": false,
                "duration": 16,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [{ unitName: \"TestUnit\", creditPoints: 6 }, null, \"PlaceToMoveTo\", null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "4f7440bd-373f-4ccd-aba1-9c0829621d3e",
                "parentUUID": "09514264-c130-40ce-a3ec-13d1a031b0a2",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to the same teaching period and exact same position",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period and exact same position",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7ac0142c-784a-4483-acea-057ac93d64a6",
                "parentUUID": "09514264-c130-40ce-a3ec-13d1a031b0a2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 28
          },
          {
            "title": "ACTION: CANCEL_MOVING_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "should cancel moving unit",
                "fullTitle": "REDUCER: CourseStructure ACTION: CANCEL_MOVING_UNIT should cancel moving unit",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: \"TestUnit2\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: undefined,\n    unitsIndexOfUnitToBeMoved: undefined\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e1a0b882-4e92-487e-817f-16a76e2878b8",
                "parentUUID": "3f774188-6a48-4451-b4b3-b87721c5f20d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "3f774188-6a48-4451-b4b3-b87721c5f20d",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "should cancel moving unit",
                "fullTitle": "REDUCER: CourseStructure ACTION: CANCEL_MOVING_UNIT should cancel moving unit",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: \"TestUnit2\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: undefined,\n    unitsIndexOfUnitToBeMoved: undefined\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e1a0b882-4e92-487e-817f-16a76e2878b8",
                "parentUUID": "3f774188-6a48-4451-b4b3-b87721c5f20d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "ACTION: SWAP_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly handle swaping a unit to a teaching period earlier than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period earlier than it",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f3d8f1b4-6be1-4970-a1d7-75e2c4089d61",
                "parentUUID": "cb74d348-21b3-4a5c-bd52-98abc78a6e27",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to a teaching period later than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period later than it",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "8e25704c-4090-4195-ba2a-7b99b25c2479",
                "parentUUID": "cb74d348-21b3-4a5c-bd52-98abc78a6e27",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to the same teaching period but earlier position",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but earlier position",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "03ba7afb-ecd6-4b5e-9f87-33a49163e150",
                "parentUUID": "cb74d348-21b3-4a5c-bd52-98abc78a6e27",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to the same teaching period but later position",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but later position",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, \"PlaceToMoveTo\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", null, \"TestUnit\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a335aadd-2a22-45f9-97bd-3cae1f628dfb",
                "parentUUID": "cb74d348-21b3-4a5c-bd52-98abc78a6e27",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to the same teaching period and exact same position",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period and exact same position",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "19df3100-7bff-4087-ace6-3b08b99d0f6b",
                "parentUUID": "cb74d348-21b3-4a5c-bd52-98abc78a6e27",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "cb74d348-21b3-4a5c-bd52-98abc78a6e27",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly handle swaping a unit to a teaching period earlier than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period earlier than it",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f3d8f1b4-6be1-4970-a1d7-75e2c4089d61",
                "parentUUID": "cb74d348-21b3-4a5c-bd52-98abc78a6e27",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to a teaching period later than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period later than it",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "8e25704c-4090-4195-ba2a-7b99b25c2479",
                "parentUUID": "cb74d348-21b3-4a5c-bd52-98abc78a6e27",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to the same teaching period but earlier position",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but earlier position",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "03ba7afb-ecd6-4b5e-9f87-33a49163e150",
                "parentUUID": "cb74d348-21b3-4a5c-bd52-98abc78a6e27",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to the same teaching period but later position",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but later position",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, \"PlaceToMoveTo\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", null, \"TestUnit\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a335aadd-2a22-45f9-97bd-3cae1f628dfb",
                "parentUUID": "cb74d348-21b3-4a5c-bd52-98abc78a6e27",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to the same teaching period and exact same position",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period and exact same position",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "19df3100-7bff-4087-ace6-3b08b99d0f6b",
                "parentUUID": "cb74d348-21b3-4a5c-bd52-98abc78a6e27",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 5
          },
          {
            "title": "ACTION: VALIDATE_COURSE",
            "suites": [
              {
                "title": "duplicates:",
                "suites": [],
                "tests": [
                  {
                    "title": "Should not give duplicate unit errors if the first attempt is in the past, and the second attempt is not two or more years into the future.",
                    "fullTitle": "ACTION: VALIDATE_COURSE duplicates: Should not give duplicate unit errors if the first attempt is in the past, and the second attempt is not two or more years into the future.",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: new Date().getFullYear() - 1,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, null]\n    }, {\n        code: \"S1-01\",\n        year: new Date().getFullYear() + 1,\n        units: [null, null, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3a4ea3f3-8a26-47e0-bb19-07685a7ad79d",
                    "parentUUID": "c304df92-0ac4-4d72-b14c-620e5867bf39",
                    "skipped": false
                  },
                  {
                    "title": "Should give a duplicate unit error if there are two same units in the same teaching period",
                    "fullTitle": "ACTION: VALIDATE_COURSE duplicates: Should give a duplicate unit error if there are two same units in the same teaching period",
                    "timedOut": false,
                    "duration": 6,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2015,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }, {\n        code: \"S2-01\",\n        year: 2015,\n        units: [null, null, null, {\n            unitCode: \"GJQ2039\"\n        }]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2015,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }, {\n        code: \"S2-01\",\n        year: 2015,\n        units: [null, null, null, {\n            unitCode: \"GJQ2039\"\n        }]\n    }],\n    courseErrors: [{\n        message: \"ABCD1234 already exists in the same teaching period. Please remove this unit.\",\n        coordinates: [[0, 3]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "df4b8a72-bab7-4ee6-ba7d-06ef31d76b9b",
                    "parentUUID": "c304df92-0ac4-4d72-b14c-620e5867bf39",
                    "skipped": false
                  },
                  {
                    "title": "Should give a duplicate error if a duplicate unit is placed in a teaching period two years from now",
                    "fullTitle": "ACTION: VALIDATE_COURSE duplicates: Should give a duplicate error if a duplicate unit is placed in a teaching period two years from now",
                    "timedOut": false,
                    "duration": 4,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var currentYear = new Date().getFullYear();\nvar stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: currentYear,\n        units: [{\n            unitCode: \"ABC1234\"\n        }, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 2,\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 2,\n        units: [null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: currentYear,\n        units: [{\n            unitCode: \"ABC1234\"\n        }, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 2,\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 2,\n        units: [null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan. Please plan as if you will pass all units.\",\n        coordinates: [[4, 1]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e7af2d81-d365-4ba9-bf05-60136dcb606e",
                    "parentUUID": "c304df92-0ac4-4d72-b14c-620e5867bf39",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/reducers/CourseStructure.spec.js",
                "uuid": "c304df92-0ac4-4d72-b14c-620e5867bf39",
                "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseStructure.spec.js",
                "passes": [
                  {
                    "title": "Should not give duplicate unit errors if the first attempt is in the past, and the second attempt is not two or more years into the future.",
                    "fullTitle": "ACTION: VALIDATE_COURSE duplicates: Should not give duplicate unit errors if the first attempt is in the past, and the second attempt is not two or more years into the future.",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: new Date().getFullYear() - 1,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, null]\n    }, {\n        code: \"S1-01\",\n        year: new Date().getFullYear() + 1,\n        units: [null, null, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3a4ea3f3-8a26-47e0-bb19-07685a7ad79d",
                    "parentUUID": "c304df92-0ac4-4d72-b14c-620e5867bf39",
                    "skipped": false
                  },
                  {
                    "title": "Should give a duplicate unit error if there are two same units in the same teaching period",
                    "fullTitle": "ACTION: VALIDATE_COURSE duplicates: Should give a duplicate unit error if there are two same units in the same teaching period",
                    "timedOut": false,
                    "duration": 6,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2015,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }, {\n        code: \"S2-01\",\n        year: 2015,\n        units: [null, null, null, {\n            unitCode: \"GJQ2039\"\n        }]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2015,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }, {\n        code: \"S2-01\",\n        year: 2015,\n        units: [null, null, null, {\n            unitCode: \"GJQ2039\"\n        }]\n    }],\n    courseErrors: [{\n        message: \"ABCD1234 already exists in the same teaching period. Please remove this unit.\",\n        coordinates: [[0, 3]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "df4b8a72-bab7-4ee6-ba7d-06ef31d76b9b",
                    "parentUUID": "c304df92-0ac4-4d72-b14c-620e5867bf39",
                    "skipped": false
                  },
                  {
                    "title": "Should give a duplicate error if a duplicate unit is placed in a teaching period two years from now",
                    "fullTitle": "ACTION: VALIDATE_COURSE duplicates: Should give a duplicate error if a duplicate unit is placed in a teaching period two years from now",
                    "timedOut": false,
                    "duration": 4,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var currentYear = new Date().getFullYear();\nvar stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: currentYear,\n        units: [{\n            unitCode: \"ABC1234\"\n        }, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 2,\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 2,\n        units: [null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: currentYear,\n        units: [{\n            unitCode: \"ABC1234\"\n        }, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 2,\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 2,\n        units: [null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan. Please plan as if you will pass all units.\",\n        coordinates: [[4, 1]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e7af2d81-d365-4ba9-bf05-60136dcb606e",
                    "parentUUID": "c304df92-0ac4-4d72-b14c-620e5867bf39",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 13
              },
              {
                "title": "offerings:",
                "suites": [],
                "tests": [
                  {
                    "title": "Should give a course error for a unit not being offered in the teaching period it is in",
                    "fullTitle": "ACTION: VALIDATE_COURSE offerings: Should give a course error for a unit not being offered in the teaching period it is in",
                    "timedOut": false,
                    "duration": 4,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2019,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: 2019,\n        units: [null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"First semester 2019 (Day)\"]\n            }]\n        }, null]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2019,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: 2019,\n        units: [null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"First semester 2019 (Day)\"]\n            }]\n        }, null]\n    }],\n    courseErrors: [{\n        message: \"ABC1234 is not offered in second semester, 2019.\",\n        coordinates: [[1, 2]]\n    }],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "95fea75e-6d9f-436b-b753-dc930dd95e87",
                    "parentUUID": "4d25d61d-db5f-45e9-83f4-80b5e5dad1b3",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/reducers/CourseStructure.spec.js",
                "uuid": "4d25d61d-db5f-45e9-83f4-80b5e5dad1b3",
                "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseStructure.spec.js",
                "passes": [
                  {
                    "title": "Should give a course error for a unit not being offered in the teaching period it is in",
                    "fullTitle": "ACTION: VALIDATE_COURSE offerings: Should give a course error for a unit not being offered in the teaching period it is in",
                    "timedOut": false,
                    "duration": 4,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2019,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: 2019,\n        units: [null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"First semester 2019 (Day)\"]\n            }]\n        }, null]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2019,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: 2019,\n        units: [null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"First semester 2019 (Day)\"]\n            }]\n        }, null]\n    }],\n    courseErrors: [{\n        message: \"ABC1234 is not offered in second semester, 2019.\",\n        coordinates: [[1, 2]]\n    }],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "95fea75e-6d9f-436b-b753-dc930dd95e87",
                    "parentUUID": "4d25d61d-db5f-45e9-83f4-80b5e5dad1b3",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 4
              },
              {
                "title": "rules:",
                "suites": [],
                "tests": [
                  {
                    "title": "Should give a course error for a missing prereq",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should give a course error for a missing prereq",
                    "timedOut": false,
                    "duration": 11,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"Must have passed an (I/W) unit in {DEF2345, QLS2029}\",\n                endDate: \"\"\n            }]\n        }]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"Must have passed an (I/W) unit in {DEF2345, QLS2029}\",\n                endDate: \"\"\n            }]\n        }]\n    }],\n    courseErrors: [{\n        message: \"You must complete DEF2345 or QLS2029 before you can do ABC1234.\",\n        coordinates: [[0, 3]]\n    }],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4b654c56-ca1c-4b15-9537-6c191adbfe09",
                    "parentUUID": "f15c4e4d-d0c3-4096-bc4b-ae2b87f6ae04",
                    "skipped": false
                  },
                  {
                    "title": "Should give an error for credit points being lower than the minimum required for the unit",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should give an error for credit points being lower than the minimum required for the unit",
                    "timedOut": false,
                    "duration": 10,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2016,\n        code: \"S2-01\",\n        units: [{\n            unitCode: \"TEST1011\",\n            creditPoints: 6\n        }, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"TEST3031\",\n            creditPoints: 6,\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"Must have passed 24 credit points\"\n            }]\n        }, null, null, null]\n    }, {\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2016,\n        code: \"S2-01\",\n        units: [{\n            unitCode: \"TEST1011\",\n            creditPoints: 6\n        }, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"TEST3031\",\n            creditPoints: 6,\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"Must have passed 24 credit points\"\n            }]\n        }, null, null, null]\n    }, {\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"You need 18 more credit points before you can do TEST3031.\",\n        coordinates: [[2, 1]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "78189899-5447-4138-a3c0-fa1443002f78",
                    "parentUUID": "f15c4e4d-d0c3-4096-bc4b-ae2b87f6ae04",
                    "skipped": false
                  },
                  {
                    "title": "Should correctly handle prohibitions",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should correctly handle prohibitions",
                    "timedOut": false,
                    "duration": 6,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2013,\n        code: \"S1-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\"\n        }]\n    }, {\n        year: 2013,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"BCD1234\",\n            rules: [{\n                ruleSummary: \"INCOMP\",\n                ruleString: \"Incompatible with achievement in {ABC1234}\"\n            }]\n        }, null, null]\n    }],\n    courseErrors: [{\n        message: \"Please remove BCD1234, as completing ABC1234 prohibits you from doing this unit.\",\n        coordinates: [[1, 1]]\n    }]\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a855ef6b-7218-46a9-a45a-e710ca1106c5",
                    "parentUUID": "f15c4e4d-d0c3-4096-bc4b-ae2b87f6ae04",
                    "skipped": false
                  },
                  {
                    "title": "Should correctly handle the Do branch of For COURSE_CODE syntax",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should correctly handle the Do branch of For COURSE_CODE syntax",
                    "timedOut": false,
                    "duration": 7,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2014,\n        code: \"S1-01\",\n        units: [{\n            unitCode: \"DEF2345\",\n            unitName: \"Test unit\",\n            rules: [{\n                ruleSummary: \"COREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {S2029, S3019} Do Any passed co-req (I/W) unit in {ABC2022} Otherwise true\",\n                endDate: \"\"\n            }]\n        }, null, null, null]\n    }],\n    courseInfo: {\n        courseCode: \"S2029\"\n    },\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2014,\n        code: \"S1-01\",\n        units: [{\n            unitCode: \"DEF2345\",\n            unitName: \"Test unit\",\n            rules: [{\n                ruleSummary: \"COREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {S2029, S3019} Do Any passed co-req (I/W) unit in {ABC2022} Otherwise true\",\n                endDate: \"\"\n            }]\n        }, null, null, null]\n    }],\n    courseInfo: {\n        courseCode: \"S2029\"\n    },\n    courseErrors: [{\n        message: \"You must complete ABC2022 before or whilst doing DEF2345.\",\n        coordinates: [[0, 0]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bb0ee5aa-463d-4463-b09c-cb058932853c",
                    "parentUUID": "f15c4e4d-d0c3-4096-bc4b-ae2b87f6ae04",
                    "skipped": false
                  },
                  {
                    "title": "Should correctly handle the Otherwise branch of For COURSE_CODE syntax",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should correctly handle the Otherwise branch of For COURSE_CODE syntax",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }, {\n        year: 2018,\n        code: \"WS-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"Winter semester 2018 (Day)\"]\n            }],\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {Q2001, Q2003} Do true Otherwise Must have passed 1 (I/W) units in {TEST1001}\",\n                endDate: \"\"\n            }]\n        }]\n    }, {\n        year: 2018,\n        code: \"S2-01\",\n        units: [null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }, {\n        year: 2018,\n        code: \"WS-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"Winter semester 2018 (Day)\"]\n            }],\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {Q2001, Q2003} Do true Otherwise Must have passed 1 (I/W) units in {TEST1001}\",\n                endDate: \"\"\n            }]\n        }]\n    }, {\n        year: 2018,\n        code: \"S2-01\",\n        units: [null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"You must complete TEST1001 before you can do ABC1234.\",\n        coordinates: [[1, 3]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "06fddd9b-232d-42f0-b65d-ac0cfeea9c61",
                    "parentUUID": "f15c4e4d-d0c3-4096-bc4b-ae2b87f6ae04",
                    "skipped": false
                  },
                  {
                    "title": "Should handle a complicated For expression",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should handle a complicated For expression",
                    "timedOut": false,
                    "duration": 6,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2019,\n        code: \"S1-01\",\n        units: [null, {\n            unitCode: \"ABC1234\",\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"For ((SCA_LOCATION IN {CLAYTON} AND COURSE_CODE IN {1039, 2393}) OR (SCA_LOCATION IN {CLAYTON} AND COURSE_CODE NOT IN {A4921})) Do true Otherwise Permission required\"\n            }]\n        }, null, null]\n    }],\n    courseErrors: [],\n    courseInfo: {\n        courseCode: \"A4921\"\n    }\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2019,\n        code: \"S1-01\",\n        units: [null, {\n            unitCode: \"ABC1234\",\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"For ((SCA_LOCATION IN {CLAYTON} AND COURSE_CODE IN {1039, 2393}) OR (SCA_LOCATION IN {CLAYTON} AND COURSE_CODE NOT IN {A4921})) Do true Otherwise Permission required\"\n            }]\n        }, null, null]\n    }],\n    courseErrors: [{\n        message: \"You need permission to do ABC1234.\",\n        coordinates: [[0, 1]]\n    }],\n    courseInfo: {\n        courseCode: \"A4921\"\n    }\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c9f334b9-c6a4-4db6-9a83-8b0679449c92",
                    "parentUUID": "f15c4e4d-d0c3-4096-bc4b-ae2b87f6ae04",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/reducers/CourseStructure.spec.js",
                "uuid": "f15c4e4d-d0c3-4096-bc4b-ae2b87f6ae04",
                "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseStructure.spec.js",
                "passes": [
                  {
                    "title": "Should give a course error for a missing prereq",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should give a course error for a missing prereq",
                    "timedOut": false,
                    "duration": 11,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"Must have passed an (I/W) unit in {DEF2345, QLS2029}\",\n                endDate: \"\"\n            }]\n        }]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"Must have passed an (I/W) unit in {DEF2345, QLS2029}\",\n                endDate: \"\"\n            }]\n        }]\n    }],\n    courseErrors: [{\n        message: \"You must complete DEF2345 or QLS2029 before you can do ABC1234.\",\n        coordinates: [[0, 3]]\n    }],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4b654c56-ca1c-4b15-9537-6c191adbfe09",
                    "parentUUID": "f15c4e4d-d0c3-4096-bc4b-ae2b87f6ae04",
                    "skipped": false
                  },
                  {
                    "title": "Should give an error for credit points being lower than the minimum required for the unit",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should give an error for credit points being lower than the minimum required for the unit",
                    "timedOut": false,
                    "duration": 10,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2016,\n        code: \"S2-01\",\n        units: [{\n            unitCode: \"TEST1011\",\n            creditPoints: 6\n        }, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"TEST3031\",\n            creditPoints: 6,\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"Must have passed 24 credit points\"\n            }]\n        }, null, null, null]\n    }, {\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2016,\n        code: \"S2-01\",\n        units: [{\n            unitCode: \"TEST1011\",\n            creditPoints: 6\n        }, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"TEST3031\",\n            creditPoints: 6,\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"Must have passed 24 credit points\"\n            }]\n        }, null, null, null]\n    }, {\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"You need 18 more credit points before you can do TEST3031.\",\n        coordinates: [[2, 1]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "78189899-5447-4138-a3c0-fa1443002f78",
                    "parentUUID": "f15c4e4d-d0c3-4096-bc4b-ae2b87f6ae04",
                    "skipped": false
                  },
                  {
                    "title": "Should correctly handle prohibitions",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should correctly handle prohibitions",
                    "timedOut": false,
                    "duration": 6,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2013,\n        code: \"S1-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\"\n        }]\n    }, {\n        year: 2013,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"BCD1234\",\n            rules: [{\n                ruleSummary: \"INCOMP\",\n                ruleString: \"Incompatible with achievement in {ABC1234}\"\n            }]\n        }, null, null]\n    }],\n    courseErrors: [{\n        message: \"Please remove BCD1234, as completing ABC1234 prohibits you from doing this unit.\",\n        coordinates: [[1, 1]]\n    }]\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a855ef6b-7218-46a9-a45a-e710ca1106c5",
                    "parentUUID": "f15c4e4d-d0c3-4096-bc4b-ae2b87f6ae04",
                    "skipped": false
                  },
                  {
                    "title": "Should correctly handle the Do branch of For COURSE_CODE syntax",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should correctly handle the Do branch of For COURSE_CODE syntax",
                    "timedOut": false,
                    "duration": 7,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2014,\n        code: \"S1-01\",\n        units: [{\n            unitCode: \"DEF2345\",\n            unitName: \"Test unit\",\n            rules: [{\n                ruleSummary: \"COREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {S2029, S3019} Do Any passed co-req (I/W) unit in {ABC2022} Otherwise true\",\n                endDate: \"\"\n            }]\n        }, null, null, null]\n    }],\n    courseInfo: {\n        courseCode: \"S2029\"\n    },\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2014,\n        code: \"S1-01\",\n        units: [{\n            unitCode: \"DEF2345\",\n            unitName: \"Test unit\",\n            rules: [{\n                ruleSummary: \"COREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {S2029, S3019} Do Any passed co-req (I/W) unit in {ABC2022} Otherwise true\",\n                endDate: \"\"\n            }]\n        }, null, null, null]\n    }],\n    courseInfo: {\n        courseCode: \"S2029\"\n    },\n    courseErrors: [{\n        message: \"You must complete ABC2022 before or whilst doing DEF2345.\",\n        coordinates: [[0, 0]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "bb0ee5aa-463d-4463-b09c-cb058932853c",
                    "parentUUID": "f15c4e4d-d0c3-4096-bc4b-ae2b87f6ae04",
                    "skipped": false
                  },
                  {
                    "title": "Should correctly handle the Otherwise branch of For COURSE_CODE syntax",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should correctly handle the Otherwise branch of For COURSE_CODE syntax",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }, {\n        year: 2018,\n        code: \"WS-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"Winter semester 2018 (Day)\"]\n            }],\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {Q2001, Q2003} Do true Otherwise Must have passed 1 (I/W) units in {TEST1001}\",\n                endDate: \"\"\n            }]\n        }]\n    }, {\n        year: 2018,\n        code: \"S2-01\",\n        units: [null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }, {\n        year: 2018,\n        code: \"WS-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"Winter semester 2018 (Day)\"]\n            }],\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {Q2001, Q2003} Do true Otherwise Must have passed 1 (I/W) units in {TEST1001}\",\n                endDate: \"\"\n            }]\n        }]\n    }, {\n        year: 2018,\n        code: \"S2-01\",\n        units: [null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"You must complete TEST1001 before you can do ABC1234.\",\n        coordinates: [[1, 3]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "06fddd9b-232d-42f0-b65d-ac0cfeea9c61",
                    "parentUUID": "f15c4e4d-d0c3-4096-bc4b-ae2b87f6ae04",
                    "skipped": false
                  },
                  {
                    "title": "Should handle a complicated For expression",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should handle a complicated For expression",
                    "timedOut": false,
                    "duration": 6,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2019,\n        code: \"S1-01\",\n        units: [null, {\n            unitCode: \"ABC1234\",\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"For ((SCA_LOCATION IN {CLAYTON} AND COURSE_CODE IN {1039, 2393}) OR (SCA_LOCATION IN {CLAYTON} AND COURSE_CODE NOT IN {A4921})) Do true Otherwise Permission required\"\n            }]\n        }, null, null]\n    }],\n    courseErrors: [],\n    courseInfo: {\n        courseCode: \"A4921\"\n    }\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2019,\n        code: \"S1-01\",\n        units: [null, {\n            unitCode: \"ABC1234\",\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"For ((SCA_LOCATION IN {CLAYTON} AND COURSE_CODE IN {1039, 2393}) OR (SCA_LOCATION IN {CLAYTON} AND COURSE_CODE NOT IN {A4921})) Do true Otherwise Permission required\"\n            }]\n        }, null, null]\n    }],\n    courseErrors: [{\n        message: \"You need permission to do ABC1234.\",\n        coordinates: [[0, 1]]\n    }],\n    courseInfo: {\n        courseCode: \"A4921\"\n    }\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c9f334b9-c6a4-4db6-9a83-8b0679449c92",
                    "parentUUID": "f15c4e4d-d0c3-4096-bc4b-ae2b87f6ae04",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 6,
                "totalPasses": 6,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 43
              }
            ],
            "tests": [
              {
                "title": "should give no errors for an empty course plan.",
                "fullTitle": "REDUCER: CourseStructure ACTION: VALIDATE_COURSE should give no errors for an empty course plan.",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan.\"\n    }],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    courseErrors: [],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "517ea051-9377-49df-b83c-158213f5fa2e",
                "parentUUID": "7f4df247-7fcb-447e-925a-00c75d21344a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "7f4df247-7fcb-447e-925a-00c75d21344a",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "should give no errors for an empty course plan.",
                "fullTitle": "REDUCER: CourseStructure ACTION: VALIDATE_COURSE should give no errors for an empty course plan.",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan.\"\n    }],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    courseErrors: [],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "517ea051-9377-49df-b83c-158213f5fa2e",
                "parentUUID": "7f4df247-7fcb-447e-925a-00c75d21344a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": true,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS",
            "suites": [],
            "tests": [
              {
                "title": "Should leave invalidUnitSlotCoordinates empty if there are no invalid unit slots",
                "fullTitle": "REDUCER: CourseStructure ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS Should leave invalidUnitSlotCoordinates empty if there are no invalid unit slots",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2015,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: false\n};\nvar action = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: {\n        unitCode: \"TEST1001\",\n        unitName: \"Test unit\",\n        locationAndTime: [{\n            location: \"Caulfield\",\n            time: [\"First semester 2017 (Day)\"]\n        }]\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2015,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "6a986836-b272-4ece-947a-7669e1818a09",
                "parentUUID": "c02f8dd7-cc55-4248-b6c5-6b109002de63",
                "skipped": false
              },
              {
                "title": "Should highlight teaching periods that contains the same unit",
                "fullTitle": "REDUCER: CourseStructure ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS Should highlight teaching periods that contains the same unit",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var currentYear = new Date().getFullYear();\nvar stateBefore = {\n    teachingPeriods: [{\n        year: currentYear - 2,\n        code: \"FY-01\",\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        year: currentYear - 1,\n        code: \"FY-01\",\n        units: [null, null, {\n            unitCode: \"DEF2345\"\n        }, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: false\n};\nvar action = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: {\n        unitCode: \"ABC1234\",\n        locationAndTime: [{\n            location: \"Parkville\",\n            time: [\"Full year 2018 (Day)\"]\n        }]\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: currentYear - 2,\n        code: \"FY-01\",\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        year: currentYear - 1,\n        code: \"FY-01\",\n        units: [null, null, {\n            unitCode: \"DEF2345\"\n        }, null]\n    }],\n    invalidUnitSlotCoordinates: [[0, null]],\n    highlightingInvalidUnitSlots: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b81d7cc5-fe51-4f1c-be3e-9e5304a63098",
                "parentUUID": "c02f8dd7-cc55-4248-b6c5-6b109002de63",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "c02f8dd7-cc55-4248-b6c5-6b109002de63",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should leave invalidUnitSlotCoordinates empty if there are no invalid unit slots",
                "fullTitle": "REDUCER: CourseStructure ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS Should leave invalidUnitSlotCoordinates empty if there are no invalid unit slots",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2015,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: false\n};\nvar action = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: {\n        unitCode: \"TEST1001\",\n        unitName: \"Test unit\",\n        locationAndTime: [{\n            location: \"Caulfield\",\n            time: [\"First semester 2017 (Day)\"]\n        }]\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2015,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "6a986836-b272-4ece-947a-7669e1818a09",
                "parentUUID": "c02f8dd7-cc55-4248-b6c5-6b109002de63",
                "skipped": false
              },
              {
                "title": "Should highlight teaching periods that contains the same unit",
                "fullTitle": "REDUCER: CourseStructure ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS Should highlight teaching periods that contains the same unit",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var currentYear = new Date().getFullYear();\nvar stateBefore = {\n    teachingPeriods: [{\n        year: currentYear - 2,\n        code: \"FY-01\",\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        year: currentYear - 1,\n        code: \"FY-01\",\n        units: [null, null, {\n            unitCode: \"DEF2345\"\n        }, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: false\n};\nvar action = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: {\n        unitCode: \"ABC1234\",\n        locationAndTime: [{\n            location: \"Parkville\",\n            time: [\"Full year 2018 (Day)\"]\n        }]\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: currentYear - 2,\n        code: \"FY-01\",\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        year: currentYear - 1,\n        code: \"FY-01\",\n        units: [null, null, {\n            unitCode: \"DEF2345\"\n        }, null]\n    }],\n    invalidUnitSlotCoordinates: [[0, null]],\n    highlightingInvalidUnitSlots: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b81d7cc5-fe51-4f1c-be3e-9e5304a63098",
                "parentUUID": "c02f8dd7-cc55-4248-b6c5-6b109002de63",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 9
          },
          {
            "title": "DEFAULT",
            "suites": [],
            "tests": [
              {
                "title": "should not change the state if it receives an unknown action",
                "fullTitle": "REDUCER: CourseStructure DEFAULT should not change the state if it receives an unknown action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "d51cfab1-9111-4506-aa0d-43c21bd982b9",
                "parentUUID": "f9675784-2267-4f21-9205-606f447b1e9a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "f9675784-2267-4f21-9205-606f447b1e9a",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "should not change the state if it receives an unknown action",
                "fullTitle": "REDUCER: CourseStructure DEFAULT should not change the state if it receives an unknown action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "d51cfab1-9111-4506-aa0d-43c21bd982b9",
                "parentUUID": "f9675784-2267-4f21-9205-606f447b1e9a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/reducers/CourseStructure.spec.js",
        "uuid": "7e206984-ee3a-4829-8d59-43c24880598e",
        "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/CourseStructure.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "REDUCER: ImportantDates",
        "suites": [
          {
            "title": "ACTION: FETCH_IMPORTANT_DATES_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "should begin fetching important dates correctly ",
                "fullTitle": "REDUCER: ImportantDates ACTION: FETCH_IMPORTANT_DATES_PENDING should begin fetching important dates correctly ",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\nvar action = {\n    type: \"FETCH_IMPORTANT_DATES_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: true,\n    importantDatesError: false\n};\ntest(_ImportantDatesReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "76ef0591-72ca-42b5-851e-71f63ec206bc",
                "parentUUID": "4d5b41a2-6e2d-4215-91a5-1cd468e3810b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/ImportantDatesReducer.spec.js",
            "uuid": "4d5b41a2-6e2d-4215-91a5-1cd468e3810b",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/ImportantDatesReducer.spec.js",
            "passes": [
              {
                "title": "should begin fetching important dates correctly ",
                "fullTitle": "REDUCER: ImportantDates ACTION: FETCH_IMPORTANT_DATES_PENDING should begin fetching important dates correctly ",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\nvar action = {\n    type: \"FETCH_IMPORTANT_DATES_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: true,\n    importantDatesError: false\n};\ntest(_ImportantDatesReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "76ef0591-72ca-42b5-851e-71f63ec206bc",
                "parentUUID": "4d5b41a2-6e2d-4215-91a5-1cd468e3810b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_IMPORTANT_DATES_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "should handled failed fetch of important dates correctly ",
                "fullTitle": "REDUCER: ImportantDates ACTION: FETCH_IMPORTANT_DATES_REJECTED should handled failed fetch of important dates correctly ",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\nvar action = {\n    type: \"FETCH_IMPORTANT_DATES_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: true\n};\ntest(_ImportantDatesReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0fc4209e-3c75-4039-9108-a24ffdfec510",
                "parentUUID": "7ca20e03-8cd7-4328-86ef-25bfa5f5c185",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/ImportantDatesReducer.spec.js",
            "uuid": "7ca20e03-8cd7-4328-86ef-25bfa5f5c185",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/ImportantDatesReducer.spec.js",
            "passes": [
              {
                "title": "should handled failed fetch of important dates correctly ",
                "fullTitle": "REDUCER: ImportantDates ACTION: FETCH_IMPORTANT_DATES_REJECTED should handled failed fetch of important dates correctly ",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\nvar action = {\n    type: \"FETCH_IMPORTANT_DATES_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: true\n};\ntest(_ImportantDatesReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0fc4209e-3c75-4039-9108-a24ffdfec510",
                "parentUUID": "7ca20e03-8cd7-4328-86ef-25bfa5f5c185",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_IMPORTANT_DATES_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "should handled failed fetch of important dates correctly ",
                "fullTitle": "REDUCER: ImportantDates ACTION: FETCH_IMPORTANT_DATES_FULFILLED should handled failed fetch of important dates correctly ",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\nvar action = {\n    type: \"FETCH_IMPORTANT_DATES_FULFILLED\",\n    payload: [{\n        \"value\": \"HE IS A SAURABH\"\n    }]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [{ \"value\": \"HE IS A SAURABH\" }],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\ntest(_ImportantDatesReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0adcd7b2-98d1-441a-9c3b-ee1085093e30",
                "parentUUID": "5f683d8a-f0c5-43c0-93fc-414d6897c3ad",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/ImportantDatesReducer.spec.js",
            "uuid": "5f683d8a-f0c5-43c0-93fc-414d6897c3ad",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/ImportantDatesReducer.spec.js",
            "passes": [
              {
                "title": "should handled failed fetch of important dates correctly ",
                "fullTitle": "REDUCER: ImportantDates ACTION: FETCH_IMPORTANT_DATES_FULFILLED should handled failed fetch of important dates correctly ",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\nvar action = {\n    type: \"FETCH_IMPORTANT_DATES_FULFILLED\",\n    payload: [{\n        \"value\": \"HE IS A SAURABH\"\n    }]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [{ \"value\": \"HE IS A SAURABH\" }],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\ntest(_ImportantDatesReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0adcd7b2-98d1-441a-9c3b-ee1085093e30",
                "parentUUID": "5f683d8a-f0c5-43c0-93fc-414d6897c3ad",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 4
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/reducers/ImportantDatesReducer.spec.js",
        "uuid": "78fe0d17-cd77-4075-b1d0-7089631d365c",
        "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/ImportantDatesReducer.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "REDUCER: Notifications",
        "suites": [
          {
            "title": "ACTION: ADD_NOTIFICATION",
            "suites": [],
            "tests": [
              {
                "title": "should insert a notification from an empty list",
                "fullTitle": "REDUCER: Notifications ACTION: ADD_NOTIFICATION should insert a notification from an empty list",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: []\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "68b1bd99-5c54-41db-84bb-75104e0fb6e2",
                "parentUUID": "97ac0ce5-b603-4261-8204-069c67d35672",
                "skipped": false
              },
              {
                "title": "should prepend a notification into an list of a few existing notifications.",
                "fullTitle": "REDUCER: Notifications ACTION: ADD_NOTIFICATION should prepend a notification into an list of a few existing notifications.",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e6bd2243-b492-426c-93c4-8a1c33eb89a7",
                "parentUUID": "97ac0ce5-b603-4261-8204-069c67d35672",
                "skipped": false
              },
              {
                "title": "should replace a notification if it already exists with a specified ID",
                "fullTitle": "REDUCER: Notifications ACTION: ADD_NOTIFICATION should replace a notification if it already exists with a specified ID",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    message: \"New message goes over here\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"New message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "326548fb-0dba-478d-bd86-f275bf710823",
                "parentUUID": "97ac0ce5-b603-4261-8204-069c67d35672",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Notifications.spec.js",
            "uuid": "97ac0ce5-b603-4261-8204-069c67d35672",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/Notifications.spec.js",
            "passes": [
              {
                "title": "should insert a notification from an empty list",
                "fullTitle": "REDUCER: Notifications ACTION: ADD_NOTIFICATION should insert a notification from an empty list",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: []\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "68b1bd99-5c54-41db-84bb-75104e0fb6e2",
                "parentUUID": "97ac0ce5-b603-4261-8204-069c67d35672",
                "skipped": false
              },
              {
                "title": "should prepend a notification into an list of a few existing notifications.",
                "fullTitle": "REDUCER: Notifications ACTION: ADD_NOTIFICATION should prepend a notification into an list of a few existing notifications.",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e6bd2243-b492-426c-93c4-8a1c33eb89a7",
                "parentUUID": "97ac0ce5-b603-4261-8204-069c67d35672",
                "skipped": false
              },
              {
                "title": "should replace a notification if it already exists with a specified ID",
                "fullTitle": "REDUCER: Notifications ACTION: ADD_NOTIFICATION should replace a notification if it already exists with a specified ID",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    message: \"New message goes over here\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"New message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "326548fb-0dba-478d-bd86-f275bf710823",
                "parentUUID": "97ac0ce5-b603-4261-8204-069c67d35672",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "ACTION: REMOVE_NOTIFICATION",
            "suites": [],
            "tests": [
              {
                "title": "Should remove a notification given its ID",
                "fullTitle": "REDUCER: Notifications ACTION: REMOVE_NOTIFICATION Should remove a notification given its ID",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    id: \"CONNECTION_LOST\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "4eee33ea-03e7-4a94-afb1-910ff5159d3b",
                "parentUUID": "f8e509b3-ac07-47f2-b45a-a2d3f5e81087",
                "skipped": false
              },
              {
                "title": "Should remove a notification given its index",
                "fullTitle": "REDUCER: Notifications ACTION: REMOVE_NOTIFICATION Should remove a notification given its index",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    index: 1\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a7edcaa5-c781-439c-81f5-efa400de6ac7",
                "parentUUID": "f8e509b3-ac07-47f2-b45a-a2d3f5e81087",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Notifications.spec.js",
            "uuid": "f8e509b3-ac07-47f2-b45a-a2d3f5e81087",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/Notifications.spec.js",
            "passes": [
              {
                "title": "Should remove a notification given its ID",
                "fullTitle": "REDUCER: Notifications ACTION: REMOVE_NOTIFICATION Should remove a notification given its ID",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    id: \"CONNECTION_LOST\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "4eee33ea-03e7-4a94-afb1-910ff5159d3b",
                "parentUUID": "f8e509b3-ac07-47f2-b45a-a2d3f5e81087",
                "skipped": false
              },
              {
                "title": "Should remove a notification given its index",
                "fullTitle": "REDUCER: Notifications ACTION: REMOVE_NOTIFICATION Should remove a notification given its index",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    index: 1\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a7edcaa5-c781-439c-81f5-efa400de6ac7",
                "parentUUID": "f8e509b3-ac07-47f2-b45a-a2d3f5e81087",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "DEFAULT",
            "suites": [],
            "tests": [
              {
                "title": "Should not change state if it does not recognise an action",
                "fullTitle": "REDUCER: Notifications DEFAULT Should not change state if it does not recognise an action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Notifications2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "442318fb-838c-41a4-b3d6-02e63c3cffbc",
                "parentUUID": "cff69f20-bae8-4ec2-8765-c4afa8e37980",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Notifications.spec.js",
            "uuid": "cff69f20-bae8-4ec2-8765-c4afa8e37980",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/Notifications.spec.js",
            "passes": [
              {
                "title": "Should not change state if it does not recognise an action",
                "fullTitle": "REDUCER: Notifications DEFAULT Should not change state if it does not recognise an action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Notifications2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "442318fb-838c-41a4-b3d6-02e63c3cffbc",
                "parentUUID": "cff69f20-bae8-4ec2-8765-c4afa8e37980",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/reducers/Notifications.spec.js",
        "uuid": "f30d868d-85af-43ca-81a5-a15a20e6d90a",
        "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/Notifications.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "REDUCER: UI",
        "suites": [
          {
            "title": "ACTION: SHOW_INSERT_TEACHING_PERIOD_UI",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly toggle the insert teaching period UI boolean",
                "fullTitle": "REDUCER: UI ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: true,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9add2a09-0be4-421b-8270-5853908bd8bc",
                "parentUUID": "8d5fb3f7-cca2-44ef-a490-eddc2b40ede1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "8d5fb3f7-cca2-44ef-a490-eddc2b40ede1",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly toggle the insert teaching period UI boolean",
                "fullTitle": "REDUCER: UI ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: true,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9add2a09-0be4-421b-8270-5853908bd8bc",
                "parentUUID": "8d5fb3f7-cca2-44ef-a490-eddc2b40ede1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: HIDE_INSERT_TEACHING_PERIOD_UI",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly toggle the insert teaching period UI boolean",
                "fullTitle": "REDUCER: UI ACTION: HIDE_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: true,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1db4df30-4bca-40ac-84be-f5191362a6fa",
                "parentUUID": "50408319-25da-4f0e-a789-c14baf2fd2b7",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "50408319-25da-4f0e-a789-c14baf2fd2b7",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly toggle the insert teaching period UI boolean",
                "fullTitle": "REDUCER: UI ACTION: HIDE_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: true,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1db4df30-4bca-40ac-84be-f5191362a6fa",
                "parentUUID": "50408319-25da-4f0e-a789-c14baf2fd2b7",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: ADDING_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set the add unit UI boolean to true and correctly hide the sidebar when a unit is being added",
                "fullTitle": "REDUCER: UI ACTION: ADDING_UNIT Should correctly set the add unit UI boolean to true and correctly hide the sidebar when a unit is being added",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "2e9d7407-c8fc-4844-9949-babd0b373ec2",
                "parentUUID": "78e0d67e-78ad-4ec3-90be-fb0e961899d6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "78e0d67e-78ad-4ec3-90be-fb0e961899d6",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly set the add unit UI boolean to true and correctly hide the sidebar when a unit is being added",
                "fullTitle": "REDUCER: UI ACTION: ADDING_UNIT Should correctly set the add unit UI boolean to true and correctly hide the sidebar when a unit is being added",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "2e9d7407-c8fc-4844-9949-babd0b373ec2",
                "parentUUID": "78e0d67e-78ad-4ec3-90be-fb0e961899d6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: ADD_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set the add unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: ADD_UNIT Should correctly set the add unit UI boolean to false",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true\n};\nvar action = {\n    type: \"ADD_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "99914d02-2723-40b1-94ed-2ff18a4fef52",
                "parentUUID": "51ec6847-ee98-4e84-8b00-e398be89ae67",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "51ec6847-ee98-4e84-8b00-e398be89ae67",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly set the add unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: ADD_UNIT Should correctly set the add unit UI boolean to false",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true\n};\nvar action = {\n    type: \"ADD_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "99914d02-2723-40b1-94ed-2ff18a4fef52",
                "parentUUID": "51ec6847-ee98-4e84-8b00-e398be89ae67",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: CANCEL_ADDING_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set the add unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: CANCEL_ADDING_UNIT Should correctly set the add unit UI boolean to false",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true\n};\nvar action = {\n    type: \"CANCEL_ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "aacbd748-d34e-4a22-9a5e-f5143b357f4a",
                "parentUUID": "7b233280-96d2-4b5e-8d7a-5100d47aaa1c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "7b233280-96d2-4b5e-8d7a-5100d47aaa1c",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly set the add unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: CANCEL_ADDING_UNIT Should correctly set the add unit UI boolean to false",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true\n};\nvar action = {\n    type: \"CANCEL_ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "aacbd748-d34e-4a22-9a5e-f5143b357f4a",
                "parentUUID": "7b233280-96d2-4b5e-8d7a-5100d47aaa1c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: MOVING_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set the move unit UI boolean to true",
                "fullTitle": "REDUCER: UI ACTION: MOVING_UNIT Should correctly set the move unit UI boolean to true",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"MOVING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "93c59382-d7e3-4b0e-8dd6-d6995aba2ecc",
                "parentUUID": "a2fc241f-06cd-477b-a40d-440ab4dbb4d4",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "a2fc241f-06cd-477b-a40d-440ab4dbb4d4",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly set the move unit UI boolean to true",
                "fullTitle": "REDUCER: UI ACTION: MOVING_UNIT Should correctly set the move unit UI boolean to true",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"MOVING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "93c59382-d7e3-4b0e-8dd6-d6995aba2ecc",
                "parentUUID": "a2fc241f-06cd-477b-a40d-440ab4dbb4d4",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: MOVE_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set the move unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: MOVE_UNIT Should correctly set the move unit UI boolean to false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"MOVE_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "3b81af78-e424-42e3-b8bd-d557e8f95ce6",
                "parentUUID": "ece2a783-d4a4-4d76-a296-efcf044dfd70",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "ece2a783-d4a4-4d76-a296-efcf044dfd70",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly set the move unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: MOVE_UNIT Should correctly set the move unit UI boolean to false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"MOVE_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "3b81af78-e424-42e3-b8bd-d557e8f95ce6",
                "parentUUID": "ece2a783-d4a4-4d76-a296-efcf044dfd70",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: SWAP_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set the move unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: SWAP_UNIT Should correctly set the move unit UI boolean to false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"SWAP_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "61059417-a2b6-4c8e-8f1b-82861c166fcb",
                "parentUUID": "236f8918-27ef-4541-a931-a56f801199d7",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "236f8918-27ef-4541-a931-a56f801199d7",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly set the move unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: SWAP_UNIT Should correctly set the move unit UI boolean to false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"SWAP_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "61059417-a2b6-4c8e-8f1b-82861c166fcb",
                "parentUUID": "236f8918-27ef-4541-a931-a56f801199d7",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: CANCEL_MOVING_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set the move unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: CANCEL_MOVING_UNIT Should correctly set the move unit UI boolean to false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d38584e7-5635-477a-9e97-f1b1027d7298",
                "parentUUID": "216e4e43-1d8b-484d-a285-5233271e766f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "216e4e43-1d8b-484d-a285-5233271e766f",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly set the move unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: CANCEL_MOVING_UNIT Should correctly set the move unit UI boolean to false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d38584e7-5635-477a-9e97-f1b1027d7298",
                "parentUUID": "216e4e43-1d8b-484d-a285-5233271e766f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: SET_COURSE_READ_ONLY",
            "suites": [],
            "tests": [
              {
                "title": "Should set the course to read only correctly",
                "fullTitle": "REDUCER: UI ACTION: SET_COURSE_READ_ONLY Should set the course to read only correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: false\n};\nvar action = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a84a54aa-6a90-4728-9e12-8358298e8d86",
                "parentUUID": "42f94748-ffeb-4b8c-bc53-81c496c22a5f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "42f94748-ffeb-4b8c-bc53-81c496c22a5f",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should set the course to read only correctly",
                "fullTitle": "REDUCER: UI ACTION: SET_COURSE_READ_ONLY Should set the course to read only correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: false\n};\nvar action = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a84a54aa-6a90-4728-9e12-8358298e8d86",
                "parentUUID": "42f94748-ffeb-4b8c-bc53-81c496c22a5f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: SET_COURSE_READ_AND_WRITE",
            "suites": [],
            "tests": [
              {
                "title": "Should set the course to allow edits correctly",
                "fullTitle": "REDUCER: UI ACTION: SET_COURSE_READ_AND_WRITE Should set the course to allow edits correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: true\n};\nvar action = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "4e5a0f65-63e8-42a2-a0f2-6b040a02da21",
                "parentUUID": "64fa05ca-c804-4bfc-92c8-7bc2113cd6d9",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "64fa05ca-c804-4bfc-92c8-7bc2113cd6d9",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should set the course to allow edits correctly",
                "fullTitle": "REDUCER: UI ACTION: SET_COURSE_READ_AND_WRITE Should set the course to allow edits correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: true\n};\nvar action = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "4e5a0f65-63e8-42a2-a0f2-6b040a02da21",
                "parentUUID": "64fa05ca-c804-4bfc-92c8-7bc2113cd6d9",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly toggle the confirm delete teaching period modal UI to show",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to show",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "15f24042-3234-4e0e-90fe-a9632166c0a4",
                "parentUUID": "288c4895-a5a6-4175-8988-d8e1c5999dbd",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "288c4895-a5a6-4175-8988-d8e1c5999dbd",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly toggle the confirm delete teaching period modal UI to show",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to show",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "15f24042-3234-4e0e-90fe-a9632166c0a4",
                "parentUUID": "288c4895-a5a6-4175-8988-d8e1c5999dbd",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly toggle the confirm delete teaching period modal UI to hide",
                "fullTitle": "REDUCER: UI ACTION: HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to hide",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "6b17c30d-0917-4351-8628-7b50d8aa7208",
                "parentUUID": "2f4863e5-3959-437f-9ded-756065eddcaf",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "2f4863e5-3959-437f-9ded-756065eddcaf",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly toggle the confirm delete teaching period modal UI to hide",
                "fullTitle": "REDUCER: UI ACTION: HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to hide",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "6b17c30d-0917-4351-8628-7b50d8aa7208",
                "parentUUID": "2f4863e5-3959-437f-9ded-756065eddcaf",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly toggle the confirm decrease study load modal UI to show",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to show",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "400b5416-d35d-47c6-af0f-2a8cf9cc51cd",
                "parentUUID": "c3cd69e9-a010-438c-817c-78285ed3376c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "c3cd69e9-a010-438c-817c-78285ed3376c",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly toggle the confirm decrease study load modal UI to show",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to show",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "400b5416-d35d-47c6-af0f-2a8cf9cc51cd",
                "parentUUID": "c3cd69e9-a010-438c-817c-78285ed3376c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly toggle the confirm decrease study load modal UI to hide",
                "fullTitle": "REDUCER: UI ACTION: HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to hide",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1103ef91-856b-4ef5-8e4c-38151df33bae",
                "parentUUID": "24f6a265-ebed-4c49-bdbb-3d53cfa25385",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "24f6a265-ebed-4c49-bdbb-3d53cfa25385",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly toggle the confirm decrease study load modal UI to hide",
                "fullTitle": "REDUCER: UI ACTION: HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to hide",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1103ef91-856b-4ef5-8e4c-38151df33bae",
                "parentUUID": "24f6a265-ebed-4c49-bdbb-3d53cfa25385",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: SHOW_CUSTOM_UNIT_MODAL",
            "suites": [],
            "tests": [
              {
                "title": "Should set show flag for custom unit modal to be true",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be true",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "25a62b27-4d0c-42e8-b3da-d59743af690d",
                "parentUUID": "36f3bce0-cba1-470e-a42d-0d20cd1b7273",
                "skipped": false
              },
              {
                "title": "Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CUSTOM_UNIT_MODAL Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"ABC1234\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: \"ABC1234\",\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "defacbe9-2e67-4ceb-a63e-43689c4d2e40",
                "parentUUID": "36f3bce0-cba1-470e-a42d-0d20cd1b7273",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "36f3bce0-cba1-470e-a42d-0d20cd1b7273",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should set show flag for custom unit modal to be true",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be true",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "25a62b27-4d0c-42e8-b3da-d59743af690d",
                "parentUUID": "36f3bce0-cba1-470e-a42d-0d20cd1b7273",
                "skipped": false
              },
              {
                "title": "Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CUSTOM_UNIT_MODAL Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"ABC1234\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: \"ABC1234\",\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "defacbe9-2e67-4ceb-a63e-43689c4d2e40",
                "parentUUID": "36f3bce0-cba1-470e-a42d-0d20cd1b7273",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: HIDE_CUSTOM_UNIT_MODAL",
            "suites": [],
            "tests": [
              {
                "title": "Should set show flag for custom unit modal to be false",
                "fullTitle": "REDUCER: UI ACTION: HIDE_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be false",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: true\n};\nvar action = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0328dcaf-d97d-4ac8-a468-1b1511c0b340",
                "parentUUID": "cbd33e4b-7f59-4afe-b691-706e08c98d72",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "cbd33e4b-7f59-4afe-b691-706e08c98d72",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should set show flag for custom unit modal to be false",
                "fullTitle": "REDUCER: UI ACTION: HIDE_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be false",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: true\n};\nvar action = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0328dcaf-d97d-4ac8-a468-1b1511c0b340",
                "parentUUID": "cbd33e4b-7f59-4afe-b691-706e08c98d72",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: SHOW_SIDEBAR",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show the sidebar when called",
                "fullTitle": "REDUCER: UI ACTION: SHOW_SIDEBAR Should correctly show the sidebar when called",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: false\n};\nvar action = {\n    type: \"SHOW_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "83c0d1eb-995f-4b70-917c-1c89fe4c4d24",
                "parentUUID": "d00c4174-8ef2-473c-9dcb-c7860845868c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "d00c4174-8ef2-473c-9dcb-c7860845868c",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly show the sidebar when called",
                "fullTitle": "REDUCER: UI ACTION: SHOW_SIDEBAR Should correctly show the sidebar when called",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: false\n};\nvar action = {\n    type: \"SHOW_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "83c0d1eb-995f-4b70-917c-1c89fe4c4d24",
                "parentUUID": "d00c4174-8ef2-473c-9dcb-c7860845868c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: HIDE_SIDEBAR",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly hide the sidebar when called",
                "fullTitle": "REDUCER: UI ACTION: HIDE_SIDEBAR Should correctly hide the sidebar when called",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"HIDE_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c152e597-151f-448c-b0a0-5cb49e1e9f9e",
                "parentUUID": "0eef17c7-1951-4e6d-a674-7d694ef94cfc",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "0eef17c7-1951-4e6d-a674-7d694ef94cfc",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly hide the sidebar when called",
                "fullTitle": "REDUCER: UI ACTION: HIDE_SIDEBAR Should correctly hide the sidebar when called",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"HIDE_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c152e597-151f-448c-b0a0-5cb49e1e9f9e",
                "parentUUID": "0eef17c7-1951-4e6d-a674-7d694ef94cfc",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "DEFAULT",
            "suites": [],
            "tests": [
              {
                "title": "Should not change state if it does not recognise the action",
                "fullTitle": "REDUCER: UI DEFAULT Should not change state if it does not recognise the action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_UI2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "9b23b527-0993-4282-be64-16a009557b09",
                "parentUUID": "72450f85-23b8-4f37-8c69-1a3ff2f28881",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "72450f85-23b8-4f37-8c69-1a3ff2f28881",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should not change state if it does not recognise the action",
                "fullTitle": "REDUCER: UI DEFAULT Should not change state if it does not recognise the action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_UI2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "9b23b527-0993-4282-be64-16a009557b09",
                "parentUUID": "72450f85-23b8-4f37-8c69-1a3ff2f28881",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/reducers/UI.spec.js",
        "uuid": "9a7e0c82-1dd3-45a1-9ad7-56a2be810e6d",
        "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/UI.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "REDUCER: UnitCache",
        "suites": [
          {
            "title": "ACTION: INITIALISE_NEW_CACHE",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly create a new cache instance if there is no local storage value saved, or it is too old",
                "fullTitle": "REDUCER: UnitCache ACTION: INITIALISE_NEW_CACHE Should correctly create a new cache instance if there is no local storage value saved, or it is too old",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {\n        \"TEST1001\": {\n            timeOfLastAccess: \"Tue Mar 07 2017 12:07:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TEST1001\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        },\n        \"TES1002\": {\n            timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TES1002\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        }\n    },\n    cacheSize: 2,\n    MAX_CACHE_SIZE: 20\n};\nvar action = {\n    type: \"INITIALISE_NEW_CACHE\",\n    timeOfAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\"\n};\nvar stateAfter = {\n    timeOfLastAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {},\n    cacheSize: 0,\n    MAX_CACHE_SIZE: 20\n};\ntest(_UnitCacheReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "053e5dd0-2e59-45f8-a08e-3f24a6ac209c",
                "parentUUID": "d350a948-8c80-47ff-a0f3-b556b8c683b3",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UnitCacheReducer.spec.js",
            "uuid": "d350a948-8c80-47ff-a0f3-b556b8c683b3",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/UnitCacheReducer.spec.js",
            "passes": [
              {
                "title": "Should correctly create a new cache instance if there is no local storage value saved, or it is too old",
                "fullTitle": "REDUCER: UnitCache ACTION: INITIALISE_NEW_CACHE Should correctly create a new cache instance if there is no local storage value saved, or it is too old",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {\n        \"TEST1001\": {\n            timeOfLastAccess: \"Tue Mar 07 2017 12:07:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TEST1001\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        },\n        \"TES1002\": {\n            timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TES1002\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        }\n    },\n    cacheSize: 2,\n    MAX_CACHE_SIZE: 20\n};\nvar action = {\n    type: \"INITIALISE_NEW_CACHE\",\n    timeOfAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\"\n};\nvar stateAfter = {\n    timeOfLastAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {},\n    cacheSize: 0,\n    MAX_CACHE_SIZE: 20\n};\ntest(_UnitCacheReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "053e5dd0-2e59-45f8-a08e-3f24a6ac209c",
                "parentUUID": "d350a948-8c80-47ff-a0f3-b556b8c683b3",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: REMOVE_ITEM_FROM_CACHE",
            "suites": [],
            "tests": [
              {
                "title": "should correctly remove an item with the given key from the cache ",
                "fullTitle": "REDUCER: UnitCache ACTION: REMOVE_ITEM_FROM_CACHE should correctly remove an item with the given key from the cache ",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {\n        \"TEST1001\": {\n            timeOfLastAccess: \"Tue Mar 07 2017 12:07:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TEST1001\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        },\n        \"TES1002\": {\n            timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TES1002\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        }\n    },\n    cacheSize: 2,\n    MAX_CACHE_SIZE: 20\n};\nvar action = {\n    type: \"REMOVE_ITEM_FROM_CACHE\",\n    keyValueToDelete: \"TEST1001\",\n    timeOfAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\"\n};\nvar stateAfter = {\n    timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {\n        \"TES1002\": {\n            timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TES1002\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        }\n    },\n    cacheSize: 1,\n    MAX_CACHE_SIZE: 20\n};\ntest(_UnitCacheReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ddc0760f-e059-4db8-bd00-cc3e9727230e",
                "parentUUID": "fa76bc93-6690-4f6d-8426-a6e8181ad9c2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UnitCacheReducer.spec.js",
            "uuid": "fa76bc93-6690-4f6d-8426-a6e8181ad9c2",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/UnitCacheReducer.spec.js",
            "passes": [
              {
                "title": "should correctly remove an item with the given key from the cache ",
                "fullTitle": "REDUCER: UnitCache ACTION: REMOVE_ITEM_FROM_CACHE should correctly remove an item with the given key from the cache ",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {\n        \"TEST1001\": {\n            timeOfLastAccess: \"Tue Mar 07 2017 12:07:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TEST1001\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        },\n        \"TES1002\": {\n            timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TES1002\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        }\n    },\n    cacheSize: 2,\n    MAX_CACHE_SIZE: 20\n};\nvar action = {\n    type: \"REMOVE_ITEM_FROM_CACHE\",\n    keyValueToDelete: \"TEST1001\",\n    timeOfAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\"\n};\nvar stateAfter = {\n    timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {\n        \"TES1002\": {\n            timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TES1002\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        }\n    },\n    cacheSize: 1,\n    MAX_CACHE_SIZE: 20\n};\ntest(_UnitCacheReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ddc0760f-e059-4db8-bd00-cc3e9727230e",
                "parentUUID": "fa76bc93-6690-4f6d-8426-a6e8181ad9c2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "ACTION: ADD_ITEM_TO_CACHE",
            "suites": [],
            "tests": [
              {
                "title": "should correctly add an item to the cache ",
                "fullTitle": "REDUCER: UnitCache ACTION: ADD_ITEM_TO_CACHE should correctly add an item to the cache ",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {},\n    cacheSize: 0,\n    MAX_CACHE_SIZE: 20\n};\nvar action = {\n    type: \"ADD_ITEM_TO_CACHE\",\n    timeOfAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCode: \"TEST1001\",\n    unitInfo: {\n        preqs: \"None\",\n        creditPoints: 6,\n        rules: [],\n        locationAndTime: [],\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"TES1002\",\n        eftsl: 0,\n        descriptions: \"\"\n    }\n};\nvar stateAfter = {\n    timeOfLastAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {\n        \"TEST1001\": {\n            timeOfLastAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TES1002\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        }\n    },\n    cacheSize: 1,\n    MAX_CACHE_SIZE: 20\n};\ntest(_UnitCacheReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c75a07d4-b8c3-4b58-b1a6-a9d9151e0722",
                "parentUUID": "83337550-ad3a-4f84-be0c-8385b6310a79",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UnitCacheReducer.spec.js",
            "uuid": "83337550-ad3a-4f84-be0c-8385b6310a79",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/UnitCacheReducer.spec.js",
            "passes": [
              {
                "title": "should correctly add an item to the cache ",
                "fullTitle": "REDUCER: UnitCache ACTION: ADD_ITEM_TO_CACHE should correctly add an item to the cache ",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {},\n    cacheSize: 0,\n    MAX_CACHE_SIZE: 20\n};\nvar action = {\n    type: \"ADD_ITEM_TO_CACHE\",\n    timeOfAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCode: \"TEST1001\",\n    unitInfo: {\n        preqs: \"None\",\n        creditPoints: 6,\n        rules: [],\n        locationAndTime: [],\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"TES1002\",\n        eftsl: 0,\n        descriptions: \"\"\n    }\n};\nvar stateAfter = {\n    timeOfLastAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {\n        \"TEST1001\": {\n            timeOfLastAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TES1002\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        }\n    },\n    cacheSize: 1,\n    MAX_CACHE_SIZE: 20\n};\ntest(_UnitCacheReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c75a07d4-b8c3-4b58-b1a6-a9d9151e0722",
                "parentUUID": "83337550-ad3a-4f84-be0c-8385b6310a79",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/reducers/UnitCacheReducer.spec.js",
        "uuid": "136ccba3-3d6e-4090-bb86-0ac35ffca349",
        "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/UnitCacheReducer.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "REDUCER: UnitSearch",
        "suites": [
          {
            "title": "ACTION: FETCH_UNITS_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "should begin fetching important dates correctly ",
                "fullTitle": "REDUCER: UnitSearch ACTION: FETCH_UNITS_PENDING should begin fetching important dates correctly ",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [],\n    unitSearchIsLoading: false,\n    unitSearchError: true\n};\nvar action = {\n    type: \"FETCH_UNITS_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [],\n    unitSearchIsLoading: true,\n    unitSearchError: false\n};\ntest(_UnitSearchReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c168c4a5-edec-4da3-ada1-37049e08d070",
                "parentUUID": "157b3aa0-b2dd-4852-b4de-2a237661b33a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UnitSearchReducer.spec.js",
            "uuid": "157b3aa0-b2dd-4852-b4de-2a237661b33a",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/UnitSearchReducer.spec.js",
            "passes": [
              {
                "title": "should begin fetching important dates correctly ",
                "fullTitle": "REDUCER: UnitSearch ACTION: FETCH_UNITS_PENDING should begin fetching important dates correctly ",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [],\n    unitSearchIsLoading: false,\n    unitSearchError: true\n};\nvar action = {\n    type: \"FETCH_UNITS_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [],\n    unitSearchIsLoading: true,\n    unitSearchError: false\n};\ntest(_UnitSearchReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c168c4a5-edec-4da3-ada1-37049e08d070",
                "parentUUID": "157b3aa0-b2dd-4852-b4de-2a237661b33a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_UNITS_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "should handled failed fetch of important dates correctly ",
                "fullTitle": "REDUCER: UnitSearch ACTION: FETCH_UNITS_REJECTED should handled failed fetch of important dates correctly ",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [],\n    unitSearchIsLoading: true,\n    unitSearchError: false\n};\nvar action = {\n    type: \"FETCH_UNITS_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [],\n    unitSearchIsLoading: false,\n    unitSearchError: true\n};\ntest(_UnitSearchReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ee417a00-815e-4458-babf-ff9e3f4ed520",
                "parentUUID": "9653cd22-08b5-442a-bbda-17dd421e2c0d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UnitSearchReducer.spec.js",
            "uuid": "9653cd22-08b5-442a-bbda-17dd421e2c0d",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/UnitSearchReducer.spec.js",
            "passes": [
              {
                "title": "should handled failed fetch of important dates correctly ",
                "fullTitle": "REDUCER: UnitSearch ACTION: FETCH_UNITS_REJECTED should handled failed fetch of important dates correctly ",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [],\n    unitSearchIsLoading: true,\n    unitSearchError: false\n};\nvar action = {\n    type: \"FETCH_UNITS_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [],\n    unitSearchIsLoading: false,\n    unitSearchError: true\n};\ntest(_UnitSearchReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ee417a00-815e-4458-babf-ff9e3f4ed520",
                "parentUUID": "9653cd22-08b5-442a-bbda-17dd421e2c0d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_UNITS_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "should handled failed fetch of important dates correctly ",
                "fullTitle": "REDUCER: UnitSearch ACTION: FETCH_UNITS_FULFILLED should handled failed fetch of important dates correctly ",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [],\n    unitSearchIsLoading: true,\n    unitSearchError: false\n};\nvar action = {\n    type: \"FETCH_UNITS_FULFILLED\",\n    payload: [\"unit1\", \"unit2\", \"unit3\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [\"unit1\", \"unit2\", \"unit3\"],\n    unitSearchIsLoading: false,\n    unitSearchError: false\n};\ntest(_UnitSearchReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "669984b6-2751-4bf5-bea9-b3442b6f78a4",
                "parentUUID": "ab3647c5-6870-4e9f-8eed-c7e3b48f57a7",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UnitSearchReducer.spec.js",
            "uuid": "ab3647c5-6870-4e9f-8eed-c7e3b48f57a7",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/UnitSearchReducer.spec.js",
            "passes": [
              {
                "title": "should handled failed fetch of important dates correctly ",
                "fullTitle": "REDUCER: UnitSearch ACTION: FETCH_UNITS_FULFILLED should handled failed fetch of important dates correctly ",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [],\n    unitSearchIsLoading: true,\n    unitSearchError: false\n};\nvar action = {\n    type: \"FETCH_UNITS_FULFILLED\",\n    payload: [\"unit1\", \"unit2\", \"unit3\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [\"unit1\", \"unit2\", \"unit3\"],\n    unitSearchIsLoading: false,\n    unitSearchError: false\n};\ntest(_UnitSearchReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "669984b6-2751-4bf5-bea9-b3442b6f78a4",
                "parentUUID": "ab3647c5-6870-4e9f-8eed-c7e3b48f57a7",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/reducers/UnitSearchReducer.spec.js",
        "uuid": "66d2ab65-551d-4133-8c12-c40a288959d3",
        "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/reducers/UnitSearchReducer.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "UTILS: CostCalc",
        "suites": [],
        "tests": [
          {
            "title": "Should return a non-negative number",
            "fullTitle": "UTILS: CostCalc Should return a non-negative number",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_CostCalc2.default.calculateCost(0, 0)).to.be.gte(0);\nexpect(_CostCalc2.default.calculateCost(2, 6)).to.be.gte(0);",
            "err": {},
            "isRoot": false,
            "uuid": "6b2f46d2-bfa9-4e7c-bc76-e4006bbd5fa5",
            "parentUUID": "e2e216bf-70c7-46ed-b209-79b3c1c079a2",
            "skipped": false
          },
          {
            "title": "Should multiply SCA band cost with credit points",
            "fullTitle": "UTILS: CostCalc Should multiply SCA band cost with credit points",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var scaBand = 3;\nvar creditPoints = 6;\nvar scaBandCost = _CostCalc2.default.calculateCost(scaBand, 1);\nexpect(_CostCalc2.default.calculateCost(scaBand, creditPoints)).to.equal(scaBandCost * creditPoints);",
            "err": {},
            "isRoot": false,
            "uuid": "1a3b6323-ad75-4bcc-860f-450a78437dda",
            "parentUUID": "e2e216bf-70c7-46ed-b209-79b3c1c079a2",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/utils/CostCalc.spec.js",
        "uuid": "e2e216bf-70c7-46ed-b209-79b3c1c079a2",
        "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/utils/CostCalc.spec.js",
        "passes": [
          {
            "title": "Should return a non-negative number",
            "fullTitle": "UTILS: CostCalc Should return a non-negative number",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_CostCalc2.default.calculateCost(0, 0)).to.be.gte(0);\nexpect(_CostCalc2.default.calculateCost(2, 6)).to.be.gte(0);",
            "err": {},
            "isRoot": false,
            "uuid": "6b2f46d2-bfa9-4e7c-bc76-e4006bbd5fa5",
            "parentUUID": "e2e216bf-70c7-46ed-b209-79b3c1c079a2",
            "skipped": false
          },
          {
            "title": "Should multiply SCA band cost with credit points",
            "fullTitle": "UTILS: CostCalc Should multiply SCA band cost with credit points",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var scaBand = 3;\nvar creditPoints = 6;\nvar scaBandCost = _CostCalc2.default.calculateCost(scaBand, 1);\nexpect(_CostCalc2.default.calculateCost(scaBand, creditPoints)).to.equal(scaBandCost * creditPoints);",
            "err": {},
            "isRoot": false,
            "uuid": "1a3b6323-ad75-4bcc-860f-450a78437dda",
            "parentUUID": "e2e216bf-70c7-46ed-b209-79b3c1c079a2",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 2,
        "totalPasses": 2,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "UTILS: NextSemesterString",
        "suites": [
          {
            "title": "nextSemester",
            "suites": [],
            "tests": [
              {
                "title": "Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([], 2011, [])).to.deep.equal({\n    index: 0,\n    year: 2011,\n    code: \"S1-01\",\n    teachingPeriodData: []\n});",
                "err": {},
                "isRoot": false,
                "uuid": "b27ac898-3748-4b2b-aa60-6064891db951",
                "parentUUID": "c8328627-1afa-4ad5-be47-e1c585274f06",
                "skipped": false
              },
              {
                "title": "Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([], 2029, sortedTeachingPeriodData)).to.deep.equal({\n    index: 0,\n    year: 2029,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
                "err": {},
                "isRoot": false,
                "uuid": "3a96118b-a5c9-416f-bfb6-507a6b04d73e",
                "parentUUID": "c8328627-1afa-4ad5-be47-e1c585274f06",
                "skipped": false
              },
              {
                "title": "Should return semester two if the last teaching period is in semester one, with the same year",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should return semester two if the last teaching period is in semester one, with the same year",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2025,\n    code: \"S1-01\"\n}, {\n    year: 2025,\n    code: \"S2-01\"\n}, {\n    year: 2026,\n    code: \"S1-01\"\n}, {\n    year: 2026,\n    code: \"S2-01\"\n}, {\n    year: 2027,\n    code: \"S1-01\"\n}], 2023, sortedTeachingPeriodData)).to.deep.equal({\n    index: 5,\n    year: 2027,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
                "err": {},
                "isRoot": false,
                "uuid": "a78d7fa0-f403-40c1-9749-22a22b331ee4",
                "parentUUID": "c8328627-1afa-4ad5-be47-e1c585274f06",
                "skipped": false
              },
              {
                "title": "Should return semester one next year if the last teaching period is in semester two",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should return semester one next year if the last teaching period is in semester two",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2015,\n    code: \"FY-01\"\n}, {\n    year: 2017,\n    code: \"S2-01\"\n}], 2015, sortedTeachingPeriodData)).to.deep.equal({\n    index: 2,\n    year: 2018,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
                "err": {},
                "isRoot": false,
                "uuid": "9020f054-2668-4cf2-8fd9-5e390d68e53e",
                "parentUUID": "c8328627-1afa-4ad5-be47-e1c585274f06",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/utils/NextSemesterString.spec.js",
            "uuid": "c8328627-1afa-4ad5-be47-e1c585274f06",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/utils/NextSemesterString.spec.js",
            "passes": [
              {
                "title": "Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([], 2011, [])).to.deep.equal({\n    index: 0,\n    year: 2011,\n    code: \"S1-01\",\n    teachingPeriodData: []\n});",
                "err": {},
                "isRoot": false,
                "uuid": "b27ac898-3748-4b2b-aa60-6064891db951",
                "parentUUID": "c8328627-1afa-4ad5-be47-e1c585274f06",
                "skipped": false
              },
              {
                "title": "Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([], 2029, sortedTeachingPeriodData)).to.deep.equal({\n    index: 0,\n    year: 2029,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
                "err": {},
                "isRoot": false,
                "uuid": "3a96118b-a5c9-416f-bfb6-507a6b04d73e",
                "parentUUID": "c8328627-1afa-4ad5-be47-e1c585274f06",
                "skipped": false
              },
              {
                "title": "Should return semester two if the last teaching period is in semester one, with the same year",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should return semester two if the last teaching period is in semester one, with the same year",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2025,\n    code: \"S1-01\"\n}, {\n    year: 2025,\n    code: \"S2-01\"\n}, {\n    year: 2026,\n    code: \"S1-01\"\n}, {\n    year: 2026,\n    code: \"S2-01\"\n}, {\n    year: 2027,\n    code: \"S1-01\"\n}], 2023, sortedTeachingPeriodData)).to.deep.equal({\n    index: 5,\n    year: 2027,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
                "err": {},
                "isRoot": false,
                "uuid": "a78d7fa0-f403-40c1-9749-22a22b331ee4",
                "parentUUID": "c8328627-1afa-4ad5-be47-e1c585274f06",
                "skipped": false
              },
              {
                "title": "Should return semester one next year if the last teaching period is in semester two",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should return semester one next year if the last teaching period is in semester two",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2015,\n    code: \"FY-01\"\n}, {\n    year: 2017,\n    code: \"S2-01\"\n}], 2015, sortedTeachingPeriodData)).to.deep.equal({\n    index: 2,\n    year: 2018,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
                "err": {},
                "isRoot": false,
                "uuid": "9020f054-2668-4cf2-8fd9-5e390d68e53e",
                "parentUUID": "c8328627-1afa-4ad5-be47-e1c585274f06",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "getSemesterString",
            "suites": [],
            "tests": [
              {
                "title": "Should render a semester string",
                "fullTitle": "UTILS: NextSemesterString getSemesterString Should render a semester string",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2019,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n})).to.equal(\"Semester 2, 2019\");",
                "err": {},
                "isRoot": false,
                "uuid": "5d3c513b-871c-49ff-8c47-97dee2f1d7cd",
                "parentUUID": "87361d0c-0c37-4714-b2da-f9bf1a372d1c",
                "skipped": false
              },
              {
                "title": "Should revert back to semester codes if teachingPeriodData is not available",
                "fullTitle": "UTILS: NextSemesterString getSemesterString Should revert back to semester codes if teachingPeriodData is not available",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2015,\n    code: \"S1-01\"\n})).to.equal(\"S1-01, 2015\");",
                "err": {},
                "isRoot": false,
                "uuid": "eca808a9-1763-4394-b3ea-7b8de79abb4a",
                "parentUUID": "87361d0c-0c37-4714-b2da-f9bf1a372d1c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/utils/NextSemesterString.spec.js",
            "uuid": "87361d0c-0c37-4714-b2da-f9bf1a372d1c",
            "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/utils/NextSemesterString.spec.js",
            "passes": [
              {
                "title": "Should render a semester string",
                "fullTitle": "UTILS: NextSemesterString getSemesterString Should render a semester string",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2019,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n})).to.equal(\"Semester 2, 2019\");",
                "err": {},
                "isRoot": false,
                "uuid": "5d3c513b-871c-49ff-8c47-97dee2f1d7cd",
                "parentUUID": "87361d0c-0c37-4714-b2da-f9bf1a372d1c",
                "skipped": false
              },
              {
                "title": "Should revert back to semester codes if teachingPeriodData is not available",
                "fullTitle": "UTILS: NextSemesterString getSemesterString Should revert back to semester codes if teachingPeriodData is not available",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2015,\n    code: \"S1-01\"\n})).to.equal(\"S1-01, 2015\");",
                "err": {},
                "isRoot": false,
                "uuid": "eca808a9-1763-4394-b3ea-7b8de79abb4a",
                "parentUUID": "87361d0c-0c37-4714-b2da-f9bf1a372d1c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/utils/NextSemesterString.spec.js",
        "uuid": "3e407829-0659-4fb8-8de2-eb5449d0b7ad",
        "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/utils/NextSemesterString.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "UTILS: ShowYear",
        "suites": [],
        "tests": [
          {
            "title": "Should return the right year based off current month",
            "fullTitle": "UTILS: ShowYear Should return the right year based off current month",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "if (new Date().getMonth() + 1 >= 11) {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear() + 1);\n} else {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear());\n}",
            "err": {},
            "isRoot": false,
            "uuid": "100f0ef6-7ae5-416b-80a5-05b0cb829c91",
            "parentUUID": "2685467c-90e9-464f-ab87-402b794a849e",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/utils/ShowYear.spec.js",
        "uuid": "2685467c-90e9-464f-ab87-402b794a849e",
        "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/utils/ShowYear.spec.js",
        "passes": [
          {
            "title": "Should return the right year based off current month",
            "fullTitle": "UTILS: ShowYear Should return the right year based off current month",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "if (new Date().getMonth() + 1 >= 11) {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear() + 1);\n} else {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear());\n}",
            "err": {},
            "isRoot": false,
            "uuid": "100f0ef6-7ae5-416b-80a5-05b0cb829c91",
            "parentUUID": "2685467c-90e9-464f-ab87-402b794a849e",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "UTILS: YearCalc",
        "suites": [],
        "tests": [
          {
            "title": "Should contain the same year as it was specified",
            "fullTitle": "UTILS: YearCalc Should contain the same year as it was specified",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getStartYearVals(2016).find(function (year) {\n    return year.value === 2016;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2017).find(function (year) {\n    return year.value === 2017;\n})).to.be.ok;",
            "err": {},
            "isRoot": false,
            "uuid": "7cacfd35-c497-4db2-8710-3fb781bec7dd",
            "parentUUID": "45ae3477-e214-4849-94cc-c77be9244aab",
            "skipped": false
          },
          {
            "title": "Should contain a year that is ten years from now",
            "fullTitle": "UTILS: YearCalc Should contain a year that is ten years from now",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getStartYearVals(2019).find(function (year) {\n    return year.value === 2029;\n})).to.be.ok;\nexpect(_YearCalc2.default.getStartYearVals(2012).find(function (year) {\n    return year.value === 2002;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2028;\n})).to.be.ok;",
            "err": {},
            "isRoot": false,
            "uuid": "2c67c9cc-4c95-4d03-ac23-8623fc095ea4",
            "parentUUID": "45ae3477-e214-4849-94cc-c77be9244aab",
            "skipped": false
          },
          {
            "title": "Should not contain any past year when computing end years",
            "fullTitle": "UTILS: YearCalc Should not contain any past year when computing end years",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2017;\n})).to.be.not.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2008;\n})).to.be.not.ok;",
            "err": {},
            "isRoot": false,
            "uuid": "e6431bfc-86c2-4bba-b655-aaa3c6bdad49",
            "parentUUID": "45ae3477-e214-4849-94cc-c77be9244aab",
            "skipped": false
          },
          {
            "title": "Should have starting years go in decreasing order from one year ahead to the minimum",
            "fullTitle": "UTILS: YearCalc Should have starting years go in decreasing order from one year ahead to the minimum",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getStartYearVals(2019).slice(0, 12)).to.deep.equal([{\n    text: \"2020\",\n    value: 2020\n}, {\n    text: \"2019\",\n    value: 2019\n}, {\n    text: \"2018\",\n    value: 2018\n}, {\n    text: \"2017\",\n    value: 2017\n}, {\n    text: \"2016\",\n    value: 2016\n}, {\n    text: \"2015\",\n    value: 2015\n}, {\n    text: \"2014\",\n    value: 2014\n}, {\n    text: \"2013\",\n    value: 2013\n}, {\n    text: \"2012\",\n    value: 2012\n}, {\n    text: \"2011\",\n    value: 2011\n}, {\n    text: \"2010\",\n    value: 2010\n}, {\n    text: \"2009\",\n    value: 2009\n}]);",
            "err": {},
            "isRoot": false,
            "uuid": "6ddd89aa-0c8a-42ad-a315-7b543a9e975e",
            "parentUUID": "45ae3477-e214-4849-94cc-c77be9244aab",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/utils/YearCalc.spec.js",
        "uuid": "45ae3477-e214-4849-94cc-c77be9244aab",
        "fullFile": "/home/monash/Desktop/monplan/monPlanR/test/utils/YearCalc.spec.js",
        "passes": [
          {
            "title": "Should contain the same year as it was specified",
            "fullTitle": "UTILS: YearCalc Should contain the same year as it was specified",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getStartYearVals(2016).find(function (year) {\n    return year.value === 2016;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2017).find(function (year) {\n    return year.value === 2017;\n})).to.be.ok;",
            "err": {},
            "isRoot": false,
            "uuid": "7cacfd35-c497-4db2-8710-3fb781bec7dd",
            "parentUUID": "45ae3477-e214-4849-94cc-c77be9244aab",
            "skipped": false
          },
          {
            "title": "Should contain a year that is ten years from now",
            "fullTitle": "UTILS: YearCalc Should contain a year that is ten years from now",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getStartYearVals(2019).find(function (year) {\n    return year.value === 2029;\n})).to.be.ok;\nexpect(_YearCalc2.default.getStartYearVals(2012).find(function (year) {\n    return year.value === 2002;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2028;\n})).to.be.ok;",
            "err": {},
            "isRoot": false,
            "uuid": "2c67c9cc-4c95-4d03-ac23-8623fc095ea4",
            "parentUUID": "45ae3477-e214-4849-94cc-c77be9244aab",
            "skipped": false
          },
          {
            "title": "Should not contain any past year when computing end years",
            "fullTitle": "UTILS: YearCalc Should not contain any past year when computing end years",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2017;\n})).to.be.not.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2008;\n})).to.be.not.ok;",
            "err": {},
            "isRoot": false,
            "uuid": "e6431bfc-86c2-4bba-b655-aaa3c6bdad49",
            "parentUUID": "45ae3477-e214-4849-94cc-c77be9244aab",
            "skipped": false
          },
          {
            "title": "Should have starting years go in decreasing order from one year ahead to the minimum",
            "fullTitle": "UTILS: YearCalc Should have starting years go in decreasing order from one year ahead to the minimum",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getStartYearVals(2019).slice(0, 12)).to.deep.equal([{\n    text: \"2020\",\n    value: 2020\n}, {\n    text: \"2019\",\n    value: 2019\n}, {\n    text: \"2018\",\n    value: 2018\n}, {\n    text: \"2017\",\n    value: 2017\n}, {\n    text: \"2016\",\n    value: 2016\n}, {\n    text: \"2015\",\n    value: 2015\n}, {\n    text: \"2014\",\n    value: 2014\n}, {\n    text: \"2013\",\n    value: 2013\n}, {\n    text: \"2012\",\n    value: 2012\n}, {\n    text: \"2011\",\n    value: 2011\n}, {\n    text: \"2010\",\n    value: 2010\n}, {\n    text: \"2009\",\n    value: 2009\n}]);",
            "err": {},
            "isRoot": false,
            "uuid": "6ddd89aa-0c8a-42ad-a315-7b543a9e975e",
            "parentUUID": "45ae3477-e214-4849-94cc-c77be9244aab",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 4,
        "totalPasses": 4,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 1
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "9c411328-ca3e-4493-b751-dd0eafb62ce2",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "Should create an action to increment credit points counter",
      "fullTitle": "AC: incrementCreditPoints Should create an action to increment credit points counter",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 5\n};\n(0, _expect2.default)(actions.incrementCreditPoints(5)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "25966038-8d2a-4e35-86cc-b69be3c79e8c",
      "parentUUID": "df5d7470-7141-4396-8f03-fd6ecbe723e1",
      "skipped": false
    },
    {
      "title": "Should create an action to decrement credit points counter",
      "fullTitle": "AC: decrementCreditPoints Should create an action to decrement credit points counter",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 5\n};\n(0, _expect2.default)(actions.decrementCreditPoints(5)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "7d92dab8-5143-459a-ab64-8556df7a9236",
      "parentUUID": "09b50ff7-4a7d-4cd9-9512-9fac898bbbb1",
      "skipped": false
    },
    {
      "title": "Should create an action to increment cost counter",
      "fullTitle": "AC: incrementCost Should create an action to increment cost counter",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"INCREMENT_COST\",\n    value: 5\n};\n(0, _expect2.default)(actions.incrementCost(5)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "1be2ead0-156b-4c3c-8377-8b3d7838fd8e",
      "parentUUID": "d496dc99-1d50-47fa-a3fa-a7996a0cf772",
      "skipped": false
    },
    {
      "title": "Should create an action to decrement cost counter",
      "fullTitle": "AC: decrementCosts Should create an action to decrement cost counter",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"DECREMENT_COST\",\n    value: 5\n};\n(0, _expect2.default)(actions.decrementCost(5)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "e7d54640-ec24-4174-aac4-bf42d97f67e1",
      "parentUUID": "6df5b491-4e69-4e30-a03f-b152d4d2348f",
      "skipped": false
    },
    {
      "title": "Should create an action to insert a teaching period",
      "fullTitle": "AC: insertTeachingPeriod Should create an action to insert a teaching period",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{\n    type: \"INSERT_TEACHING_PERIOD\",\n    index: 1,\n    year: 2016,\n    code: \"tpCode\"\n}, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n}];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.insertTeachingPeriod(1, 2016, \"tpCode\"));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "dd766a99-626f-41b7-a796-6b66c3ff6769",
      "parentUUID": "24e790f9-1de3-4498-ad21-363a418f01d7",
      "skipped": false
    },
    {
      "title": "Should create an action to remove a teaching period",
      "fullTitle": "AC: removeTeachingPeriod Should create an action to remove a teaching period",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1,\n    units: [\"unit1\", \"unit2\", \"unit3\", null]\n}, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n}];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.removeTeachingPeriod(1, [\"unit1\", \"unit2\", \"unit3\", null]));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "3ab6039d-d600-4c19-bc70-38b00eaf6146",
      "parentUUID": "4b2f5475-481b-420d-8785-ab52bfbc6471",
      "skipped": false
    },
    {
      "title": "Should create an action to increase the study load",
      "fullTitle": "AC: increaseStudyLoad Should create an action to increase the study load",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\n(0, _expect2.default)(actions.increaseStudyLoad()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "561ef96a-482b-41a3-bc30-f85e6327cf91",
      "parentUUID": "81b083c0-6848-425f-950c-8b44b33ce846",
      "skipped": false
    },
    {
      "title": "Should create an action to increase the study load with units affected",
      "fullTitle": "AC: decreaseStudyLoad Should create an action to increase the study load with units affected",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockTeachingPeriods = [{ year: 2018, code: \"S1-01\", units: [null, null, null, null, { unitName: \"unit1\", creditPoints: 6 }] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }, { year: 2019, code: \"S1-01\", units: [null, null, null, null, { unitName: \"unit2\", creditPoints: 6 }] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null, null] }];\nvar expectedActions = [{ type: \"PREP_FOR_DELETION\", unitCoords: [[0, 4], [2, 4]] }, { type: \"DECREASE_STUDY_LOAD\", units: [{ unitName: \"unit1\", creditPoints: 6 }, { unitName: \"unit2\", creditPoints: 6 }] }];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.decreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "df99fd9f-3bf4-4526-92ec-e7e6e5a3c8df",
      "parentUUID": "a31cf461-8f22-450e-9586-febd39d576a1",
      "skipped": false
    },
    {
      "title": "Should create an action to increase the study load with no units affected",
      "fullTitle": "AC: decreaseStudyLoad Should create an action to increase the study load with no units affected",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockTeachingPeriods = [{ year: 2018, code: \"S1-01\", units: [null, null, null, \"unit1\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }, { year: 2019, code: \"S1-01\", units: [null, null, null, \"unit2\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null, null] }];\nvar expectedActions = [{ type: \"PREP_FOR_DELETION\", unitCoords: [] }, { type: \"DECREASE_STUDY_LOAD\", units: [] }];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.decreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "3a72281d-ea34-4d57-b9d6-14a19152d359",
      "parentUUID": "a31cf461-8f22-450e-9586-febd39d576a1",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for the addition of a unit that is not a custom unit being dragged",
      "fullTitle": "AC: addUnit Should correctly create the actions required for the addition of a unit that is not a custom unit being dragged",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockUnit = {\n                customUnitDragging: false,\n                cost: 200,\n                creditPoints: 6,\n                unitCode: \"TEST1001\"\n            };\n            var expectedActions = [{ type: \"ADD_UNIT\", tpIndex: 1, unitIndex: 1, unit: mockUnit, cost: 200, creditPoints: 6 }, { type: \"CLEAR_HIGHLIGHTING_INVALID_UNIT_SLOTS\" }, { type: \"VALIDATE_COURSE\" }, { type: \"MODIFIED_COURSE_PLAN\" }];\n            var store = mockStore({});\n            store.dispatch(actions.addUnit(1, 1, mockUnit));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "fa78fe3b-d2a8-43ba-9cc5-0e22f053c93a",
      "parentUUID": "c483441d-2825-46ce-9feb-00edc7404463",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for removal of a unit",
      "fullTitle": "AC: removeUnit Should correctly create the actions required for removal of a unit",
      "timedOut": false,
      "duration": 11,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{ type: \"REMOVE_UNIT\", tpIndex: 1, unitIndex: 1, cost: 200, creditPoints: 6 }, { type: \"VALIDATE_COURSE\" }, { type: \"MODIFIED_COURSE_PLAN\" }];\n            var store = mockStore({});\n            store.dispatch(actions.removeUnit(1, 1, 6, 200));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "efa9813c-0c53-486b-80d6-6465555dc150",
      "parentUUID": "35903164-18f6-4f6e-b0ae-80e7945feba5",
      "skipped": false
    },
    {
      "title": "Should create the actions for clearing the course",
      "fullTitle": "AC: clearCourse Should create the actions for clearing the course",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{ type: \"CLEAR_COURSE\" }, { type: \"GET_NEXT_SEMESTER_STRING\" }, { type: \"VALIDATE_COURSE\" }];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.clearCourse());\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "92c218b1-0964-4a05-8755-6dbaa5c51e55",
      "parentUUID": "2b124f1b-b95c-40d5-8833-47dadec25c87",
      "skipped": false
    },
    {
      "title": "Should create the action for generating the course",
      "fullTitle": "AC: generateCourse Should create the action for generating the course",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2016,\n    endYear: 2019\n};\n(0, _expect2.default)(actions.generateCourse(2016, 2019)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "84842ffc-fd55-4824-8a42-bc83779ec40a",
      "parentUUID": "60af4c7a-a03d-4f99-a28b-d1aa5559487e",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for submission of a year form",
      "fullTitle": "AC: submitYearForm Should correctly create the actions required for submission of a year form",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{ type: \"SUBMIT_YEAR_FORM\", startYear: 2016, endYear: 2019 }, { type: \"GENERATE_COURSE\", startYear: 2016, endYear: 2019 }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\n            var store = mockStore({});\n            store.dispatch(actions.submitYearForm(2016, 2019));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "84cd70a1-dd2e-4429-92dc-3edea591a54c",
      "parentUUID": "be71fd50-b262-4760-aa88-30fb3049f932",
      "skipped": false
    },
    {
      "title": "Should correctly create actions required to change the start year",
      "fullTitle": "AC: changeStartYear Should correctly create actions required to change the start year",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{ type: \"CHANGE_START_YEAR\", year: 2020 }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\nvar store = mockStore({});\nstore.dispatch(actions.changeStartYear(2020));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "2b60d89b-f3a0-40ac-b9c7-bcde8a9c4466",
      "parentUUID": "829e6918-afe6-46a3-97fa-986082a5c9fc",
      "skipped": false
    },
    {
      "title": "Should create the action for generating the course",
      "fullTitle": "AC: getNextSemesterString Should create the action for generating the course",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n};\n(0, _expect2.default)(actions.getNextSemesterString()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "68551c55-0574-41da-8d04-4f055a5ff584",
      "parentUUID": "9da95fbe-1e4a-43a2-9932-b9f1b965e320",
      "skipped": false
    },
    {
      "title": "Should create the action for getting affected units in an overload column",
      "fullTitle": "AC: getAffectedUnitsInColumn Should create the action for getting affected units in an overload column",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"GET_AFFECTED_UNITS_IN_OVERLOAD_COLUMN\",\n    index: 4\n};\n(0, _expect2.default)(actions.getAffectedUnitsInColumn(4)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "5dd9e680-3ebb-4756-9525-fcdf8bd246a7",
      "parentUUID": "e837b136-5a3e-4819-8078-94340496158b",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for deletion of a teaching period with units affected",
      "fullTitle": "AC: attemptToDeleteTeachingPeriod Should correctly create the actions required for deletion of a teaching period with units affected",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockUnits = [{ unitCode: \"TEST101\", unitName: \"unit1\" }, null, { unitCode: \"TEST102\", unitName: \"unit2\" }, null, null];\nvar expectedActions = [{ type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\" }, { type: \"UPDATE_AFFECTED_UNITS\", affectedUnits: [\"TEST101 - unit1\", \"TEST102 - unit2\"] }, { type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\", index: 1 }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDeleteTeachingPeriod(1, mockUnits));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "0388377c-f3d2-4a9f-8986-a835c141e366",
      "parentUUID": "3495a9c5-559f-48e0-9bd2-6c496b90e833",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for deletion of a teaching period with no units affected",
      "fullTitle": "AC: attemptToDeleteTeachingPeriod Should correctly create the actions required for deletion of a teaching period with no units affected",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockUnits = [null, null, null, null, null];\nvar expectedActions = [{ type: \"REMOVE_TEACHING_PERIOD\", index: 1, units: [null, null, null, null, null] }, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, { type: \"GET_NEXT_SEMESTER_STRING\" }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDeleteTeachingPeriod(1, mockUnits));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "0342c46d-7b06-4f5f-8fff-fc266df8418f",
      "parentUUID": "3495a9c5-559f-48e0-9bd2-6c496b90e833",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for decrease of a study load with units affected",
      "fullTitle": "AC: attemptToDecreaseStudyLoad Should correctly create the actions required for decrease of a study load with units affected",
      "timedOut": false,
      "duration": 25,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockTeachingPeriods = [{ units: [null, null, { unitCode: \"TEST10A\", unitName: \"unitA\" }, null, { unitCode: \"TEST101\", unitName: \"unit1\", creditPoints: 6 }] }, { units: [null, null, { unitCode: \"TEST10B\", unitName: \"unitB\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10C\", unitName: \"unitC\" }, null, { unitCode: \"TEST102\", unitName: \"unit2\", creditPoints: 6 }] }, { units: [null, null, { unitCode: \"TEST10D\", unitName: \"unitD\" }, null, null] }];\nvar expectedActions = [{ type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\" }, { type: \"UPDATE_AFFECTED_UNITS\", affectedUnits: [\"TEST101 - unit1\", \"TEST102 - unit2\"] }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDecreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "f8c36d85-e675-4fa8-bf26-3a8a5e42a2cb",
      "parentUUID": "0588407f-7644-4680-b207-cf33205e118d",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for decrease of a study load with no units affected",
      "fullTitle": "AC: attemptToDecreaseStudyLoad Should correctly create the actions required for decrease of a study load with no units affected",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockTeachingPeriods = [{ units: [null, null, { unitCode: \"TEST10A\", unitName: \"unitA\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10B\", unitName: \"unitB\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10C\", unitName: \"unitC\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10D\", unitName: \"unitD\" }, null, null] }];\nvar expectedActions = [{ type: \"PREP_FOR_DELETION\", unitCoords: [] }, { type: \"DECREASE_STUDY_LOAD\", units: [] }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDecreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "479da44c-71bd-4fc5-aec3-e00c2aaf21f8",
      "parentUUID": "0588407f-7644-4680-b207-cf33205e118d",
      "skipped": false
    },
    {
      "title": "Should create the action for getting affected units in an teaching period row",
      "fullTitle": "AC: getAffectedUnitsInRow Should create the action for getting affected units in an teaching period row",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"GET_AFFECTED_UNITS_IN_TEACHING_PERIOD_ROW\",\n    index: 4\n};\n(0, _expect2.default)(actions.getAffectedUnitsInRow(4)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "29c6d808-bc3a-4e92-9607-00e0e4583fb2",
      "parentUUID": "61ed7d2e-791d-4c75-9e10-b75b6228db31",
      "skipped": false
    },
    {
      "title": "Should create the action for validating the course",
      "fullTitle": "AC: validateCourse Should create the action for validating the course",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"VALIDATE_COURSE\"\n};\n(0, _expect2.default)(actions.validateCourse()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "b3afbe73-ceec-4633-ab8f-fad10b880a86",
      "parentUUID": "f7393ff4-90bb-4cab-9b49-f40d745ed058",
      "skipped": false
    },
    {
      "title": "Should create the action for highlighting the invalid unit slots",
      "fullTitle": "AC: highlightInvalidUnitSlots Should create the action for highlighting the invalid unit slots",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: \"UnitTest\",\n    ignoreCoordinate: false\n};\n(0, _expect2.default)(actions.highlightInvalidUnitSlots(\"UnitTest\", false)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "6fccaa57-fda4-4e86-8354-ec16225410a0",
      "parentUUID": "7d3262b5-b55d-473c-ac2e-397852142c81",
      "skipped": false
    },
    {
      "title": "Should create the action for clearing the highlighting for invalid unit slots",
      "fullTitle": "AC: clearHighlightingInvalidUnitSlots Should create the action for clearing the highlighting for invalid unit slots",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"CLEAR_HIGHLIGHTING_INVALID_UNIT_SLOTS\"\n};\n(0, _expect2.default)(actions.clearHighlightingInvalidUnitSlots()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "c772c39f-ba88-4b74-97cc-5d746c3d70f9",
      "parentUUID": "caee6b36-4905-4790-b4d8-93c1b51b7f94",
      "skipped": false
    },
    {
      "title": "Should create an action to show the insert teaching period UI",
      "fullTitle": "AC: showInsertTeachingPeriodUI Should create an action to show the insert teaching period UI",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"testTPCode\"\n};\n(0, _expect2.default)(actions.showInsertTeachingPeriodUI(\"testTPCode\")).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "92bd614e-5d23-450f-b9fc-632c3cf67e69",
      "parentUUID": "a5661734-3c34-47a6-a7b5-d5f3c4992364",
      "skipped": false
    },
    {
      "title": "Should create an action to hide the insert teaching period UI",
      "fullTitle": "AC: hideInsertTeachingPeriodUI Should create an action to hide the insert teaching period UI",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\n(0, _expect2.default)(actions.hideInsertTeachingPeriodUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "e02ab0b7-1455-4d15-a3a2-1c167fabf341",
      "parentUUID": "fa1252a0-f537-40db-887f-a831cdb56115",
      "skipped": false
    },
    {
      "title": "Should create an action to show the add unit UI",
      "fullTitle": "AC: showAddingUnitUI Should create an action to show the add unit UI",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_ADD_UNIT_UI\"\n};\n(0, _expect2.default)(actions.showAddingUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "63400c56-3bd0-4261-8c41-42d591b0a2f5",
      "parentUUID": "df481485-c6f0-4b7b-805c-38c49bca848c",
      "skipped": false
    },
    {
      "title": "Should create an action to hide the add unit UI",
      "fullTitle": "AC: hideAddingUnitUI Should create an action to hide the add unit UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_ADD_UNIT_UI\"\n};\n(0, _expect2.default)(actions.hideAddingUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "e6fb0fce-aa35-42dc-802a-3e2b7a136e45",
      "parentUUID": "0e4783ef-237f-4439-ac49-7cc4648854ec",
      "skipped": false
    },
    {
      "title": "Should create an action to show the move unit UI",
      "fullTitle": "AC: showMoveUnitUI Should create an action to show the move unit UI",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_MOVE_UNIT_UI\"\n};\n(0, _expect2.default)(actions.showMoveUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "28491137-954d-4a80-ae5f-41ffe78da068",
      "parentUUID": "b2e71052-8f0d-4bdc-a103-fd5abbba5274",
      "skipped": false
    },
    {
      "title": "Should create an action to hide move unit UI",
      "fullTitle": "AC: hideMoveUnitUI Should create an action to hide move unit UI",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_MOVE_UNIT_UI\"\n};\n(0, _expect2.default)(actions.hideMoveUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "a73d37b1-cc3c-4cc6-ac16-72d446a6e837",
      "parentUUID": "4ff7c37f-ab6b-49ca-94f8-d5c7311cf8ce",
      "skipped": false
    },
    {
      "title": "Should create an action to show confirm delete teaching period UI",
      "fullTitle": "AC: showConfirmDeleteTeachingPeriodUI Should create an action to show confirm delete teaching period UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\n(0, _expect2.default)(actions.showConfirmDeleteTeachingPeriodUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "f933b6f1-0dc1-4929-95d5-7ac64b23e7ad",
      "parentUUID": "69870a77-4940-46fe-b654-c90993a7e91d",
      "skipped": false
    },
    {
      "title": "Should create an action to hide confirm delete teaching period UI",
      "fullTitle": "AC: hideConfirmDeleteTeachingPeriodUI Should create an action to hide confirm delete teaching period UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\n(0, _expect2.default)(actions.hideConfirmDeleteTeachingPeriodUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "f02966e1-4673-4e8e-b4d6-26e022527e45",
      "parentUUID": "150cb608-a4d7-4eb8-b412-4ed959ca4b48",
      "skipped": false
    },
    {
      "title": "Should create an action to show confirm decrease study load UI",
      "fullTitle": "AC: showConfirmDecreaseStudyLoadUI Should create an action to show confirm decrease study load UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\n(0, _expect2.default)(actions.showConfirmDecreaseStudyLoadUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "8d2dcae8-0bae-4872-8d11-e3c697d0a212",
      "parentUUID": "59d8ba5c-4054-44e4-8c1b-a72916e8ca15",
      "skipped": false
    },
    {
      "title": "Should create an action to hide confirm decrease study load UI",
      "fullTitle": "AC: hideConfirmDecreaseStudyLoadUI Should create an action to hide confirm decrease study load UI",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\n(0, _expect2.default)(actions.hideConfirmDecreaseStudyLoadUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "9df1efe4-fa5e-43dc-94f8-f47c224c52ef",
      "parentUUID": "889e77fe-a871-4751-84f8-a28b98463994",
      "skipped": false
    },
    {
      "title": "Should create an action to show custum unit UI",
      "fullTitle": "AC: showCustomUnitUI Should create an action to show custum unit UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"TEST1001\"\n};\n(0, _expect2.default)(actions.showCustomUnitUI(\"TEST1001\")).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "01c2542c-37c1-472f-a40d-61cbb810bdac",
      "parentUUID": "b0e17e51-7380-4d64-8991-8f14edd413c6",
      "skipped": false
    },
    {
      "title": "Should create an action to hide custom unit UI",
      "fullTitle": "AC: hideCustomUnitUI Should create an action to hide custom unit UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\n(0, _expect2.default)(actions.hideCustomUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "c87e79bf-82ac-4725-adc3-f91ab3990f79",
      "parentUUID": "c7b7f634-0eeb-4ea6-bfd6-c4ae34a59bcc",
      "skipped": false
    },
    {
      "title": "Should create an action to show sidebar",
      "fullTitle": "AC: showSidebar Should create an action to show sidebar",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_SIDEBAR\"\n};\n(0, _expect2.default)(actions.showSidebar()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "d9cb2d6a-6b64-4c5c-8195-58d71afaba7a",
      "parentUUID": "0ad70d18-e979-4c6a-8aee-1c5f4765610e",
      "skipped": false
    },
    {
      "title": "Should create an action to hide sidebar",
      "fullTitle": "AC: hideSidebar Should create an action to hide sidebar",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_SIDEBAR\"\n};\n(0, _expect2.default)(actions.hideSidebar()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "872f6506-190e-4aff-9022-97dec613cc7e",
      "parentUUID": "e7fd9fc6-9e76-468e-8bcf-8d068ead76c0",
      "skipped": false
    },
    {
      "title": "Should create an action to set the course to read only",
      "fullTitle": "AC: setCourseReadOnly Should create an action to set the course to read only",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\n(0, _expect2.default)(actions.setCourseReadOnly()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "1caf947d-c41d-4ded-ae92-dacf2a233d41",
      "parentUUID": "854b0be6-4e6a-4611-b7e5-567d59c0110d",
      "skipped": false
    },
    {
      "title": "Should create an action to set the course to read and write",
      "fullTitle": "AC: setCourseReadAndWrite Should create an action to set the course to read and write",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\n(0, _expect2.default)(actions.setCourseReadAndWrite()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "fb0a5aed-4e89-4f65-8442-b7268a2ecf9a",
      "parentUUID": "d5d78a5c-0ee5-45ca-92ce-9880838858bb",
      "skipped": false
    },
    {
      "title": "Should render a notification title and a message",
      "fullTitle": "COMPONENT: Notification Should render a notification title and a message",
      "timedOut": false,
      "duration": 70,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, {\n    title: \"This is a test\",\n    message: \"Some message goes over here\"\n}));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(\"This is a test\");\nexpect(wrapper.text().replace(\"This is a test\", \"\").trim()).to.equal(\"Some message goes over here\");",
      "err": {},
      "isRoot": false,
      "uuid": "bcdde386-8d4b-4275-a1f6-c6a25076cc62",
      "parentUUID": "27b10d69-82fd-4bd7-ad24-894ff2a53be2",
      "skipped": false
    },
    {
      "title": "Should have a default level to be info if it is not specified",
      "fullTitle": "COMPONENT: Notification Should have a default level to be info if it is not specified",
      "timedOut": false,
      "duration": 16,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, null)).find(\".info.message\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "8f01d467-3187-43b2-853d-d1a332472d21",
      "parentUUID": "27b10d69-82fd-4bd7-ad24-894ff2a53be2",
      "skipped": false
    },
    {
      "title": "Should follow a specified level",
      "fullTitle": "COMPONENT: Notification Should follow a specified level",
      "timedOut": false,
      "duration": 63,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"info\" })).find(\".info.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"warning\" })).find(\".warning.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"error\" })).find(\".negative.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"success\" })).find(\".positive.message\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "708768f0-f6ba-472d-b2d2-8726cdbd58b9",
      "parentUUID": "27b10d69-82fd-4bd7-ad24-894ff2a53be2",
      "skipped": false
    },
    {
      "title": "should be called exactly once when main button has been clicked",
      "fullTitle": "#addSemester() should be called exactly once when main button has been clicked",
      "timedOut": false,
      "duration": 53,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var addSemester = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: identity,\n    addSemester: addSemester }));\nwrapper.find(\"Button\").forEach(function (button) {\n    button.simulate(\"click\");\n});\nexpect(addSemester).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "5a6e6d54-3ad2-4105-830b-f7c31e006123",
      "parentUUID": "727c40dd-e26f-41aa-9c60-5b980c42121d",
      "skipped": false
    },
    {
      "title": "should be called as many times as the number of insert teaching periods options upon click",
      "fullTitle": "#insert() should be called as many times as the number of insert teaching periods options upon click",
      "timedOut": false,
      "duration": 41,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var insert = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: insert,\n    addSemester: identity }));\nvar dropdownItems = wrapper.find(\".item\");\ndropdownItems.forEach(function (node) {\n    return node.simulate(\"click\");\n});\nexpect(insert).to.have.callCount(dropdownItems.length);",
      "err": {},
      "isRoot": false,
      "uuid": "ee96f284-9c94-466a-99f7-ecf6ac7432f1",
      "parentUUID": "12f040b8-a400-4c2a-ab72-4e19e6b8b59b",
      "skipped": false
    },
    {
      "title": "should render two ratings",
      "fullTitle": "COMPONENT: SetuRating should render two ratings",
      "timedOut": false,
      "duration": 74,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, null)).find(\".rating\")).to.have.length(2);",
      "err": {},
      "isRoot": false,
      "uuid": "cc1ff08e-a438-4f09-b047-7f931fbb4ac6",
      "parentUUID": "acbef847-4481-46cf-8674-9754a0863fdc",
      "skipped": false
    },
    {
      "title": "should render a book if learning ratings is >=2.5",
      "fullTitle": "COMPONENT: SetuRating should render a book if learning ratings is >=2.5",
      "timedOut": false,
      "duration": 97,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 4.13 })).find(\".book\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.50 })).find(\".book\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "4ec1159f-5eb2-47d6-b714-059b5b053e24",
      "parentUUID": "acbef847-4481-46cf-8674-9754a0863fdc",
      "skipped": false
    },
    {
      "title": "should render a remove circle if learning ratings is <2.5",
      "fullTitle": "COMPONENT: SetuRating should render a remove circle if learning ratings is <2.5",
      "timedOut": false,
      "duration": 71,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 1.51 })).find(\".remove.circle\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.49 })).find(\".remove.circle\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "97ecd34b-4828-4237-9a46-77f4f4510ca6",
      "parentUUID": "acbef847-4481-46cf-8674-9754a0863fdc",
      "skipped": false
    },
    {
      "title": "should render a thumbs up if enjoyment ratings is >=2.5",
      "fullTitle": "COMPONENT: SetuRating should render a thumbs up if enjoyment ratings is >=2.5",
      "timedOut": false,
      "duration": 76,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 4.13 })).find(\".thumbs.up\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.50 })).find(\".thumbs.up\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "6047f8f3-297d-456d-a039-4a064dc6d8d3",
      "parentUUID": "acbef847-4481-46cf-8674-9754a0863fdc",
      "skipped": false
    },
    {
      "title": "should render a thumbs down if enjoyment ratings is <2.5",
      "fullTitle": "COMPONENT: SetuRating should render a thumbs down if enjoyment ratings is <2.5",
      "timedOut": false,
      "duration": 57,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 1.51 })).find(\".thumbs.down\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.49 })).find(\".thumbs.down\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "1d5876cb-4ebd-487e-b9c5-6774cab57574",
      "parentUUID": "acbef847-4481-46cf-8674-9754a0863fdc",
      "skipped": false
    },
    {
      "title": "should only render a unit code and a unit name",
      "fullTitle": "#presentational should only render a unit code and a unit name",
      "timedOut": false,
      "duration": 55,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var unitCode = \"ABC1234\";\nvar unitName = \"Example unit\";\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: unitCode,\n    name: unitName }));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(unitCode);\nexpect(wrapper.find(\".message\").text().replace(unitCode, \"\").trim()).to.equal(unitName);",
      "err": {},
      "isRoot": false,
      "uuid": "bd0ac374-d655-4fbb-8102-b2a76e62f1a1",
      "parentUUID": "3e5ab659-3c76-4a1a-802f-f021f36aea78",
      "skipped": false
    },
    {
      "title": "should render a close button only when mouse is over the unit",
      "fullTitle": "#presentational should render a close button only when mouse is over the unit",
      "timedOut": false,
      "duration": 79,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    hovering: false }));\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");\nwrapper.setProps({\n    hovering: true\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"visible\");\nwrapper.setProps({\n    hovering: false\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");",
      "err": {},
      "isRoot": false,
      "uuid": "99d93f0c-8f02-4185-aac9-d2be37a1e1c4",
      "parentUUID": "3e5ab659-3c76-4a1a-802f-f021f36aea78",
      "skipped": false
    },
    {
      "title": "Should call willAddUnit if unit is a newUnit and it has been clicked",
      "fullTitle": "#events Should call willAddUnit if unit is a newUnit and it has been clicked",
      "timedOut": false,
      "duration": 79,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    newUnit: true,\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    willAddUnit: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"click\");\nexpect(eventFunc).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "5875d99d-4a14-4fd8-ad0c-61c80bea04e6",
      "parentUUID": "447acc74-18f6-49b0-85b9-eb1f2b0c2edc",
      "skipped": false
    },
    {
      "title": "Should call handleUnitMouseOver when mouse is over the unit",
      "fullTitle": "#events Should call handleUnitMouseOver when mouse is over the unit",
      "timedOut": false,
      "duration": 24,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseOver: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseOver\");\nexpect(eventFunc).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "a0337fc0-1012-4987-98eb-f0c40f5617dc",
      "parentUUID": "447acc74-18f6-49b0-85b9-eb1f2b0c2edc",
      "skipped": false
    },
    {
      "title": "Should call handleUnitMouseMove when mouse moves over the unit",
      "fullTitle": "#events Should call handleUnitMouseMove when mouse moves over the unit",
      "timedOut": false,
      "duration": 24,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseMove: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseMove\");\nexpect(eventFunc).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "403dd4a9-92b6-4741-b60f-f207a2616861",
      "parentUUID": "447acc74-18f6-49b0-85b9-eb1f2b0c2edc",
      "skipped": false
    },
    {
      "title": "Should call handleUnitMouseOut when mouse is over the unit",
      "fullTitle": "#events Should call handleUnitMouseOut when mouse is over the unit",
      "timedOut": false,
      "duration": 37,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseOut: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseOut\");\nexpect(eventFunc).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "3253d103-5ab3-4585-afaf-1b536869c61b",
      "parentUUID": "447acc74-18f6-49b0-85b9-eb1f2b0c2edc",
      "skipped": false
    },
    {
      "title": "Should correctly call movingUnit when it is being dragged",
      "fullTitle": "#DnD Should correctly call movingUnit when it is being dragged",
      "timedOut": false,
      "duration": 14,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "testingBeginDrag = true;\ntestingEndDrag = false;\nbackend.simulateBeginDrag([sourceId]);\nexpect(movingUnitSpy).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "fd438d5e-4f00-422a-bee1-a4cfe2b563df",
      "parentUUID": "635b0e9e-a23e-4a15-aad6-fb79fbb7e7d5",
      "skipped": false
    },
    {
      "title": "Should correctylc call cancelMovingUnit ",
      "fullTitle": "#DnD Should correctylc call cancelMovingUnit ",
      "timedOut": false,
      "duration": 21,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "testingBeginDrag = false;\ntestingEndDrag = true;\nbackend.simulateBeginDrag([sourceId]);\nbackend.simulateEndDrag(sourceId);\nexpect(cancelMovingUnitSpy).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "ded15184-32f6-4c35-abea-0648caee6154",
      "parentUUID": "635b0e9e-a23e-4a15-aad6-fb79fbb7e7d5",
      "skipped": false
    },
    {
      "title": "Should increment the credit point state by a given value",
      "fullTitle": "ACTION: INCREMENT_CREDIT_POINTS Should increment the credit point state by a given value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 2, creditPoints: 0 };\nvar action = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 2,\n    creditPoints: 1\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "75933e67-ffd6-4a8e-94f8-222c8ac57951",
      "parentUUID": "b165b342-1562-484a-91f5-2465cb37f9e4",
      "skipped": false
    },
    {
      "title": "Should decrement the credit point state by a given value",
      "fullTitle": "ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state by a given value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f356e781-66a1-4ee1-a9f9-4aa46fa68b5b",
      "parentUUID": "3aca5da4-a2bd-4402-bddf-8bebcb56a227",
      "skipped": false
    },
    {
      "title": "Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
      "fullTitle": "ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 0\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "fea554f8-2595-4436-b08e-0fed3fd00a2c",
      "parentUUID": "3aca5da4-a2bd-4402-bddf-8bebcb56a227",
      "skipped": false
    },
    {
      "title": "Should increment the cost state by a given value",
      "fullTitle": "ACTION: INCREMENT_COST Should increment the cost state by a given value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 20, creditPoints: 13 };\nvar action = {\n    type: \"INCREMENT_COST\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 21,\n    creditPoints: 13\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "aa3851ed-cf6b-4676-84c1-61c6a490573c",
      "parentUUID": "78406e44-e31c-44e4-b238-169e2e93c44d",
      "skipped": false
    },
    {
      "title": "Should decrement the cost state by a given value",
      "fullTitle": "ACTION: DECREMENT_COST Should decrement the cost state by a given value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "fc69cf6b-c140-4af9-bbeb-5d3564bf5992",
      "parentUUID": "73f57a6f-6155-477d-bb9a-79c4c621365e",
      "skipped": false
    },
    {
      "title": "Should decrement the cost state to 0 if a value given is larger than the current credit point value",
      "fullTitle": "ACTION: DECREMENT_COST Should decrement the cost state to 0 if a value given is larger than the current credit point value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 0,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "adfc5eee-c8ae-4eee-b329-8b8ae43bcc5a",
      "parentUUID": "73f57a6f-6155-477d-bb9a-79c4c621365e",
      "skipped": false
    },
    {
      "title": "Should reset the cost and credit point counters to 0",
      "fullTitle": "ACTION: CLEAR_COURSE Should reset the cost and credit point counters to 0",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "15a40e2d-a9b4-402f-8faf-c762287d13fc",
      "parentUUID": "83716695-5d51-4953-95b1-8db70af682b9",
      "skipped": false
    },
    {
      "title": "Should correctly go through and decrement the counters for each value ",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should correctly go through and decrement the counters for each value ",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { cost: 2, creditPoints: 20 }, { cost: 5, creditPoints: 10 }, null]\n};\nvar stateAfter = { cost: 43, creditPoints: 10 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "278cb215-ad94-47ee-81b2-6d2d6e51ba73",
      "parentUUID": "1a2588e2-3dac-48d8-a631-26c5d49a2f71",
      "skipped": false
    },
    {
      "title": "Should not decrement the counters below 0 ",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should not decrement the counters below 0 ",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { cost: 25, creditPoints: 20 }, { cost: 30, creditPoints: 30 }, { cost: 0, creditPoints: 10 }]\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "570542b7-d7a8-456d-8d76-c66f12a33b0e",
      "parentUUID": "1a2588e2-3dac-48d8-a631-26c5d49a2f71",
      "skipped": false
    },
    {
      "title": "Should correctly decrement the counters based on the given units creditpoints and cost",
      "fullTitle": "ACTION: REMOVE_UNIT Should correctly decrement the counters based on the given units creditpoints and cost",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 20 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "67121774-ebde-4e66-b864-fa7faa7767ed",
      "parentUUID": "e5890c56-7847-4796-b256-d6a96b36c81d",
      "skipped": false
    },
    {
      "title": "Should not decrement the counters below 0",
      "fullTitle": "ACTION: REMOVE_UNIT Should not decrement the counters below 0",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "241eeee1-7a48-4d91-8662-0beb91358c91",
      "parentUUID": "e5890c56-7847-4796-b256-d6a96b36c81d",
      "skipped": false
    },
    {
      "title": "Should correctly increment the counters when a unit is added to the plan",
      "fullTitle": "ACTION: ADD_UNIT Should correctly increment the counters when a unit is added to the plan",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"ADD_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 30 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ed4ea79e-9c68-493e-b064-5356ce18e4fe",
      "parentUUID": "7166f4e8-3f00-488b-8b4e-6d7faba63466",
      "skipped": false
    },
    {
      "title": "Should not decrease counters if there are no units in the overload column",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units in the overload column",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: []\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "9cb19402-0904-4785-a8c8-a72f6f4d1819",
      "parentUUID": "18a375aa-af0b-4dc8-a3b3-16a9949fe05d",
      "skipped": false
    },
    {
      "title": "Should not decrease counters if there are no units which have values in the overload column",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units which have values in the overload column",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [null, {}]\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "b592d939-a35c-474f-85b6-798ac0310b9d",
      "parentUUID": "18a375aa-af0b-4dc8-a3b3-16a9949fe05d",
      "skipped": false
    },
    {
      "title": "Should decrease counters correctly for units in the overload column",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should decrease counters correctly for units in the overload column",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [{\n        CreditPoints: 6,\n        Cost: 1134\n    }, {\n        CreditPoints: 12,\n        Cost: 2256\n    }]\n};\nvar stateAfter = { cost: 36610, creditPoints: 126 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b15b4e3e-824e-481a-b14d-cc1f5b9bccea",
      "parentUUID": "18a375aa-af0b-4dc8-a3b3-16a9949fe05d",
      "skipped": false
    },
    {
      "title": "Should not change state if it does not recognise an action",
      "fullTitle": "DEFAULT Should not change state if it does not recognise an action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "c97eea00-4f13-4345-9f1e-2929533977bc",
      "parentUUID": "34b40d7c-8de4-4ea2-9460-6fb313719ba0",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_COURSES_PENDING Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: false,\n    courseSearchError: true //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: true,\n    courseSearchError: false\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4ca8492b-2672-41c4-b5e0-ae742c51aeb6",
      "parentUUID": "96255582-0fe8-4adb-be2b-420e943c3857",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_COURSES_FULFILLED Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: true,\n    courseSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_FULFILLED\",\n    payload: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    courseSearchIsLoading: false,\n    courseSearchError: false\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "aa0e7a18-8c93-457c-9a4f-331d054f2cff",
      "parentUUID": "09514144-d388-45dd-8871-3fd3bdc7d44c",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_COURSES_REJECTED Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    courseSearchIsLoading: true,\n    courseSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: false,\n    courseSearchError: true\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a4a44094-a634-43ba-ba6b-5471f4c59bd5",
      "parentUUID": "7ff288b0-2eb0-4431-ac14-5a0979fa8385",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_AOS_PENDING Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: false,\n    aosSearchError: true //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: true,\n    aosSearchError: false\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1d4b27d1-da62-4d67-af27-b4e68191397a",
      "parentUUID": "0c306942-0069-4d6d-91cc-4c6a3f29c056",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_AOS_FULFILLED Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: true,\n    aosSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_FULFILLED\",\n    payload: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    aosSearchIsLoading: false,\n    aosSearchError: false\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4d4f4817-b55c-44c3-9215-e519e17b9707",
      "parentUUID": "bbafa259-1b6c-40d8-989f-8f2a1caec50b",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_AOS_REJECTED Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    aosSearchIsLoading: true,\n    aosSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: false,\n    aosSearchError: true\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "66fd5573-a1b5-4944-8eeb-093d420f3f4c",
      "parentUUID": "c5fb9f02-9673-4a6c-9c54-487a80fe4fee",
      "skipped": false
    },
    {
      "title": "Should handle the initiation of a course snapshot upload correctly",
      "fullTitle": "ACTION: UPLOAD_COURSE_SNAPSHOT_PENDING Should handle the initiation of a course snapshot upload correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: true\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f23a3a80-247d-4f29-af17-433a9db18956",
      "parentUUID": "b5c4a4fc-f531-4da4-ba10-a17924c37ace",
      "skipped": false
    },
    {
      "title": "Should handle the successful upload of a course snapshot correctly",
      "fullTitle": "ACTION: UPLOAD_COURSE_SNAPSHOT_FULFILLED Should handle the successful upload of a course snapshot correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"upload string\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: \"upload string\",\n    courseSnapshotUploadSucessful: true\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "592e2188-7db4-4066-ab83-e9d755d14bc7",
      "parentUUID": "04e130eb-48e0-4ebb-8447-a08b6a8c5a26",
      "skipped": false
    },
    {
      "title": "Should do handle the rejected upload of a course snapshot correctly",
      "fullTitle": "ACTION: UPLOAD_COURSE_SNAPSHOT_REJECTED Should do handle the rejected upload of a course snapshot correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "6b5d19e1-f175-4838-a66c-9d7109d95136",
      "parentUUID": "418a9e82-6ef7-4634-a669-221084d4069b",
      "skipped": false
    },
    {
      "title": "Should begin fetching a course snapshot correctly",
      "fullTitle": "ACTION: FETCH_COURSE_SNAPSHOT_PENDING Should begin fetching a course snapshot correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "6bd93c17-995e-469a-816f-2ab254a19280",
      "parentUUID": "cdd4668f-9ae4-4410-97ee-d5bfc81772f9",
      "skipped": false
    },
    {
      "title": "Should handle a successful course snapshot fetch correctly",
      "fullTitle": "ACTION: FETCH_COURSE_SNAPSHOT_FULFILLED Should handle a successful course snapshot fetch correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"Snap data\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: \"Snap data\"\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "99f14fc7-33c2-4b6e-b829-619984090058",
      "parentUUID": "ef21f5f4-1896-43ea-b632-4e64016f7e15",
      "skipped": false
    },
    {
      "title": "Should handle a rejected course snapshot fetch correctly",
      "fullTitle": "ACTION: FETCH_COURSE_SNAPSHOT_REJECTED Should handle a rejected course snapshot fetch correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d7feb20e-f291-406c-94fd-4b23602fb3c7",
      "parentUUID": "a385eacf-6906-4ebe-8447-9f77d64b2fa1",
      "skipped": false
    },
    {
      "title": "Should insert a teaching period with the given info correctly into middle of array",
      "fullTitle": "ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into middle of array",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2018,\n    code: \"S2-01\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a95bb8ac-8d81-4ba4-b237-e08671285aef",
      "parentUUID": "b5dbb05b-6633-4c24-abf8-6d6d8fe6f47e",
      "skipped": false
    },
    {
      "title": "Should insert a teaching period with the given info correctly into start of array",
      "fullTitle": "ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into start of array",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2016,\n    code: \"S2-01\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2016, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ecf6c2a6-42f6-4436-a6c3-05b06b929d08",
      "parentUUID": "b5dbb05b-6633-4c24-abf8-6d6d8fe6f47e",
      "skipped": false
    },
    {
      "title": "Should remove a teaching period at the given index",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the given index",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "108aff36-c555-45ec-b04d-107a51b18850",
      "parentUUID": "2acf978c-c495-4683-aa73-90c119289daf",
      "skipped": false
    },
    {
      "title": "Should remove a teaching period at the start of the array",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the start of the array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "10f20d84-5399-47e8-b836-7e33d2be815f",
      "parentUUID": "2acf978c-c495-4683-aa73-90c119289daf",
      "skipped": false
    },
    {
      "title": "Should add the given teaching period to the end of the array",
      "fullTitle": "ACTION: APPEND_TEACHING_PERIOD Should add the given teaching period to the end of the array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"APPEND_TEACHING_PERIOD\",\n    year: 2020,\n    code: \"S2-01\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2020, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "70dd9b75-c42a-4ea7-882c-82c62c2aacf1",
      "parentUUID": "dd4540c0-703c-4201-a123-2030bdc6b49d",
      "skipped": false
    },
    {
      "title": "Should increase the study load if the study load is less than 4",
      "fullTitle": "ACTION: INCREASE_STUDY_LOAD Should increase the study load if the study load is less than 4",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "fd152f61-95af-4e24-8473-6a6006118861",
      "parentUUID": "b317ee52-fbc8-4adc-be45-4b371d799038",
      "skipped": false
    },
    {
      "title": "Should decrease the study load if the study load is greater than 4",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should decrease the study load if the study load is greater than 4",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "3e839bfd-4de7-4cb8-9794-122ef886cdb1",
      "parentUUID": "18ebe592-f95e-45c6-a9c2-1dfe6ed26c31",
      "skipped": false
    },
    {
      "title": "Should not decrease the study load if the study load is 4 or less",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should not decrease the study load if the study load is 4 or less",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0b00fe95-0ed2-4520-bdce-48f7d004dffe",
      "parentUUID": "18ebe592-f95e-45c6-a9c2-1dfe6ed26c31",
      "skipped": false
    },
    {
      "title": "Should remove all teaching periods and set the amount of units to 4",
      "fullTitle": "ACTION: CLEAR_COURSE Should remove all teaching periods and set the amount of units to 4",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5,\n    courseInfoLoadError: false,\n    courseInfoLoading: false\n};\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = {\n    courseInfoLoadError: false,\n    courseInfoLoading: false,\n    courseInfo: {\n        courseName: \"\",\n        faculty: \"\",\n        creditPoints: 0,\n        courseDescription: \"\",\n        durationStr: \"\",\n        modeAndLocation: \"\",\n        awards: \"\",\n        abrTitle: \"\"\n    },\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "93e31c7d-59a3-4fc2-accd-57aa34e9e3d2",
      "parentUUID": "be915337-8e3d-4f33-baae-8e5629ec3575",
      "skipped": false
    },
    {
      "title": "Should add a unit correctly to the start of an array",
      "fullTitle": "ACTION: ADD_UNIT Should add a unit correctly to the start of an array",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", totalCreditpoints: 6, units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }, null, null, null] }, { year: 2018, code: \"S2-01\", totalCreditpoints: 0, units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", totalCreditpoints: 0, units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e3694853-ffb7-4797-9714-2f4a15ec6a9f",
      "parentUUID": "b868c311-5305-454d-8ac5-df7ec58fa9d8",
      "skipped": false
    },
    {
      "title": "Should add a unit correctly to the middle of an array",
      "fullTitle": "ACTION: ADD_UNIT Should add a unit correctly to the middle of an array",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "2ce8f198-cb20-49ed-833d-eed2ea071ac4",
      "parentUUID": "b868c311-5305-454d-8ac5-df7ec58fa9d8",
      "skipped": false
    },
    {
      "title": "Should add a unit correctly to the end of an array",
      "fullTitle": "ACTION: ADD_UNIT Should add a unit correctly to the end of an array",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d8d95837-afe9-4eee-9c16-c99399240b12",
      "parentUUID": "b868c311-5305-454d-8ac5-df7ec58fa9d8",
      "skipped": false
    },
    {
      "title": "Should remove a unit correctly frpm the start of an array",
      "fullTitle": "ACTION: REMOVE_UNIT Should remove a unit correctly frpm the start of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0,\n    creditPoints: 6\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "09869e99-5e0a-4111-8225-abb1983d751c",
      "parentUUID": "2c6a07b2-a39f-4695-9357-3dd927102694",
      "skipped": false
    },
    {
      "title": "Should remove a unit correctly from the middle of an array",
      "fullTitle": "ACTION: REMOVE_UNIT Should remove a unit correctly from the middle of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1,\n    creditPoints: 6\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "18c90372-66ee-48dc-9a2c-b21011ed4da0",
      "parentUUID": "2c6a07b2-a39f-4695-9357-3dd927102694",
      "skipped": false
    },
    {
      "title": "Should remove a unit correctly from the end of an array",
      "fullTitle": "ACTION: REMOVE_UNIT Should remove a unit correctly from the end of an array",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3,\n    creditPoints: 6\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "566758cd-a4ec-424b-99f5-bc8877258103",
      "parentUUID": "2c6a07b2-a39f-4695-9357-3dd927102694",
      "skipped": false
    },
    {
      "title": "Should generate a course structure with valid start and end years",
      "fullTitle": "ACTION: GENERATE_COURSE Should generate a course structure with valid start and end years",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2014,\n    endYear: 2016\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f67c969e-7cea-4c70-8f06-7c1321bc85a3",
      "parentUUID": "3d4fdb44-89c4-4a8c-9ce8-74822967749f",
      "skipped": false
    },
    {
      "title": "Should return an empty course structure with invalid start and end years.",
      "fullTitle": "ACTION: GENERATE_COURSE Should return an empty course structure with invalid start and end years.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2017,\n    endYear: 2013\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7eaa5ca8-adb9-4ee1-a4b4-0afbeab4ddaf",
      "parentUUID": "3d4fdb44-89c4-4a8c-9ce8-74822967749f",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course info is loading",
      "fullTitle": "ACTION: FETCH_COURSE_INFO_PENDING Should correctly show that the course info is loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1195b71f-429f-466a-9367-041615105bfc",
      "parentUUID": "e2e5567f-9073-44ec-bb6f-f70804b7efa7",
      "skipped": false
    },
    {
      "title": "Should correctly return the payload and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    focusedCourse: null,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_FULFILLED\",\n    payload: { data: {\n            \"propertyMap\": {\n                courseCode: \"Test Code\",\n                courseName: \"Test Course\",\n                mangFac: \"Test Faculty\",\n                creditPoints: 100,\n                courseDescrip: {\n                    \"value\": \"Test Description\"\n                },\n                courseDuration: \"Test Duration\",\n                modeLoc: {\n                    \"value\": \"Test mode and location\"\n                },\n                courseAward: \"Test awards\",\n                abrevTitle: \"Test abreviated title\"\n            }\n        } },\n    courseCode: \"COURSE101\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: {\n        courseCode: \"Test Code\",\n        courseName: \"Test Course\",\n        faculty: \"Test Faculty\",\n        creditPoints: 100,\n        courseDescription: \"Test Description\",\n        durationStr: \"Test Duration\",\n        modeAndLocation: \"Test mode and location\",\n        awards: \"Test awards\",\n        abrTitle: \"Test abreviated title\"\n    },\n    focusedCourse: \"COURSE101\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0524386d-cfde-4901-bbb5-863b7d4b2f63",
      "parentUUID": "184ab2fd-ae04-4bda-aaad-e1cff0141c50",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course info fetch failed and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_INFO_REJECTED Should correctly show that the course info fetch failed and show that it is no longer loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: true,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "503243b3-4425-47dd-bc1c-b5c16cca476c",
      "parentUUID": "7894d4d6-f0fa-4eae-9380-5173edfd60af",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course template is loading",
      "fullTitle": "ACTION: FETCH_COURSE_TEMPLATE_PENDING Should correctly show that the course template is loading",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1ad1252f-0c4b-49fb-8b78-906833b0617c",
      "parentUUID": "501ce1f9-352f-4a39-958c-f7ec8bca95dd",
      "skipped": false
    },
    {
      "title": "Should correctly return the payload and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_TEMPLATE_FULFILLED Should correctly return the payload and show that it is no longer loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_FULFILLED\",\n    payload: {\n        data: {\n            propertyMap: \"Fake Course Template\"\n        }\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: \"Fake Course Template\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a3fadc32-3e2b-4cef-98e2-c2b3842bb654",
      "parentUUID": "4aec4859-53c2-4a66-bb72-0ba218ed08ee",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course template fetch failed and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_TEMPLATE_REJECTED Should correctly show that the course template fetch failed and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: true,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b8a59bf3-e7cf-41ad-975c-d8697f5e1fd1",
      "parentUUID": "72e19ea3-804c-4b20-bccc-5061b394f3b0",
      "skipped": false
    },
    {
      "title": "Should correctly show that the unit info is loading",
      "fullTitle": "ACTION: FETCH_UNIT_INFO_PENDING Should correctly show that the unit info is loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: {\n        preqs: \"\",\n        creditPoints: 0,\n        rules: [],\n        locationAndTime: \"\",\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"\",\n        eftsl: 0,\n        descriptions: \"\"\n    },\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: {\n        preqs: \"\",\n        creditPoints: 0,\n        rules: [],\n        locationAndTime: \"\",\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"\",\n        eftsl: 0,\n        descriptions: \"\"\n    },\n    focusedUnitCode: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "671afc48-d493-4bd1-bf57-76aaa972d623",
      "parentUUID": "a4386ed0-a688-47fb-834c-40c0a97d3401",
      "skipped": false
    },
    {
      "title": "Should correctly return the payload and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_UNIT_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_FULFILLED\",\n    payload: { data: \"Fake Unit Info\" },\n    unitCode: \"FAKE1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: \"Fake Unit Info\",\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4e5aab25-6262-4ee5-a470-94bfe4f29c38",
      "parentUUID": "518732b4-a87d-442b-8e9b-3881dd3c8a9e",
      "skipped": false
    },
    {
      "title": "Should correctly show that the unit info fetch failed and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_UNIT_INFO_REJECTED Should correctly show that the unit info fetch failed and show that it is no longer loading",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_REJECTED\",\n    payload: {\n        response: {\n            status: 404\n        }\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: {\n        response: {\n            status: 404\n        }\n    },\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ec6a18f1-1159-4512-b02a-959bcd1af440",
      "parentUUID": "47a270b1-e372-4db1-8207-dc2fa341818c",
      "skipped": false
    },
    {
      "title": "Should accurately set the start year and the focused course on submission",
      "fullTitle": "ACTION: SUBMIT_COURSE_FORM Should accurately set the start year and the focused course on submission",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_COURSE_FORM\",\n    startYear: 2020,\n    courseCode: \"TEST1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: \"TEST1001\",\n    startYear: 2020,\n    endYear: 2020\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "18d1a1ce-ce27-4ad2-a7af-598c3f8c9ccd",
      "parentUUID": "aa0ca187-07cc-430a-86b7-cbf6efce39a2",
      "skipped": false
    },
    {
      "title": "Should accurately set the start year and end year on submission",
      "fullTitle": "ACTION: SUBMIT_YEAR_FORM Should accurately set the start year and end year on submission",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_YEAR_FORM\",\n    startYear: 2020,\n    endYear: 2025\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2020,\n    endYear: 2025\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c676b09a-5eba-4bc2-8529-cc2cac650b70",
      "parentUUID": "bbef5b89-2dd3-43db-8210-c8cac045fa0c",
      "skipped": false
    },
    {
      "title": "Should correctly handle  of teaching periods data",
      "fullTitle": "ACTION: FETCH_TEACHING_PERIODS_PENDING Should correctly handle  of teaching periods data",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "919dd5f5-ac82-4d65-9127-83919a2c4d03",
      "parentUUID": "79ac9cec-1d71-4f30-9241-4fe022e06e60",
      "skipped": false
    },
    {
      "title": "Should correctly handle  of teaching periods data",
      "fullTitle": "ACTION: FETCH_TEACHING_PERIODS_FULFILLED Should correctly handle  of teaching periods data",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_FULFILLED\",\n    payload: \"Teaching period strings\"\n};\nvar stateAfter = {\n    teachingPeriodData: \"Teaching period strings\",\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9e5ac7ee-1098-4e14-997a-1c186ce77820",
      "parentUUID": "e88a3dbb-5e5d-4d7c-8eca-0565ed6e2716",
      "skipped": false
    },
    {
      "title": "Should correctly handle  of teaching periods data",
      "fullTitle": "ACTION: FETCH_TEACHING_PERIODS_REJECTED Should correctly handle  of teaching periods data",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "81686a35-b428-44b3-a015-466556f7d604",
      "parentUUID": "6da36940-23f3-4f53-96d3-f236dcb0b73c",
      "skipped": false
    },
    {
      "title": "Should set the teaching period code to insert value correctly",
      "fullTitle": "ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should set the teaching period code to insert value correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodCodeToInsert: null,\n    testParam1: 1,\n    testParam2: \"test\"\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"S1-02\"\n};\nvar stateAfter = {\n    teachingPeriodCodeToInsert: \"S1-02\",\n    testParam1: 1,\n    testParam2: \"test\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d16fd564-04e9-45ae-9c58-dfb697120f43",
      "parentUUID": "ec895889-ad4e-47e8-8235-3864776f1378",
      "skipped": false
    },
    {
      "title": "Should correctly update the affected units value to the given array",
      "fullTitle": "ACTION: UPDATE_AFFECTED_UNITS Should correctly update the affected units value to the given array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: []\n};\nvar action = {\n    type: \"UPDATE_AFFECTED_UNITS\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "da45eaa8-0fe7-4708-94a4-ce8aeff1d5f7",
      "parentUUID": "1be02c4a-7667-423b-bd15-05b9577b821e",
      "skipped": false
    },
    {
      "title": "Should correctly update the index of tp to remove value to the given value",
      "fullTitle": "ACTION: UPDATE_INDEX_OF_TP_TO_REMOVE Should correctly update the index of tp to remove value to the given value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 0\n};\nvar action = {\n    type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\",\n    index: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 1\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ec446901-fe4b-408b-899a-9459c149ca37",
      "parentUUID": "b3c1cd44-233d-4014-bca2-a52415801365",
      "skipped": false
    },
    {
      "title": "Should correctly begin moving a unit",
      "fullTitle": "ACTION: MOVING_UNIT Should correctly begin moving a unit",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0\n};\nvar action = {\n    type: \"MOVING_UNIT\",\n    unit: \"TEST-UNIT\",\n    unitIndex: 3,\n    tpIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TEST-UNIT\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 3\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e7577499-4edf-4ac2-8bb4-16fbda739718",
      "parentUUID": "a578729e-68d1-41f3-a962-6e63b817020d",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to a teaching period earlier than it",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period earlier than it",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitName: \"TestUnit\", creditPoints: 6 }, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "89c67b60-ae67-4d43-9a38-524f6c0d3115",
      "parentUUID": "09514264-c130-40ce-a3ec-13d1a031b0a2",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to a teaching period later than it",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period later than it",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitName: \"TestUnit\", creditPoints: 6 }, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ca60c32f-2ed3-461d-a019-bcfd97a7e5fc",
      "parentUUID": "09514264-c130-40ce-a3ec-13d1a031b0a2",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to the same teaching period but earlier position",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but earlier position",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [\"PlaceToMoveTo\", { unitName: \"TestUnit\", creditPoints: 6 }, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [{ unitName: \"TestUnit\", creditPoints: 6 }, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "00265a72-63d4-46dc-ab10-168003047cc8",
      "parentUUID": "09514264-c130-40ce-a3ec-13d1a031b0a2",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to the same teaching period but later position",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but later position",
      "timedOut": false,
      "duration": 16,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [{ unitName: \"TestUnit\", creditPoints: 6 }, null, \"PlaceToMoveTo\", null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4f7440bd-373f-4ccd-aba1-9c0829621d3e",
      "parentUUID": "09514264-c130-40ce-a3ec-13d1a031b0a2",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to the same teaching period and exact same position",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period and exact same position",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7ac0142c-784a-4483-acea-057ac93d64a6",
      "parentUUID": "09514264-c130-40ce-a3ec-13d1a031b0a2",
      "skipped": false
    },
    {
      "title": "should cancel moving unit",
      "fullTitle": "ACTION: CANCEL_MOVING_UNIT should cancel moving unit",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: \"TestUnit2\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: undefined,\n    unitsIndexOfUnitToBeMoved: undefined\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e1a0b882-4e92-487e-817f-16a76e2878b8",
      "parentUUID": "3f774188-6a48-4451-b4b3-b87721c5f20d",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to a teaching period earlier than it",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period earlier than it",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f3d8f1b4-6be1-4970-a1d7-75e2c4089d61",
      "parentUUID": "cb74d348-21b3-4a5c-bd52-98abc78a6e27",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to a teaching period later than it",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period later than it",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "8e25704c-4090-4195-ba2a-7b99b25c2479",
      "parentUUID": "cb74d348-21b3-4a5c-bd52-98abc78a6e27",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to the same teaching period but earlier position",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but earlier position",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "03ba7afb-ecd6-4b5e-9f87-33a49163e150",
      "parentUUID": "cb74d348-21b3-4a5c-bd52-98abc78a6e27",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to the same teaching period but later position",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but later position",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, \"PlaceToMoveTo\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", null, \"TestUnit\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a335aadd-2a22-45f9-97bd-3cae1f628dfb",
      "parentUUID": "cb74d348-21b3-4a5c-bd52-98abc78a6e27",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to the same teaching period and exact same position",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period and exact same position",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "19df3100-7bff-4087-ace6-3b08b99d0f6b",
      "parentUUID": "cb74d348-21b3-4a5c-bd52-98abc78a6e27",
      "skipped": false
    },
    {
      "title": "should give no errors for an empty course plan.",
      "fullTitle": "ACTION: VALIDATE_COURSE should give no errors for an empty course plan.",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan.\"\n    }],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    courseErrors: [],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "517ea051-9377-49df-b83c-158213f5fa2e",
      "parentUUID": "7f4df247-7fcb-447e-925a-00c75d21344a",
      "skipped": false
    },
    {
      "title": "Should not give duplicate unit errors if the first attempt is in the past, and the second attempt is not two or more years into the future.",
      "fullTitle": "duplicates: Should not give duplicate unit errors if the first attempt is in the past, and the second attempt is not two or more years into the future.",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: new Date().getFullYear() - 1,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, null]\n    }, {\n        code: \"S1-01\",\n        year: new Date().getFullYear() + 1,\n        units: [null, null, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "3a4ea3f3-8a26-47e0-bb19-07685a7ad79d",
      "parentUUID": "c304df92-0ac4-4d72-b14c-620e5867bf39",
      "skipped": false
    },
    {
      "title": "Should give a duplicate unit error if there are two same units in the same teaching period",
      "fullTitle": "duplicates: Should give a duplicate unit error if there are two same units in the same teaching period",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2015,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }, {\n        code: \"S2-01\",\n        year: 2015,\n        units: [null, null, null, {\n            unitCode: \"GJQ2039\"\n        }]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2015,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }, {\n        code: \"S2-01\",\n        year: 2015,\n        units: [null, null, null, {\n            unitCode: \"GJQ2039\"\n        }]\n    }],\n    courseErrors: [{\n        message: \"ABCD1234 already exists in the same teaching period. Please remove this unit.\",\n        coordinates: [[0, 3]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "df4b8a72-bab7-4ee6-ba7d-06ef31d76b9b",
      "parentUUID": "c304df92-0ac4-4d72-b14c-620e5867bf39",
      "skipped": false
    },
    {
      "title": "Should give a duplicate error if a duplicate unit is placed in a teaching period two years from now",
      "fullTitle": "duplicates: Should give a duplicate error if a duplicate unit is placed in a teaching period two years from now",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var currentYear = new Date().getFullYear();\nvar stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: currentYear,\n        units: [{\n            unitCode: \"ABC1234\"\n        }, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 2,\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 2,\n        units: [null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: currentYear,\n        units: [{\n            unitCode: \"ABC1234\"\n        }, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 2,\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 2,\n        units: [null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan. Please plan as if you will pass all units.\",\n        coordinates: [[4, 1]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e7af2d81-d365-4ba9-bf05-60136dcb606e",
      "parentUUID": "c304df92-0ac4-4d72-b14c-620e5867bf39",
      "skipped": false
    },
    {
      "title": "Should give a course error for a unit not being offered in the teaching period it is in",
      "fullTitle": "offerings: Should give a course error for a unit not being offered in the teaching period it is in",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2019,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: 2019,\n        units: [null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"First semester 2019 (Day)\"]\n            }]\n        }, null]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2019,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: 2019,\n        units: [null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"First semester 2019 (Day)\"]\n            }]\n        }, null]\n    }],\n    courseErrors: [{\n        message: \"ABC1234 is not offered in second semester, 2019.\",\n        coordinates: [[1, 2]]\n    }],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "95fea75e-6d9f-436b-b753-dc930dd95e87",
      "parentUUID": "4d25d61d-db5f-45e9-83f4-80b5e5dad1b3",
      "skipped": false
    },
    {
      "title": "Should give a course error for a missing prereq",
      "fullTitle": "rules: Should give a course error for a missing prereq",
      "timedOut": false,
      "duration": 11,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"Must have passed an (I/W) unit in {DEF2345, QLS2029}\",\n                endDate: \"\"\n            }]\n        }]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"Must have passed an (I/W) unit in {DEF2345, QLS2029}\",\n                endDate: \"\"\n            }]\n        }]\n    }],\n    courseErrors: [{\n        message: \"You must complete DEF2345 or QLS2029 before you can do ABC1234.\",\n        coordinates: [[0, 3]]\n    }],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4b654c56-ca1c-4b15-9537-6c191adbfe09",
      "parentUUID": "f15c4e4d-d0c3-4096-bc4b-ae2b87f6ae04",
      "skipped": false
    },
    {
      "title": "Should give an error for credit points being lower than the minimum required for the unit",
      "fullTitle": "rules: Should give an error for credit points being lower than the minimum required for the unit",
      "timedOut": false,
      "duration": 10,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2016,\n        code: \"S2-01\",\n        units: [{\n            unitCode: \"TEST1011\",\n            creditPoints: 6\n        }, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"TEST3031\",\n            creditPoints: 6,\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"Must have passed 24 credit points\"\n            }]\n        }, null, null, null]\n    }, {\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2016,\n        code: \"S2-01\",\n        units: [{\n            unitCode: \"TEST1011\",\n            creditPoints: 6\n        }, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"TEST3031\",\n            creditPoints: 6,\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"Must have passed 24 credit points\"\n            }]\n        }, null, null, null]\n    }, {\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"You need 18 more credit points before you can do TEST3031.\",\n        coordinates: [[2, 1]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "78189899-5447-4138-a3c0-fa1443002f78",
      "parentUUID": "f15c4e4d-d0c3-4096-bc4b-ae2b87f6ae04",
      "skipped": false
    },
    {
      "title": "Should correctly handle prohibitions",
      "fullTitle": "rules: Should correctly handle prohibitions",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2013,\n        code: \"S1-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\"\n        }]\n    }, {\n        year: 2013,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"BCD1234\",\n            rules: [{\n                ruleSummary: \"INCOMP\",\n                ruleString: \"Incompatible with achievement in {ABC1234}\"\n            }]\n        }, null, null]\n    }],\n    courseErrors: [{\n        message: \"Please remove BCD1234, as completing ABC1234 prohibits you from doing this unit.\",\n        coordinates: [[1, 1]]\n    }]\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "a855ef6b-7218-46a9-a45a-e710ca1106c5",
      "parentUUID": "f15c4e4d-d0c3-4096-bc4b-ae2b87f6ae04",
      "skipped": false
    },
    {
      "title": "Should correctly handle the Do branch of For COURSE_CODE syntax",
      "fullTitle": "rules: Should correctly handle the Do branch of For COURSE_CODE syntax",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2014,\n        code: \"S1-01\",\n        units: [{\n            unitCode: \"DEF2345\",\n            unitName: \"Test unit\",\n            rules: [{\n                ruleSummary: \"COREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {S2029, S3019} Do Any passed co-req (I/W) unit in {ABC2022} Otherwise true\",\n                endDate: \"\"\n            }]\n        }, null, null, null]\n    }],\n    courseInfo: {\n        courseCode: \"S2029\"\n    },\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2014,\n        code: \"S1-01\",\n        units: [{\n            unitCode: \"DEF2345\",\n            unitName: \"Test unit\",\n            rules: [{\n                ruleSummary: \"COREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {S2029, S3019} Do Any passed co-req (I/W) unit in {ABC2022} Otherwise true\",\n                endDate: \"\"\n            }]\n        }, null, null, null]\n    }],\n    courseInfo: {\n        courseCode: \"S2029\"\n    },\n    courseErrors: [{\n        message: \"You must complete ABC2022 before or whilst doing DEF2345.\",\n        coordinates: [[0, 0]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "bb0ee5aa-463d-4463-b09c-cb058932853c",
      "parentUUID": "f15c4e4d-d0c3-4096-bc4b-ae2b87f6ae04",
      "skipped": false
    },
    {
      "title": "Should correctly handle the Otherwise branch of For COURSE_CODE syntax",
      "fullTitle": "rules: Should correctly handle the Otherwise branch of For COURSE_CODE syntax",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }, {\n        year: 2018,\n        code: \"WS-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"Winter semester 2018 (Day)\"]\n            }],\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {Q2001, Q2003} Do true Otherwise Must have passed 1 (I/W) units in {TEST1001}\",\n                endDate: \"\"\n            }]\n        }]\n    }, {\n        year: 2018,\n        code: \"S2-01\",\n        units: [null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }, {\n        year: 2018,\n        code: \"WS-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"Winter semester 2018 (Day)\"]\n            }],\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {Q2001, Q2003} Do true Otherwise Must have passed 1 (I/W) units in {TEST1001}\",\n                endDate: \"\"\n            }]\n        }]\n    }, {\n        year: 2018,\n        code: \"S2-01\",\n        units: [null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"You must complete TEST1001 before you can do ABC1234.\",\n        coordinates: [[1, 3]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "06fddd9b-232d-42f0-b65d-ac0cfeea9c61",
      "parentUUID": "f15c4e4d-d0c3-4096-bc4b-ae2b87f6ae04",
      "skipped": false
    },
    {
      "title": "Should handle a complicated For expression",
      "fullTitle": "rules: Should handle a complicated For expression",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2019,\n        code: \"S1-01\",\n        units: [null, {\n            unitCode: \"ABC1234\",\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"For ((SCA_LOCATION IN {CLAYTON} AND COURSE_CODE IN {1039, 2393}) OR (SCA_LOCATION IN {CLAYTON} AND COURSE_CODE NOT IN {A4921})) Do true Otherwise Permission required\"\n            }]\n        }, null, null]\n    }],\n    courseErrors: [],\n    courseInfo: {\n        courseCode: \"A4921\"\n    }\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2019,\n        code: \"S1-01\",\n        units: [null, {\n            unitCode: \"ABC1234\",\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"For ((SCA_LOCATION IN {CLAYTON} AND COURSE_CODE IN {1039, 2393}) OR (SCA_LOCATION IN {CLAYTON} AND COURSE_CODE NOT IN {A4921})) Do true Otherwise Permission required\"\n            }]\n        }, null, null]\n    }],\n    courseErrors: [{\n        message: \"You need permission to do ABC1234.\",\n        coordinates: [[0, 1]]\n    }],\n    courseInfo: {\n        courseCode: \"A4921\"\n    }\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c9f334b9-c6a4-4db6-9a83-8b0679449c92",
      "parentUUID": "f15c4e4d-d0c3-4096-bc4b-ae2b87f6ae04",
      "skipped": false
    },
    {
      "title": "Should leave invalidUnitSlotCoordinates empty if there are no invalid unit slots",
      "fullTitle": "ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS Should leave invalidUnitSlotCoordinates empty if there are no invalid unit slots",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2015,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: false\n};\nvar action = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: {\n        unitCode: \"TEST1001\",\n        unitName: \"Test unit\",\n        locationAndTime: [{\n            location: \"Caulfield\",\n            time: [\"First semester 2017 (Day)\"]\n        }]\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2015,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "6a986836-b272-4ece-947a-7669e1818a09",
      "parentUUID": "c02f8dd7-cc55-4248-b6c5-6b109002de63",
      "skipped": false
    },
    {
      "title": "Should highlight teaching periods that contains the same unit",
      "fullTitle": "ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS Should highlight teaching periods that contains the same unit",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var currentYear = new Date().getFullYear();\nvar stateBefore = {\n    teachingPeriods: [{\n        year: currentYear - 2,\n        code: \"FY-01\",\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        year: currentYear - 1,\n        code: \"FY-01\",\n        units: [null, null, {\n            unitCode: \"DEF2345\"\n        }, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: false\n};\nvar action = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: {\n        unitCode: \"ABC1234\",\n        locationAndTime: [{\n            location: \"Parkville\",\n            time: [\"Full year 2018 (Day)\"]\n        }]\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: currentYear - 2,\n        code: \"FY-01\",\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        year: currentYear - 1,\n        code: \"FY-01\",\n        units: [null, null, {\n            unitCode: \"DEF2345\"\n        }, null]\n    }],\n    invalidUnitSlotCoordinates: [[0, null]],\n    highlightingInvalidUnitSlots: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b81d7cc5-fe51-4f1c-be3e-9e5304a63098",
      "parentUUID": "c02f8dd7-cc55-4248-b6c5-6b109002de63",
      "skipped": false
    },
    {
      "title": "should not change the state if it receives an unknown action",
      "fullTitle": "DEFAULT should not change the state if it receives an unknown action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "d51cfab1-9111-4506-aa0d-43c21bd982b9",
      "parentUUID": "f9675784-2267-4f21-9205-606f447b1e9a",
      "skipped": false
    },
    {
      "title": "should begin fetching important dates correctly ",
      "fullTitle": "ACTION: FETCH_IMPORTANT_DATES_PENDING should begin fetching important dates correctly ",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\nvar action = {\n    type: \"FETCH_IMPORTANT_DATES_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: true,\n    importantDatesError: false\n};\ntest(_ImportantDatesReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "76ef0591-72ca-42b5-851e-71f63ec206bc",
      "parentUUID": "4d5b41a2-6e2d-4215-91a5-1cd468e3810b",
      "skipped": false
    },
    {
      "title": "should handled failed fetch of important dates correctly ",
      "fullTitle": "ACTION: FETCH_IMPORTANT_DATES_REJECTED should handled failed fetch of important dates correctly ",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\nvar action = {\n    type: \"FETCH_IMPORTANT_DATES_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: true\n};\ntest(_ImportantDatesReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0fc4209e-3c75-4039-9108-a24ffdfec510",
      "parentUUID": "7ca20e03-8cd7-4328-86ef-25bfa5f5c185",
      "skipped": false
    },
    {
      "title": "should handled failed fetch of important dates correctly ",
      "fullTitle": "ACTION: FETCH_IMPORTANT_DATES_FULFILLED should handled failed fetch of important dates correctly ",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\nvar action = {\n    type: \"FETCH_IMPORTANT_DATES_FULFILLED\",\n    payload: [{\n        \"value\": \"HE IS A SAURABH\"\n    }]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [{ \"value\": \"HE IS A SAURABH\" }],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\ntest(_ImportantDatesReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0adcd7b2-98d1-441a-9c3b-ee1085093e30",
      "parentUUID": "5f683d8a-f0c5-43c0-93fc-414d6897c3ad",
      "skipped": false
    },
    {
      "title": "should insert a notification from an empty list",
      "fullTitle": "ACTION: ADD_NOTIFICATION should insert a notification from an empty list",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: []\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "68b1bd99-5c54-41db-84bb-75104e0fb6e2",
      "parentUUID": "97ac0ce5-b603-4261-8204-069c67d35672",
      "skipped": false
    },
    {
      "title": "should prepend a notification into an list of a few existing notifications.",
      "fullTitle": "ACTION: ADD_NOTIFICATION should prepend a notification into an list of a few existing notifications.",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e6bd2243-b492-426c-93c4-8a1c33eb89a7",
      "parentUUID": "97ac0ce5-b603-4261-8204-069c67d35672",
      "skipped": false
    },
    {
      "title": "should replace a notification if it already exists with a specified ID",
      "fullTitle": "ACTION: ADD_NOTIFICATION should replace a notification if it already exists with a specified ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    message: \"New message goes over here\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"New message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "326548fb-0dba-478d-bd86-f275bf710823",
      "parentUUID": "97ac0ce5-b603-4261-8204-069c67d35672",
      "skipped": false
    },
    {
      "title": "Should remove a notification given its ID",
      "fullTitle": "ACTION: REMOVE_NOTIFICATION Should remove a notification given its ID",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    id: \"CONNECTION_LOST\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4eee33ea-03e7-4a94-afb1-910ff5159d3b",
      "parentUUID": "f8e509b3-ac07-47f2-b45a-a2d3f5e81087",
      "skipped": false
    },
    {
      "title": "Should remove a notification given its index",
      "fullTitle": "ACTION: REMOVE_NOTIFICATION Should remove a notification given its index",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    index: 1\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a7edcaa5-c781-439c-81f5-efa400de6ac7",
      "parentUUID": "f8e509b3-ac07-47f2-b45a-a2d3f5e81087",
      "skipped": false
    },
    {
      "title": "Should not change state if it does not recognise an action",
      "fullTitle": "DEFAULT Should not change state if it does not recognise an action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Notifications2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "442318fb-838c-41a4-b3d6-02e63c3cffbc",
      "parentUUID": "cff69f20-bae8-4ec2-8765-c4afa8e37980",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the insert teaching period UI boolean",
      "fullTitle": "ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: true,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9add2a09-0be4-421b-8270-5853908bd8bc",
      "parentUUID": "8d5fb3f7-cca2-44ef-a490-eddc2b40ede1",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the insert teaching period UI boolean",
      "fullTitle": "ACTION: HIDE_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: true,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1db4df30-4bca-40ac-84be-f5191362a6fa",
      "parentUUID": "50408319-25da-4f0e-a789-c14baf2fd2b7",
      "skipped": false
    },
    {
      "title": "Should correctly set the add unit UI boolean to true and correctly hide the sidebar when a unit is being added",
      "fullTitle": "ACTION: ADDING_UNIT Should correctly set the add unit UI boolean to true and correctly hide the sidebar when a unit is being added",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "2e9d7407-c8fc-4844-9949-babd0b373ec2",
      "parentUUID": "78e0d67e-78ad-4ec3-90be-fb0e961899d6",
      "skipped": false
    },
    {
      "title": "Should correctly set the add unit UI boolean to false",
      "fullTitle": "ACTION: ADD_UNIT Should correctly set the add unit UI boolean to false",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true\n};\nvar action = {\n    type: \"ADD_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "99914d02-2723-40b1-94ed-2ff18a4fef52",
      "parentUUID": "51ec6847-ee98-4e84-8b00-e398be89ae67",
      "skipped": false
    },
    {
      "title": "Should correctly set the add unit UI boolean to false",
      "fullTitle": "ACTION: CANCEL_ADDING_UNIT Should correctly set the add unit UI boolean to false",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true\n};\nvar action = {\n    type: \"CANCEL_ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "aacbd748-d34e-4a22-9a5e-f5143b357f4a",
      "parentUUID": "7b233280-96d2-4b5e-8d7a-5100d47aaa1c",
      "skipped": false
    },
    {
      "title": "Should correctly set the move unit UI boolean to true",
      "fullTitle": "ACTION: MOVING_UNIT Should correctly set the move unit UI boolean to true",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"MOVING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "93c59382-d7e3-4b0e-8dd6-d6995aba2ecc",
      "parentUUID": "a2fc241f-06cd-477b-a40d-440ab4dbb4d4",
      "skipped": false
    },
    {
      "title": "Should correctly set the move unit UI boolean to false",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly set the move unit UI boolean to false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"MOVE_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "3b81af78-e424-42e3-b8bd-d557e8f95ce6",
      "parentUUID": "ece2a783-d4a4-4d76-a296-efcf044dfd70",
      "skipped": false
    },
    {
      "title": "Should correctly set the move unit UI boolean to false",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly set the move unit UI boolean to false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"SWAP_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "61059417-a2b6-4c8e-8f1b-82861c166fcb",
      "parentUUID": "236f8918-27ef-4541-a931-a56f801199d7",
      "skipped": false
    },
    {
      "title": "Should correctly set the move unit UI boolean to false",
      "fullTitle": "ACTION: CANCEL_MOVING_UNIT Should correctly set the move unit UI boolean to false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d38584e7-5635-477a-9e97-f1b1027d7298",
      "parentUUID": "216e4e43-1d8b-484d-a285-5233271e766f",
      "skipped": false
    },
    {
      "title": "Should set the course to read only correctly",
      "fullTitle": "ACTION: SET_COURSE_READ_ONLY Should set the course to read only correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: false\n};\nvar action = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a84a54aa-6a90-4728-9e12-8358298e8d86",
      "parentUUID": "42f94748-ffeb-4b8c-bc53-81c496c22a5f",
      "skipped": false
    },
    {
      "title": "Should set the course to allow edits correctly",
      "fullTitle": "ACTION: SET_COURSE_READ_AND_WRITE Should set the course to allow edits correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: true\n};\nvar action = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4e5a0f65-63e8-42a2-a0f2-6b040a02da21",
      "parentUUID": "64fa05ca-c804-4bfc-92c8-7bc2113cd6d9",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm delete teaching period modal UI to show",
      "fullTitle": "ACTION: SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to show",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "15f24042-3234-4e0e-90fe-a9632166c0a4",
      "parentUUID": "288c4895-a5a6-4175-8988-d8e1c5999dbd",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm delete teaching period modal UI to hide",
      "fullTitle": "ACTION: HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to hide",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "6b17c30d-0917-4351-8628-7b50d8aa7208",
      "parentUUID": "2f4863e5-3959-437f-9ded-756065eddcaf",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm decrease study load modal UI to show",
      "fullTitle": "ACTION: SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to show",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "400b5416-d35d-47c6-af0f-2a8cf9cc51cd",
      "parentUUID": "c3cd69e9-a010-438c-817c-78285ed3376c",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm decrease study load modal UI to hide",
      "fullTitle": "ACTION: HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to hide",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1103ef91-856b-4ef5-8e4c-38151df33bae",
      "parentUUID": "24f6a265-ebed-4c49-bdbb-3d53cfa25385",
      "skipped": false
    },
    {
      "title": "Should set show flag for custom unit modal to be true",
      "fullTitle": "ACTION: SHOW_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be true",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "25a62b27-4d0c-42e8-b3da-d59743af690d",
      "parentUUID": "36f3bce0-cba1-470e-a42d-0d20cd1b7273",
      "skipped": false
    },
    {
      "title": "Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
      "fullTitle": "ACTION: SHOW_CUSTOM_UNIT_MODAL Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"ABC1234\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: \"ABC1234\",\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "defacbe9-2e67-4ceb-a63e-43689c4d2e40",
      "parentUUID": "36f3bce0-cba1-470e-a42d-0d20cd1b7273",
      "skipped": false
    },
    {
      "title": "Should set show flag for custom unit modal to be false",
      "fullTitle": "ACTION: HIDE_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be false",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: true\n};\nvar action = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0328dcaf-d97d-4ac8-a468-1b1511c0b340",
      "parentUUID": "cbd33e4b-7f59-4afe-b691-706e08c98d72",
      "skipped": false
    },
    {
      "title": "Should correctly show the sidebar when called",
      "fullTitle": "ACTION: SHOW_SIDEBAR Should correctly show the sidebar when called",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: false\n};\nvar action = {\n    type: \"SHOW_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "83c0d1eb-995f-4b70-917c-1c89fe4c4d24",
      "parentUUID": "d00c4174-8ef2-473c-9dcb-c7860845868c",
      "skipped": false
    },
    {
      "title": "Should correctly hide the sidebar when called",
      "fullTitle": "ACTION: HIDE_SIDEBAR Should correctly hide the sidebar when called",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"HIDE_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c152e597-151f-448c-b0a0-5cb49e1e9f9e",
      "parentUUID": "0eef17c7-1951-4e6d-a674-7d694ef94cfc",
      "skipped": false
    },
    {
      "title": "Should not change state if it does not recognise the action",
      "fullTitle": "DEFAULT Should not change state if it does not recognise the action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_UI2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "9b23b527-0993-4282-be64-16a009557b09",
      "parentUUID": "72450f85-23b8-4f37-8c69-1a3ff2f28881",
      "skipped": false
    },
    {
      "title": "Should correctly create a new cache instance if there is no local storage value saved, or it is too old",
      "fullTitle": "ACTION: INITIALISE_NEW_CACHE Should correctly create a new cache instance if there is no local storage value saved, or it is too old",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {\n        \"TEST1001\": {\n            timeOfLastAccess: \"Tue Mar 07 2017 12:07:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TEST1001\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        },\n        \"TES1002\": {\n            timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TES1002\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        }\n    },\n    cacheSize: 2,\n    MAX_CACHE_SIZE: 20\n};\nvar action = {\n    type: \"INITIALISE_NEW_CACHE\",\n    timeOfAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\"\n};\nvar stateAfter = {\n    timeOfLastAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {},\n    cacheSize: 0,\n    MAX_CACHE_SIZE: 20\n};\ntest(_UnitCacheReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "053e5dd0-2e59-45f8-a08e-3f24a6ac209c",
      "parentUUID": "d350a948-8c80-47ff-a0f3-b556b8c683b3",
      "skipped": false
    },
    {
      "title": "should correctly remove an item with the given key from the cache ",
      "fullTitle": "ACTION: REMOVE_ITEM_FROM_CACHE should correctly remove an item with the given key from the cache ",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {\n        \"TEST1001\": {\n            timeOfLastAccess: \"Tue Mar 07 2017 12:07:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TEST1001\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        },\n        \"TES1002\": {\n            timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TES1002\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        }\n    },\n    cacheSize: 2,\n    MAX_CACHE_SIZE: 20\n};\nvar action = {\n    type: \"REMOVE_ITEM_FROM_CACHE\",\n    keyValueToDelete: \"TEST1001\",\n    timeOfAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\"\n};\nvar stateAfter = {\n    timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {\n        \"TES1002\": {\n            timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TES1002\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        }\n    },\n    cacheSize: 1,\n    MAX_CACHE_SIZE: 20\n};\ntest(_UnitCacheReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ddc0760f-e059-4db8-bd00-cc3e9727230e",
      "parentUUID": "fa76bc93-6690-4f6d-8426-a6e8181ad9c2",
      "skipped": false
    },
    {
      "title": "should correctly add an item to the cache ",
      "fullTitle": "ACTION: ADD_ITEM_TO_CACHE should correctly add an item to the cache ",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {},\n    cacheSize: 0,\n    MAX_CACHE_SIZE: 20\n};\nvar action = {\n    type: \"ADD_ITEM_TO_CACHE\",\n    timeOfAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCode: \"TEST1001\",\n    unitInfo: {\n        preqs: \"None\",\n        creditPoints: 6,\n        rules: [],\n        locationAndTime: [],\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"TES1002\",\n        eftsl: 0,\n        descriptions: \"\"\n    }\n};\nvar stateAfter = {\n    timeOfLastAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {\n        \"TEST1001\": {\n            timeOfLastAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TES1002\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        }\n    },\n    cacheSize: 1,\n    MAX_CACHE_SIZE: 20\n};\ntest(_UnitCacheReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c75a07d4-b8c3-4b58-b1a6-a9d9151e0722",
      "parentUUID": "83337550-ad3a-4f84-be0c-8385b6310a79",
      "skipped": false
    },
    {
      "title": "should begin fetching important dates correctly ",
      "fullTitle": "ACTION: FETCH_UNITS_PENDING should begin fetching important dates correctly ",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [],\n    unitSearchIsLoading: false,\n    unitSearchError: true\n};\nvar action = {\n    type: \"FETCH_UNITS_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [],\n    unitSearchIsLoading: true,\n    unitSearchError: false\n};\ntest(_UnitSearchReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c168c4a5-edec-4da3-ada1-37049e08d070",
      "parentUUID": "157b3aa0-b2dd-4852-b4de-2a237661b33a",
      "skipped": false
    },
    {
      "title": "should handled failed fetch of important dates correctly ",
      "fullTitle": "ACTION: FETCH_UNITS_REJECTED should handled failed fetch of important dates correctly ",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [],\n    unitSearchIsLoading: true,\n    unitSearchError: false\n};\nvar action = {\n    type: \"FETCH_UNITS_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [],\n    unitSearchIsLoading: false,\n    unitSearchError: true\n};\ntest(_UnitSearchReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ee417a00-815e-4458-babf-ff9e3f4ed520",
      "parentUUID": "9653cd22-08b5-442a-bbda-17dd421e2c0d",
      "skipped": false
    },
    {
      "title": "should handled failed fetch of important dates correctly ",
      "fullTitle": "ACTION: FETCH_UNITS_FULFILLED should handled failed fetch of important dates correctly ",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [],\n    unitSearchIsLoading: true,\n    unitSearchError: false\n};\nvar action = {\n    type: \"FETCH_UNITS_FULFILLED\",\n    payload: [\"unit1\", \"unit2\", \"unit3\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [\"unit1\", \"unit2\", \"unit3\"],\n    unitSearchIsLoading: false,\n    unitSearchError: false\n};\ntest(_UnitSearchReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "669984b6-2751-4bf5-bea9-b3442b6f78a4",
      "parentUUID": "ab3647c5-6870-4e9f-8eed-c7e3b48f57a7",
      "skipped": false
    },
    {
      "title": "Should return a non-negative number",
      "fullTitle": "UTILS: CostCalc Should return a non-negative number",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_CostCalc2.default.calculateCost(0, 0)).to.be.gte(0);\nexpect(_CostCalc2.default.calculateCost(2, 6)).to.be.gte(0);",
      "err": {},
      "isRoot": false,
      "uuid": "6b2f46d2-bfa9-4e7c-bc76-e4006bbd5fa5",
      "parentUUID": "e2e216bf-70c7-46ed-b209-79b3c1c079a2",
      "skipped": false
    },
    {
      "title": "Should multiply SCA band cost with credit points",
      "fullTitle": "UTILS: CostCalc Should multiply SCA band cost with credit points",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var scaBand = 3;\nvar creditPoints = 6;\nvar scaBandCost = _CostCalc2.default.calculateCost(scaBand, 1);\nexpect(_CostCalc2.default.calculateCost(scaBand, creditPoints)).to.equal(scaBandCost * creditPoints);",
      "err": {},
      "isRoot": false,
      "uuid": "1a3b6323-ad75-4bcc-860f-450a78437dda",
      "parentUUID": "e2e216bf-70c7-46ed-b209-79b3c1c079a2",
      "skipped": false
    },
    {
      "title": "Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
      "fullTitle": "nextSemester Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([], 2011, [])).to.deep.equal({\n    index: 0,\n    year: 2011,\n    code: \"S1-01\",\n    teachingPeriodData: []\n});",
      "err": {},
      "isRoot": false,
      "uuid": "b27ac898-3748-4b2b-aa60-6064891db951",
      "parentUUID": "c8328627-1afa-4ad5-be47-e1c585274f06",
      "skipped": false
    },
    {
      "title": "Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
      "fullTitle": "nextSemester Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([], 2029, sortedTeachingPeriodData)).to.deep.equal({\n    index: 0,\n    year: 2029,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
      "err": {},
      "isRoot": false,
      "uuid": "3a96118b-a5c9-416f-bfb6-507a6b04d73e",
      "parentUUID": "c8328627-1afa-4ad5-be47-e1c585274f06",
      "skipped": false
    },
    {
      "title": "Should return semester two if the last teaching period is in semester one, with the same year",
      "fullTitle": "nextSemester Should return semester two if the last teaching period is in semester one, with the same year",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2025,\n    code: \"S1-01\"\n}, {\n    year: 2025,\n    code: \"S2-01\"\n}, {\n    year: 2026,\n    code: \"S1-01\"\n}, {\n    year: 2026,\n    code: \"S2-01\"\n}, {\n    year: 2027,\n    code: \"S1-01\"\n}], 2023, sortedTeachingPeriodData)).to.deep.equal({\n    index: 5,\n    year: 2027,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
      "err": {},
      "isRoot": false,
      "uuid": "a78d7fa0-f403-40c1-9749-22a22b331ee4",
      "parentUUID": "c8328627-1afa-4ad5-be47-e1c585274f06",
      "skipped": false
    },
    {
      "title": "Should return semester one next year if the last teaching period is in semester two",
      "fullTitle": "nextSemester Should return semester one next year if the last teaching period is in semester two",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2015,\n    code: \"FY-01\"\n}, {\n    year: 2017,\n    code: \"S2-01\"\n}], 2015, sortedTeachingPeriodData)).to.deep.equal({\n    index: 2,\n    year: 2018,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
      "err": {},
      "isRoot": false,
      "uuid": "9020f054-2668-4cf2-8fd9-5e390d68e53e",
      "parentUUID": "c8328627-1afa-4ad5-be47-e1c585274f06",
      "skipped": false
    },
    {
      "title": "Should render a semester string",
      "fullTitle": "getSemesterString Should render a semester string",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2019,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n})).to.equal(\"Semester 2, 2019\");",
      "err": {},
      "isRoot": false,
      "uuid": "5d3c513b-871c-49ff-8c47-97dee2f1d7cd",
      "parentUUID": "87361d0c-0c37-4714-b2da-f9bf1a372d1c",
      "skipped": false
    },
    {
      "title": "Should revert back to semester codes if teachingPeriodData is not available",
      "fullTitle": "getSemesterString Should revert back to semester codes if teachingPeriodData is not available",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2015,\n    code: \"S1-01\"\n})).to.equal(\"S1-01, 2015\");",
      "err": {},
      "isRoot": false,
      "uuid": "eca808a9-1763-4394-b3ea-7b8de79abb4a",
      "parentUUID": "87361d0c-0c37-4714-b2da-f9bf1a372d1c",
      "skipped": false
    },
    {
      "title": "Should return the right year based off current month",
      "fullTitle": "UTILS: ShowYear Should return the right year based off current month",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "if (new Date().getMonth() + 1 >= 11) {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear() + 1);\n} else {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear());\n}",
      "err": {},
      "isRoot": false,
      "uuid": "100f0ef6-7ae5-416b-80a5-05b0cb829c91",
      "parentUUID": "2685467c-90e9-464f-ab87-402b794a849e",
      "skipped": false
    },
    {
      "title": "Should contain the same year as it was specified",
      "fullTitle": "UTILS: YearCalc Should contain the same year as it was specified",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getStartYearVals(2016).find(function (year) {\n    return year.value === 2016;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2017).find(function (year) {\n    return year.value === 2017;\n})).to.be.ok;",
      "err": {},
      "isRoot": false,
      "uuid": "7cacfd35-c497-4db2-8710-3fb781bec7dd",
      "parentUUID": "45ae3477-e214-4849-94cc-c77be9244aab",
      "skipped": false
    },
    {
      "title": "Should contain a year that is ten years from now",
      "fullTitle": "UTILS: YearCalc Should contain a year that is ten years from now",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getStartYearVals(2019).find(function (year) {\n    return year.value === 2029;\n})).to.be.ok;\nexpect(_YearCalc2.default.getStartYearVals(2012).find(function (year) {\n    return year.value === 2002;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2028;\n})).to.be.ok;",
      "err": {},
      "isRoot": false,
      "uuid": "2c67c9cc-4c95-4d03-ac23-8623fc095ea4",
      "parentUUID": "45ae3477-e214-4849-94cc-c77be9244aab",
      "skipped": false
    },
    {
      "title": "Should not contain any past year when computing end years",
      "fullTitle": "UTILS: YearCalc Should not contain any past year when computing end years",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2017;\n})).to.be.not.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2008;\n})).to.be.not.ok;",
      "err": {},
      "isRoot": false,
      "uuid": "e6431bfc-86c2-4bba-b655-aaa3c6bdad49",
      "parentUUID": "45ae3477-e214-4849-94cc-c77be9244aab",
      "skipped": false
    },
    {
      "title": "Should have starting years go in decreasing order from one year ahead to the minimum",
      "fullTitle": "UTILS: YearCalc Should have starting years go in decreasing order from one year ahead to the minimum",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getStartYearVals(2019).slice(0, 12)).to.deep.equal([{\n    text: \"2020\",\n    value: 2020\n}, {\n    text: \"2019\",\n    value: 2019\n}, {\n    text: \"2018\",\n    value: 2018\n}, {\n    text: \"2017\",\n    value: 2017\n}, {\n    text: \"2016\",\n    value: 2016\n}, {\n    text: \"2015\",\n    value: 2015\n}, {\n    text: \"2014\",\n    value: 2014\n}, {\n    text: \"2013\",\n    value: 2013\n}, {\n    text: \"2012\",\n    value: 2012\n}, {\n    text: \"2011\",\n    value: 2011\n}, {\n    text: \"2010\",\n    value: 2010\n}, {\n    text: \"2009\",\n    value: 2009\n}]);",
      "err": {},
      "isRoot": false,
      "uuid": "6ddd89aa-0c8a-42ad-a315-7b543a9e975e",
      "parentUUID": "45ae3477-e214-4849-94cc-c77be9244aab",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "Should create an action to increment credit points counter",
      "fullTitle": "AC: incrementCreditPoints Should create an action to increment credit points counter",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 5\n};\n(0, _expect2.default)(actions.incrementCreditPoints(5)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "25966038-8d2a-4e35-86cc-b69be3c79e8c",
      "parentUUID": "df5d7470-7141-4396-8f03-fd6ecbe723e1",
      "skipped": false
    },
    {
      "title": "Should create an action to decrement credit points counter",
      "fullTitle": "AC: decrementCreditPoints Should create an action to decrement credit points counter",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 5\n};\n(0, _expect2.default)(actions.decrementCreditPoints(5)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "7d92dab8-5143-459a-ab64-8556df7a9236",
      "parentUUID": "09b50ff7-4a7d-4cd9-9512-9fac898bbbb1",
      "skipped": false
    },
    {
      "title": "Should create an action to increment cost counter",
      "fullTitle": "AC: incrementCost Should create an action to increment cost counter",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"INCREMENT_COST\",\n    value: 5\n};\n(0, _expect2.default)(actions.incrementCost(5)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "1be2ead0-156b-4c3c-8377-8b3d7838fd8e",
      "parentUUID": "d496dc99-1d50-47fa-a3fa-a7996a0cf772",
      "skipped": false
    },
    {
      "title": "Should create an action to decrement cost counter",
      "fullTitle": "AC: decrementCosts Should create an action to decrement cost counter",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"DECREMENT_COST\",\n    value: 5\n};\n(0, _expect2.default)(actions.decrementCost(5)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "e7d54640-ec24-4174-aac4-bf42d97f67e1",
      "parentUUID": "6df5b491-4e69-4e30-a03f-b152d4d2348f",
      "skipped": false
    },
    {
      "title": "Should create an action to insert a teaching period",
      "fullTitle": "AC: insertTeachingPeriod Should create an action to insert a teaching period",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{\n    type: \"INSERT_TEACHING_PERIOD\",\n    index: 1,\n    year: 2016,\n    code: \"tpCode\"\n}, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n}];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.insertTeachingPeriod(1, 2016, \"tpCode\"));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "dd766a99-626f-41b7-a796-6b66c3ff6769",
      "parentUUID": "24e790f9-1de3-4498-ad21-363a418f01d7",
      "skipped": false
    },
    {
      "title": "Should create an action to remove a teaching period",
      "fullTitle": "AC: removeTeachingPeriod Should create an action to remove a teaching period",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1,\n    units: [\"unit1\", \"unit2\", \"unit3\", null]\n}, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n}];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.removeTeachingPeriod(1, [\"unit1\", \"unit2\", \"unit3\", null]));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "3ab6039d-d600-4c19-bc70-38b00eaf6146",
      "parentUUID": "4b2f5475-481b-420d-8785-ab52bfbc6471",
      "skipped": false
    },
    {
      "title": "Should create an action to increase the study load",
      "fullTitle": "AC: increaseStudyLoad Should create an action to increase the study load",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\n(0, _expect2.default)(actions.increaseStudyLoad()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "561ef96a-482b-41a3-bc30-f85e6327cf91",
      "parentUUID": "81b083c0-6848-425f-950c-8b44b33ce846",
      "skipped": false
    },
    {
      "title": "Should create an action to increase the study load with units affected",
      "fullTitle": "AC: decreaseStudyLoad Should create an action to increase the study load with units affected",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockTeachingPeriods = [{ year: 2018, code: \"S1-01\", units: [null, null, null, null, { unitName: \"unit1\", creditPoints: 6 }] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }, { year: 2019, code: \"S1-01\", units: [null, null, null, null, { unitName: \"unit2\", creditPoints: 6 }] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null, null] }];\nvar expectedActions = [{ type: \"PREP_FOR_DELETION\", unitCoords: [[0, 4], [2, 4]] }, { type: \"DECREASE_STUDY_LOAD\", units: [{ unitName: \"unit1\", creditPoints: 6 }, { unitName: \"unit2\", creditPoints: 6 }] }];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.decreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "df99fd9f-3bf4-4526-92ec-e7e6e5a3c8df",
      "parentUUID": "a31cf461-8f22-450e-9586-febd39d576a1",
      "skipped": false
    },
    {
      "title": "Should create an action to increase the study load with no units affected",
      "fullTitle": "AC: decreaseStudyLoad Should create an action to increase the study load with no units affected",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockTeachingPeriods = [{ year: 2018, code: \"S1-01\", units: [null, null, null, \"unit1\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }, { year: 2019, code: \"S1-01\", units: [null, null, null, \"unit2\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null, null] }];\nvar expectedActions = [{ type: \"PREP_FOR_DELETION\", unitCoords: [] }, { type: \"DECREASE_STUDY_LOAD\", units: [] }];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.decreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "3a72281d-ea34-4d57-b9d6-14a19152d359",
      "parentUUID": "a31cf461-8f22-450e-9586-febd39d576a1",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for the addition of a unit that is not a custom unit being dragged",
      "fullTitle": "AC: addUnit Should correctly create the actions required for the addition of a unit that is not a custom unit being dragged",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockUnit = {\n                customUnitDragging: false,\n                cost: 200,\n                creditPoints: 6,\n                unitCode: \"TEST1001\"\n            };\n            var expectedActions = [{ type: \"ADD_UNIT\", tpIndex: 1, unitIndex: 1, unit: mockUnit, cost: 200, creditPoints: 6 }, { type: \"CLEAR_HIGHLIGHTING_INVALID_UNIT_SLOTS\" }, { type: \"VALIDATE_COURSE\" }, { type: \"MODIFIED_COURSE_PLAN\" }];\n            var store = mockStore({});\n            store.dispatch(actions.addUnit(1, 1, mockUnit));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "fa78fe3b-d2a8-43ba-9cc5-0e22f053c93a",
      "parentUUID": "c483441d-2825-46ce-9feb-00edc7404463",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for removal of a unit",
      "fullTitle": "AC: removeUnit Should correctly create the actions required for removal of a unit",
      "timedOut": false,
      "duration": 11,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{ type: \"REMOVE_UNIT\", tpIndex: 1, unitIndex: 1, cost: 200, creditPoints: 6 }, { type: \"VALIDATE_COURSE\" }, { type: \"MODIFIED_COURSE_PLAN\" }];\n            var store = mockStore({});\n            store.dispatch(actions.removeUnit(1, 1, 6, 200));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "efa9813c-0c53-486b-80d6-6465555dc150",
      "parentUUID": "35903164-18f6-4f6e-b0ae-80e7945feba5",
      "skipped": false
    },
    {
      "title": "Should create the actions for clearing the course",
      "fullTitle": "AC: clearCourse Should create the actions for clearing the course",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{ type: \"CLEAR_COURSE\" }, { type: \"GET_NEXT_SEMESTER_STRING\" }, { type: \"VALIDATE_COURSE\" }];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.clearCourse());\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "92c218b1-0964-4a05-8755-6dbaa5c51e55",
      "parentUUID": "2b124f1b-b95c-40d5-8833-47dadec25c87",
      "skipped": false
    },
    {
      "title": "Should create the action for generating the course",
      "fullTitle": "AC: generateCourse Should create the action for generating the course",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2016,\n    endYear: 2019\n};\n(0, _expect2.default)(actions.generateCourse(2016, 2019)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "84842ffc-fd55-4824-8a42-bc83779ec40a",
      "parentUUID": "60af4c7a-a03d-4f99-a28b-d1aa5559487e",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for submission of a year form",
      "fullTitle": "AC: submitYearForm Should correctly create the actions required for submission of a year form",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{ type: \"SUBMIT_YEAR_FORM\", startYear: 2016, endYear: 2019 }, { type: \"GENERATE_COURSE\", startYear: 2016, endYear: 2019 }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\n            var store = mockStore({});\n            store.dispatch(actions.submitYearForm(2016, 2019));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "84cd70a1-dd2e-4429-92dc-3edea591a54c",
      "parentUUID": "be71fd50-b262-4760-aa88-30fb3049f932",
      "skipped": false
    },
    {
      "title": "Should correctly create actions required to change the start year",
      "fullTitle": "AC: changeStartYear Should correctly create actions required to change the start year",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{ type: \"CHANGE_START_YEAR\", year: 2020 }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\nvar store = mockStore({});\nstore.dispatch(actions.changeStartYear(2020));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "2b60d89b-f3a0-40ac-b9c7-bcde8a9c4466",
      "parentUUID": "829e6918-afe6-46a3-97fa-986082a5c9fc",
      "skipped": false
    },
    {
      "title": "Should create the action for generating the course",
      "fullTitle": "AC: getNextSemesterString Should create the action for generating the course",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n};\n(0, _expect2.default)(actions.getNextSemesterString()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "68551c55-0574-41da-8d04-4f055a5ff584",
      "parentUUID": "9da95fbe-1e4a-43a2-9932-b9f1b965e320",
      "skipped": false
    },
    {
      "title": "Should create the action for getting affected units in an overload column",
      "fullTitle": "AC: getAffectedUnitsInColumn Should create the action for getting affected units in an overload column",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"GET_AFFECTED_UNITS_IN_OVERLOAD_COLUMN\",\n    index: 4\n};\n(0, _expect2.default)(actions.getAffectedUnitsInColumn(4)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "5dd9e680-3ebb-4756-9525-fcdf8bd246a7",
      "parentUUID": "e837b136-5a3e-4819-8078-94340496158b",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for deletion of a teaching period with units affected",
      "fullTitle": "AC: attemptToDeleteTeachingPeriod Should correctly create the actions required for deletion of a teaching period with units affected",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockUnits = [{ unitCode: \"TEST101\", unitName: \"unit1\" }, null, { unitCode: \"TEST102\", unitName: \"unit2\" }, null, null];\nvar expectedActions = [{ type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\" }, { type: \"UPDATE_AFFECTED_UNITS\", affectedUnits: [\"TEST101 - unit1\", \"TEST102 - unit2\"] }, { type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\", index: 1 }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDeleteTeachingPeriod(1, mockUnits));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "0388377c-f3d2-4a9f-8986-a835c141e366",
      "parentUUID": "3495a9c5-559f-48e0-9bd2-6c496b90e833",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for deletion of a teaching period with no units affected",
      "fullTitle": "AC: attemptToDeleteTeachingPeriod Should correctly create the actions required for deletion of a teaching period with no units affected",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockUnits = [null, null, null, null, null];\nvar expectedActions = [{ type: \"REMOVE_TEACHING_PERIOD\", index: 1, units: [null, null, null, null, null] }, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, { type: \"GET_NEXT_SEMESTER_STRING\" }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDeleteTeachingPeriod(1, mockUnits));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "0342c46d-7b06-4f5f-8fff-fc266df8418f",
      "parentUUID": "3495a9c5-559f-48e0-9bd2-6c496b90e833",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for decrease of a study load with units affected",
      "fullTitle": "AC: attemptToDecreaseStudyLoad Should correctly create the actions required for decrease of a study load with units affected",
      "timedOut": false,
      "duration": 25,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockTeachingPeriods = [{ units: [null, null, { unitCode: \"TEST10A\", unitName: \"unitA\" }, null, { unitCode: \"TEST101\", unitName: \"unit1\", creditPoints: 6 }] }, { units: [null, null, { unitCode: \"TEST10B\", unitName: \"unitB\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10C\", unitName: \"unitC\" }, null, { unitCode: \"TEST102\", unitName: \"unit2\", creditPoints: 6 }] }, { units: [null, null, { unitCode: \"TEST10D\", unitName: \"unitD\" }, null, null] }];\nvar expectedActions = [{ type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\" }, { type: \"UPDATE_AFFECTED_UNITS\", affectedUnits: [\"TEST101 - unit1\", \"TEST102 - unit2\"] }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDecreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "f8c36d85-e675-4fa8-bf26-3a8a5e42a2cb",
      "parentUUID": "0588407f-7644-4680-b207-cf33205e118d",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for decrease of a study load with no units affected",
      "fullTitle": "AC: attemptToDecreaseStudyLoad Should correctly create the actions required for decrease of a study load with no units affected",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockTeachingPeriods = [{ units: [null, null, { unitCode: \"TEST10A\", unitName: \"unitA\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10B\", unitName: \"unitB\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10C\", unitName: \"unitC\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10D\", unitName: \"unitD\" }, null, null] }];\nvar expectedActions = [{ type: \"PREP_FOR_DELETION\", unitCoords: [] }, { type: \"DECREASE_STUDY_LOAD\", units: [] }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDecreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "479da44c-71bd-4fc5-aec3-e00c2aaf21f8",
      "parentUUID": "0588407f-7644-4680-b207-cf33205e118d",
      "skipped": false
    },
    {
      "title": "Should create the action for getting affected units in an teaching period row",
      "fullTitle": "AC: getAffectedUnitsInRow Should create the action for getting affected units in an teaching period row",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"GET_AFFECTED_UNITS_IN_TEACHING_PERIOD_ROW\",\n    index: 4\n};\n(0, _expect2.default)(actions.getAffectedUnitsInRow(4)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "29c6d808-bc3a-4e92-9607-00e0e4583fb2",
      "parentUUID": "61ed7d2e-791d-4c75-9e10-b75b6228db31",
      "skipped": false
    },
    {
      "title": "Should create the action for validating the course",
      "fullTitle": "AC: validateCourse Should create the action for validating the course",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"VALIDATE_COURSE\"\n};\n(0, _expect2.default)(actions.validateCourse()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "b3afbe73-ceec-4633-ab8f-fad10b880a86",
      "parentUUID": "f7393ff4-90bb-4cab-9b49-f40d745ed058",
      "skipped": false
    },
    {
      "title": "Should create the action for highlighting the invalid unit slots",
      "fullTitle": "AC: highlightInvalidUnitSlots Should create the action for highlighting the invalid unit slots",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: \"UnitTest\",\n    ignoreCoordinate: false\n};\n(0, _expect2.default)(actions.highlightInvalidUnitSlots(\"UnitTest\", false)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "6fccaa57-fda4-4e86-8354-ec16225410a0",
      "parentUUID": "7d3262b5-b55d-473c-ac2e-397852142c81",
      "skipped": false
    },
    {
      "title": "Should create the action for clearing the highlighting for invalid unit slots",
      "fullTitle": "AC: clearHighlightingInvalidUnitSlots Should create the action for clearing the highlighting for invalid unit slots",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"CLEAR_HIGHLIGHTING_INVALID_UNIT_SLOTS\"\n};\n(0, _expect2.default)(actions.clearHighlightingInvalidUnitSlots()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "c772c39f-ba88-4b74-97cc-5d746c3d70f9",
      "parentUUID": "caee6b36-4905-4790-b4d8-93c1b51b7f94",
      "skipped": false
    },
    {
      "title": "Should create an action to show the insert teaching period UI",
      "fullTitle": "AC: showInsertTeachingPeriodUI Should create an action to show the insert teaching period UI",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"testTPCode\"\n};\n(0, _expect2.default)(actions.showInsertTeachingPeriodUI(\"testTPCode\")).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "92bd614e-5d23-450f-b9fc-632c3cf67e69",
      "parentUUID": "a5661734-3c34-47a6-a7b5-d5f3c4992364",
      "skipped": false
    },
    {
      "title": "Should create an action to hide the insert teaching period UI",
      "fullTitle": "AC: hideInsertTeachingPeriodUI Should create an action to hide the insert teaching period UI",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\n(0, _expect2.default)(actions.hideInsertTeachingPeriodUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "e02ab0b7-1455-4d15-a3a2-1c167fabf341",
      "parentUUID": "fa1252a0-f537-40db-887f-a831cdb56115",
      "skipped": false
    },
    {
      "title": "Should create an action to show the add unit UI",
      "fullTitle": "AC: showAddingUnitUI Should create an action to show the add unit UI",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_ADD_UNIT_UI\"\n};\n(0, _expect2.default)(actions.showAddingUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "63400c56-3bd0-4261-8c41-42d591b0a2f5",
      "parentUUID": "df481485-c6f0-4b7b-805c-38c49bca848c",
      "skipped": false
    },
    {
      "title": "Should create an action to hide the add unit UI",
      "fullTitle": "AC: hideAddingUnitUI Should create an action to hide the add unit UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_ADD_UNIT_UI\"\n};\n(0, _expect2.default)(actions.hideAddingUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "e6fb0fce-aa35-42dc-802a-3e2b7a136e45",
      "parentUUID": "0e4783ef-237f-4439-ac49-7cc4648854ec",
      "skipped": false
    },
    {
      "title": "Should create an action to show the move unit UI",
      "fullTitle": "AC: showMoveUnitUI Should create an action to show the move unit UI",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_MOVE_UNIT_UI\"\n};\n(0, _expect2.default)(actions.showMoveUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "28491137-954d-4a80-ae5f-41ffe78da068",
      "parentUUID": "b2e71052-8f0d-4bdc-a103-fd5abbba5274",
      "skipped": false
    },
    {
      "title": "Should create an action to hide move unit UI",
      "fullTitle": "AC: hideMoveUnitUI Should create an action to hide move unit UI",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_MOVE_UNIT_UI\"\n};\n(0, _expect2.default)(actions.hideMoveUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "a73d37b1-cc3c-4cc6-ac16-72d446a6e837",
      "parentUUID": "4ff7c37f-ab6b-49ca-94f8-d5c7311cf8ce",
      "skipped": false
    },
    {
      "title": "Should create an action to show confirm delete teaching period UI",
      "fullTitle": "AC: showConfirmDeleteTeachingPeriodUI Should create an action to show confirm delete teaching period UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\n(0, _expect2.default)(actions.showConfirmDeleteTeachingPeriodUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "f933b6f1-0dc1-4929-95d5-7ac64b23e7ad",
      "parentUUID": "69870a77-4940-46fe-b654-c90993a7e91d",
      "skipped": false
    },
    {
      "title": "Should create an action to hide confirm delete teaching period UI",
      "fullTitle": "AC: hideConfirmDeleteTeachingPeriodUI Should create an action to hide confirm delete teaching period UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\n(0, _expect2.default)(actions.hideConfirmDeleteTeachingPeriodUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "f02966e1-4673-4e8e-b4d6-26e022527e45",
      "parentUUID": "150cb608-a4d7-4eb8-b412-4ed959ca4b48",
      "skipped": false
    },
    {
      "title": "Should create an action to show confirm decrease study load UI",
      "fullTitle": "AC: showConfirmDecreaseStudyLoadUI Should create an action to show confirm decrease study load UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\n(0, _expect2.default)(actions.showConfirmDecreaseStudyLoadUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "8d2dcae8-0bae-4872-8d11-e3c697d0a212",
      "parentUUID": "59d8ba5c-4054-44e4-8c1b-a72916e8ca15",
      "skipped": false
    },
    {
      "title": "Should create an action to hide confirm decrease study load UI",
      "fullTitle": "AC: hideConfirmDecreaseStudyLoadUI Should create an action to hide confirm decrease study load UI",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\n(0, _expect2.default)(actions.hideConfirmDecreaseStudyLoadUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "9df1efe4-fa5e-43dc-94f8-f47c224c52ef",
      "parentUUID": "889e77fe-a871-4751-84f8-a28b98463994",
      "skipped": false
    },
    {
      "title": "Should create an action to show custum unit UI",
      "fullTitle": "AC: showCustomUnitUI Should create an action to show custum unit UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"TEST1001\"\n};\n(0, _expect2.default)(actions.showCustomUnitUI(\"TEST1001\")).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "01c2542c-37c1-472f-a40d-61cbb810bdac",
      "parentUUID": "b0e17e51-7380-4d64-8991-8f14edd413c6",
      "skipped": false
    },
    {
      "title": "Should create an action to hide custom unit UI",
      "fullTitle": "AC: hideCustomUnitUI Should create an action to hide custom unit UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\n(0, _expect2.default)(actions.hideCustomUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "c87e79bf-82ac-4725-adc3-f91ab3990f79",
      "parentUUID": "c7b7f634-0eeb-4ea6-bfd6-c4ae34a59bcc",
      "skipped": false
    },
    {
      "title": "Should create an action to show sidebar",
      "fullTitle": "AC: showSidebar Should create an action to show sidebar",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_SIDEBAR\"\n};\n(0, _expect2.default)(actions.showSidebar()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "d9cb2d6a-6b64-4c5c-8195-58d71afaba7a",
      "parentUUID": "0ad70d18-e979-4c6a-8aee-1c5f4765610e",
      "skipped": false
    },
    {
      "title": "Should create an action to hide sidebar",
      "fullTitle": "AC: hideSidebar Should create an action to hide sidebar",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_SIDEBAR\"\n};\n(0, _expect2.default)(actions.hideSidebar()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "872f6506-190e-4aff-9022-97dec613cc7e",
      "parentUUID": "e7fd9fc6-9e76-468e-8bcf-8d068ead76c0",
      "skipped": false
    },
    {
      "title": "Should create an action to set the course to read only",
      "fullTitle": "AC: setCourseReadOnly Should create an action to set the course to read only",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\n(0, _expect2.default)(actions.setCourseReadOnly()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "1caf947d-c41d-4ded-ae92-dacf2a233d41",
      "parentUUID": "854b0be6-4e6a-4611-b7e5-567d59c0110d",
      "skipped": false
    },
    {
      "title": "Should create an action to set the course to read and write",
      "fullTitle": "AC: setCourseReadAndWrite Should create an action to set the course to read and write",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\n(0, _expect2.default)(actions.setCourseReadAndWrite()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "fb0a5aed-4e89-4f65-8442-b7268a2ecf9a",
      "parentUUID": "d5d78a5c-0ee5-45ca-92ce-9880838858bb",
      "skipped": false
    },
    {
      "title": "Should render a notification title and a message",
      "fullTitle": "COMPONENT: Notification Should render a notification title and a message",
      "timedOut": false,
      "duration": 70,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, {\n    title: \"This is a test\",\n    message: \"Some message goes over here\"\n}));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(\"This is a test\");\nexpect(wrapper.text().replace(\"This is a test\", \"\").trim()).to.equal(\"Some message goes over here\");",
      "err": {},
      "isRoot": false,
      "uuid": "bcdde386-8d4b-4275-a1f6-c6a25076cc62",
      "parentUUID": "27b10d69-82fd-4bd7-ad24-894ff2a53be2",
      "skipped": false
    },
    {
      "title": "Should have a default level to be info if it is not specified",
      "fullTitle": "COMPONENT: Notification Should have a default level to be info if it is not specified",
      "timedOut": false,
      "duration": 16,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, null)).find(\".info.message\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "8f01d467-3187-43b2-853d-d1a332472d21",
      "parentUUID": "27b10d69-82fd-4bd7-ad24-894ff2a53be2",
      "skipped": false
    },
    {
      "title": "Should follow a specified level",
      "fullTitle": "COMPONENT: Notification Should follow a specified level",
      "timedOut": false,
      "duration": 63,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"info\" })).find(\".info.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"warning\" })).find(\".warning.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"error\" })).find(\".negative.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"success\" })).find(\".positive.message\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "708768f0-f6ba-472d-b2d2-8726cdbd58b9",
      "parentUUID": "27b10d69-82fd-4bd7-ad24-894ff2a53be2",
      "skipped": false
    },
    {
      "title": "should be called exactly once when main button has been clicked",
      "fullTitle": "#addSemester() should be called exactly once when main button has been clicked",
      "timedOut": false,
      "duration": 53,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var addSemester = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: identity,\n    addSemester: addSemester }));\nwrapper.find(\"Button\").forEach(function (button) {\n    button.simulate(\"click\");\n});\nexpect(addSemester).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "5a6e6d54-3ad2-4105-830b-f7c31e006123",
      "parentUUID": "727c40dd-e26f-41aa-9c60-5b980c42121d",
      "skipped": false
    },
    {
      "title": "should be called as many times as the number of insert teaching periods options upon click",
      "fullTitle": "#insert() should be called as many times as the number of insert teaching periods options upon click",
      "timedOut": false,
      "duration": 41,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var insert = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: insert,\n    addSemester: identity }));\nvar dropdownItems = wrapper.find(\".item\");\ndropdownItems.forEach(function (node) {\n    return node.simulate(\"click\");\n});\nexpect(insert).to.have.callCount(dropdownItems.length);",
      "err": {},
      "isRoot": false,
      "uuid": "ee96f284-9c94-466a-99f7-ecf6ac7432f1",
      "parentUUID": "12f040b8-a400-4c2a-ab72-4e19e6b8b59b",
      "skipped": false
    },
    {
      "title": "should render two ratings",
      "fullTitle": "COMPONENT: SetuRating should render two ratings",
      "timedOut": false,
      "duration": 74,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, null)).find(\".rating\")).to.have.length(2);",
      "err": {},
      "isRoot": false,
      "uuid": "cc1ff08e-a438-4f09-b047-7f931fbb4ac6",
      "parentUUID": "acbef847-4481-46cf-8674-9754a0863fdc",
      "skipped": false
    },
    {
      "title": "should render a book if learning ratings is >=2.5",
      "fullTitle": "COMPONENT: SetuRating should render a book if learning ratings is >=2.5",
      "timedOut": false,
      "duration": 97,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 4.13 })).find(\".book\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.50 })).find(\".book\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "4ec1159f-5eb2-47d6-b714-059b5b053e24",
      "parentUUID": "acbef847-4481-46cf-8674-9754a0863fdc",
      "skipped": false
    },
    {
      "title": "should render a remove circle if learning ratings is <2.5",
      "fullTitle": "COMPONENT: SetuRating should render a remove circle if learning ratings is <2.5",
      "timedOut": false,
      "duration": 71,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 1.51 })).find(\".remove.circle\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.49 })).find(\".remove.circle\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "97ecd34b-4828-4237-9a46-77f4f4510ca6",
      "parentUUID": "acbef847-4481-46cf-8674-9754a0863fdc",
      "skipped": false
    },
    {
      "title": "should render a thumbs up if enjoyment ratings is >=2.5",
      "fullTitle": "COMPONENT: SetuRating should render a thumbs up if enjoyment ratings is >=2.5",
      "timedOut": false,
      "duration": 76,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 4.13 })).find(\".thumbs.up\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.50 })).find(\".thumbs.up\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "6047f8f3-297d-456d-a039-4a064dc6d8d3",
      "parentUUID": "acbef847-4481-46cf-8674-9754a0863fdc",
      "skipped": false
    },
    {
      "title": "should render a thumbs down if enjoyment ratings is <2.5",
      "fullTitle": "COMPONENT: SetuRating should render a thumbs down if enjoyment ratings is <2.5",
      "timedOut": false,
      "duration": 57,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 1.51 })).find(\".thumbs.down\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.49 })).find(\".thumbs.down\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "1d5876cb-4ebd-487e-b9c5-6774cab57574",
      "parentUUID": "acbef847-4481-46cf-8674-9754a0863fdc",
      "skipped": false
    },
    {
      "title": "should only render a unit code and a unit name",
      "fullTitle": "#presentational should only render a unit code and a unit name",
      "timedOut": false,
      "duration": 55,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var unitCode = \"ABC1234\";\nvar unitName = \"Example unit\";\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: unitCode,\n    name: unitName }));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(unitCode);\nexpect(wrapper.find(\".message\").text().replace(unitCode, \"\").trim()).to.equal(unitName);",
      "err": {},
      "isRoot": false,
      "uuid": "bd0ac374-d655-4fbb-8102-b2a76e62f1a1",
      "parentUUID": "3e5ab659-3c76-4a1a-802f-f021f36aea78",
      "skipped": false
    },
    {
      "title": "should render a close button only when mouse is over the unit",
      "fullTitle": "#presentational should render a close button only when mouse is over the unit",
      "timedOut": false,
      "duration": 79,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    hovering: false }));\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");\nwrapper.setProps({\n    hovering: true\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"visible\");\nwrapper.setProps({\n    hovering: false\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");",
      "err": {},
      "isRoot": false,
      "uuid": "99d93f0c-8f02-4185-aac9-d2be37a1e1c4",
      "parentUUID": "3e5ab659-3c76-4a1a-802f-f021f36aea78",
      "skipped": false
    },
    {
      "title": "Should call willAddUnit if unit is a newUnit and it has been clicked",
      "fullTitle": "#events Should call willAddUnit if unit is a newUnit and it has been clicked",
      "timedOut": false,
      "duration": 79,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    newUnit: true,\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    willAddUnit: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"click\");\nexpect(eventFunc).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "5875d99d-4a14-4fd8-ad0c-61c80bea04e6",
      "parentUUID": "447acc74-18f6-49b0-85b9-eb1f2b0c2edc",
      "skipped": false
    },
    {
      "title": "Should call handleUnitMouseOver when mouse is over the unit",
      "fullTitle": "#events Should call handleUnitMouseOver when mouse is over the unit",
      "timedOut": false,
      "duration": 24,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseOver: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseOver\");\nexpect(eventFunc).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "a0337fc0-1012-4987-98eb-f0c40f5617dc",
      "parentUUID": "447acc74-18f6-49b0-85b9-eb1f2b0c2edc",
      "skipped": false
    },
    {
      "title": "Should call handleUnitMouseMove when mouse moves over the unit",
      "fullTitle": "#events Should call handleUnitMouseMove when mouse moves over the unit",
      "timedOut": false,
      "duration": 24,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseMove: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseMove\");\nexpect(eventFunc).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "403dd4a9-92b6-4741-b60f-f207a2616861",
      "parentUUID": "447acc74-18f6-49b0-85b9-eb1f2b0c2edc",
      "skipped": false
    },
    {
      "title": "Should call handleUnitMouseOut when mouse is over the unit",
      "fullTitle": "#events Should call handleUnitMouseOut when mouse is over the unit",
      "timedOut": false,
      "duration": 37,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseOut: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseOut\");\nexpect(eventFunc).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "3253d103-5ab3-4585-afaf-1b536869c61b",
      "parentUUID": "447acc74-18f6-49b0-85b9-eb1f2b0c2edc",
      "skipped": false
    },
    {
      "title": "Should correctly call movingUnit when it is being dragged",
      "fullTitle": "#DnD Should correctly call movingUnit when it is being dragged",
      "timedOut": false,
      "duration": 14,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "testingBeginDrag = true;\ntestingEndDrag = false;\nbackend.simulateBeginDrag([sourceId]);\nexpect(movingUnitSpy).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "fd438d5e-4f00-422a-bee1-a4cfe2b563df",
      "parentUUID": "635b0e9e-a23e-4a15-aad6-fb79fbb7e7d5",
      "skipped": false
    },
    {
      "title": "Should correctylc call cancelMovingUnit ",
      "fullTitle": "#DnD Should correctylc call cancelMovingUnit ",
      "timedOut": false,
      "duration": 21,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "testingBeginDrag = false;\ntestingEndDrag = true;\nbackend.simulateBeginDrag([sourceId]);\nbackend.simulateEndDrag(sourceId);\nexpect(cancelMovingUnitSpy).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "ded15184-32f6-4c35-abea-0648caee6154",
      "parentUUID": "635b0e9e-a23e-4a15-aad6-fb79fbb7e7d5",
      "skipped": false
    },
    {
      "title": "Should increment the credit point state by a given value",
      "fullTitle": "ACTION: INCREMENT_CREDIT_POINTS Should increment the credit point state by a given value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 2, creditPoints: 0 };\nvar action = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 2,\n    creditPoints: 1\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "75933e67-ffd6-4a8e-94f8-222c8ac57951",
      "parentUUID": "b165b342-1562-484a-91f5-2465cb37f9e4",
      "skipped": false
    },
    {
      "title": "Should decrement the credit point state by a given value",
      "fullTitle": "ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state by a given value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f356e781-66a1-4ee1-a9f9-4aa46fa68b5b",
      "parentUUID": "3aca5da4-a2bd-4402-bddf-8bebcb56a227",
      "skipped": false
    },
    {
      "title": "Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
      "fullTitle": "ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 0\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "fea554f8-2595-4436-b08e-0fed3fd00a2c",
      "parentUUID": "3aca5da4-a2bd-4402-bddf-8bebcb56a227",
      "skipped": false
    },
    {
      "title": "Should increment the cost state by a given value",
      "fullTitle": "ACTION: INCREMENT_COST Should increment the cost state by a given value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 20, creditPoints: 13 };\nvar action = {\n    type: \"INCREMENT_COST\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 21,\n    creditPoints: 13\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "aa3851ed-cf6b-4676-84c1-61c6a490573c",
      "parentUUID": "78406e44-e31c-44e4-b238-169e2e93c44d",
      "skipped": false
    },
    {
      "title": "Should decrement the cost state by a given value",
      "fullTitle": "ACTION: DECREMENT_COST Should decrement the cost state by a given value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "fc69cf6b-c140-4af9-bbeb-5d3564bf5992",
      "parentUUID": "73f57a6f-6155-477d-bb9a-79c4c621365e",
      "skipped": false
    },
    {
      "title": "Should decrement the cost state to 0 if a value given is larger than the current credit point value",
      "fullTitle": "ACTION: DECREMENT_COST Should decrement the cost state to 0 if a value given is larger than the current credit point value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 0,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "adfc5eee-c8ae-4eee-b329-8b8ae43bcc5a",
      "parentUUID": "73f57a6f-6155-477d-bb9a-79c4c621365e",
      "skipped": false
    },
    {
      "title": "Should reset the cost and credit point counters to 0",
      "fullTitle": "ACTION: CLEAR_COURSE Should reset the cost and credit point counters to 0",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "15a40e2d-a9b4-402f-8faf-c762287d13fc",
      "parentUUID": "83716695-5d51-4953-95b1-8db70af682b9",
      "skipped": false
    },
    {
      "title": "Should correctly go through and decrement the counters for each value ",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should correctly go through and decrement the counters for each value ",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { cost: 2, creditPoints: 20 }, { cost: 5, creditPoints: 10 }, null]\n};\nvar stateAfter = { cost: 43, creditPoints: 10 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "278cb215-ad94-47ee-81b2-6d2d6e51ba73",
      "parentUUID": "1a2588e2-3dac-48d8-a631-26c5d49a2f71",
      "skipped": false
    },
    {
      "title": "Should not decrement the counters below 0 ",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should not decrement the counters below 0 ",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { cost: 25, creditPoints: 20 }, { cost: 30, creditPoints: 30 }, { cost: 0, creditPoints: 10 }]\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "570542b7-d7a8-456d-8d76-c66f12a33b0e",
      "parentUUID": "1a2588e2-3dac-48d8-a631-26c5d49a2f71",
      "skipped": false
    },
    {
      "title": "Should correctly decrement the counters based on the given units creditpoints and cost",
      "fullTitle": "ACTION: REMOVE_UNIT Should correctly decrement the counters based on the given units creditpoints and cost",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 20 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "67121774-ebde-4e66-b864-fa7faa7767ed",
      "parentUUID": "e5890c56-7847-4796-b256-d6a96b36c81d",
      "skipped": false
    },
    {
      "title": "Should not decrement the counters below 0",
      "fullTitle": "ACTION: REMOVE_UNIT Should not decrement the counters below 0",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "241eeee1-7a48-4d91-8662-0beb91358c91",
      "parentUUID": "e5890c56-7847-4796-b256-d6a96b36c81d",
      "skipped": false
    },
    {
      "title": "Should correctly increment the counters when a unit is added to the plan",
      "fullTitle": "ACTION: ADD_UNIT Should correctly increment the counters when a unit is added to the plan",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"ADD_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 30 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ed4ea79e-9c68-493e-b064-5356ce18e4fe",
      "parentUUID": "7166f4e8-3f00-488b-8b4e-6d7faba63466",
      "skipped": false
    },
    {
      "title": "Should not decrease counters if there are no units in the overload column",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units in the overload column",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: []\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "9cb19402-0904-4785-a8c8-a72f6f4d1819",
      "parentUUID": "18a375aa-af0b-4dc8-a3b3-16a9949fe05d",
      "skipped": false
    },
    {
      "title": "Should not decrease counters if there are no units which have values in the overload column",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units which have values in the overload column",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [null, {}]\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "b592d939-a35c-474f-85b6-798ac0310b9d",
      "parentUUID": "18a375aa-af0b-4dc8-a3b3-16a9949fe05d",
      "skipped": false
    },
    {
      "title": "Should decrease counters correctly for units in the overload column",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should decrease counters correctly for units in the overload column",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [{\n        CreditPoints: 6,\n        Cost: 1134\n    }, {\n        CreditPoints: 12,\n        Cost: 2256\n    }]\n};\nvar stateAfter = { cost: 36610, creditPoints: 126 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b15b4e3e-824e-481a-b14d-cc1f5b9bccea",
      "parentUUID": "18a375aa-af0b-4dc8-a3b3-16a9949fe05d",
      "skipped": false
    },
    {
      "title": "Should not change state if it does not recognise an action",
      "fullTitle": "DEFAULT Should not change state if it does not recognise an action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "c97eea00-4f13-4345-9f1e-2929533977bc",
      "parentUUID": "34b40d7c-8de4-4ea2-9460-6fb313719ba0",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_COURSES_PENDING Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: false,\n    courseSearchError: true //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: true,\n    courseSearchError: false\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4ca8492b-2672-41c4-b5e0-ae742c51aeb6",
      "parentUUID": "96255582-0fe8-4adb-be2b-420e943c3857",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_COURSES_FULFILLED Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: true,\n    courseSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_FULFILLED\",\n    payload: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    courseSearchIsLoading: false,\n    courseSearchError: false\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "aa0e7a18-8c93-457c-9a4f-331d054f2cff",
      "parentUUID": "09514144-d388-45dd-8871-3fd3bdc7d44c",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_COURSES_REJECTED Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    courseSearchIsLoading: true,\n    courseSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: false,\n    courseSearchError: true\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a4a44094-a634-43ba-ba6b-5471f4c59bd5",
      "parentUUID": "7ff288b0-2eb0-4431-ac14-5a0979fa8385",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_AOS_PENDING Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: false,\n    aosSearchError: true //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: true,\n    aosSearchError: false\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1d4b27d1-da62-4d67-af27-b4e68191397a",
      "parentUUID": "0c306942-0069-4d6d-91cc-4c6a3f29c056",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_AOS_FULFILLED Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: true,\n    aosSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_FULFILLED\",\n    payload: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    aosSearchIsLoading: false,\n    aosSearchError: false\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4d4f4817-b55c-44c3-9215-e519e17b9707",
      "parentUUID": "bbafa259-1b6c-40d8-989f-8f2a1caec50b",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_AOS_REJECTED Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    aosSearchIsLoading: true,\n    aosSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: false,\n    aosSearchError: true\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "66fd5573-a1b5-4944-8eeb-093d420f3f4c",
      "parentUUID": "c5fb9f02-9673-4a6c-9c54-487a80fe4fee",
      "skipped": false
    },
    {
      "title": "Should handle the initiation of a course snapshot upload correctly",
      "fullTitle": "ACTION: UPLOAD_COURSE_SNAPSHOT_PENDING Should handle the initiation of a course snapshot upload correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: true\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f23a3a80-247d-4f29-af17-433a9db18956",
      "parentUUID": "b5c4a4fc-f531-4da4-ba10-a17924c37ace",
      "skipped": false
    },
    {
      "title": "Should handle the successful upload of a course snapshot correctly",
      "fullTitle": "ACTION: UPLOAD_COURSE_SNAPSHOT_FULFILLED Should handle the successful upload of a course snapshot correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"upload string\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: \"upload string\",\n    courseSnapshotUploadSucessful: true\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "592e2188-7db4-4066-ab83-e9d755d14bc7",
      "parentUUID": "04e130eb-48e0-4ebb-8447-a08b6a8c5a26",
      "skipped": false
    },
    {
      "title": "Should do handle the rejected upload of a course snapshot correctly",
      "fullTitle": "ACTION: UPLOAD_COURSE_SNAPSHOT_REJECTED Should do handle the rejected upload of a course snapshot correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "6b5d19e1-f175-4838-a66c-9d7109d95136",
      "parentUUID": "418a9e82-6ef7-4634-a669-221084d4069b",
      "skipped": false
    },
    {
      "title": "Should begin fetching a course snapshot correctly",
      "fullTitle": "ACTION: FETCH_COURSE_SNAPSHOT_PENDING Should begin fetching a course snapshot correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "6bd93c17-995e-469a-816f-2ab254a19280",
      "parentUUID": "cdd4668f-9ae4-4410-97ee-d5bfc81772f9",
      "skipped": false
    },
    {
      "title": "Should handle a successful course snapshot fetch correctly",
      "fullTitle": "ACTION: FETCH_COURSE_SNAPSHOT_FULFILLED Should handle a successful course snapshot fetch correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"Snap data\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: \"Snap data\"\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "99f14fc7-33c2-4b6e-b829-619984090058",
      "parentUUID": "ef21f5f4-1896-43ea-b632-4e64016f7e15",
      "skipped": false
    },
    {
      "title": "Should handle a rejected course snapshot fetch correctly",
      "fullTitle": "ACTION: FETCH_COURSE_SNAPSHOT_REJECTED Should handle a rejected course snapshot fetch correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d7feb20e-f291-406c-94fd-4b23602fb3c7",
      "parentUUID": "a385eacf-6906-4ebe-8447-9f77d64b2fa1",
      "skipped": false
    },
    {
      "title": "Should insert a teaching period with the given info correctly into middle of array",
      "fullTitle": "ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into middle of array",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2018,\n    code: \"S2-01\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a95bb8ac-8d81-4ba4-b237-e08671285aef",
      "parentUUID": "b5dbb05b-6633-4c24-abf8-6d6d8fe6f47e",
      "skipped": false
    },
    {
      "title": "Should insert a teaching period with the given info correctly into start of array",
      "fullTitle": "ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into start of array",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2016,\n    code: \"S2-01\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2016, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ecf6c2a6-42f6-4436-a6c3-05b06b929d08",
      "parentUUID": "b5dbb05b-6633-4c24-abf8-6d6d8fe6f47e",
      "skipped": false
    },
    {
      "title": "Should remove a teaching period at the given index",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the given index",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "108aff36-c555-45ec-b04d-107a51b18850",
      "parentUUID": "2acf978c-c495-4683-aa73-90c119289daf",
      "skipped": false
    },
    {
      "title": "Should remove a teaching period at the start of the array",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the start of the array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "10f20d84-5399-47e8-b836-7e33d2be815f",
      "parentUUID": "2acf978c-c495-4683-aa73-90c119289daf",
      "skipped": false
    },
    {
      "title": "Should add the given teaching period to the end of the array",
      "fullTitle": "ACTION: APPEND_TEACHING_PERIOD Should add the given teaching period to the end of the array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"APPEND_TEACHING_PERIOD\",\n    year: 2020,\n    code: \"S2-01\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2020, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "70dd9b75-c42a-4ea7-882c-82c62c2aacf1",
      "parentUUID": "dd4540c0-703c-4201-a123-2030bdc6b49d",
      "skipped": false
    },
    {
      "title": "Should increase the study load if the study load is less than 4",
      "fullTitle": "ACTION: INCREASE_STUDY_LOAD Should increase the study load if the study load is less than 4",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "fd152f61-95af-4e24-8473-6a6006118861",
      "parentUUID": "b317ee52-fbc8-4adc-be45-4b371d799038",
      "skipped": false
    },
    {
      "title": "Should decrease the study load if the study load is greater than 4",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should decrease the study load if the study load is greater than 4",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "3e839bfd-4de7-4cb8-9794-122ef886cdb1",
      "parentUUID": "18ebe592-f95e-45c6-a9c2-1dfe6ed26c31",
      "skipped": false
    },
    {
      "title": "Should not decrease the study load if the study load is 4 or less",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should not decrease the study load if the study load is 4 or less",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0b00fe95-0ed2-4520-bdce-48f7d004dffe",
      "parentUUID": "18ebe592-f95e-45c6-a9c2-1dfe6ed26c31",
      "skipped": false
    },
    {
      "title": "Should remove all teaching periods and set the amount of units to 4",
      "fullTitle": "ACTION: CLEAR_COURSE Should remove all teaching periods and set the amount of units to 4",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5,\n    courseInfoLoadError: false,\n    courseInfoLoading: false\n};\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = {\n    courseInfoLoadError: false,\n    courseInfoLoading: false,\n    courseInfo: {\n        courseName: \"\",\n        faculty: \"\",\n        creditPoints: 0,\n        courseDescription: \"\",\n        durationStr: \"\",\n        modeAndLocation: \"\",\n        awards: \"\",\n        abrTitle: \"\"\n    },\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "93e31c7d-59a3-4fc2-accd-57aa34e9e3d2",
      "parentUUID": "be915337-8e3d-4f33-baae-8e5629ec3575",
      "skipped": false
    },
    {
      "title": "Should add a unit correctly to the start of an array",
      "fullTitle": "ACTION: ADD_UNIT Should add a unit correctly to the start of an array",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", totalCreditpoints: 6, units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }, null, null, null] }, { year: 2018, code: \"S2-01\", totalCreditpoints: 0, units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", totalCreditpoints: 0, units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e3694853-ffb7-4797-9714-2f4a15ec6a9f",
      "parentUUID": "b868c311-5305-454d-8ac5-df7ec58fa9d8",
      "skipped": false
    },
    {
      "title": "Should add a unit correctly to the middle of an array",
      "fullTitle": "ACTION: ADD_UNIT Should add a unit correctly to the middle of an array",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "2ce8f198-cb20-49ed-833d-eed2ea071ac4",
      "parentUUID": "b868c311-5305-454d-8ac5-df7ec58fa9d8",
      "skipped": false
    },
    {
      "title": "Should add a unit correctly to the end of an array",
      "fullTitle": "ACTION: ADD_UNIT Should add a unit correctly to the end of an array",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d8d95837-afe9-4eee-9c16-c99399240b12",
      "parentUUID": "b868c311-5305-454d-8ac5-df7ec58fa9d8",
      "skipped": false
    },
    {
      "title": "Should remove a unit correctly frpm the start of an array",
      "fullTitle": "ACTION: REMOVE_UNIT Should remove a unit correctly frpm the start of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0,\n    creditPoints: 6\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "09869e99-5e0a-4111-8225-abb1983d751c",
      "parentUUID": "2c6a07b2-a39f-4695-9357-3dd927102694",
      "skipped": false
    },
    {
      "title": "Should remove a unit correctly from the middle of an array",
      "fullTitle": "ACTION: REMOVE_UNIT Should remove a unit correctly from the middle of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1,\n    creditPoints: 6\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "18c90372-66ee-48dc-9a2c-b21011ed4da0",
      "parentUUID": "2c6a07b2-a39f-4695-9357-3dd927102694",
      "skipped": false
    },
    {
      "title": "Should remove a unit correctly from the end of an array",
      "fullTitle": "ACTION: REMOVE_UNIT Should remove a unit correctly from the end of an array",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3,\n    creditPoints: 6\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "566758cd-a4ec-424b-99f5-bc8877258103",
      "parentUUID": "2c6a07b2-a39f-4695-9357-3dd927102694",
      "skipped": false
    },
    {
      "title": "Should generate a course structure with valid start and end years",
      "fullTitle": "ACTION: GENERATE_COURSE Should generate a course structure with valid start and end years",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2014,\n    endYear: 2016\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f67c969e-7cea-4c70-8f06-7c1321bc85a3",
      "parentUUID": "3d4fdb44-89c4-4a8c-9ce8-74822967749f",
      "skipped": false
    },
    {
      "title": "Should return an empty course structure with invalid start and end years.",
      "fullTitle": "ACTION: GENERATE_COURSE Should return an empty course structure with invalid start and end years.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2017,\n    endYear: 2013\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7eaa5ca8-adb9-4ee1-a4b4-0afbeab4ddaf",
      "parentUUID": "3d4fdb44-89c4-4a8c-9ce8-74822967749f",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course info is loading",
      "fullTitle": "ACTION: FETCH_COURSE_INFO_PENDING Should correctly show that the course info is loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1195b71f-429f-466a-9367-041615105bfc",
      "parentUUID": "e2e5567f-9073-44ec-bb6f-f70804b7efa7",
      "skipped": false
    },
    {
      "title": "Should correctly return the payload and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    focusedCourse: null,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_FULFILLED\",\n    payload: { data: {\n            \"propertyMap\": {\n                courseCode: \"Test Code\",\n                courseName: \"Test Course\",\n                mangFac: \"Test Faculty\",\n                creditPoints: 100,\n                courseDescrip: {\n                    \"value\": \"Test Description\"\n                },\n                courseDuration: \"Test Duration\",\n                modeLoc: {\n                    \"value\": \"Test mode and location\"\n                },\n                courseAward: \"Test awards\",\n                abrevTitle: \"Test abreviated title\"\n            }\n        } },\n    courseCode: \"COURSE101\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: {\n        courseCode: \"Test Code\",\n        courseName: \"Test Course\",\n        faculty: \"Test Faculty\",\n        creditPoints: 100,\n        courseDescription: \"Test Description\",\n        durationStr: \"Test Duration\",\n        modeAndLocation: \"Test mode and location\",\n        awards: \"Test awards\",\n        abrTitle: \"Test abreviated title\"\n    },\n    focusedCourse: \"COURSE101\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0524386d-cfde-4901-bbb5-863b7d4b2f63",
      "parentUUID": "184ab2fd-ae04-4bda-aaad-e1cff0141c50",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course info fetch failed and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_INFO_REJECTED Should correctly show that the course info fetch failed and show that it is no longer loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: true,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "503243b3-4425-47dd-bc1c-b5c16cca476c",
      "parentUUID": "7894d4d6-f0fa-4eae-9380-5173edfd60af",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course template is loading",
      "fullTitle": "ACTION: FETCH_COURSE_TEMPLATE_PENDING Should correctly show that the course template is loading",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1ad1252f-0c4b-49fb-8b78-906833b0617c",
      "parentUUID": "501ce1f9-352f-4a39-958c-f7ec8bca95dd",
      "skipped": false
    },
    {
      "title": "Should correctly return the payload and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_TEMPLATE_FULFILLED Should correctly return the payload and show that it is no longer loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_FULFILLED\",\n    payload: {\n        data: {\n            propertyMap: \"Fake Course Template\"\n        }\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: \"Fake Course Template\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a3fadc32-3e2b-4cef-98e2-c2b3842bb654",
      "parentUUID": "4aec4859-53c2-4a66-bb72-0ba218ed08ee",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course template fetch failed and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_TEMPLATE_REJECTED Should correctly show that the course template fetch failed and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: true,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b8a59bf3-e7cf-41ad-975c-d8697f5e1fd1",
      "parentUUID": "72e19ea3-804c-4b20-bccc-5061b394f3b0",
      "skipped": false
    },
    {
      "title": "Should correctly show that the unit info is loading",
      "fullTitle": "ACTION: FETCH_UNIT_INFO_PENDING Should correctly show that the unit info is loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: {\n        preqs: \"\",\n        creditPoints: 0,\n        rules: [],\n        locationAndTime: \"\",\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"\",\n        eftsl: 0,\n        descriptions: \"\"\n    },\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: {\n        preqs: \"\",\n        creditPoints: 0,\n        rules: [],\n        locationAndTime: \"\",\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"\",\n        eftsl: 0,\n        descriptions: \"\"\n    },\n    focusedUnitCode: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "671afc48-d493-4bd1-bf57-76aaa972d623",
      "parentUUID": "a4386ed0-a688-47fb-834c-40c0a97d3401",
      "skipped": false
    },
    {
      "title": "Should correctly return the payload and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_UNIT_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_FULFILLED\",\n    payload: { data: \"Fake Unit Info\" },\n    unitCode: \"FAKE1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: \"Fake Unit Info\",\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4e5aab25-6262-4ee5-a470-94bfe4f29c38",
      "parentUUID": "518732b4-a87d-442b-8e9b-3881dd3c8a9e",
      "skipped": false
    },
    {
      "title": "Should correctly show that the unit info fetch failed and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_UNIT_INFO_REJECTED Should correctly show that the unit info fetch failed and show that it is no longer loading",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_REJECTED\",\n    payload: {\n        response: {\n            status: 404\n        }\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: {\n        response: {\n            status: 404\n        }\n    },\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ec6a18f1-1159-4512-b02a-959bcd1af440",
      "parentUUID": "47a270b1-e372-4db1-8207-dc2fa341818c",
      "skipped": false
    },
    {
      "title": "Should accurately set the start year and the focused course on submission",
      "fullTitle": "ACTION: SUBMIT_COURSE_FORM Should accurately set the start year and the focused course on submission",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_COURSE_FORM\",\n    startYear: 2020,\n    courseCode: \"TEST1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: \"TEST1001\",\n    startYear: 2020,\n    endYear: 2020\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "18d1a1ce-ce27-4ad2-a7af-598c3f8c9ccd",
      "parentUUID": "aa0ca187-07cc-430a-86b7-cbf6efce39a2",
      "skipped": false
    },
    {
      "title": "Should accurately set the start year and end year on submission",
      "fullTitle": "ACTION: SUBMIT_YEAR_FORM Should accurately set the start year and end year on submission",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_YEAR_FORM\",\n    startYear: 2020,\n    endYear: 2025\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2020,\n    endYear: 2025\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c676b09a-5eba-4bc2-8529-cc2cac650b70",
      "parentUUID": "bbef5b89-2dd3-43db-8210-c8cac045fa0c",
      "skipped": false
    },
    {
      "title": "Should correctly handle  of teaching periods data",
      "fullTitle": "ACTION: FETCH_TEACHING_PERIODS_PENDING Should correctly handle  of teaching periods data",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "919dd5f5-ac82-4d65-9127-83919a2c4d03",
      "parentUUID": "79ac9cec-1d71-4f30-9241-4fe022e06e60",
      "skipped": false
    },
    {
      "title": "Should correctly handle  of teaching periods data",
      "fullTitle": "ACTION: FETCH_TEACHING_PERIODS_FULFILLED Should correctly handle  of teaching periods data",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_FULFILLED\",\n    payload: \"Teaching period strings\"\n};\nvar stateAfter = {\n    teachingPeriodData: \"Teaching period strings\",\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9e5ac7ee-1098-4e14-997a-1c186ce77820",
      "parentUUID": "e88a3dbb-5e5d-4d7c-8eca-0565ed6e2716",
      "skipped": false
    },
    {
      "title": "Should correctly handle  of teaching periods data",
      "fullTitle": "ACTION: FETCH_TEACHING_PERIODS_REJECTED Should correctly handle  of teaching periods data",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "81686a35-b428-44b3-a015-466556f7d604",
      "parentUUID": "6da36940-23f3-4f53-96d3-f236dcb0b73c",
      "skipped": false
    },
    {
      "title": "Should set the teaching period code to insert value correctly",
      "fullTitle": "ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should set the teaching period code to insert value correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodCodeToInsert: null,\n    testParam1: 1,\n    testParam2: \"test\"\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"S1-02\"\n};\nvar stateAfter = {\n    teachingPeriodCodeToInsert: \"S1-02\",\n    testParam1: 1,\n    testParam2: \"test\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d16fd564-04e9-45ae-9c58-dfb697120f43",
      "parentUUID": "ec895889-ad4e-47e8-8235-3864776f1378",
      "skipped": false
    },
    {
      "title": "Should correctly update the affected units value to the given array",
      "fullTitle": "ACTION: UPDATE_AFFECTED_UNITS Should correctly update the affected units value to the given array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: []\n};\nvar action = {\n    type: \"UPDATE_AFFECTED_UNITS\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "da45eaa8-0fe7-4708-94a4-ce8aeff1d5f7",
      "parentUUID": "1be02c4a-7667-423b-bd15-05b9577b821e",
      "skipped": false
    },
    {
      "title": "Should correctly update the index of tp to remove value to the given value",
      "fullTitle": "ACTION: UPDATE_INDEX_OF_TP_TO_REMOVE Should correctly update the index of tp to remove value to the given value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 0\n};\nvar action = {\n    type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\",\n    index: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 1\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ec446901-fe4b-408b-899a-9459c149ca37",
      "parentUUID": "b3c1cd44-233d-4014-bca2-a52415801365",
      "skipped": false
    },
    {
      "title": "Should correctly begin moving a unit",
      "fullTitle": "ACTION: MOVING_UNIT Should correctly begin moving a unit",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0\n};\nvar action = {\n    type: \"MOVING_UNIT\",\n    unit: \"TEST-UNIT\",\n    unitIndex: 3,\n    tpIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TEST-UNIT\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 3\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e7577499-4edf-4ac2-8bb4-16fbda739718",
      "parentUUID": "a578729e-68d1-41f3-a962-6e63b817020d",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to a teaching period earlier than it",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period earlier than it",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitName: \"TestUnit\", creditPoints: 6 }, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "89c67b60-ae67-4d43-9a38-524f6c0d3115",
      "parentUUID": "09514264-c130-40ce-a3ec-13d1a031b0a2",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to a teaching period later than it",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period later than it",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitName: \"TestUnit\", creditPoints: 6 }, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ca60c32f-2ed3-461d-a019-bcfd97a7e5fc",
      "parentUUID": "09514264-c130-40ce-a3ec-13d1a031b0a2",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to the same teaching period but earlier position",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but earlier position",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [\"PlaceToMoveTo\", { unitName: \"TestUnit\", creditPoints: 6 }, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [{ unitName: \"TestUnit\", creditPoints: 6 }, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "00265a72-63d4-46dc-ab10-168003047cc8",
      "parentUUID": "09514264-c130-40ce-a3ec-13d1a031b0a2",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to the same teaching period but later position",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but later position",
      "timedOut": false,
      "duration": 16,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [{ unitName: \"TestUnit\", creditPoints: 6 }, null, \"PlaceToMoveTo\", null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4f7440bd-373f-4ccd-aba1-9c0829621d3e",
      "parentUUID": "09514264-c130-40ce-a3ec-13d1a031b0a2",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to the same teaching period and exact same position",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period and exact same position",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7ac0142c-784a-4483-acea-057ac93d64a6",
      "parentUUID": "09514264-c130-40ce-a3ec-13d1a031b0a2",
      "skipped": false
    },
    {
      "title": "should cancel moving unit",
      "fullTitle": "ACTION: CANCEL_MOVING_UNIT should cancel moving unit",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: \"TestUnit2\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: undefined,\n    unitsIndexOfUnitToBeMoved: undefined\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e1a0b882-4e92-487e-817f-16a76e2878b8",
      "parentUUID": "3f774188-6a48-4451-b4b3-b87721c5f20d",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to a teaching period earlier than it",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period earlier than it",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f3d8f1b4-6be1-4970-a1d7-75e2c4089d61",
      "parentUUID": "cb74d348-21b3-4a5c-bd52-98abc78a6e27",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to a teaching period later than it",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period later than it",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "8e25704c-4090-4195-ba2a-7b99b25c2479",
      "parentUUID": "cb74d348-21b3-4a5c-bd52-98abc78a6e27",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to the same teaching period but earlier position",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but earlier position",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "03ba7afb-ecd6-4b5e-9f87-33a49163e150",
      "parentUUID": "cb74d348-21b3-4a5c-bd52-98abc78a6e27",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to the same teaching period but later position",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but later position",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, \"PlaceToMoveTo\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", null, \"TestUnit\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a335aadd-2a22-45f9-97bd-3cae1f628dfb",
      "parentUUID": "cb74d348-21b3-4a5c-bd52-98abc78a6e27",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to the same teaching period and exact same position",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period and exact same position",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "19df3100-7bff-4087-ace6-3b08b99d0f6b",
      "parentUUID": "cb74d348-21b3-4a5c-bd52-98abc78a6e27",
      "skipped": false
    },
    {
      "title": "should give no errors for an empty course plan.",
      "fullTitle": "ACTION: VALIDATE_COURSE should give no errors for an empty course plan.",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan.\"\n    }],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    courseErrors: [],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "517ea051-9377-49df-b83c-158213f5fa2e",
      "parentUUID": "7f4df247-7fcb-447e-925a-00c75d21344a",
      "skipped": false
    },
    {
      "title": "Should not give duplicate unit errors if the first attempt is in the past, and the second attempt is not two or more years into the future.",
      "fullTitle": "duplicates: Should not give duplicate unit errors if the first attempt is in the past, and the second attempt is not two or more years into the future.",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: new Date().getFullYear() - 1,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, null]\n    }, {\n        code: \"S1-01\",\n        year: new Date().getFullYear() + 1,\n        units: [null, null, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "3a4ea3f3-8a26-47e0-bb19-07685a7ad79d",
      "parentUUID": "c304df92-0ac4-4d72-b14c-620e5867bf39",
      "skipped": false
    },
    {
      "title": "Should give a duplicate unit error if there are two same units in the same teaching period",
      "fullTitle": "duplicates: Should give a duplicate unit error if there are two same units in the same teaching period",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2015,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }, {\n        code: \"S2-01\",\n        year: 2015,\n        units: [null, null, null, {\n            unitCode: \"GJQ2039\"\n        }]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2015,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }, {\n        code: \"S2-01\",\n        year: 2015,\n        units: [null, null, null, {\n            unitCode: \"GJQ2039\"\n        }]\n    }],\n    courseErrors: [{\n        message: \"ABCD1234 already exists in the same teaching period. Please remove this unit.\",\n        coordinates: [[0, 3]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "df4b8a72-bab7-4ee6-ba7d-06ef31d76b9b",
      "parentUUID": "c304df92-0ac4-4d72-b14c-620e5867bf39",
      "skipped": false
    },
    {
      "title": "Should give a duplicate error if a duplicate unit is placed in a teaching period two years from now",
      "fullTitle": "duplicates: Should give a duplicate error if a duplicate unit is placed in a teaching period two years from now",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var currentYear = new Date().getFullYear();\nvar stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: currentYear,\n        units: [{\n            unitCode: \"ABC1234\"\n        }, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 2,\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 2,\n        units: [null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: currentYear,\n        units: [{\n            unitCode: \"ABC1234\"\n        }, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 2,\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 2,\n        units: [null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan. Please plan as if you will pass all units.\",\n        coordinates: [[4, 1]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e7af2d81-d365-4ba9-bf05-60136dcb606e",
      "parentUUID": "c304df92-0ac4-4d72-b14c-620e5867bf39",
      "skipped": false
    },
    {
      "title": "Should give a course error for a unit not being offered in the teaching period it is in",
      "fullTitle": "offerings: Should give a course error for a unit not being offered in the teaching period it is in",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2019,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: 2019,\n        units: [null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"First semester 2019 (Day)\"]\n            }]\n        }, null]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2019,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: 2019,\n        units: [null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"First semester 2019 (Day)\"]\n            }]\n        }, null]\n    }],\n    courseErrors: [{\n        message: \"ABC1234 is not offered in second semester, 2019.\",\n        coordinates: [[1, 2]]\n    }],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "95fea75e-6d9f-436b-b753-dc930dd95e87",
      "parentUUID": "4d25d61d-db5f-45e9-83f4-80b5e5dad1b3",
      "skipped": false
    },
    {
      "title": "Should give a course error for a missing prereq",
      "fullTitle": "rules: Should give a course error for a missing prereq",
      "timedOut": false,
      "duration": 11,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"Must have passed an (I/W) unit in {DEF2345, QLS2029}\",\n                endDate: \"\"\n            }]\n        }]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"Must have passed an (I/W) unit in {DEF2345, QLS2029}\",\n                endDate: \"\"\n            }]\n        }]\n    }],\n    courseErrors: [{\n        message: \"You must complete DEF2345 or QLS2029 before you can do ABC1234.\",\n        coordinates: [[0, 3]]\n    }],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4b654c56-ca1c-4b15-9537-6c191adbfe09",
      "parentUUID": "f15c4e4d-d0c3-4096-bc4b-ae2b87f6ae04",
      "skipped": false
    },
    {
      "title": "Should give an error for credit points being lower than the minimum required for the unit",
      "fullTitle": "rules: Should give an error for credit points being lower than the minimum required for the unit",
      "timedOut": false,
      "duration": 10,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2016,\n        code: \"S2-01\",\n        units: [{\n            unitCode: \"TEST1011\",\n            creditPoints: 6\n        }, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"TEST3031\",\n            creditPoints: 6,\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"Must have passed 24 credit points\"\n            }]\n        }, null, null, null]\n    }, {\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2016,\n        code: \"S2-01\",\n        units: [{\n            unitCode: \"TEST1011\",\n            creditPoints: 6\n        }, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"TEST3031\",\n            creditPoints: 6,\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"Must have passed 24 credit points\"\n            }]\n        }, null, null, null]\n    }, {\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"You need 18 more credit points before you can do TEST3031.\",\n        coordinates: [[2, 1]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "78189899-5447-4138-a3c0-fa1443002f78",
      "parentUUID": "f15c4e4d-d0c3-4096-bc4b-ae2b87f6ae04",
      "skipped": false
    },
    {
      "title": "Should correctly handle prohibitions",
      "fullTitle": "rules: Should correctly handle prohibitions",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2013,\n        code: \"S1-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\"\n        }]\n    }, {\n        year: 2013,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"BCD1234\",\n            rules: [{\n                ruleSummary: \"INCOMP\",\n                ruleString: \"Incompatible with achievement in {ABC1234}\"\n            }]\n        }, null, null]\n    }],\n    courseErrors: [{\n        message: \"Please remove BCD1234, as completing ABC1234 prohibits you from doing this unit.\",\n        coordinates: [[1, 1]]\n    }]\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "a855ef6b-7218-46a9-a45a-e710ca1106c5",
      "parentUUID": "f15c4e4d-d0c3-4096-bc4b-ae2b87f6ae04",
      "skipped": false
    },
    {
      "title": "Should correctly handle the Do branch of For COURSE_CODE syntax",
      "fullTitle": "rules: Should correctly handle the Do branch of For COURSE_CODE syntax",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2014,\n        code: \"S1-01\",\n        units: [{\n            unitCode: \"DEF2345\",\n            unitName: \"Test unit\",\n            rules: [{\n                ruleSummary: \"COREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {S2029, S3019} Do Any passed co-req (I/W) unit in {ABC2022} Otherwise true\",\n                endDate: \"\"\n            }]\n        }, null, null, null]\n    }],\n    courseInfo: {\n        courseCode: \"S2029\"\n    },\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2014,\n        code: \"S1-01\",\n        units: [{\n            unitCode: \"DEF2345\",\n            unitName: \"Test unit\",\n            rules: [{\n                ruleSummary: \"COREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {S2029, S3019} Do Any passed co-req (I/W) unit in {ABC2022} Otherwise true\",\n                endDate: \"\"\n            }]\n        }, null, null, null]\n    }],\n    courseInfo: {\n        courseCode: \"S2029\"\n    },\n    courseErrors: [{\n        message: \"You must complete ABC2022 before or whilst doing DEF2345.\",\n        coordinates: [[0, 0]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "bb0ee5aa-463d-4463-b09c-cb058932853c",
      "parentUUID": "f15c4e4d-d0c3-4096-bc4b-ae2b87f6ae04",
      "skipped": false
    },
    {
      "title": "Should correctly handle the Otherwise branch of For COURSE_CODE syntax",
      "fullTitle": "rules: Should correctly handle the Otherwise branch of For COURSE_CODE syntax",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }, {\n        year: 2018,\n        code: \"WS-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"Winter semester 2018 (Day)\"]\n            }],\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {Q2001, Q2003} Do true Otherwise Must have passed 1 (I/W) units in {TEST1001}\",\n                endDate: \"\"\n            }]\n        }]\n    }, {\n        year: 2018,\n        code: \"S2-01\",\n        units: [null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }, {\n        year: 2018,\n        code: \"WS-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"Winter semester 2018 (Day)\"]\n            }],\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {Q2001, Q2003} Do true Otherwise Must have passed 1 (I/W) units in {TEST1001}\",\n                endDate: \"\"\n            }]\n        }]\n    }, {\n        year: 2018,\n        code: \"S2-01\",\n        units: [null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"You must complete TEST1001 before you can do ABC1234.\",\n        coordinates: [[1, 3]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "06fddd9b-232d-42f0-b65d-ac0cfeea9c61",
      "parentUUID": "f15c4e4d-d0c3-4096-bc4b-ae2b87f6ae04",
      "skipped": false
    },
    {
      "title": "Should handle a complicated For expression",
      "fullTitle": "rules: Should handle a complicated For expression",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2019,\n        code: \"S1-01\",\n        units: [null, {\n            unitCode: \"ABC1234\",\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"For ((SCA_LOCATION IN {CLAYTON} AND COURSE_CODE IN {1039, 2393}) OR (SCA_LOCATION IN {CLAYTON} AND COURSE_CODE NOT IN {A4921})) Do true Otherwise Permission required\"\n            }]\n        }, null, null]\n    }],\n    courseErrors: [],\n    courseInfo: {\n        courseCode: \"A4921\"\n    }\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2019,\n        code: \"S1-01\",\n        units: [null, {\n            unitCode: \"ABC1234\",\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"For ((SCA_LOCATION IN {CLAYTON} AND COURSE_CODE IN {1039, 2393}) OR (SCA_LOCATION IN {CLAYTON} AND COURSE_CODE NOT IN {A4921})) Do true Otherwise Permission required\"\n            }]\n        }, null, null]\n    }],\n    courseErrors: [{\n        message: \"You need permission to do ABC1234.\",\n        coordinates: [[0, 1]]\n    }],\n    courseInfo: {\n        courseCode: \"A4921\"\n    }\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c9f334b9-c6a4-4db6-9a83-8b0679449c92",
      "parentUUID": "f15c4e4d-d0c3-4096-bc4b-ae2b87f6ae04",
      "skipped": false
    },
    {
      "title": "Should leave invalidUnitSlotCoordinates empty if there are no invalid unit slots",
      "fullTitle": "ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS Should leave invalidUnitSlotCoordinates empty if there are no invalid unit slots",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2015,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: false\n};\nvar action = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: {\n        unitCode: \"TEST1001\",\n        unitName: \"Test unit\",\n        locationAndTime: [{\n            location: \"Caulfield\",\n            time: [\"First semester 2017 (Day)\"]\n        }]\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2015,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "6a986836-b272-4ece-947a-7669e1818a09",
      "parentUUID": "c02f8dd7-cc55-4248-b6c5-6b109002de63",
      "skipped": false
    },
    {
      "title": "Should highlight teaching periods that contains the same unit",
      "fullTitle": "ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS Should highlight teaching periods that contains the same unit",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var currentYear = new Date().getFullYear();\nvar stateBefore = {\n    teachingPeriods: [{\n        year: currentYear - 2,\n        code: \"FY-01\",\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        year: currentYear - 1,\n        code: \"FY-01\",\n        units: [null, null, {\n            unitCode: \"DEF2345\"\n        }, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: false\n};\nvar action = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: {\n        unitCode: \"ABC1234\",\n        locationAndTime: [{\n            location: \"Parkville\",\n            time: [\"Full year 2018 (Day)\"]\n        }]\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: currentYear - 2,\n        code: \"FY-01\",\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        year: currentYear - 1,\n        code: \"FY-01\",\n        units: [null, null, {\n            unitCode: \"DEF2345\"\n        }, null]\n    }],\n    invalidUnitSlotCoordinates: [[0, null]],\n    highlightingInvalidUnitSlots: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b81d7cc5-fe51-4f1c-be3e-9e5304a63098",
      "parentUUID": "c02f8dd7-cc55-4248-b6c5-6b109002de63",
      "skipped": false
    },
    {
      "title": "should not change the state if it receives an unknown action",
      "fullTitle": "DEFAULT should not change the state if it receives an unknown action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "d51cfab1-9111-4506-aa0d-43c21bd982b9",
      "parentUUID": "f9675784-2267-4f21-9205-606f447b1e9a",
      "skipped": false
    },
    {
      "title": "should begin fetching important dates correctly ",
      "fullTitle": "ACTION: FETCH_IMPORTANT_DATES_PENDING should begin fetching important dates correctly ",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\nvar action = {\n    type: \"FETCH_IMPORTANT_DATES_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: true,\n    importantDatesError: false\n};\ntest(_ImportantDatesReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "76ef0591-72ca-42b5-851e-71f63ec206bc",
      "parentUUID": "4d5b41a2-6e2d-4215-91a5-1cd468e3810b",
      "skipped": false
    },
    {
      "title": "should handled failed fetch of important dates correctly ",
      "fullTitle": "ACTION: FETCH_IMPORTANT_DATES_REJECTED should handled failed fetch of important dates correctly ",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\nvar action = {\n    type: \"FETCH_IMPORTANT_DATES_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: true\n};\ntest(_ImportantDatesReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0fc4209e-3c75-4039-9108-a24ffdfec510",
      "parentUUID": "7ca20e03-8cd7-4328-86ef-25bfa5f5c185",
      "skipped": false
    },
    {
      "title": "should handled failed fetch of important dates correctly ",
      "fullTitle": "ACTION: FETCH_IMPORTANT_DATES_FULFILLED should handled failed fetch of important dates correctly ",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\nvar action = {\n    type: \"FETCH_IMPORTANT_DATES_FULFILLED\",\n    payload: [{\n        \"value\": \"HE IS A SAURABH\"\n    }]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [{ \"value\": \"HE IS A SAURABH\" }],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\ntest(_ImportantDatesReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0adcd7b2-98d1-441a-9c3b-ee1085093e30",
      "parentUUID": "5f683d8a-f0c5-43c0-93fc-414d6897c3ad",
      "skipped": false
    },
    {
      "title": "should insert a notification from an empty list",
      "fullTitle": "ACTION: ADD_NOTIFICATION should insert a notification from an empty list",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: []\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "68b1bd99-5c54-41db-84bb-75104e0fb6e2",
      "parentUUID": "97ac0ce5-b603-4261-8204-069c67d35672",
      "skipped": false
    },
    {
      "title": "should prepend a notification into an list of a few existing notifications.",
      "fullTitle": "ACTION: ADD_NOTIFICATION should prepend a notification into an list of a few existing notifications.",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e6bd2243-b492-426c-93c4-8a1c33eb89a7",
      "parentUUID": "97ac0ce5-b603-4261-8204-069c67d35672",
      "skipped": false
    },
    {
      "title": "should replace a notification if it already exists with a specified ID",
      "fullTitle": "ACTION: ADD_NOTIFICATION should replace a notification if it already exists with a specified ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    message: \"New message goes over here\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"New message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "326548fb-0dba-478d-bd86-f275bf710823",
      "parentUUID": "97ac0ce5-b603-4261-8204-069c67d35672",
      "skipped": false
    },
    {
      "title": "Should remove a notification given its ID",
      "fullTitle": "ACTION: REMOVE_NOTIFICATION Should remove a notification given its ID",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    id: \"CONNECTION_LOST\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4eee33ea-03e7-4a94-afb1-910ff5159d3b",
      "parentUUID": "f8e509b3-ac07-47f2-b45a-a2d3f5e81087",
      "skipped": false
    },
    {
      "title": "Should remove a notification given its index",
      "fullTitle": "ACTION: REMOVE_NOTIFICATION Should remove a notification given its index",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    index: 1\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a7edcaa5-c781-439c-81f5-efa400de6ac7",
      "parentUUID": "f8e509b3-ac07-47f2-b45a-a2d3f5e81087",
      "skipped": false
    },
    {
      "title": "Should not change state if it does not recognise an action",
      "fullTitle": "DEFAULT Should not change state if it does not recognise an action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Notifications2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "442318fb-838c-41a4-b3d6-02e63c3cffbc",
      "parentUUID": "cff69f20-bae8-4ec2-8765-c4afa8e37980",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the insert teaching period UI boolean",
      "fullTitle": "ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: true,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9add2a09-0be4-421b-8270-5853908bd8bc",
      "parentUUID": "8d5fb3f7-cca2-44ef-a490-eddc2b40ede1",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the insert teaching period UI boolean",
      "fullTitle": "ACTION: HIDE_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: true,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1db4df30-4bca-40ac-84be-f5191362a6fa",
      "parentUUID": "50408319-25da-4f0e-a789-c14baf2fd2b7",
      "skipped": false
    },
    {
      "title": "Should correctly set the add unit UI boolean to true and correctly hide the sidebar when a unit is being added",
      "fullTitle": "ACTION: ADDING_UNIT Should correctly set the add unit UI boolean to true and correctly hide the sidebar when a unit is being added",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "2e9d7407-c8fc-4844-9949-babd0b373ec2",
      "parentUUID": "78e0d67e-78ad-4ec3-90be-fb0e961899d6",
      "skipped": false
    },
    {
      "title": "Should correctly set the add unit UI boolean to false",
      "fullTitle": "ACTION: ADD_UNIT Should correctly set the add unit UI boolean to false",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true\n};\nvar action = {\n    type: \"ADD_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "99914d02-2723-40b1-94ed-2ff18a4fef52",
      "parentUUID": "51ec6847-ee98-4e84-8b00-e398be89ae67",
      "skipped": false
    },
    {
      "title": "Should correctly set the add unit UI boolean to false",
      "fullTitle": "ACTION: CANCEL_ADDING_UNIT Should correctly set the add unit UI boolean to false",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true\n};\nvar action = {\n    type: \"CANCEL_ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "aacbd748-d34e-4a22-9a5e-f5143b357f4a",
      "parentUUID": "7b233280-96d2-4b5e-8d7a-5100d47aaa1c",
      "skipped": false
    },
    {
      "title": "Should correctly set the move unit UI boolean to true",
      "fullTitle": "ACTION: MOVING_UNIT Should correctly set the move unit UI boolean to true",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"MOVING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "93c59382-d7e3-4b0e-8dd6-d6995aba2ecc",
      "parentUUID": "a2fc241f-06cd-477b-a40d-440ab4dbb4d4",
      "skipped": false
    },
    {
      "title": "Should correctly set the move unit UI boolean to false",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly set the move unit UI boolean to false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"MOVE_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "3b81af78-e424-42e3-b8bd-d557e8f95ce6",
      "parentUUID": "ece2a783-d4a4-4d76-a296-efcf044dfd70",
      "skipped": false
    },
    {
      "title": "Should correctly set the move unit UI boolean to false",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly set the move unit UI boolean to false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"SWAP_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "61059417-a2b6-4c8e-8f1b-82861c166fcb",
      "parentUUID": "236f8918-27ef-4541-a931-a56f801199d7",
      "skipped": false
    },
    {
      "title": "Should correctly set the move unit UI boolean to false",
      "fullTitle": "ACTION: CANCEL_MOVING_UNIT Should correctly set the move unit UI boolean to false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d38584e7-5635-477a-9e97-f1b1027d7298",
      "parentUUID": "216e4e43-1d8b-484d-a285-5233271e766f",
      "skipped": false
    },
    {
      "title": "Should set the course to read only correctly",
      "fullTitle": "ACTION: SET_COURSE_READ_ONLY Should set the course to read only correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: false\n};\nvar action = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a84a54aa-6a90-4728-9e12-8358298e8d86",
      "parentUUID": "42f94748-ffeb-4b8c-bc53-81c496c22a5f",
      "skipped": false
    },
    {
      "title": "Should set the course to allow edits correctly",
      "fullTitle": "ACTION: SET_COURSE_READ_AND_WRITE Should set the course to allow edits correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: true\n};\nvar action = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4e5a0f65-63e8-42a2-a0f2-6b040a02da21",
      "parentUUID": "64fa05ca-c804-4bfc-92c8-7bc2113cd6d9",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm delete teaching period modal UI to show",
      "fullTitle": "ACTION: SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to show",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "15f24042-3234-4e0e-90fe-a9632166c0a4",
      "parentUUID": "288c4895-a5a6-4175-8988-d8e1c5999dbd",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm delete teaching period modal UI to hide",
      "fullTitle": "ACTION: HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to hide",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "6b17c30d-0917-4351-8628-7b50d8aa7208",
      "parentUUID": "2f4863e5-3959-437f-9ded-756065eddcaf",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm decrease study load modal UI to show",
      "fullTitle": "ACTION: SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to show",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "400b5416-d35d-47c6-af0f-2a8cf9cc51cd",
      "parentUUID": "c3cd69e9-a010-438c-817c-78285ed3376c",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm decrease study load modal UI to hide",
      "fullTitle": "ACTION: HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to hide",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1103ef91-856b-4ef5-8e4c-38151df33bae",
      "parentUUID": "24f6a265-ebed-4c49-bdbb-3d53cfa25385",
      "skipped": false
    },
    {
      "title": "Should set show flag for custom unit modal to be true",
      "fullTitle": "ACTION: SHOW_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be true",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "25a62b27-4d0c-42e8-b3da-d59743af690d",
      "parentUUID": "36f3bce0-cba1-470e-a42d-0d20cd1b7273",
      "skipped": false
    },
    {
      "title": "Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
      "fullTitle": "ACTION: SHOW_CUSTOM_UNIT_MODAL Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"ABC1234\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: \"ABC1234\",\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "defacbe9-2e67-4ceb-a63e-43689c4d2e40",
      "parentUUID": "36f3bce0-cba1-470e-a42d-0d20cd1b7273",
      "skipped": false
    },
    {
      "title": "Should set show flag for custom unit modal to be false",
      "fullTitle": "ACTION: HIDE_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be false",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: true\n};\nvar action = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0328dcaf-d97d-4ac8-a468-1b1511c0b340",
      "parentUUID": "cbd33e4b-7f59-4afe-b691-706e08c98d72",
      "skipped": false
    },
    {
      "title": "Should correctly show the sidebar when called",
      "fullTitle": "ACTION: SHOW_SIDEBAR Should correctly show the sidebar when called",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: false\n};\nvar action = {\n    type: \"SHOW_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "83c0d1eb-995f-4b70-917c-1c89fe4c4d24",
      "parentUUID": "d00c4174-8ef2-473c-9dcb-c7860845868c",
      "skipped": false
    },
    {
      "title": "Should correctly hide the sidebar when called",
      "fullTitle": "ACTION: HIDE_SIDEBAR Should correctly hide the sidebar when called",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"HIDE_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c152e597-151f-448c-b0a0-5cb49e1e9f9e",
      "parentUUID": "0eef17c7-1951-4e6d-a674-7d694ef94cfc",
      "skipped": false
    },
    {
      "title": "Should not change state if it does not recognise the action",
      "fullTitle": "DEFAULT Should not change state if it does not recognise the action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_UI2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "9b23b527-0993-4282-be64-16a009557b09",
      "parentUUID": "72450f85-23b8-4f37-8c69-1a3ff2f28881",
      "skipped": false
    },
    {
      "title": "Should correctly create a new cache instance if there is no local storage value saved, or it is too old",
      "fullTitle": "ACTION: INITIALISE_NEW_CACHE Should correctly create a new cache instance if there is no local storage value saved, or it is too old",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {\n        \"TEST1001\": {\n            timeOfLastAccess: \"Tue Mar 07 2017 12:07:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TEST1001\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        },\n        \"TES1002\": {\n            timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TES1002\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        }\n    },\n    cacheSize: 2,\n    MAX_CACHE_SIZE: 20\n};\nvar action = {\n    type: \"INITIALISE_NEW_CACHE\",\n    timeOfAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\"\n};\nvar stateAfter = {\n    timeOfLastAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {},\n    cacheSize: 0,\n    MAX_CACHE_SIZE: 20\n};\ntest(_UnitCacheReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "053e5dd0-2e59-45f8-a08e-3f24a6ac209c",
      "parentUUID": "d350a948-8c80-47ff-a0f3-b556b8c683b3",
      "skipped": false
    },
    {
      "title": "should correctly remove an item with the given key from the cache ",
      "fullTitle": "ACTION: REMOVE_ITEM_FROM_CACHE should correctly remove an item with the given key from the cache ",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {\n        \"TEST1001\": {\n            timeOfLastAccess: \"Tue Mar 07 2017 12:07:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TEST1001\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        },\n        \"TES1002\": {\n            timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TES1002\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        }\n    },\n    cacheSize: 2,\n    MAX_CACHE_SIZE: 20\n};\nvar action = {\n    type: \"REMOVE_ITEM_FROM_CACHE\",\n    keyValueToDelete: \"TEST1001\",\n    timeOfAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\"\n};\nvar stateAfter = {\n    timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {\n        \"TES1002\": {\n            timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TES1002\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        }\n    },\n    cacheSize: 1,\n    MAX_CACHE_SIZE: 20\n};\ntest(_UnitCacheReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ddc0760f-e059-4db8-bd00-cc3e9727230e",
      "parentUUID": "fa76bc93-6690-4f6d-8426-a6e8181ad9c2",
      "skipped": false
    },
    {
      "title": "should correctly add an item to the cache ",
      "fullTitle": "ACTION: ADD_ITEM_TO_CACHE should correctly add an item to the cache ",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {},\n    cacheSize: 0,\n    MAX_CACHE_SIZE: 20\n};\nvar action = {\n    type: \"ADD_ITEM_TO_CACHE\",\n    timeOfAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCode: \"TEST1001\",\n    unitInfo: {\n        preqs: \"None\",\n        creditPoints: 6,\n        rules: [],\n        locationAndTime: [],\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"TES1002\",\n        eftsl: 0,\n        descriptions: \"\"\n    }\n};\nvar stateAfter = {\n    timeOfLastAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {\n        \"TEST1001\": {\n            timeOfLastAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TES1002\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        }\n    },\n    cacheSize: 1,\n    MAX_CACHE_SIZE: 20\n};\ntest(_UnitCacheReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c75a07d4-b8c3-4b58-b1a6-a9d9151e0722",
      "parentUUID": "83337550-ad3a-4f84-be0c-8385b6310a79",
      "skipped": false
    },
    {
      "title": "should begin fetching important dates correctly ",
      "fullTitle": "ACTION: FETCH_UNITS_PENDING should begin fetching important dates correctly ",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [],\n    unitSearchIsLoading: false,\n    unitSearchError: true\n};\nvar action = {\n    type: \"FETCH_UNITS_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [],\n    unitSearchIsLoading: true,\n    unitSearchError: false\n};\ntest(_UnitSearchReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c168c4a5-edec-4da3-ada1-37049e08d070",
      "parentUUID": "157b3aa0-b2dd-4852-b4de-2a237661b33a",
      "skipped": false
    },
    {
      "title": "should handled failed fetch of important dates correctly ",
      "fullTitle": "ACTION: FETCH_UNITS_REJECTED should handled failed fetch of important dates correctly ",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [],\n    unitSearchIsLoading: true,\n    unitSearchError: false\n};\nvar action = {\n    type: \"FETCH_UNITS_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [],\n    unitSearchIsLoading: false,\n    unitSearchError: true\n};\ntest(_UnitSearchReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ee417a00-815e-4458-babf-ff9e3f4ed520",
      "parentUUID": "9653cd22-08b5-442a-bbda-17dd421e2c0d",
      "skipped": false
    },
    {
      "title": "should handled failed fetch of important dates correctly ",
      "fullTitle": "ACTION: FETCH_UNITS_FULFILLED should handled failed fetch of important dates correctly ",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [],\n    unitSearchIsLoading: true,\n    unitSearchError: false\n};\nvar action = {\n    type: \"FETCH_UNITS_FULFILLED\",\n    payload: [\"unit1\", \"unit2\", \"unit3\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [\"unit1\", \"unit2\", \"unit3\"],\n    unitSearchIsLoading: false,\n    unitSearchError: false\n};\ntest(_UnitSearchReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "669984b6-2751-4bf5-bea9-b3442b6f78a4",
      "parentUUID": "ab3647c5-6870-4e9f-8eed-c7e3b48f57a7",
      "skipped": false
    },
    {
      "title": "Should return a non-negative number",
      "fullTitle": "UTILS: CostCalc Should return a non-negative number",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_CostCalc2.default.calculateCost(0, 0)).to.be.gte(0);\nexpect(_CostCalc2.default.calculateCost(2, 6)).to.be.gte(0);",
      "err": {},
      "isRoot": false,
      "uuid": "6b2f46d2-bfa9-4e7c-bc76-e4006bbd5fa5",
      "parentUUID": "e2e216bf-70c7-46ed-b209-79b3c1c079a2",
      "skipped": false
    },
    {
      "title": "Should multiply SCA band cost with credit points",
      "fullTitle": "UTILS: CostCalc Should multiply SCA band cost with credit points",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var scaBand = 3;\nvar creditPoints = 6;\nvar scaBandCost = _CostCalc2.default.calculateCost(scaBand, 1);\nexpect(_CostCalc2.default.calculateCost(scaBand, creditPoints)).to.equal(scaBandCost * creditPoints);",
      "err": {},
      "isRoot": false,
      "uuid": "1a3b6323-ad75-4bcc-860f-450a78437dda",
      "parentUUID": "e2e216bf-70c7-46ed-b209-79b3c1c079a2",
      "skipped": false
    },
    {
      "title": "Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
      "fullTitle": "nextSemester Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([], 2011, [])).to.deep.equal({\n    index: 0,\n    year: 2011,\n    code: \"S1-01\",\n    teachingPeriodData: []\n});",
      "err": {},
      "isRoot": false,
      "uuid": "b27ac898-3748-4b2b-aa60-6064891db951",
      "parentUUID": "c8328627-1afa-4ad5-be47-e1c585274f06",
      "skipped": false
    },
    {
      "title": "Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
      "fullTitle": "nextSemester Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([], 2029, sortedTeachingPeriodData)).to.deep.equal({\n    index: 0,\n    year: 2029,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
      "err": {},
      "isRoot": false,
      "uuid": "3a96118b-a5c9-416f-bfb6-507a6b04d73e",
      "parentUUID": "c8328627-1afa-4ad5-be47-e1c585274f06",
      "skipped": false
    },
    {
      "title": "Should return semester two if the last teaching period is in semester one, with the same year",
      "fullTitle": "nextSemester Should return semester two if the last teaching period is in semester one, with the same year",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2025,\n    code: \"S1-01\"\n}, {\n    year: 2025,\n    code: \"S2-01\"\n}, {\n    year: 2026,\n    code: \"S1-01\"\n}, {\n    year: 2026,\n    code: \"S2-01\"\n}, {\n    year: 2027,\n    code: \"S1-01\"\n}], 2023, sortedTeachingPeriodData)).to.deep.equal({\n    index: 5,\n    year: 2027,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
      "err": {},
      "isRoot": false,
      "uuid": "a78d7fa0-f403-40c1-9749-22a22b331ee4",
      "parentUUID": "c8328627-1afa-4ad5-be47-e1c585274f06",
      "skipped": false
    },
    {
      "title": "Should return semester one next year if the last teaching period is in semester two",
      "fullTitle": "nextSemester Should return semester one next year if the last teaching period is in semester two",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2015,\n    code: \"FY-01\"\n}, {\n    year: 2017,\n    code: \"S2-01\"\n}], 2015, sortedTeachingPeriodData)).to.deep.equal({\n    index: 2,\n    year: 2018,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
      "err": {},
      "isRoot": false,
      "uuid": "9020f054-2668-4cf2-8fd9-5e390d68e53e",
      "parentUUID": "c8328627-1afa-4ad5-be47-e1c585274f06",
      "skipped": false
    },
    {
      "title": "Should render a semester string",
      "fullTitle": "getSemesterString Should render a semester string",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2019,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n})).to.equal(\"Semester 2, 2019\");",
      "err": {},
      "isRoot": false,
      "uuid": "5d3c513b-871c-49ff-8c47-97dee2f1d7cd",
      "parentUUID": "87361d0c-0c37-4714-b2da-f9bf1a372d1c",
      "skipped": false
    },
    {
      "title": "Should revert back to semester codes if teachingPeriodData is not available",
      "fullTitle": "getSemesterString Should revert back to semester codes if teachingPeriodData is not available",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2015,\n    code: \"S1-01\"\n})).to.equal(\"S1-01, 2015\");",
      "err": {},
      "isRoot": false,
      "uuid": "eca808a9-1763-4394-b3ea-7b8de79abb4a",
      "parentUUID": "87361d0c-0c37-4714-b2da-f9bf1a372d1c",
      "skipped": false
    },
    {
      "title": "Should return the right year based off current month",
      "fullTitle": "UTILS: ShowYear Should return the right year based off current month",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "if (new Date().getMonth() + 1 >= 11) {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear() + 1);\n} else {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear());\n}",
      "err": {},
      "isRoot": false,
      "uuid": "100f0ef6-7ae5-416b-80a5-05b0cb829c91",
      "parentUUID": "2685467c-90e9-464f-ab87-402b794a849e",
      "skipped": false
    },
    {
      "title": "Should contain the same year as it was specified",
      "fullTitle": "UTILS: YearCalc Should contain the same year as it was specified",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getStartYearVals(2016).find(function (year) {\n    return year.value === 2016;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2017).find(function (year) {\n    return year.value === 2017;\n})).to.be.ok;",
      "err": {},
      "isRoot": false,
      "uuid": "7cacfd35-c497-4db2-8710-3fb781bec7dd",
      "parentUUID": "45ae3477-e214-4849-94cc-c77be9244aab",
      "skipped": false
    },
    {
      "title": "Should contain a year that is ten years from now",
      "fullTitle": "UTILS: YearCalc Should contain a year that is ten years from now",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getStartYearVals(2019).find(function (year) {\n    return year.value === 2029;\n})).to.be.ok;\nexpect(_YearCalc2.default.getStartYearVals(2012).find(function (year) {\n    return year.value === 2002;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2028;\n})).to.be.ok;",
      "err": {},
      "isRoot": false,
      "uuid": "2c67c9cc-4c95-4d03-ac23-8623fc095ea4",
      "parentUUID": "45ae3477-e214-4849-94cc-c77be9244aab",
      "skipped": false
    },
    {
      "title": "Should not contain any past year when computing end years",
      "fullTitle": "UTILS: YearCalc Should not contain any past year when computing end years",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2017;\n})).to.be.not.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2008;\n})).to.be.not.ok;",
      "err": {},
      "isRoot": false,
      "uuid": "e6431bfc-86c2-4bba-b655-aaa3c6bdad49",
      "parentUUID": "45ae3477-e214-4849-94cc-c77be9244aab",
      "skipped": false
    },
    {
      "title": "Should have starting years go in decreasing order from one year ahead to the minimum",
      "fullTitle": "UTILS: YearCalc Should have starting years go in decreasing order from one year ahead to the minimum",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getStartYearVals(2019).slice(0, 12)).to.deep.equal([{\n    text: \"2020\",\n    value: 2020\n}, {\n    text: \"2019\",\n    value: 2019\n}, {\n    text: \"2018\",\n    value: 2018\n}, {\n    text: \"2017\",\n    value: 2017\n}, {\n    text: \"2016\",\n    value: 2016\n}, {\n    text: \"2015\",\n    value: 2015\n}, {\n    text: \"2014\",\n    value: 2014\n}, {\n    text: \"2013\",\n    value: 2013\n}, {\n    text: \"2012\",\n    value: 2012\n}, {\n    text: \"2011\",\n    value: 2011\n}, {\n    text: \"2010\",\n    value: 2010\n}, {\n    text: \"2009\",\n    value: 2009\n}]);",
      "err": {},
      "isRoot": false,
      "uuid": "6ddd89aa-0c8a-42ad-a315-7b543a9e975e",
      "parentUUID": "45ae3477-e214-4849-94cc-c77be9244aab",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2017
}