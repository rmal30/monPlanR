{
  "stats": {
    "suites": 146,
    "tests": 195,
    "passes": 195,
    "pending": 0,
    "failures": 0,
    "start": "2017-02-22T03:48:18.505Z",
    "end": "2017-02-22T03:48:19.908Z",
    "duration": 1403,
    "testsRegistered": 195,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "ACTION-CREATOR: CounterActions",
        "suites": [
          {
            "title": "AC: incrementCreditPoints",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to increment credit points counter",
                "fullTitle": "ACTION-CREATOR: CounterActions AC: incrementCreditPoints Should create an action to increment credit points counter",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 5\n};\n(0, _expect2.default)(actions.incrementCreditPoints(5)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "f8a552de-9102-4094-886a-878046938cc5",
                "parentUUID": "abcb9aeb-eb3f-41cd-ba9f-43617ba3d4b8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CounterActions.spec.js",
            "uuid": "abcb9aeb-eb3f-41cd-ba9f-43617ba3d4b8",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CounterActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to increment credit points counter",
                "fullTitle": "ACTION-CREATOR: CounterActions AC: incrementCreditPoints Should create an action to increment credit points counter",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 5\n};\n(0, _expect2.default)(actions.incrementCreditPoints(5)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "f8a552de-9102-4094-886a-878046938cc5",
                "parentUUID": "abcb9aeb-eb3f-41cd-ba9f-43617ba3d4b8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          },
          {
            "title": "AC: decrementCreditPoints",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to decrement credit points counter",
                "fullTitle": "ACTION-CREATOR: CounterActions AC: decrementCreditPoints Should create an action to decrement credit points counter",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 5\n};\n(0, _expect2.default)(actions.decrementCreditPoints(5)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "20bee221-fbba-49ad-b629-6d096f9b930d",
                "parentUUID": "c575937f-b5cb-4875-9352-1e9a880ace09",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CounterActions.spec.js",
            "uuid": "c575937f-b5cb-4875-9352-1e9a880ace09",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CounterActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to decrement credit points counter",
                "fullTitle": "ACTION-CREATOR: CounterActions AC: decrementCreditPoints Should create an action to decrement credit points counter",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 5\n};\n(0, _expect2.default)(actions.decrementCreditPoints(5)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "20bee221-fbba-49ad-b629-6d096f9b930d",
                "parentUUID": "c575937f-b5cb-4875-9352-1e9a880ace09",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: incrementCost",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to increment cost counter",
                "fullTitle": "ACTION-CREATOR: CounterActions AC: incrementCost Should create an action to increment cost counter",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"INCREMENT_COST\",\n    value: 5\n};\n(0, _expect2.default)(actions.incrementCost(5)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "914bbabd-d65a-432f-85a3-de09b925e842",
                "parentUUID": "82a51d8d-9fac-4398-9787-9e0be13f0377",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CounterActions.spec.js",
            "uuid": "82a51d8d-9fac-4398-9787-9e0be13f0377",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CounterActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to increment cost counter",
                "fullTitle": "ACTION-CREATOR: CounterActions AC: incrementCost Should create an action to increment cost counter",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"INCREMENT_COST\",\n    value: 5\n};\n(0, _expect2.default)(actions.incrementCost(5)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "914bbabd-d65a-432f-85a3-de09b925e842",
                "parentUUID": "82a51d8d-9fac-4398-9787-9e0be13f0377",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: decrementCosts",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to decrement cost counter",
                "fullTitle": "ACTION-CREATOR: CounterActions AC: decrementCosts Should create an action to decrement cost counter",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"DECREMENT_COST\",\n    value: 5\n};\n(0, _expect2.default)(actions.decrementCost(5)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "24cfe858-31f6-4f26-bf35-821efcbf3744",
                "parentUUID": "29e40737-9824-48fd-abac-f627f685533d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CounterActions.spec.js",
            "uuid": "29e40737-9824-48fd-abac-f627f685533d",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CounterActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to decrement cost counter",
                "fullTitle": "ACTION-CREATOR: CounterActions AC: decrementCosts Should create an action to decrement cost counter",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"DECREMENT_COST\",\n    value: 5\n};\n(0, _expect2.default)(actions.decrementCost(5)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "24cfe858-31f6-4f26-bf35-821efcbf3744",
                "parentUUID": "29e40737-9824-48fd-abac-f627f685533d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/actionCreators/CounterActions.spec.js",
        "uuid": "5e669476-c031-454f-b3db-864b311e3e45",
        "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CounterActions.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "ACTION-CREATOR: CourseActions",
        "suites": [
          {
            "title": "AC: insertTeachingPeriod",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to insert a teaching period",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: insertTeachingPeriod Should create an action to insert a teaching period",
                "timedOut": false,
                "duration": 14,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{\n    type: \"INSERT_TEACHING_PERIOD\",\n    index: 1,\n    year: 2016,\n    code: \"tpCode\"\n}, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n}];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.insertTeachingPeriod(1, 2016, \"tpCode\"));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "ee141465-7cd1-439e-89fb-11af62e9226b",
                "parentUUID": "4de3b2d6-b756-4f0a-9052-88434be7cbc8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "4de3b2d6-b756-4f0a-9052-88434be7cbc8",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to insert a teaching period",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: insertTeachingPeriod Should create an action to insert a teaching period",
                "timedOut": false,
                "duration": 14,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{\n    type: \"INSERT_TEACHING_PERIOD\",\n    index: 1,\n    year: 2016,\n    code: \"tpCode\"\n}, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n}];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.insertTeachingPeriod(1, 2016, \"tpCode\"));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "ee141465-7cd1-439e-89fb-11af62e9226b",
                "parentUUID": "4de3b2d6-b756-4f0a-9052-88434be7cbc8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 14
          },
          {
            "title": "AC: removeTeachingPeriod",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to remove a teaching period",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: removeTeachingPeriod Should create an action to remove a teaching period",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1,\n    units: [\"unit1\", \"unit2\", \"unit3\", null]\n}, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n}];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.removeTeachingPeriod(1, [\"unit1\", \"unit2\", \"unit3\", null]));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "60029cc9-2c0d-42c6-b305-2a61280ff284",
                "parentUUID": "412aaa3f-6fe6-4e8b-9716-f5fda2403f3f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "412aaa3f-6fe6-4e8b-9716-f5fda2403f3f",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to remove a teaching period",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: removeTeachingPeriod Should create an action to remove a teaching period",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1,\n    units: [\"unit1\", \"unit2\", \"unit3\", null]\n}, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n}];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.removeTeachingPeriod(1, [\"unit1\", \"unit2\", \"unit3\", null]));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "60029cc9-2c0d-42c6-b305-2a61280ff284",
                "parentUUID": "412aaa3f-6fe6-4e8b-9716-f5fda2403f3f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: increaseStudyLoad",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to increase the study load",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: increaseStudyLoad Should create an action to increase the study load",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\n(0, _expect2.default)(actions.increaseStudyLoad()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "00c43dd2-fa72-4ed8-a01e-cd5e30dfd00a",
                "parentUUID": "efe666b4-4e60-4d30-b909-6fda0db65fb1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "efe666b4-4e60-4d30-b909-6fda0db65fb1",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to increase the study load",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: increaseStudyLoad Should create an action to increase the study load",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\n(0, _expect2.default)(actions.increaseStudyLoad()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "00c43dd2-fa72-4ed8-a01e-cd5e30dfd00a",
                "parentUUID": "efe666b4-4e60-4d30-b909-6fda0db65fb1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: decreaseStudyLoad",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to increase the study load with units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: decreaseStudyLoad Should create an action to increase the study load with units affected",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockTeachingPeriods = [{ year: 2018, code: \"S1-01\", units: [null, null, null, null, \"unit1\"] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }, { year: 2019, code: \"S1-01\", units: [null, null, null, null, \"unit2\"] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null, null] }];\nvar expectedAction = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [\"unit1\", \"unit2\"]\n};\n(0, _expect2.default)(actions.decreaseStudyLoad(mockTeachingPeriods, 4)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "711285e5-2f6e-462e-829a-26d1a7ee8395",
                "parentUUID": "a0b21c75-2ac0-4ec9-8c38-5ba43e0554d2",
                "skipped": false
              },
              {
                "title": "Should create an action to increase the study load with no units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: decreaseStudyLoad Should create an action to increase the study load with no units affected",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockTeachingPeriods = [{ year: 2018, code: \"S1-01\", units: [null, null, null, \"unit1\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }, { year: 2019, code: \"S1-01\", units: [null, null, null, \"unit2\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null, null] }];\nvar expectedAction = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: []\n};\n(0, _expect2.default)(actions.decreaseStudyLoad(mockTeachingPeriods, 4)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "ab4de6e2-464b-4006-b996-6a1492524385",
                "parentUUID": "a0b21c75-2ac0-4ec9-8c38-5ba43e0554d2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "a0b21c75-2ac0-4ec9-8c38-5ba43e0554d2",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to increase the study load with units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: decreaseStudyLoad Should create an action to increase the study load with units affected",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockTeachingPeriods = [{ year: 2018, code: \"S1-01\", units: [null, null, null, null, \"unit1\"] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }, { year: 2019, code: \"S1-01\", units: [null, null, null, null, \"unit2\"] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null, null] }];\nvar expectedAction = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [\"unit1\", \"unit2\"]\n};\n(0, _expect2.default)(actions.decreaseStudyLoad(mockTeachingPeriods, 4)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "711285e5-2f6e-462e-829a-26d1a7ee8395",
                "parentUUID": "a0b21c75-2ac0-4ec9-8c38-5ba43e0554d2",
                "skipped": false
              },
              {
                "title": "Should create an action to increase the study load with no units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: decreaseStudyLoad Should create an action to increase the study load with no units affected",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockTeachingPeriods = [{ year: 2018, code: \"S1-01\", units: [null, null, null, \"unit1\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }, { year: 2019, code: \"S1-01\", units: [null, null, null, \"unit2\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null, null] }];\nvar expectedAction = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: []\n};\n(0, _expect2.default)(actions.decreaseStudyLoad(mockTeachingPeriods, 4)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "ab4de6e2-464b-4006-b996-6a1492524385",
                "parentUUID": "a0b21c75-2ac0-4ec9-8c38-5ba43e0554d2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "AC: addUnit",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly create the actions required for the addition of a unit that is not a custom unit being dragged",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: addUnit Should correctly create the actions required for the addition of a unit that is not a custom unit being dragged",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockUnit = {\n                customUnitDragging: false,\n                cost: 200,\n                creditPoints: 6,\n                unitCode: \"TEST1001\"\n            };\n            var expectedActions = [{ type: \"ADD_UNIT\", tpIndex: 1, unitIndex: 1, unit: mockUnit, cost: 200, creditPoints: 6 }, { type: \"CLEAR_HIGHLIGHTING_INVALID_UNIT_SLOTS\" }, { type: \"VALIDATE_COURSE\" }, { type: \"MODIFIED_COURSE_PLAN\" }];\n            var store = mockStore({});\n            store.dispatch(actions.addUnit(1, 1, mockUnit));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "ce651162-9ffe-4d79-82bb-161275295095",
                "parentUUID": "e039b782-8b1b-428b-9ce7-6877484faef1",
                "skipped": false
              },
              {
                "title": "Should correctly create the actions required for the addition of a unit that is a custom unit being dragged",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: addUnit Should correctly create the actions required for the addition of a unit that is a custom unit being dragged",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockUnit = {\n                customUnitDragging: true,\n                cost: 200,\n                creditPoints: 6,\n                unitCode: \"TEST1001\"\n            };\n            var expectedActions = [{\n                type: \"SHOW_CUSTOM_UNIT_MODAL\",\n                unitCode: \"TEST1001\",\n                tpIndex: 1,\n                unitIndex: 1\n            }];\n            var store = mockStore({});\n            store.dispatch(actions.addUnit(1, 1, mockUnit));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "59e4f6c1-719d-4e56-b59e-5ab4a4608c6e",
                "parentUUID": "e039b782-8b1b-428b-9ce7-6877484faef1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "e039b782-8b1b-428b-9ce7-6877484faef1",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should correctly create the actions required for the addition of a unit that is not a custom unit being dragged",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: addUnit Should correctly create the actions required for the addition of a unit that is not a custom unit being dragged",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockUnit = {\n                customUnitDragging: false,\n                cost: 200,\n                creditPoints: 6,\n                unitCode: \"TEST1001\"\n            };\n            var expectedActions = [{ type: \"ADD_UNIT\", tpIndex: 1, unitIndex: 1, unit: mockUnit, cost: 200, creditPoints: 6 }, { type: \"CLEAR_HIGHLIGHTING_INVALID_UNIT_SLOTS\" }, { type: \"VALIDATE_COURSE\" }, { type: \"MODIFIED_COURSE_PLAN\" }];\n            var store = mockStore({});\n            store.dispatch(actions.addUnit(1, 1, mockUnit));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "ce651162-9ffe-4d79-82bb-161275295095",
                "parentUUID": "e039b782-8b1b-428b-9ce7-6877484faef1",
                "skipped": false
              },
              {
                "title": "Should correctly create the actions required for the addition of a unit that is a custom unit being dragged",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: addUnit Should correctly create the actions required for the addition of a unit that is a custom unit being dragged",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockUnit = {\n                customUnitDragging: true,\n                cost: 200,\n                creditPoints: 6,\n                unitCode: \"TEST1001\"\n            };\n            var expectedActions = [{\n                type: \"SHOW_CUSTOM_UNIT_MODAL\",\n                unitCode: \"TEST1001\",\n                tpIndex: 1,\n                unitIndex: 1\n            }];\n            var store = mockStore({});\n            store.dispatch(actions.addUnit(1, 1, mockUnit));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "59e4f6c1-719d-4e56-b59e-5ab4a4608c6e",
                "parentUUID": "e039b782-8b1b-428b-9ce7-6877484faef1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: removeUnit",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly create the actions required for removal of a unit",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: removeUnit Should correctly create the actions required for removal of a unit",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{ type: \"REMOVE_UNIT\", tpIndex: 1, unitIndex: 1, cost: 200, creditPoints: 6 }, { type: \"VALIDATE_COURSE\" }, { type: \"MODIFIED_COURSE_PLAN\" }];\n            var store = mockStore({});\n            store.dispatch(actions.removeUnit(1, 1, 6, 200));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "7112953c-e1ab-4332-ae86-badfdc6c99af",
                "parentUUID": "3ad6c02f-efa9-437a-844c-a98babf357c1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "3ad6c02f-efa9-437a-844c-a98babf357c1",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should correctly create the actions required for removal of a unit",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: removeUnit Should correctly create the actions required for removal of a unit",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{ type: \"REMOVE_UNIT\", tpIndex: 1, unitIndex: 1, cost: 200, creditPoints: 6 }, { type: \"VALIDATE_COURSE\" }, { type: \"MODIFIED_COURSE_PLAN\" }];\n            var store = mockStore({});\n            store.dispatch(actions.removeUnit(1, 1, 6, 200));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "7112953c-e1ab-4332-ae86-badfdc6c99af",
                "parentUUID": "3ad6c02f-efa9-437a-844c-a98babf357c1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: clearCourse",
            "suites": [],
            "tests": [
              {
                "title": "Should create the actions for clearing the course",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: clearCourse Should create the actions for clearing the course",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{ type: \"CLEAR_COURSE\" }, { type: \"GET_NEXT_SEMESTER_STRING\" }, { type: \"VALIDATE_COURSE\" }];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.clearCourse());\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "a39bfcb0-c9a9-403d-9904-69854d2f5f03",
                "parentUUID": "f8ad7c75-8973-428b-b059-371202b7ddfe",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "f8ad7c75-8973-428b-b059-371202b7ddfe",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create the actions for clearing the course",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: clearCourse Should create the actions for clearing the course",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{ type: \"CLEAR_COURSE\" }, { type: \"GET_NEXT_SEMESTER_STRING\" }, { type: \"VALIDATE_COURSE\" }];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.clearCourse());\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "a39bfcb0-c9a9-403d-9904-69854d2f5f03",
                "parentUUID": "f8ad7c75-8973-428b-b059-371202b7ddfe",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: generateCourse",
            "suites": [],
            "tests": [
              {
                "title": "Should create the action for generating the course",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: generateCourse Should create the action for generating the course",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2016,\n    endYear: 2019\n};\n(0, _expect2.default)(actions.generateCourse(2016, 2019)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "10eb7649-240e-41e0-9c25-278bf53b6829",
                "parentUUID": "dad424f6-5b67-4b30-912a-5ca2f15ac926",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "dad424f6-5b67-4b30-912a-5ca2f15ac926",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create the action for generating the course",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: generateCourse Should create the action for generating the course",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2016,\n    endYear: 2019\n};\n(0, _expect2.default)(actions.generateCourse(2016, 2019)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "10eb7649-240e-41e0-9c25-278bf53b6829",
                "parentUUID": "dad424f6-5b67-4b30-912a-5ca2f15ac926",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: submitYearForm",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly create the actions required for submission of a year form",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: submitYearForm Should correctly create the actions required for submission of a year form",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{ type: \"SUBMIT_YEAR_FORM\", startYear: 2016, endYear: 2019 }, { type: \"GENERATE_COURSE\", startYear: 2016, endYear: 2019 }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\n            var store = mockStore({});\n            store.dispatch(actions.submitYearForm(2016, 2019));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "ce625b24-fd9b-4604-b8c7-01fdf931f336",
                "parentUUID": "9258397c-6953-41b6-8231-5c6dd02dffd2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "9258397c-6953-41b6-8231-5c6dd02dffd2",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should correctly create the actions required for submission of a year form",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: submitYearForm Should correctly create the actions required for submission of a year form",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{ type: \"SUBMIT_YEAR_FORM\", startYear: 2016, endYear: 2019 }, { type: \"GENERATE_COURSE\", startYear: 2016, endYear: 2019 }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\n            var store = mockStore({});\n            store.dispatch(actions.submitYearForm(2016, 2019));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "ce625b24-fd9b-4604-b8c7-01fdf931f336",
                "parentUUID": "9258397c-6953-41b6-8231-5c6dd02dffd2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: changeStartYear",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly create actions required to change the start year",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: changeStartYear Should correctly create actions required to change the start year",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{ type: \"CHANGE_START_YEAR\", year: 2020 }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\nvar store = mockStore({});\nstore.dispatch(actions.changeStartYear(2020));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "dfb93e35-a227-468a-948a-b6a9b0f9f7ae",
                "parentUUID": "9c2c5b9b-9b59-47c2-aee0-40a14d6c620a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "9c2c5b9b-9b59-47c2-aee0-40a14d6c620a",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should correctly create actions required to change the start year",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: changeStartYear Should correctly create actions required to change the start year",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{ type: \"CHANGE_START_YEAR\", year: 2020 }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\nvar store = mockStore({});\nstore.dispatch(actions.changeStartYear(2020));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "dfb93e35-a227-468a-948a-b6a9b0f9f7ae",
                "parentUUID": "9c2c5b9b-9b59-47c2-aee0-40a14d6c620a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 7
          },
          {
            "title": "AC: getNextSemesterString",
            "suites": [],
            "tests": [
              {
                "title": "Should create the action for generating the course",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: getNextSemesterString Should create the action for generating the course",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n};\n(0, _expect2.default)(actions.getNextSemesterString()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "2be5262d-1d4c-4693-af4a-9317dd4f33e9",
                "parentUUID": "028161a9-901d-4664-b2ba-aa254a1191d5",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "028161a9-901d-4664-b2ba-aa254a1191d5",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create the action for generating the course",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: getNextSemesterString Should create the action for generating the course",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n};\n(0, _expect2.default)(actions.getNextSemesterString()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "2be5262d-1d4c-4693-af4a-9317dd4f33e9",
                "parentUUID": "028161a9-901d-4664-b2ba-aa254a1191d5",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: getAffectedUnitsInColumn",
            "suites": [],
            "tests": [
              {
                "title": "Should create the action for getting affected units in an overload column",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: getAffectedUnitsInColumn Should create the action for getting affected units in an overload column",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"GET_AFFECTED_UNITS_IN_OVERLOAD_COLUMN\",\n    index: 4\n};\n(0, _expect2.default)(actions.getAffectedUnitsInColumn(4)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "bc6cbd78-5d87-4350-b0a5-b45fcb8a864c",
                "parentUUID": "5d3e704d-8cd0-427f-a5f6-ab505e42d647",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "5d3e704d-8cd0-427f-a5f6-ab505e42d647",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create the action for getting affected units in an overload column",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: getAffectedUnitsInColumn Should create the action for getting affected units in an overload column",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"GET_AFFECTED_UNITS_IN_OVERLOAD_COLUMN\",\n    index: 4\n};\n(0, _expect2.default)(actions.getAffectedUnitsInColumn(4)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "bc6cbd78-5d87-4350-b0a5-b45fcb8a864c",
                "parentUUID": "5d3e704d-8cd0-427f-a5f6-ab505e42d647",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: attemptToDeleteTeachingPeriod",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly create the actions required for deletion of a teaching period with units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: attemptToDeleteTeachingPeriod Should correctly create the actions required for deletion of a teaching period with units affected",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockUnits = [{ unitCode: \"TEST101\", unitName: \"unit1\" }, null, { unitCode: \"TEST102\", unitName: \"unit2\" }, null, null];\nvar expectedActions = [{ type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\" }, { type: \"UPDATE_AFFECTED_UNITS\", affectedUnits: [\"TEST101 - unit1\", \"TEST102 - unit2\"] }, { type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\", index: 1 }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDeleteTeachingPeriod(1, mockUnits));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "b2a7cff3-317c-42b3-8493-0b78ff2799e3",
                "parentUUID": "b442ba5f-4958-491f-a3f2-b3b8d0f77b57",
                "skipped": false
              },
              {
                "title": "Should correctly create the actions required for deletion of a teaching period with no units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: attemptToDeleteTeachingPeriod Should correctly create the actions required for deletion of a teaching period with no units affected",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockUnits = [null, null, null, null, null];\nvar expectedActions = [{ type: \"REMOVE_TEACHING_PERIOD\", index: 1, units: [null, null, null, null, null] }, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, { type: \"GET_NEXT_SEMESTER_STRING\" }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDeleteTeachingPeriod(1, mockUnits));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "3ebd03ac-bc91-4e35-b575-29f96db108c0",
                "parentUUID": "b442ba5f-4958-491f-a3f2-b3b8d0f77b57",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "b442ba5f-4958-491f-a3f2-b3b8d0f77b57",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should correctly create the actions required for deletion of a teaching period with units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: attemptToDeleteTeachingPeriod Should correctly create the actions required for deletion of a teaching period with units affected",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockUnits = [{ unitCode: \"TEST101\", unitName: \"unit1\" }, null, { unitCode: \"TEST102\", unitName: \"unit2\" }, null, null];\nvar expectedActions = [{ type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\" }, { type: \"UPDATE_AFFECTED_UNITS\", affectedUnits: [\"TEST101 - unit1\", \"TEST102 - unit2\"] }, { type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\", index: 1 }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDeleteTeachingPeriod(1, mockUnits));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "b2a7cff3-317c-42b3-8493-0b78ff2799e3",
                "parentUUID": "b442ba5f-4958-491f-a3f2-b3b8d0f77b57",
                "skipped": false
              },
              {
                "title": "Should correctly create the actions required for deletion of a teaching period with no units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: attemptToDeleteTeachingPeriod Should correctly create the actions required for deletion of a teaching period with no units affected",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockUnits = [null, null, null, null, null];\nvar expectedActions = [{ type: \"REMOVE_TEACHING_PERIOD\", index: 1, units: [null, null, null, null, null] }, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, { type: \"GET_NEXT_SEMESTER_STRING\" }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDeleteTeachingPeriod(1, mockUnits));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "3ebd03ac-bc91-4e35-b575-29f96db108c0",
                "parentUUID": "b442ba5f-4958-491f-a3f2-b3b8d0f77b57",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: attemptToDecreaseStudyLoad",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly create the actions required for decrease of a study load with units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: attemptToDecreaseStudyLoad Should correctly create the actions required for decrease of a study load with units affected",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockTeachingPeriods = [{ units: [null, null, { unitCode: \"TEST10A\", unitName: \"unitA\" }, null, { unitCode: \"TEST101\", unitName: \"unit1\" }] }, { units: [null, null, { unitCode: \"TEST10B\", unitName: \"unitB\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10C\", unitName: \"unitC\" }, null, { unitCode: \"TEST102\", unitName: \"unit2\" }] }, { units: [null, null, { unitCode: \"TEST10D\", unitName: \"unitD\" }, null, null] }];\nvar expectedActions = [{ type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\" }, { type: \"UPDATE_AFFECTED_UNITS\", affectedUnits: [\"TEST101 - unit1\", \"TEST102 - unit2\"] }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDecreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "692dc776-2348-422c-8528-6c72466baed2",
                "parentUUID": "a593780b-e5cd-4b4e-aef8-d9f10bfbb21d",
                "skipped": false
              },
              {
                "title": "Should correctly create the actions required for decrease of a study load with no units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: attemptToDecreaseStudyLoad Should correctly create the actions required for decrease of a study load with no units affected",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockTeachingPeriods = [{ units: [null, null, { unitCode: \"TEST10A\", unitName: \"unitA\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10B\", unitName: \"unitB\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10C\", unitName: \"unitC\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10D\", unitName: \"unitD\" }, null, null] }];\nvar expectedActions = [{ type: \"DECREASE_STUDY_LOAD\", units: [] }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDecreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "130aabb8-a718-44ab-9629-bfb2835145a8",
                "parentUUID": "a593780b-e5cd-4b4e-aef8-d9f10bfbb21d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "a593780b-e5cd-4b4e-aef8-d9f10bfbb21d",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should correctly create the actions required for decrease of a study load with units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: attemptToDecreaseStudyLoad Should correctly create the actions required for decrease of a study load with units affected",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockTeachingPeriods = [{ units: [null, null, { unitCode: \"TEST10A\", unitName: \"unitA\" }, null, { unitCode: \"TEST101\", unitName: \"unit1\" }] }, { units: [null, null, { unitCode: \"TEST10B\", unitName: \"unitB\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10C\", unitName: \"unitC\" }, null, { unitCode: \"TEST102\", unitName: \"unit2\" }] }, { units: [null, null, { unitCode: \"TEST10D\", unitName: \"unitD\" }, null, null] }];\nvar expectedActions = [{ type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\" }, { type: \"UPDATE_AFFECTED_UNITS\", affectedUnits: [\"TEST101 - unit1\", \"TEST102 - unit2\"] }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDecreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "692dc776-2348-422c-8528-6c72466baed2",
                "parentUUID": "a593780b-e5cd-4b4e-aef8-d9f10bfbb21d",
                "skipped": false
              },
              {
                "title": "Should correctly create the actions required for decrease of a study load with no units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: attemptToDecreaseStudyLoad Should correctly create the actions required for decrease of a study load with no units affected",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockTeachingPeriods = [{ units: [null, null, { unitCode: \"TEST10A\", unitName: \"unitA\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10B\", unitName: \"unitB\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10C\", unitName: \"unitC\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10D\", unitName: \"unitD\" }, null, null] }];\nvar expectedActions = [{ type: \"DECREASE_STUDY_LOAD\", units: [] }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDecreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "130aabb8-a718-44ab-9629-bfb2835145a8",
                "parentUUID": "a593780b-e5cd-4b4e-aef8-d9f10bfbb21d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: getAffectedUnitsInRow",
            "suites": [],
            "tests": [
              {
                "title": "Should create the action for getting affected units in an teaching period row",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: getAffectedUnitsInRow Should create the action for getting affected units in an teaching period row",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"GET_AFFECTED_UNITS_IN_TEACHING_PERIOD_ROW\",\n    index: 4\n};\n(0, _expect2.default)(actions.getAffectedUnitsInRow(4)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "345b29fd-6081-47f9-b1ee-734637681dbf",
                "parentUUID": "a74d20c0-6212-4cee-a163-210e00153450",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "a74d20c0-6212-4cee-a163-210e00153450",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create the action for getting affected units in an teaching period row",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: getAffectedUnitsInRow Should create the action for getting affected units in an teaching period row",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"GET_AFFECTED_UNITS_IN_TEACHING_PERIOD_ROW\",\n    index: 4\n};\n(0, _expect2.default)(actions.getAffectedUnitsInRow(4)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "345b29fd-6081-47f9-b1ee-734637681dbf",
                "parentUUID": "a74d20c0-6212-4cee-a163-210e00153450",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: validateCourse",
            "suites": [],
            "tests": [
              {
                "title": "Should create the action for validating the course",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: validateCourse Should create the action for validating the course",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"VALIDATE_COURSE\"\n};\n(0, _expect2.default)(actions.validateCourse()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "391702a8-34de-4452-9d0f-b6d009aaf26f",
                "parentUUID": "36671556-a640-454d-a8f8-392373ca6f90",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "36671556-a640-454d-a8f8-392373ca6f90",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create the action for validating the course",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: validateCourse Should create the action for validating the course",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"VALIDATE_COURSE\"\n};\n(0, _expect2.default)(actions.validateCourse()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "391702a8-34de-4452-9d0f-b6d009aaf26f",
                "parentUUID": "36671556-a640-454d-a8f8-392373ca6f90",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: highlightInvalidUnitSlots",
            "suites": [],
            "tests": [
              {
                "title": "Should create the action for highlighting the invalid unit slots",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: highlightInvalidUnitSlots Should create the action for highlighting the invalid unit slots",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: \"UnitTest\",\n    ignoreCoordinate: false\n};\n(0, _expect2.default)(actions.highlightInvalidUnitSlots(\"UnitTest\", false)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "1744a546-7cf4-4194-99c0-806ad127cf2e",
                "parentUUID": "2bd02fed-72f5-4762-9a4d-3b97e7592ab6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "2bd02fed-72f5-4762-9a4d-3b97e7592ab6",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create the action for highlighting the invalid unit slots",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: highlightInvalidUnitSlots Should create the action for highlighting the invalid unit slots",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: \"UnitTest\",\n    ignoreCoordinate: false\n};\n(0, _expect2.default)(actions.highlightInvalidUnitSlots(\"UnitTest\", false)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "1744a546-7cf4-4194-99c0-806ad127cf2e",
                "parentUUID": "2bd02fed-72f5-4762-9a4d-3b97e7592ab6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: clearHighlightingInvalidUnitSlots",
            "suites": [],
            "tests": [
              {
                "title": "Should create the action for clearing the highlighting for invalid unit slots",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: clearHighlightingInvalidUnitSlots Should create the action for clearing the highlighting for invalid unit slots",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"CLEAR_HIGHLIGHTING_INVALID_UNIT_SLOTS\"\n};\n(0, _expect2.default)(actions.clearHighlightingInvalidUnitSlots()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "61724cf8-86e7-4949-bfd6-36df93953115",
                "parentUUID": "7aae04d7-4988-4455-9587-d828185c852c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "7aae04d7-4988-4455-9587-d828185c852c",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create the action for clearing the highlighting for invalid unit slots",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: clearHighlightingInvalidUnitSlots Should create the action for clearing the highlighting for invalid unit slots",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"CLEAR_HIGHLIGHTING_INVALID_UNIT_SLOTS\"\n};\n(0, _expect2.default)(actions.clearHighlightingInvalidUnitSlots()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "61724cf8-86e7-4949-bfd6-36df93953115",
                "parentUUID": "7aae04d7-4988-4455-9587-d828185c852c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/actionCreators/CourseActions.spec.js",
        "uuid": "7c62eca1-2842-4611-aaff-82ad477ecf11",
        "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/CourseActions.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "ACTION-CREATOR: UIActions",
        "suites": [
          {
            "title": "AC: showInsertTeachingPeriodUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to show the insert teaching period UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showInsertTeachingPeriodUI Should create an action to show the insert teaching period UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"testTPCode\"\n};\n(0, _expect2.default)(actions.showInsertTeachingPeriodUI(\"testTPCode\")).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "1d72f3f0-5f73-4027-862c-5e0dba377c60",
                "parentUUID": "9a3b6be3-d44f-448a-8c33-80df8239dde5",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "9a3b6be3-d44f-448a-8c33-80df8239dde5",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to show the insert teaching period UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showInsertTeachingPeriodUI Should create an action to show the insert teaching period UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"testTPCode\"\n};\n(0, _expect2.default)(actions.showInsertTeachingPeriodUI(\"testTPCode\")).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "1d72f3f0-5f73-4027-862c-5e0dba377c60",
                "parentUUID": "9a3b6be3-d44f-448a-8c33-80df8239dde5",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: hideInsertTeachingPeriodUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to hide the insert teaching period UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideInsertTeachingPeriodUI Should create an action to hide the insert teaching period UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\n(0, _expect2.default)(actions.hideInsertTeachingPeriodUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "3df30752-9ffb-4324-86d1-badb084d5f60",
                "parentUUID": "cc6e3ad5-606e-4850-a8b1-2e86a1adbcad",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "cc6e3ad5-606e-4850-a8b1-2e86a1adbcad",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to hide the insert teaching period UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideInsertTeachingPeriodUI Should create an action to hide the insert teaching period UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\n(0, _expect2.default)(actions.hideInsertTeachingPeriodUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "3df30752-9ffb-4324-86d1-badb084d5f60",
                "parentUUID": "cc6e3ad5-606e-4850-a8b1-2e86a1adbcad",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: showAddingUnitUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to show the add unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showAddingUnitUI Should create an action to show the add unit UI",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_ADD_UNIT_UI\"\n};\n(0, _expect2.default)(actions.showAddingUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "5857ce7a-fff1-408a-9276-9222fcb83942",
                "parentUUID": "f202224e-2559-4842-8f29-a9a975f16664",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "f202224e-2559-4842-8f29-a9a975f16664",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to show the add unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showAddingUnitUI Should create an action to show the add unit UI",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_ADD_UNIT_UI\"\n};\n(0, _expect2.default)(actions.showAddingUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "5857ce7a-fff1-408a-9276-9222fcb83942",
                "parentUUID": "f202224e-2559-4842-8f29-a9a975f16664",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: hideAddingUnitUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to hide the add unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideAddingUnitUI Should create an action to hide the add unit UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_ADD_UNIT_UI\"\n};\n(0, _expect2.default)(actions.hideAddingUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "d2c8bde4-9cf8-4461-b493-9cbf3d98863d",
                "parentUUID": "58db3901-eb8f-4fce-8486-0525e9420f96",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "58db3901-eb8f-4fce-8486-0525e9420f96",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to hide the add unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideAddingUnitUI Should create an action to hide the add unit UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_ADD_UNIT_UI\"\n};\n(0, _expect2.default)(actions.hideAddingUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "d2c8bde4-9cf8-4461-b493-9cbf3d98863d",
                "parentUUID": "58db3901-eb8f-4fce-8486-0525e9420f96",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: showMoveUnitUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to show the move unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showMoveUnitUI Should create an action to show the move unit UI",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_MOVE_UNIT_UI\"\n};\n(0, _expect2.default)(actions.showMoveUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "b729e7d1-fbae-47c9-bb2c-50d790b93b83",
                "parentUUID": "4cc12b40-d1a5-4455-9123-53a4afb0bedf",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "4cc12b40-d1a5-4455-9123-53a4afb0bedf",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to show the move unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showMoveUnitUI Should create an action to show the move unit UI",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_MOVE_UNIT_UI\"\n};\n(0, _expect2.default)(actions.showMoveUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "b729e7d1-fbae-47c9-bb2c-50d790b93b83",
                "parentUUID": "4cc12b40-d1a5-4455-9123-53a4afb0bedf",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: hideMoveUnitUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to hide move unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideMoveUnitUI Should create an action to hide move unit UI",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_MOVE_UNIT_UI\"\n};\n(0, _expect2.default)(actions.hideMoveUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "4cbcd0bc-a8c7-4f44-8cde-d44670854630",
                "parentUUID": "60165111-914d-4413-a602-d8cf32bf2089",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "60165111-914d-4413-a602-d8cf32bf2089",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to hide move unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideMoveUnitUI Should create an action to hide move unit UI",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_MOVE_UNIT_UI\"\n};\n(0, _expect2.default)(actions.hideMoveUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "4cbcd0bc-a8c7-4f44-8cde-d44670854630",
                "parentUUID": "60165111-914d-4413-a602-d8cf32bf2089",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 4
          },
          {
            "title": "AC: showConfirmDeleteTeachingPeriodUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to show confirm delete teaching period UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showConfirmDeleteTeachingPeriodUI Should create an action to show confirm delete teaching period UI",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\n(0, _expect2.default)(actions.showConfirmDeleteTeachingPeriodUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "e766c394-bb0d-4c09-9236-81f1cf944db0",
                "parentUUID": "d1caebef-8879-468b-8c12-0c7fe5606a66",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "d1caebef-8879-468b-8c12-0c7fe5606a66",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to show confirm delete teaching period UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showConfirmDeleteTeachingPeriodUI Should create an action to show confirm delete teaching period UI",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\n(0, _expect2.default)(actions.showConfirmDeleteTeachingPeriodUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "e766c394-bb0d-4c09-9236-81f1cf944db0",
                "parentUUID": "d1caebef-8879-468b-8c12-0c7fe5606a66",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 6
          },
          {
            "title": "AC: hideConfirmDeleteTeachingPeriodUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to hide confirm delete teaching period UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideConfirmDeleteTeachingPeriodUI Should create an action to hide confirm delete teaching period UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\n(0, _expect2.default)(actions.hideConfirmDeleteTeachingPeriodUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "1d41829f-504e-45e2-ab29-8776c4d33bcd",
                "parentUUID": "a519ec5e-251e-4c2a-8746-eadf6a7a5508",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "a519ec5e-251e-4c2a-8746-eadf6a7a5508",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to hide confirm delete teaching period UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideConfirmDeleteTeachingPeriodUI Should create an action to hide confirm delete teaching period UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\n(0, _expect2.default)(actions.hideConfirmDeleteTeachingPeriodUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "1d41829f-504e-45e2-ab29-8776c4d33bcd",
                "parentUUID": "a519ec5e-251e-4c2a-8746-eadf6a7a5508",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: showConfirmDecreaseStudyLoadUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to show confirm decrease study load UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showConfirmDecreaseStudyLoadUI Should create an action to show confirm decrease study load UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\n(0, _expect2.default)(actions.showConfirmDecreaseStudyLoadUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "3e302e1f-ccd9-4d54-8f98-c088592f28c4",
                "parentUUID": "9f1bbba0-d5ff-43f6-b9e2-9159185d589a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "9f1bbba0-d5ff-43f6-b9e2-9159185d589a",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to show confirm decrease study load UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showConfirmDecreaseStudyLoadUI Should create an action to show confirm decrease study load UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\n(0, _expect2.default)(actions.showConfirmDecreaseStudyLoadUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "3e302e1f-ccd9-4d54-8f98-c088592f28c4",
                "parentUUID": "9f1bbba0-d5ff-43f6-b9e2-9159185d589a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: hideConfirmDecreaseStudyLoadUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to hide confirm decrease study load UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideConfirmDecreaseStudyLoadUI Should create an action to hide confirm decrease study load UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\n(0, _expect2.default)(actions.hideConfirmDecreaseStudyLoadUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "9b8045c9-3ee6-4d95-b071-14052240662c",
                "parentUUID": "e671a9cc-9348-49be-a026-d4170eef1fec",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "e671a9cc-9348-49be-a026-d4170eef1fec",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to hide confirm decrease study load UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideConfirmDecreaseStudyLoadUI Should create an action to hide confirm decrease study load UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\n(0, _expect2.default)(actions.hideConfirmDecreaseStudyLoadUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "9b8045c9-3ee6-4d95-b071-14052240662c",
                "parentUUID": "e671a9cc-9348-49be-a026-d4170eef1fec",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: showCustomUnitUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to show custum unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showCustomUnitUI Should create an action to show custum unit UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"TEST1001\"\n};\n(0, _expect2.default)(actions.showCustomUnitUI(\"TEST1001\")).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "82064b35-0041-4b75-9d76-8708bd2f3391",
                "parentUUID": "79cfcddf-b232-484f-adea-35734ddb4b2e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "79cfcddf-b232-484f-adea-35734ddb4b2e",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to show custum unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showCustomUnitUI Should create an action to show custum unit UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"TEST1001\"\n};\n(0, _expect2.default)(actions.showCustomUnitUI(\"TEST1001\")).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "82064b35-0041-4b75-9d76-8708bd2f3391",
                "parentUUID": "79cfcddf-b232-484f-adea-35734ddb4b2e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: hideCustomUnitUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to hide custom unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideCustomUnitUI Should create an action to hide custom unit UI",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\n(0, _expect2.default)(actions.hideCustomUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "82d1d33a-cbda-4cbb-844f-0db1ea798363",
                "parentUUID": "be15a8cb-e9bb-4d76-9f43-ef2b6d77b5ab",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "be15a8cb-e9bb-4d76-9f43-ef2b6d77b5ab",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to hide custom unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideCustomUnitUI Should create an action to hide custom unit UI",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\n(0, _expect2.default)(actions.hideCustomUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "82d1d33a-cbda-4cbb-844f-0db1ea798363",
                "parentUUID": "be15a8cb-e9bb-4d76-9f43-ef2b6d77b5ab",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: showSidebar",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to show sidebar",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showSidebar Should create an action to show sidebar",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_SIDEBAR\"\n};\n(0, _expect2.default)(actions.showSidebar()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "2d584868-5e48-4aba-93f5-b6e3dbf80df6",
                "parentUUID": "50ab5558-3ab5-410c-b3b6-ba806447d367",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "50ab5558-3ab5-410c-b3b6-ba806447d367",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to show sidebar",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showSidebar Should create an action to show sidebar",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_SIDEBAR\"\n};\n(0, _expect2.default)(actions.showSidebar()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "2d584868-5e48-4aba-93f5-b6e3dbf80df6",
                "parentUUID": "50ab5558-3ab5-410c-b3b6-ba806447d367",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: hideSidebar",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to hide sidebar",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideSidebar Should create an action to hide sidebar",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_SIDEBAR\"\n};\n(0, _expect2.default)(actions.hideSidebar()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "5abe6fe7-432e-4d26-98dc-6c9438c25755",
                "parentUUID": "973284cf-8330-4404-ac71-1db6847aa7c5",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "973284cf-8330-4404-ac71-1db6847aa7c5",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to hide sidebar",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideSidebar Should create an action to hide sidebar",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_SIDEBAR\"\n};\n(0, _expect2.default)(actions.hideSidebar()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "5abe6fe7-432e-4d26-98dc-6c9438c25755",
                "parentUUID": "973284cf-8330-4404-ac71-1db6847aa7c5",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "AC: setCourseReadOnly",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to set the course to read only",
                "fullTitle": "ACTION-CREATOR: UIActions AC: setCourseReadOnly Should create an action to set the course to read only",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\n(0, _expect2.default)(actions.setCourseReadOnly()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "df56fb4f-3cf9-4449-95ea-eb47d6fc99fa",
                "parentUUID": "30daee2a-804f-46df-9433-421df9043bd2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "30daee2a-804f-46df-9433-421df9043bd2",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to set the course to read only",
                "fullTitle": "ACTION-CREATOR: UIActions AC: setCourseReadOnly Should create an action to set the course to read only",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\n(0, _expect2.default)(actions.setCourseReadOnly()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "df56fb4f-3cf9-4449-95ea-eb47d6fc99fa",
                "parentUUID": "30daee2a-804f-46df-9433-421df9043bd2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "AC: setCourseReadAndWrite",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to set the course to read and write",
                "fullTitle": "ACTION-CREATOR: UIActions AC: setCourseReadAndWrite Should create an action to set the course to read and write",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\n(0, _expect2.default)(actions.setCourseReadAndWrite()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "687986b7-ef2a-4762-874e-7e468b6ca696",
                "parentUUID": "80788b71-f472-4952-ada0-04e2e49c809a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "80788b71-f472-4952-ada0-04e2e49c809a",
            "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to set the course to read and write",
                "fullTitle": "ACTION-CREATOR: UIActions AC: setCourseReadAndWrite Should create an action to set the course to read and write",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\n(0, _expect2.default)(actions.setCourseReadAndWrite()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "687986b7-ef2a-4762-874e-7e468b6ca696",
                "parentUUID": "80788b71-f472-4952-ada0-04e2e49c809a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/actionCreators/UIActions.spec.js",
        "uuid": "98a9b5e8-aa70-4931-843c-4209a9de2fed",
        "fullFile": "/home/staff01/Documents/monPlanR/test/actionCreators/UIActions.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "COMPONENT: Notification",
        "suites": [],
        "tests": [
          {
            "title": "Should render a notification title and a message",
            "fullTitle": "COMPONENT: Notification Should render a notification title and a message",
            "timedOut": false,
            "duration": 95,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, {\n    title: \"This is a test\",\n    message: \"Some message goes over here\"\n}));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(\"This is a test\");\nexpect(wrapper.text().replace(\"This is a test\", \"\").trim()).to.equal(\"Some message goes over here\");",
            "err": {},
            "isRoot": false,
            "uuid": "b328dd67-f4a9-475a-8fa7-f01fa7122866",
            "parentUUID": "85c5723e-1b55-4064-8bb5-fed57fda2a9e",
            "skipped": false
          },
          {
            "title": "Should have a default level to be info if it is not specified",
            "fullTitle": "COMPONENT: Notification Should have a default level to be info if it is not specified",
            "timedOut": false,
            "duration": 32,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, null)).find(\".info.message\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "0f8a01ce-fe3b-47dc-ba82-822ee69c5e05",
            "parentUUID": "85c5723e-1b55-4064-8bb5-fed57fda2a9e",
            "skipped": false
          },
          {
            "title": "Should follow a specified level",
            "fullTitle": "COMPONENT: Notification Should follow a specified level",
            "timedOut": false,
            "duration": 57,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"info\" })).find(\".info.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"warning\" })).find(\".warning.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"error\" })).find(\".negative.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"success\" })).find(\".positive.message\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "7aa8f290-6a62-4e1f-9f7b-b5385b353341",
            "parentUUID": "85c5723e-1b55-4064-8bb5-fed57fda2a9e",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/components/Notifications/Notification.spec.jsx",
        "uuid": "85c5723e-1b55-4064-8bb5-fed57fda2a9e",
        "fullFile": "/home/staff01/Documents/monPlanR/test/components/Notifications/Notification.spec.jsx",
        "passes": [
          {
            "title": "Should render a notification title and a message",
            "fullTitle": "COMPONENT: Notification Should render a notification title and a message",
            "timedOut": false,
            "duration": 95,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, {\n    title: \"This is a test\",\n    message: \"Some message goes over here\"\n}));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(\"This is a test\");\nexpect(wrapper.text().replace(\"This is a test\", \"\").trim()).to.equal(\"Some message goes over here\");",
            "err": {},
            "isRoot": false,
            "uuid": "b328dd67-f4a9-475a-8fa7-f01fa7122866",
            "parentUUID": "85c5723e-1b55-4064-8bb5-fed57fda2a9e",
            "skipped": false
          },
          {
            "title": "Should have a default level to be info if it is not specified",
            "fullTitle": "COMPONENT: Notification Should have a default level to be info if it is not specified",
            "timedOut": false,
            "duration": 32,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, null)).find(\".info.message\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "0f8a01ce-fe3b-47dc-ba82-822ee69c5e05",
            "parentUUID": "85c5723e-1b55-4064-8bb5-fed57fda2a9e",
            "skipped": false
          },
          {
            "title": "Should follow a specified level",
            "fullTitle": "COMPONENT: Notification Should follow a specified level",
            "timedOut": false,
            "duration": 57,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"info\" })).find(\".info.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"warning\" })).find(\".warning.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"error\" })).find(\".negative.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"success\" })).find(\".positive.message\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "7aa8f290-6a62-4e1f-9f7b-b5385b353341",
            "parentUUID": "85c5723e-1b55-4064-8bb5-fed57fda2a9e",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 3,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 184
      },
      {
        "title": "COMPONENT: InsertTeachingPeriodButton",
        "suites": [
          {
            "title": "#addSemester()",
            "suites": [],
            "tests": [
              {
                "title": "should be called exactly once when main button has been clicked",
                "fullTitle": "COMPONENT: InsertTeachingPeriodButton #addSemester() should be called exactly once when main button has been clicked",
                "timedOut": false,
                "duration": 30,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var addSemester = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: identity,\n    addSemester: addSemester }));\nwrapper.find(\"Button\").forEach(function (button) {\n    button.simulate(\"click\");\n});\nexpect(addSemester).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "7160aa9e-4496-402b-8513-1d1d62784c19",
                "parentUUID": "0af37ec4-dce4-46d9-bd90-9f9bf23c72b3",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/components/TeachingPeriod/InsertTeachingPeriodButton.spec.jsx",
            "uuid": "0af37ec4-dce4-46d9-bd90-9f9bf23c72b3",
            "fullFile": "/home/staff01/Documents/monPlanR/test/components/TeachingPeriod/InsertTeachingPeriodButton.spec.jsx",
            "passes": [
              {
                "title": "should be called exactly once when main button has been clicked",
                "fullTitle": "COMPONENT: InsertTeachingPeriodButton #addSemester() should be called exactly once when main button has been clicked",
                "timedOut": false,
                "duration": 30,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var addSemester = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: identity,\n    addSemester: addSemester }));\nwrapper.find(\"Button\").forEach(function (button) {\n    button.simulate(\"click\");\n});\nexpect(addSemester).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "7160aa9e-4496-402b-8513-1d1d62784c19",
                "parentUUID": "0af37ec4-dce4-46d9-bd90-9f9bf23c72b3",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 30
          },
          {
            "title": "#insert()",
            "suites": [],
            "tests": [
              {
                "title": "should be called as many times as the number of insert teaching periods options upon click",
                "fullTitle": "COMPONENT: InsertTeachingPeriodButton #insert() should be called as many times as the number of insert teaching periods options upon click",
                "timedOut": false,
                "duration": 31,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var insert = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: insert,\n    addSemester: identity }));\nvar dropdownItems = wrapper.find(\".item\");\ndropdownItems.forEach(function (node) {\n    return node.simulate(\"click\");\n});\nexpect(insert).to.have.callCount(dropdownItems.length);",
                "err": {},
                "isRoot": false,
                "uuid": "a8473f41-8272-40fe-8fe5-d96de4def382",
                "parentUUID": "d78cfa94-a7ac-495e-9d9f-0e4b17c51f9e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/components/TeachingPeriod/InsertTeachingPeriodButton.spec.jsx",
            "uuid": "d78cfa94-a7ac-495e-9d9f-0e4b17c51f9e",
            "fullFile": "/home/staff01/Documents/monPlanR/test/components/TeachingPeriod/InsertTeachingPeriodButton.spec.jsx",
            "passes": [
              {
                "title": "should be called as many times as the number of insert teaching periods options upon click",
                "fullTitle": "COMPONENT: InsertTeachingPeriodButton #insert() should be called as many times as the number of insert teaching periods options upon click",
                "timedOut": false,
                "duration": 31,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var insert = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: insert,\n    addSemester: identity }));\nvar dropdownItems = wrapper.find(\".item\");\ndropdownItems.forEach(function (node) {\n    return node.simulate(\"click\");\n});\nexpect(insert).to.have.callCount(dropdownItems.length);",
                "err": {},
                "isRoot": false,
                "uuid": "a8473f41-8272-40fe-8fe5-d96de4def382",
                "parentUUID": "d78cfa94-a7ac-495e-9d9f-0e4b17c51f9e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 31
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/components/TeachingPeriod/InsertTeachingPeriodButton.spec.jsx",
        "uuid": "f81e8cc0-5e6f-4d70-b141-aeb8728484a6",
        "fullFile": "/home/staff01/Documents/monPlanR/test/components/TeachingPeriod/InsertTeachingPeriodButton.spec.jsx",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "COMPONENT: SetuRating",
        "suites": [],
        "tests": [
          {
            "title": "should render two ratings",
            "fullTitle": "COMPONENT: SetuRating should render two ratings",
            "timedOut": false,
            "duration": 61,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, null)).find(\".rating\")).to.have.length(2);",
            "err": {},
            "isRoot": false,
            "uuid": "063277b3-069b-4518-835c-d0b59843ff73",
            "parentUUID": "58b05adc-9d17-4757-a3ec-81365378954d",
            "skipped": false
          },
          {
            "title": "should render a book if learning ratings is >=2.5",
            "fullTitle": "COMPONENT: SetuRating should render a book if learning ratings is >=2.5",
            "timedOut": false,
            "duration": 98,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 4.13 })).find(\".book\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.50 })).find(\".book\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "47149133-e782-49d0-937b-c8e45b2d27c7",
            "parentUUID": "58b05adc-9d17-4757-a3ec-81365378954d",
            "skipped": false
          },
          {
            "title": "should render a remove circle if learning ratings is <2.5",
            "fullTitle": "COMPONENT: SetuRating should render a remove circle if learning ratings is <2.5",
            "timedOut": false,
            "duration": 87,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 1.51 })).find(\".remove.circle\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.49 })).find(\".remove.circle\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "b6b6b46d-c7b1-4959-8921-85ab6999454a",
            "parentUUID": "58b05adc-9d17-4757-a3ec-81365378954d",
            "skipped": false
          },
          {
            "title": "should render a thumbs up if enjoyment ratings is >=2.5",
            "fullTitle": "COMPONENT: SetuRating should render a thumbs up if enjoyment ratings is >=2.5",
            "timedOut": false,
            "duration": 66,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 4.13 })).find(\".thumbs.up\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.50 })).find(\".thumbs.up\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "e8c10f4d-59d4-47dd-9af9-4d37cab5d3d9",
            "parentUUID": "58b05adc-9d17-4757-a3ec-81365378954d",
            "skipped": false
          },
          {
            "title": "should render a thumbs down if enjoyment ratings is <2.5",
            "fullTitle": "COMPONENT: SetuRating should render a thumbs down if enjoyment ratings is <2.5",
            "timedOut": false,
            "duration": 65,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 1.51 })).find(\".thumbs.down\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.49 })).find(\".thumbs.down\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "be7ff447-cb49-417f-8bf4-c578c117bdf3",
            "parentUUID": "58b05adc-9d17-4757-a3ec-81365378954d",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/components/Unit/SetuRating.spec.jsx",
        "uuid": "58b05adc-9d17-4757-a3ec-81365378954d",
        "fullFile": "/home/staff01/Documents/monPlanR/test/components/Unit/SetuRating.spec.jsx",
        "passes": [
          {
            "title": "should render two ratings",
            "fullTitle": "COMPONENT: SetuRating should render two ratings",
            "timedOut": false,
            "duration": 61,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, null)).find(\".rating\")).to.have.length(2);",
            "err": {},
            "isRoot": false,
            "uuid": "063277b3-069b-4518-835c-d0b59843ff73",
            "parentUUID": "58b05adc-9d17-4757-a3ec-81365378954d",
            "skipped": false
          },
          {
            "title": "should render a book if learning ratings is >=2.5",
            "fullTitle": "COMPONENT: SetuRating should render a book if learning ratings is >=2.5",
            "timedOut": false,
            "duration": 98,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 4.13 })).find(\".book\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.50 })).find(\".book\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "47149133-e782-49d0-937b-c8e45b2d27c7",
            "parentUUID": "58b05adc-9d17-4757-a3ec-81365378954d",
            "skipped": false
          },
          {
            "title": "should render a remove circle if learning ratings is <2.5",
            "fullTitle": "COMPONENT: SetuRating should render a remove circle if learning ratings is <2.5",
            "timedOut": false,
            "duration": 87,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 1.51 })).find(\".remove.circle\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.49 })).find(\".remove.circle\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "b6b6b46d-c7b1-4959-8921-85ab6999454a",
            "parentUUID": "58b05adc-9d17-4757-a3ec-81365378954d",
            "skipped": false
          },
          {
            "title": "should render a thumbs up if enjoyment ratings is >=2.5",
            "fullTitle": "COMPONENT: SetuRating should render a thumbs up if enjoyment ratings is >=2.5",
            "timedOut": false,
            "duration": 66,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 4.13 })).find(\".thumbs.up\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.50 })).find(\".thumbs.up\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "e8c10f4d-59d4-47dd-9af9-4d37cab5d3d9",
            "parentUUID": "58b05adc-9d17-4757-a3ec-81365378954d",
            "skipped": false
          },
          {
            "title": "should render a thumbs down if enjoyment ratings is <2.5",
            "fullTitle": "COMPONENT: SetuRating should render a thumbs down if enjoyment ratings is <2.5",
            "timedOut": false,
            "duration": 65,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 1.51 })).find(\".thumbs.down\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.49 })).find(\".thumbs.down\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "be7ff447-cb49-417f-8bf4-c578c117bdf3",
            "parentUUID": "58b05adc-9d17-4757-a3ec-81365378954d",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 5,
        "totalPasses": 5,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 377
      },
      {
        "title": "COMPONENT: UnitMessage",
        "suites": [
          {
            "title": "#presentational",
            "suites": [],
            "tests": [
              {
                "title": "should only render a unit code and a unit name",
                "fullTitle": "COMPONENT: UnitMessage #presentational should only render a unit code and a unit name",
                "timedOut": false,
                "duration": 38,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var unitCode = \"ABC1234\";\nvar unitName = \"Example unit\";\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: unitCode,\n    name: unitName }));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(unitCode);\nexpect(wrapper.find(\".message\").text().replace(unitCode, \"\").trim()).to.equal(unitName);",
                "err": {},
                "isRoot": false,
                "uuid": "9fd6fceb-67a4-48d4-894c-9218cd75e56f",
                "parentUUID": "3abacfe2-9cc2-447e-a8f0-81b80e91f8ce",
                "skipped": false
              },
              {
                "title": "should render a close button only when mouse is over the unit",
                "fullTitle": "COMPONENT: UnitMessage #presentational should render a close button only when mouse is over the unit",
                "timedOut": false,
                "duration": 79,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    hovering: false }));\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");\nwrapper.setProps({\n    hovering: true\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"visible\");\nwrapper.setProps({\n    hovering: false\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");",
                "err": {},
                "isRoot": false,
                "uuid": "842b6719-7d38-427f-897d-f485525ea9db",
                "parentUUID": "3abacfe2-9cc2-447e-a8f0-81b80e91f8ce",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/components/Unit/UnitMessage.spec.jsx",
            "uuid": "3abacfe2-9cc2-447e-a8f0-81b80e91f8ce",
            "fullFile": "/home/staff01/Documents/monPlanR/test/components/Unit/UnitMessage.spec.jsx",
            "passes": [
              {
                "title": "should only render a unit code and a unit name",
                "fullTitle": "COMPONENT: UnitMessage #presentational should only render a unit code and a unit name",
                "timedOut": false,
                "duration": 38,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var unitCode = \"ABC1234\";\nvar unitName = \"Example unit\";\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: unitCode,\n    name: unitName }));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(unitCode);\nexpect(wrapper.find(\".message\").text().replace(unitCode, \"\").trim()).to.equal(unitName);",
                "err": {},
                "isRoot": false,
                "uuid": "9fd6fceb-67a4-48d4-894c-9218cd75e56f",
                "parentUUID": "3abacfe2-9cc2-447e-a8f0-81b80e91f8ce",
                "skipped": false
              },
              {
                "title": "should render a close button only when mouse is over the unit",
                "fullTitle": "COMPONENT: UnitMessage #presentational should render a close button only when mouse is over the unit",
                "timedOut": false,
                "duration": 79,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    hovering: false }));\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");\nwrapper.setProps({\n    hovering: true\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"visible\");\nwrapper.setProps({\n    hovering: false\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");",
                "err": {},
                "isRoot": false,
                "uuid": "842b6719-7d38-427f-897d-f485525ea9db",
                "parentUUID": "3abacfe2-9cc2-447e-a8f0-81b80e91f8ce",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 117
          },
          {
            "title": "#events",
            "suites": [],
            "tests": [
              {
                "title": "Should call willAddUnit if unit is a newUnit and it has been clicked",
                "fullTitle": "COMPONENT: UnitMessage #events Should call willAddUnit if unit is a newUnit and it has been clicked",
                "timedOut": false,
                "duration": 74,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    newUnit: true,\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    willAddUnit: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"click\");\nexpect(eventFunc).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "a29f31da-c6fe-4199-8cee-53411d80bec4",
                "parentUUID": "eeb2da63-a44a-45ba-ad49-4a073885ed58",
                "skipped": false
              },
              {
                "title": "Should call handleUnitMouseOver when mouse is over the unit",
                "fullTitle": "COMPONENT: UnitMessage #events Should call handleUnitMouseOver when mouse is over the unit",
                "timedOut": false,
                "duration": 51,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseOver: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseOver\");\nexpect(eventFunc).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "46fb68aa-273d-4335-a54a-20a0571dfa5f",
                "parentUUID": "eeb2da63-a44a-45ba-ad49-4a073885ed58",
                "skipped": false
              },
              {
                "title": "Should call handleUnitMouseMove when mouse moves over the unit",
                "fullTitle": "COMPONENT: UnitMessage #events Should call handleUnitMouseMove when mouse moves over the unit",
                "timedOut": false,
                "duration": 31,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseMove: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseMove\");\nexpect(eventFunc).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "2daf59c7-c246-45e1-a922-c95e46c103d7",
                "parentUUID": "eeb2da63-a44a-45ba-ad49-4a073885ed58",
                "skipped": false
              },
              {
                "title": "Should call handleUnitMouseOut when mouse is over the unit",
                "fullTitle": "COMPONENT: UnitMessage #events Should call handleUnitMouseOut when mouse is over the unit",
                "timedOut": false,
                "duration": 25,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseOut: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseOut\");\nexpect(eventFunc).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "7ca0f9f8-6a09-44c9-afb8-6b6fadc4da53",
                "parentUUID": "eeb2da63-a44a-45ba-ad49-4a073885ed58",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/components/Unit/UnitMessage.spec.jsx",
            "uuid": "eeb2da63-a44a-45ba-ad49-4a073885ed58",
            "fullFile": "/home/staff01/Documents/monPlanR/test/components/Unit/UnitMessage.spec.jsx",
            "passes": [
              {
                "title": "Should call willAddUnit if unit is a newUnit and it has been clicked",
                "fullTitle": "COMPONENT: UnitMessage #events Should call willAddUnit if unit is a newUnit and it has been clicked",
                "timedOut": false,
                "duration": 74,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    newUnit: true,\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    willAddUnit: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"click\");\nexpect(eventFunc).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "a29f31da-c6fe-4199-8cee-53411d80bec4",
                "parentUUID": "eeb2da63-a44a-45ba-ad49-4a073885ed58",
                "skipped": false
              },
              {
                "title": "Should call handleUnitMouseOver when mouse is over the unit",
                "fullTitle": "COMPONENT: UnitMessage #events Should call handleUnitMouseOver when mouse is over the unit",
                "timedOut": false,
                "duration": 51,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseOver: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseOver\");\nexpect(eventFunc).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "46fb68aa-273d-4335-a54a-20a0571dfa5f",
                "parentUUID": "eeb2da63-a44a-45ba-ad49-4a073885ed58",
                "skipped": false
              },
              {
                "title": "Should call handleUnitMouseMove when mouse moves over the unit",
                "fullTitle": "COMPONENT: UnitMessage #events Should call handleUnitMouseMove when mouse moves over the unit",
                "timedOut": false,
                "duration": 31,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseMove: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseMove\");\nexpect(eventFunc).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "2daf59c7-c246-45e1-a922-c95e46c103d7",
                "parentUUID": "eeb2da63-a44a-45ba-ad49-4a073885ed58",
                "skipped": false
              },
              {
                "title": "Should call handleUnitMouseOut when mouse is over the unit",
                "fullTitle": "COMPONENT: UnitMessage #events Should call handleUnitMouseOut when mouse is over the unit",
                "timedOut": false,
                "duration": 25,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseOut: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseOut\");\nexpect(eventFunc).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "7ca0f9f8-6a09-44c9-afb8-6b6fadc4da53",
                "parentUUID": "eeb2da63-a44a-45ba-ad49-4a073885ed58",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 181
          },
          {
            "title": "#DnD",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly call movingUnit when it is being dragged",
                "fullTitle": "COMPONENT: UnitMessage #DnD Should correctly call movingUnit when it is being dragged",
                "timedOut": false,
                "duration": 12,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "testingBeginDrag = true;\ntestingEndDrag = false;\nbackend.simulateBeginDrag([sourceId]);\nexpect(movingUnitSpy).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "035ba8fc-493a-4cfa-a0a8-2fc8d163dd52",
                "parentUUID": "986f17c1-ac3b-438b-ad62-e2e359ce4b20",
                "skipped": false
              },
              {
                "title": "Should correctylc call cancelMovingUnit ",
                "fullTitle": "COMPONENT: UnitMessage #DnD Should correctylc call cancelMovingUnit ",
                "timedOut": false,
                "duration": 20,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "testingBeginDrag = false;\ntestingEndDrag = true;\nbackend.simulateBeginDrag([sourceId]);\nbackend.simulateEndDrag(sourceId);\nexpect(cancelMovingUnitSpy).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "f0e26388-3e6b-4437-918e-7b3dfac43736",
                "parentUUID": "986f17c1-ac3b-438b-ad62-e2e359ce4b20",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/components/Unit/UnitMessage.spec.jsx",
            "uuid": "986f17c1-ac3b-438b-ad62-e2e359ce4b20",
            "fullFile": "/home/staff01/Documents/monPlanR/test/components/Unit/UnitMessage.spec.jsx",
            "passes": [
              {
                "title": "Should correctly call movingUnit when it is being dragged",
                "fullTitle": "COMPONENT: UnitMessage #DnD Should correctly call movingUnit when it is being dragged",
                "timedOut": false,
                "duration": 12,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "testingBeginDrag = true;\ntestingEndDrag = false;\nbackend.simulateBeginDrag([sourceId]);\nexpect(movingUnitSpy).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "035ba8fc-493a-4cfa-a0a8-2fc8d163dd52",
                "parentUUID": "986f17c1-ac3b-438b-ad62-e2e359ce4b20",
                "skipped": false
              },
              {
                "title": "Should correctylc call cancelMovingUnit ",
                "fullTitle": "COMPONENT: UnitMessage #DnD Should correctylc call cancelMovingUnit ",
                "timedOut": false,
                "duration": 20,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "testingBeginDrag = false;\ntestingEndDrag = true;\nbackend.simulateBeginDrag([sourceId]);\nbackend.simulateEndDrag(sourceId);\nexpect(cancelMovingUnitSpy).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "f0e26388-3e6b-4437-918e-7b3dfac43736",
                "parentUUID": "986f17c1-ac3b-438b-ad62-e2e359ce4b20",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 32
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/components/Unit/UnitMessage.spec.jsx",
        "uuid": "f131321b-76ce-4885-8508-fe2d512faa59",
        "fullFile": "/home/staff01/Documents/monPlanR/test/components/Unit/UnitMessage.spec.jsx",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "REDUCER: Counter",
        "suites": [
          {
            "title": "ACTION: INCREMENT_CREDIT_POINTS",
            "suites": [],
            "tests": [
              {
                "title": "Should increment the credit point state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: INCREMENT_CREDIT_POINTS Should increment the credit point state by a given value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 2, creditPoints: 0 };\nvar action = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 2,\n    creditPoints: 1\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1c37c067-fb29-4ab1-9c00-68607bb12679",
                "parentUUID": "94dca748-9b9d-4377-99fd-8789d30baf1d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "94dca748-9b9d-4377-99fd-8789d30baf1d",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should increment the credit point state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: INCREMENT_CREDIT_POINTS Should increment the credit point state by a given value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 2, creditPoints: 0 };\nvar action = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 2,\n    creditPoints: 1\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1c37c067-fb29-4ab1-9c00-68607bb12679",
                "parentUUID": "94dca748-9b9d-4377-99fd-8789d30baf1d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: DECREMENT_CREDIT_POINTS",
            "suites": [],
            "tests": [
              {
                "title": "Should decrement the credit point state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state by a given value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "4246d247-7d72-4706-9633-7be5db193aa5",
                "parentUUID": "9cd2c4ae-6239-4cca-8917-7894e04324a8",
                "skipped": false
              },
              {
                "title": "Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 0\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "84fd273f-4842-4ee3-b8fe-55ee99f119d4",
                "parentUUID": "9cd2c4ae-6239-4cca-8917-7894e04324a8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "9cd2c4ae-6239-4cca-8917-7894e04324a8",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should decrement the credit point state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state by a given value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "4246d247-7d72-4706-9633-7be5db193aa5",
                "parentUUID": "9cd2c4ae-6239-4cca-8917-7894e04324a8",
                "skipped": false
              },
              {
                "title": "Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 0\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "84fd273f-4842-4ee3-b8fe-55ee99f119d4",
                "parentUUID": "9cd2c4ae-6239-4cca-8917-7894e04324a8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: INCREMENT_COST",
            "suites": [],
            "tests": [
              {
                "title": "Should increment the cost state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: INCREMENT_COST Should increment the cost state by a given value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 20, creditPoints: 13 };\nvar action = {\n    type: \"INCREMENT_COST\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 21,\n    creditPoints: 13\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "78e2d3e1-6bbf-4b62-9255-52fd24bc9496",
                "parentUUID": "0f4a0a84-666a-4b2c-955e-14528ddf184f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "0f4a0a84-666a-4b2c-955e-14528ddf184f",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should increment the cost state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: INCREMENT_COST Should increment the cost state by a given value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 20, creditPoints: 13 };\nvar action = {\n    type: \"INCREMENT_COST\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 21,\n    creditPoints: 13\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "78e2d3e1-6bbf-4b62-9255-52fd24bc9496",
                "parentUUID": "0f4a0a84-666a-4b2c-955e-14528ddf184f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: DECREMENT_COST",
            "suites": [],
            "tests": [
              {
                "title": "Should decrement the cost state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_COST Should decrement the cost state by a given value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e188be9c-340a-47b5-a2d3-809f6ac28b45",
                "parentUUID": "624ca6da-98ff-49a9-99dd-8e9900d98645",
                "skipped": false
              },
              {
                "title": "Should decrement the cost state to 0 if a value given is larger than the current credit point value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_COST Should decrement the cost state to 0 if a value given is larger than the current credit point value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 0,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7e289d10-36f6-4ce5-9d79-93ce7718eefa",
                "parentUUID": "624ca6da-98ff-49a9-99dd-8e9900d98645",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "624ca6da-98ff-49a9-99dd-8e9900d98645",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should decrement the cost state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_COST Should decrement the cost state by a given value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e188be9c-340a-47b5-a2d3-809f6ac28b45",
                "parentUUID": "624ca6da-98ff-49a9-99dd-8e9900d98645",
                "skipped": false
              },
              {
                "title": "Should decrement the cost state to 0 if a value given is larger than the current credit point value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_COST Should decrement the cost state to 0 if a value given is larger than the current credit point value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 0,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7e289d10-36f6-4ce5-9d79-93ce7718eefa",
                "parentUUID": "624ca6da-98ff-49a9-99dd-8e9900d98645",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: CLEAR_COURSE",
            "suites": [],
            "tests": [
              {
                "title": "Should reset the cost and credit point counters to 0",
                "fullTitle": "REDUCER: Counter ACTION: CLEAR_COURSE Should reset the cost and credit point counters to 0",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b14ada3f-6446-4543-9711-b03c713914a8",
                "parentUUID": "e3073ebc-aaac-4b61-9cd8-0c5c61cdc269",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "e3073ebc-aaac-4b61-9cd8-0c5c61cdc269",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should reset the cost and credit point counters to 0",
                "fullTitle": "REDUCER: Counter ACTION: CLEAR_COURSE Should reset the cost and credit point counters to 0",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b14ada3f-6446-4543-9711-b03c713914a8",
                "parentUUID": "e3073ebc-aaac-4b61-9cd8-0c5c61cdc269",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: REMOVE_TEACHING_PERIOD",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly go through and decrement the counters for each value ",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_TEACHING_PERIOD Should correctly go through and decrement the counters for each value ",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { cost: 2, creditPoints: 20 }, { cost: 5, creditPoints: 10 }, null]\n};\nvar stateAfter = { cost: 43, creditPoints: 10 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1961357d-0c8f-42a5-98c1-31e9d2f907be",
                "parentUUID": "db51b15d-5bee-44ce-9c1f-3bd56fbb2c76",
                "skipped": false
              },
              {
                "title": "Should not decrement the counters below 0 ",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_TEACHING_PERIOD Should not decrement the counters below 0 ",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { cost: 25, creditPoints: 20 }, { cost: 30, creditPoints: 30 }, { cost: 0, creditPoints: 10 }]\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5633450a-187d-4f6b-88db-221a4141378b",
                "parentUUID": "db51b15d-5bee-44ce-9c1f-3bd56fbb2c76",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "db51b15d-5bee-44ce-9c1f-3bd56fbb2c76",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should correctly go through and decrement the counters for each value ",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_TEACHING_PERIOD Should correctly go through and decrement the counters for each value ",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { cost: 2, creditPoints: 20 }, { cost: 5, creditPoints: 10 }, null]\n};\nvar stateAfter = { cost: 43, creditPoints: 10 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1961357d-0c8f-42a5-98c1-31e9d2f907be",
                "parentUUID": "db51b15d-5bee-44ce-9c1f-3bd56fbb2c76",
                "skipped": false
              },
              {
                "title": "Should not decrement the counters below 0 ",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_TEACHING_PERIOD Should not decrement the counters below 0 ",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { cost: 25, creditPoints: 20 }, { cost: 30, creditPoints: 30 }, { cost: 0, creditPoints: 10 }]\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5633450a-187d-4f6b-88db-221a4141378b",
                "parentUUID": "db51b15d-5bee-44ce-9c1f-3bd56fbb2c76",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: REMOVE_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly decrement the counters based on the given units creditpoints and cost",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_UNIT Should correctly decrement the counters based on the given units creditpoints and cost",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 20 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d00c8a6d-c821-4da0-90a6-4c00f8011d52",
                "parentUUID": "b0ea797e-be63-4a7f-9e82-345477c38da5",
                "skipped": false
              },
              {
                "title": "Should not decrement the counters below 0",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_UNIT Should not decrement the counters below 0",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d4a4ff38-15e0-4d43-a587-5a48cce575a9",
                "parentUUID": "b0ea797e-be63-4a7f-9e82-345477c38da5",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "b0ea797e-be63-4a7f-9e82-345477c38da5",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should correctly decrement the counters based on the given units creditpoints and cost",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_UNIT Should correctly decrement the counters based on the given units creditpoints and cost",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 20 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d00c8a6d-c821-4da0-90a6-4c00f8011d52",
                "parentUUID": "b0ea797e-be63-4a7f-9e82-345477c38da5",
                "skipped": false
              },
              {
                "title": "Should not decrement the counters below 0",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_UNIT Should not decrement the counters below 0",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d4a4ff38-15e0-4d43-a587-5a48cce575a9",
                "parentUUID": "b0ea797e-be63-4a7f-9e82-345477c38da5",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: ADD_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly increment the counters when a unit is added to the plan",
                "fullTitle": "REDUCER: Counter ACTION: ADD_UNIT Should correctly increment the counters when a unit is added to the plan",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"ADD_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 30 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1a973c2b-23fc-421f-bec6-20874d4dd541",
                "parentUUID": "cdd986d2-1a9f-4031-a006-a1701481b5c8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "cdd986d2-1a9f-4031-a006-a1701481b5c8",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should correctly increment the counters when a unit is added to the plan",
                "fullTitle": "REDUCER: Counter ACTION: ADD_UNIT Should correctly increment the counters when a unit is added to the plan",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"ADD_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 30 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1a973c2b-23fc-421f-bec6-20874d4dd541",
                "parentUUID": "cdd986d2-1a9f-4031-a006-a1701481b5c8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: DECREASE_STUDY_LOAD",
            "suites": [],
            "tests": [
              {
                "title": "Should not decrease counters if there are no units in the overload column",
                "fullTitle": "REDUCER: Counter ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units in the overload column",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: []\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "83f8aa34-06a2-4429-aedf-2a7dc17841be",
                "parentUUID": "6f78d6a4-4404-4afc-ae69-dd52744e5d70",
                "skipped": false
              },
              {
                "title": "Should not decrease counters if there are no units which have values in the overload column",
                "fullTitle": "REDUCER: Counter ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units which have values in the overload column",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [null, {}]\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "b0a26597-d68d-4043-811e-a42f8a9ba31c",
                "parentUUID": "6f78d6a4-4404-4afc-ae69-dd52744e5d70",
                "skipped": false
              },
              {
                "title": "Should decrease counters correctly for units in the overload column",
                "fullTitle": "REDUCER: Counter ACTION: DECREASE_STUDY_LOAD Should decrease counters correctly for units in the overload column",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [{\n        CreditPoints: 6,\n        Cost: 1134\n    }, {\n        CreditPoints: 12,\n        Cost: 2256\n    }]\n};\nvar stateAfter = { cost: 36610, creditPoints: 126 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "47d0962c-2adb-4564-b7de-1504c1f2f8dc",
                "parentUUID": "6f78d6a4-4404-4afc-ae69-dd52744e5d70",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "6f78d6a4-4404-4afc-ae69-dd52744e5d70",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should not decrease counters if there are no units in the overload column",
                "fullTitle": "REDUCER: Counter ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units in the overload column",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: []\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "83f8aa34-06a2-4429-aedf-2a7dc17841be",
                "parentUUID": "6f78d6a4-4404-4afc-ae69-dd52744e5d70",
                "skipped": false
              },
              {
                "title": "Should not decrease counters if there are no units which have values in the overload column",
                "fullTitle": "REDUCER: Counter ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units which have values in the overload column",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [null, {}]\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "b0a26597-d68d-4043-811e-a42f8a9ba31c",
                "parentUUID": "6f78d6a4-4404-4afc-ae69-dd52744e5d70",
                "skipped": false
              },
              {
                "title": "Should decrease counters correctly for units in the overload column",
                "fullTitle": "REDUCER: Counter ACTION: DECREASE_STUDY_LOAD Should decrease counters correctly for units in the overload column",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [{\n        CreditPoints: 6,\n        Cost: 1134\n    }, {\n        CreditPoints: 12,\n        Cost: 2256\n    }]\n};\nvar stateAfter = { cost: 36610, creditPoints: 126 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "47d0962c-2adb-4564-b7de-1504c1f2f8dc",
                "parentUUID": "6f78d6a4-4404-4afc-ae69-dd52744e5d70",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "DEFAULT",
            "suites": [],
            "tests": [
              {
                "title": "Should not change state if it does not recognise an action",
                "fullTitle": "REDUCER: Counter DEFAULT Should not change state if it does not recognise an action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "45a9c0e8-e156-40b5-bd44-d0e27e6652ba",
                "parentUUID": "73d9070e-296b-4e8a-b897-471bda453b4e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "73d9070e-296b-4e8a-b897-471bda453b4e",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should not change state if it does not recognise an action",
                "fullTitle": "REDUCER: Counter DEFAULT Should not change state if it does not recognise an action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "45a9c0e8-e156-40b5-bd44-d0e27e6652ba",
                "parentUUID": "73d9070e-296b-4e8a-b897-471bda453b4e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/reducers/Counter.spec.js",
        "uuid": "21c51213-cccb-4d08-940f-cd8e88e05268",
        "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "REDUCER: CourseStructure",
        "suites": [
          {
            "title": "ACTION: INSERT_TEACHING_PERIOD",
            "suites": [],
            "tests": [
              {
                "title": "Should insert a teaching period with the given info correctly into middle of array",
                "fullTitle": "REDUCER: CourseStructure ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into middle of array",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2018,\n    code: \"S2-01\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "322b124b-c109-4fd2-b69b-fb2a622bcfea",
                "parentUUID": "1fed1b69-7788-41c8-8528-7e4ba1bc44ff",
                "skipped": false
              },
              {
                "title": "Should insert a teaching period with the given info correctly into start of array",
                "fullTitle": "REDUCER: CourseStructure ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into start of array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2016,\n    code: \"S2-01\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2016, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0e9adf4f-3923-4b0a-b233-62542ed12fa8",
                "parentUUID": "1fed1b69-7788-41c8-8528-7e4ba1bc44ff",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "1fed1b69-7788-41c8-8528-7e4ba1bc44ff",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should insert a teaching period with the given info correctly into middle of array",
                "fullTitle": "REDUCER: CourseStructure ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into middle of array",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2018,\n    code: \"S2-01\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "322b124b-c109-4fd2-b69b-fb2a622bcfea",
                "parentUUID": "1fed1b69-7788-41c8-8528-7e4ba1bc44ff",
                "skipped": false
              },
              {
                "title": "Should insert a teaching period with the given info correctly into start of array",
                "fullTitle": "REDUCER: CourseStructure ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into start of array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2016,\n    code: \"S2-01\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2016, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0e9adf4f-3923-4b0a-b233-62542ed12fa8",
                "parentUUID": "1fed1b69-7788-41c8-8528-7e4ba1bc44ff",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 4
          },
          {
            "title": "ACTION: REMOVE_TEACHING_PERIOD",
            "suites": [],
            "tests": [
              {
                "title": "Should remove a teaching period at the given index",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the given index",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c7c6c137-02e1-469c-bbc3-f47598ea8f3a",
                "parentUUID": "5f0f9e6f-aad9-4f9d-8840-71a568b0180e",
                "skipped": false
              },
              {
                "title": "Should remove a teaching period at the start of the array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the start of the array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "fadb91da-6db3-4cf4-afb5-570d46d5007e",
                "parentUUID": "5f0f9e6f-aad9-4f9d-8840-71a568b0180e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "5f0f9e6f-aad9-4f9d-8840-71a568b0180e",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should remove a teaching period at the given index",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the given index",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c7c6c137-02e1-469c-bbc3-f47598ea8f3a",
                "parentUUID": "5f0f9e6f-aad9-4f9d-8840-71a568b0180e",
                "skipped": false
              },
              {
                "title": "Should remove a teaching period at the start of the array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the start of the array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "fadb91da-6db3-4cf4-afb5-570d46d5007e",
                "parentUUID": "5f0f9e6f-aad9-4f9d-8840-71a568b0180e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: APPEND_TEACHING_PERIOD",
            "suites": [],
            "tests": [
              {
                "title": "Should add the given teaching period to the end of the array",
                "fullTitle": "REDUCER: CourseStructure ACTION: APPEND_TEACHING_PERIOD Should add the given teaching period to the end of the array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"APPEND_TEACHING_PERIOD\",\n    year: 2020,\n    code: \"S2-01\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2020, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "3516eb8a-dba4-497a-a92d-af601e655362",
                "parentUUID": "ebbcdf85-5a52-4425-b1fc-4ed4ca84cd23",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "ebbcdf85-5a52-4425-b1fc-4ed4ca84cd23",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should add the given teaching period to the end of the array",
                "fullTitle": "REDUCER: CourseStructure ACTION: APPEND_TEACHING_PERIOD Should add the given teaching period to the end of the array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"APPEND_TEACHING_PERIOD\",\n    year: 2020,\n    code: \"S2-01\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2020, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "3516eb8a-dba4-497a-a92d-af601e655362",
                "parentUUID": "ebbcdf85-5a52-4425-b1fc-4ed4ca84cd23",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: INCREASE_STUDY_LOAD",
            "suites": [],
            "tests": [
              {
                "title": "Should increase the study load if the study load is less than 4",
                "fullTitle": "REDUCER: CourseStructure ACTION: INCREASE_STUDY_LOAD Should increase the study load if the study load is less than 4",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "05d176ae-0ce9-4e1a-bf2b-87722ee6bf57",
                "parentUUID": "9987da2d-5830-47d7-8b28-bd144414964a",
                "skipped": false
              },
              {
                "title": "Should not increase the study load if the study load is 6 or greater",
                "fullTitle": "REDUCER: CourseStructure ACTION: INCREASE_STUDY_LOAD Should not increase the study load if the study load is 6 or greater",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null, null] }],\n    numberOfUnits: 6\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null, null] }],\n    numberOfUnits: 6\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c39029d1-2408-4903-9ce4-09fed04824e9",
                "parentUUID": "9987da2d-5830-47d7-8b28-bd144414964a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "9987da2d-5830-47d7-8b28-bd144414964a",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should increase the study load if the study load is less than 4",
                "fullTitle": "REDUCER: CourseStructure ACTION: INCREASE_STUDY_LOAD Should increase the study load if the study load is less than 4",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "05d176ae-0ce9-4e1a-bf2b-87722ee6bf57",
                "parentUUID": "9987da2d-5830-47d7-8b28-bd144414964a",
                "skipped": false
              },
              {
                "title": "Should not increase the study load if the study load is 6 or greater",
                "fullTitle": "REDUCER: CourseStructure ACTION: INCREASE_STUDY_LOAD Should not increase the study load if the study load is 6 or greater",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null, null] }],\n    numberOfUnits: 6\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null, null] }],\n    numberOfUnits: 6\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c39029d1-2408-4903-9ce4-09fed04824e9",
                "parentUUID": "9987da2d-5830-47d7-8b28-bd144414964a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "ACTION: DECREASE_STUDY_LOAD",
            "suites": [],
            "tests": [
              {
                "title": "Should decrease the study load if the study load is greater than 4",
                "fullTitle": "REDUCER: CourseStructure ACTION: DECREASE_STUDY_LOAD Should decrease the study load if the study load is greater than 4",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "3217749b-f792-4b64-84d7-4a68e4bb1378",
                "parentUUID": "55848f71-ade4-4d1c-bade-c2410df29ffe",
                "skipped": false
              },
              {
                "title": "Should not decrease the study load if the study load is 4 or less",
                "fullTitle": "REDUCER: CourseStructure ACTION: DECREASE_STUDY_LOAD Should not decrease the study load if the study load is 4 or less",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "4cf4a590-30d8-4c98-9836-320e1608b95c",
                "parentUUID": "55848f71-ade4-4d1c-bade-c2410df29ffe",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "55848f71-ade4-4d1c-bade-c2410df29ffe",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should decrease the study load if the study load is greater than 4",
                "fullTitle": "REDUCER: CourseStructure ACTION: DECREASE_STUDY_LOAD Should decrease the study load if the study load is greater than 4",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "3217749b-f792-4b64-84d7-4a68e4bb1378",
                "parentUUID": "55848f71-ade4-4d1c-bade-c2410df29ffe",
                "skipped": false
              },
              {
                "title": "Should not decrease the study load if the study load is 4 or less",
                "fullTitle": "REDUCER: CourseStructure ACTION: DECREASE_STUDY_LOAD Should not decrease the study load if the study load is 4 or less",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "4cf4a590-30d8-4c98-9836-320e1608b95c",
                "parentUUID": "55848f71-ade4-4d1c-bade-c2410df29ffe",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: CLEAR_COURSE",
            "suites": [],
            "tests": [
              {
                "title": "Should remove all teaching periods and set the amount of units to 4",
                "fullTitle": "REDUCER: CourseStructure ACTION: CLEAR_COURSE Should remove all teaching periods and set the amount of units to 4",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = {\n    courseInfo: {\n        courseName: \"\",\n        faculty: \"\",\n        creditPoints: 0,\n        courseDescription: \"\",\n        durationStr: \"\",\n        modeAndLocation: \"\",\n        awards: \"\",\n        abrTitle: \"\"\n    },\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ddf0cb6e-f547-4493-b26c-343e73826197",
                "parentUUID": "848c620c-1119-4cb4-97a0-68939a0d824d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "848c620c-1119-4cb4-97a0-68939a0d824d",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should remove all teaching periods and set the amount of units to 4",
                "fullTitle": "REDUCER: CourseStructure ACTION: CLEAR_COURSE Should remove all teaching periods and set the amount of units to 4",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = {\n    courseInfo: {\n        courseName: \"\",\n        faculty: \"\",\n        creditPoints: 0,\n        courseDescription: \"\",\n        durationStr: \"\",\n        modeAndLocation: \"\",\n        awards: \"\",\n        abrTitle: \"\"\n    },\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ddf0cb6e-f547-4493-b26c-343e73826197",
                "parentUUID": "848c620c-1119-4cb4-97a0-68939a0d824d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: ADD_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should add a unit correctly to the start of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: ADD_UNIT Should add a unit correctly to the start of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", totalCreditpoints: 6, units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }, null, null, null] }, { year: 2018, code: \"S2-01\", totalCreditpoints: 0, units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", totalCreditpoints: 0, units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c22a4359-868d-47ca-940f-beabca79a11e",
                "parentUUID": "bb7af9c5-2897-4c68-a035-ba729c97b296",
                "skipped": false
              },
              {
                "title": "Should add a unit correctly to the middle of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: ADD_UNIT Should add a unit correctly to the middle of an array",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ff1306d9-24e1-4cc2-9d07-1ac8a5f7ba1c",
                "parentUUID": "bb7af9c5-2897-4c68-a035-ba729c97b296",
                "skipped": false
              },
              {
                "title": "Should add a unit correctly to the end of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: ADD_UNIT Should add a unit correctly to the end of an array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d779be0d-b0af-43da-bca4-f80396843a96",
                "parentUUID": "bb7af9c5-2897-4c68-a035-ba729c97b296",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "bb7af9c5-2897-4c68-a035-ba729c97b296",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should add a unit correctly to the start of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: ADD_UNIT Should add a unit correctly to the start of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", totalCreditpoints: 6, units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }, null, null, null] }, { year: 2018, code: \"S2-01\", totalCreditpoints: 0, units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", totalCreditpoints: 0, units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c22a4359-868d-47ca-940f-beabca79a11e",
                "parentUUID": "bb7af9c5-2897-4c68-a035-ba729c97b296",
                "skipped": false
              },
              {
                "title": "Should add a unit correctly to the middle of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: ADD_UNIT Should add a unit correctly to the middle of an array",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ff1306d9-24e1-4cc2-9d07-1ac8a5f7ba1c",
                "parentUUID": "bb7af9c5-2897-4c68-a035-ba729c97b296",
                "skipped": false
              },
              {
                "title": "Should add a unit correctly to the end of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: ADD_UNIT Should add a unit correctly to the end of an array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d779be0d-b0af-43da-bca4-f80396843a96",
                "parentUUID": "bb7af9c5-2897-4c68-a035-ba729c97b296",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          },
          {
            "title": "ACTION: REMOVE_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should remove a unit correctly frpm the start of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_UNIT Should remove a unit correctly frpm the start of an array",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0,\n    creditPoints: 6\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "76a14573-c483-4ef5-bb81-6977616d52ff",
                "parentUUID": "7f1db6f6-73d0-4797-a319-ec12c48a78af",
                "skipped": false
              },
              {
                "title": "Should remove a unit correctly from the middle of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_UNIT Should remove a unit correctly from the middle of an array",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1,\n    creditPoints: 6\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "6466181d-5d08-4011-b914-068175005332",
                "parentUUID": "7f1db6f6-73d0-4797-a319-ec12c48a78af",
                "skipped": false
              },
              {
                "title": "Should remove a unit correctly from the end of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_UNIT Should remove a unit correctly from the end of an array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3,\n    creditPoints: 6\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "8f79ee1b-f062-4ef6-b713-3a52b2b10547",
                "parentUUID": "7f1db6f6-73d0-4797-a319-ec12c48a78af",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "7f1db6f6-73d0-4797-a319-ec12c48a78af",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should remove a unit correctly frpm the start of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_UNIT Should remove a unit correctly frpm the start of an array",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0,\n    creditPoints: 6\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "76a14573-c483-4ef5-bb81-6977616d52ff",
                "parentUUID": "7f1db6f6-73d0-4797-a319-ec12c48a78af",
                "skipped": false
              },
              {
                "title": "Should remove a unit correctly from the middle of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_UNIT Should remove a unit correctly from the middle of an array",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1,\n    creditPoints: 6\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "6466181d-5d08-4011-b914-068175005332",
                "parentUUID": "7f1db6f6-73d0-4797-a319-ec12c48a78af",
                "skipped": false
              },
              {
                "title": "Should remove a unit correctly from the end of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_UNIT Should remove a unit correctly from the end of an array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3,\n    creditPoints: 6\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "8f79ee1b-f062-4ef6-b713-3a52b2b10547",
                "parentUUID": "7f1db6f6-73d0-4797-a319-ec12c48a78af",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 4
          },
          {
            "title": "ACTION: GENERATE_COURSE",
            "suites": [],
            "tests": [
              {
                "title": "Should generate a course structure with valid start and end years",
                "fullTitle": "REDUCER: CourseStructure ACTION: GENERATE_COURSE Should generate a course structure with valid start and end years",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2014,\n    endYear: 2016\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "279b3edb-24f9-4847-8021-1316cb1995ec",
                "parentUUID": "929e6625-0ff7-463e-bcce-5e5242d07aa0",
                "skipped": false
              },
              {
                "title": "Should return an empty course structure with invalid start and end years.",
                "fullTitle": "REDUCER: CourseStructure ACTION: GENERATE_COURSE Should return an empty course structure with invalid start and end years.",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2017,\n    endYear: 2013\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7ffc00d4-a1bd-4fa4-a262-3ee6492e3b16",
                "parentUUID": "929e6625-0ff7-463e-bcce-5e5242d07aa0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "929e6625-0ff7-463e-bcce-5e5242d07aa0",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should generate a course structure with valid start and end years",
                "fullTitle": "REDUCER: CourseStructure ACTION: GENERATE_COURSE Should generate a course structure with valid start and end years",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2014,\n    endYear: 2016\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "279b3edb-24f9-4847-8021-1316cb1995ec",
                "parentUUID": "929e6625-0ff7-463e-bcce-5e5242d07aa0",
                "skipped": false
              },
              {
                "title": "Should return an empty course structure with invalid start and end years.",
                "fullTitle": "REDUCER: CourseStructure ACTION: GENERATE_COURSE Should return an empty course structure with invalid start and end years.",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2017,\n    endYear: 2013\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7ffc00d4-a1bd-4fa4-a262-3ee6492e3b16",
                "parentUUID": "929e6625-0ff7-463e-bcce-5e5242d07aa0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "ACTION: FETCH_COURSE_INFO_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show that the course info is loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_INFO_PENDING Should correctly show that the course info is loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a50ff060-ee1d-41a9-b5e4-883a6af0aa51",
                "parentUUID": "1e6e5764-228a-44de-88bf-fa8718354d7b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "1e6e5764-228a-44de-88bf-fa8718354d7b",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly show that the course info is loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_INFO_PENDING Should correctly show that the course info is loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a50ff060-ee1d-41a9-b5e4-883a6af0aa51",
                "parentUUID": "1e6e5764-228a-44de-88bf-fa8718354d7b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_COURSE_INFO_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly return the payload and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    focusedCourse: null,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_FULFILLED\",\n    payload: { data: {\n            \"propertyMap\": {\n                courseCode: \"Test Code\",\n                courseName: \"Test Course\",\n                mangFac: \"Test Faculty\",\n                creditPoints: 100,\n                courseDescrip: {\n                    \"value\": \"Test Description\"\n                },\n                courseDuration: \"Test Duration\",\n                modeLoc: {\n                    \"value\": \"Test mode and location\"\n                },\n                courseAward: \"Test awards\",\n                abrevTitle: \"Test abreviated title\"\n            }\n        } },\n    courseCode: \"COURSE101\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: {\n        courseCode: \"Test Code\",\n        courseName: \"Test Course\",\n        faculty: \"Test Faculty\",\n        creditPoints: 100,\n        courseDescription: \"Test Description\",\n        durationStr: \"Test Duration\",\n        modeAndLocation: \"Test mode and location\",\n        awards: \"Test awards\",\n        abrTitle: \"Test abreviated title\"\n    },\n    focusedCourse: \"COURSE101\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d5baf0ff-e36f-446c-ada2-3524883f8555",
                "parentUUID": "8cfe7efb-a27b-4695-a9ab-5a60c79d60c8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "8cfe7efb-a27b-4695-a9ab-5a60c79d60c8",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly return the payload and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    focusedCourse: null,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_FULFILLED\",\n    payload: { data: {\n            \"propertyMap\": {\n                courseCode: \"Test Code\",\n                courseName: \"Test Course\",\n                mangFac: \"Test Faculty\",\n                creditPoints: 100,\n                courseDescrip: {\n                    \"value\": \"Test Description\"\n                },\n                courseDuration: \"Test Duration\",\n                modeLoc: {\n                    \"value\": \"Test mode and location\"\n                },\n                courseAward: \"Test awards\",\n                abrevTitle: \"Test abreviated title\"\n            }\n        } },\n    courseCode: \"COURSE101\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: {\n        courseCode: \"Test Code\",\n        courseName: \"Test Course\",\n        faculty: \"Test Faculty\",\n        creditPoints: 100,\n        courseDescription: \"Test Description\",\n        durationStr: \"Test Duration\",\n        modeAndLocation: \"Test mode and location\",\n        awards: \"Test awards\",\n        abrTitle: \"Test abreviated title\"\n    },\n    focusedCourse: \"COURSE101\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d5baf0ff-e36f-446c-ada2-3524883f8555",
                "parentUUID": "8cfe7efb-a27b-4695-a9ab-5a60c79d60c8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_COURSE_INFO_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show that the course info fetch failed and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_INFO_REJECTED Should correctly show that the course info fetch failed and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: true,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9df7b1e2-27ad-40bd-a743-6efd9a83a713",
                "parentUUID": "cbb779c1-8161-42c8-9223-97c9484ad631",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "cbb779c1-8161-42c8-9223-97c9484ad631",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly show that the course info fetch failed and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_INFO_REJECTED Should correctly show that the course info fetch failed and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: true,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9df7b1e2-27ad-40bd-a743-6efd9a83a713",
                "parentUUID": "cbb779c1-8161-42c8-9223-97c9484ad631",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_COURSE_TEMPLATE_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show that the course template is loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_TEMPLATE_PENDING Should correctly show that the course template is loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "57528897-7f84-4626-a55d-5a052228beb4",
                "parentUUID": "8265a775-b3b5-4e3c-aae1-f82584881c45",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "8265a775-b3b5-4e3c-aae1-f82584881c45",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly show that the course template is loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_TEMPLATE_PENDING Should correctly show that the course template is loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "57528897-7f84-4626-a55d-5a052228beb4",
                "parentUUID": "8265a775-b3b5-4e3c-aae1-f82584881c45",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_COURSE_TEMPLATE_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly return the payload and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_TEMPLATE_FULFILLED Should correctly return the payload and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_FULFILLED\",\n    payload: {\n        data: {\n            propertyMap: \"Fake Course Template\"\n        }\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: \"Fake Course Template\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "de1682fa-c3ed-4e0a-8da4-b60f545eeb54",
                "parentUUID": "147e75e7-264f-4a1b-ac15-b18ad4a36d7a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "147e75e7-264f-4a1b-ac15-b18ad4a36d7a",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly return the payload and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_TEMPLATE_FULFILLED Should correctly return the payload and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_FULFILLED\",\n    payload: {\n        data: {\n            propertyMap: \"Fake Course Template\"\n        }\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: \"Fake Course Template\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "de1682fa-c3ed-4e0a-8da4-b60f545eeb54",
                "parentUUID": "147e75e7-264f-4a1b-ac15-b18ad4a36d7a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_COURSE_TEMPLATE_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show that the course template fetch failed and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_TEMPLATE_REJECTED Should correctly show that the course template fetch failed and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: true,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0a44f99b-7bcf-4f04-83e4-61183c4bbe25",
                "parentUUID": "c30fb2b6-b103-4215-84a6-6eec777f37b0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "c30fb2b6-b103-4215-84a6-6eec777f37b0",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly show that the course template fetch failed and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_TEMPLATE_REJECTED Should correctly show that the course template fetch failed and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: true,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0a44f99b-7bcf-4f04-83e4-61183c4bbe25",
                "parentUUID": "c30fb2b6-b103-4215-84a6-6eec777f37b0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_UNIT_INFO_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show that the unit info is loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_UNIT_INFO_PENDING Should correctly show that the unit info is loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: {\n        preqs: \"\",\n        creditPoints: 0,\n        rules: [],\n        locationAndTime: \"\",\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"\",\n        eftsl: 0,\n        descriptions: \"\"\n    },\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: {\n        preqs: \"\",\n        creditPoints: 0,\n        rules: [],\n        locationAndTime: \"\",\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"\",\n        eftsl: 0,\n        descriptions: \"\"\n    },\n    focusedUnitCode: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "25f4e404-1d03-4d92-8f7b-6f37646a1a81",
                "parentUUID": "e1c444be-0c82-4400-a279-80b2281351df",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "e1c444be-0c82-4400-a279-80b2281351df",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly show that the unit info is loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_UNIT_INFO_PENDING Should correctly show that the unit info is loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: {\n        preqs: \"\",\n        creditPoints: 0,\n        rules: [],\n        locationAndTime: \"\",\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"\",\n        eftsl: 0,\n        descriptions: \"\"\n    },\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: {\n        preqs: \"\",\n        creditPoints: 0,\n        rules: [],\n        locationAndTime: \"\",\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"\",\n        eftsl: 0,\n        descriptions: \"\"\n    },\n    focusedUnitCode: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "25f4e404-1d03-4d92-8f7b-6f37646a1a81",
                "parentUUID": "e1c444be-0c82-4400-a279-80b2281351df",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_UNIT_INFO_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly return the payload and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_UNIT_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_FULFILLED\",\n    payload: { data: \"Fake Unit Info\" },\n    unitCode: \"FAKE1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: \"Fake Unit Info\",\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b3d2bd1f-ea28-460d-9d3e-bd73cc8c1e73",
                "parentUUID": "c2e2edee-363d-477f-b7b1-fc03b4f700e7",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "c2e2edee-363d-477f-b7b1-fc03b4f700e7",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly return the payload and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_UNIT_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_FULFILLED\",\n    payload: { data: \"Fake Unit Info\" },\n    unitCode: \"FAKE1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: \"Fake Unit Info\",\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b3d2bd1f-ea28-460d-9d3e-bd73cc8c1e73",
                "parentUUID": "c2e2edee-363d-477f-b7b1-fc03b4f700e7",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_UNIT_INFO_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show that the unit info fetch failed and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_UNIT_INFO_REJECTED Should correctly show that the unit info fetch failed and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_REJECTED\",\n    payload: {\n        response: {\n            status: 404\n        }\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: {\n        response: {\n            status: 404\n        }\n    },\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f1fa6284-183a-417b-9e23-bf8823c9dcf2",
                "parentUUID": "17da366d-ae3b-4d38-aa99-d81b234110ca",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "17da366d-ae3b-4d38-aa99-d81b234110ca",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly show that the unit info fetch failed and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_UNIT_INFO_REJECTED Should correctly show that the unit info fetch failed and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_REJECTED\",\n    payload: {\n        response: {\n            status: 404\n        }\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: {\n        response: {\n            status: 404\n        }\n    },\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f1fa6284-183a-417b-9e23-bf8823c9dcf2",
                "parentUUID": "17da366d-ae3b-4d38-aa99-d81b234110ca",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: SUBMIT_COURSE_FORM",
            "suites": [],
            "tests": [
              {
                "title": "Should accurately set the start year and the focused course on submission",
                "fullTitle": "REDUCER: CourseStructure ACTION: SUBMIT_COURSE_FORM Should accurately set the start year and the focused course on submission",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_COURSE_FORM\",\n    startYear: 2020,\n    courseCode: \"TEST1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: \"TEST1001\",\n    startYear: 2020,\n    endYear: 2020\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "cc46c6f0-ab4e-4fa6-93e0-6369ca768405",
                "parentUUID": "d4f51604-a6b9-469f-aefe-a2f84ec13001",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "d4f51604-a6b9-469f-aefe-a2f84ec13001",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should accurately set the start year and the focused course on submission",
                "fullTitle": "REDUCER: CourseStructure ACTION: SUBMIT_COURSE_FORM Should accurately set the start year and the focused course on submission",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_COURSE_FORM\",\n    startYear: 2020,\n    courseCode: \"TEST1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: \"TEST1001\",\n    startYear: 2020,\n    endYear: 2020\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "cc46c6f0-ab4e-4fa6-93e0-6369ca768405",
                "parentUUID": "d4f51604-a6b9-469f-aefe-a2f84ec13001",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: SUBMIT_YEAR_FORM",
            "suites": [],
            "tests": [
              {
                "title": "Should accurately set the start year and end year on submission",
                "fullTitle": "REDUCER: CourseStructure ACTION: SUBMIT_YEAR_FORM Should accurately set the start year and end year on submission",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_YEAR_FORM\",\n    startYear: 2020,\n    endYear: 2025\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2020,\n    endYear: 2025\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "47dd3f14-22ce-4693-b861-5a704382e6a7",
                "parentUUID": "56b35839-500e-4ad1-bbb1-bc63f29b38da",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "56b35839-500e-4ad1-bbb1-bc63f29b38da",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should accurately set the start year and end year on submission",
                "fullTitle": "REDUCER: CourseStructure ACTION: SUBMIT_YEAR_FORM Should accurately set the start year and end year on submission",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_YEAR_FORM\",\n    startYear: 2020,\n    endYear: 2025\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2020,\n    endYear: 2025\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "47dd3f14-22ce-4693-b861-5a704382e6a7",
                "parentUUID": "56b35839-500e-4ad1-bbb1-bc63f29b38da",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_TEACHING_PERIODS_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly handle  of teaching periods data",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_TEACHING_PERIODS_PENDING Should correctly handle  of teaching periods data",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c3e42447-acd5-46ed-80b4-859b6f27a4b6",
                "parentUUID": "7ef78267-e755-409d-ba55-3f8ae3e33375",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "7ef78267-e755-409d-ba55-3f8ae3e33375",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly handle  of teaching periods data",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_TEACHING_PERIODS_PENDING Should correctly handle  of teaching periods data",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c3e42447-acd5-46ed-80b4-859b6f27a4b6",
                "parentUUID": "7ef78267-e755-409d-ba55-3f8ae3e33375",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_TEACHING_PERIODS_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly handle  of teaching periods data",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_TEACHING_PERIODS_FULFILLED Should correctly handle  of teaching periods data",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_FULFILLED\",\n    payload: \"Teaching period strings\"\n};\nvar stateAfter = {\n    teachingPeriodData: \"Teaching period strings\",\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "895b784a-104f-4a54-a7d7-d77e04896b38",
                "parentUUID": "47e88131-71e7-4730-8cf1-bc242386792f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "47e88131-71e7-4730-8cf1-bc242386792f",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly handle  of teaching periods data",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_TEACHING_PERIODS_FULFILLED Should correctly handle  of teaching periods data",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_FULFILLED\",\n    payload: \"Teaching period strings\"\n};\nvar stateAfter = {\n    teachingPeriodData: \"Teaching period strings\",\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "895b784a-104f-4a54-a7d7-d77e04896b38",
                "parentUUID": "47e88131-71e7-4730-8cf1-bc242386792f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_TEACHING_PERIODS_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly handle  of teaching periods data",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_TEACHING_PERIODS_REJECTED Should correctly handle  of teaching periods data",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9c886681-68dc-4f06-b317-78f65206752c",
                "parentUUID": "851681b3-aa53-47c3-8745-b16dbbce13ab",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "851681b3-aa53-47c3-8745-b16dbbce13ab",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly handle  of teaching periods data",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_TEACHING_PERIODS_REJECTED Should correctly handle  of teaching periods data",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9c886681-68dc-4f06-b317-78f65206752c",
                "parentUUID": "851681b3-aa53-47c3-8745-b16dbbce13ab",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: SHOW_INSERT_TEACHING_PERIOD_UI",
            "suites": [],
            "tests": [
              {
                "title": "Should set the teaching period code to insert value correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should set the teaching period code to insert value correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodCodeToInsert: null,\n    testParam1: 1,\n    testParam2: \"test\"\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"S1-02\"\n};\nvar stateAfter = {\n    teachingPeriodCodeToInsert: \"S1-02\",\n    testParam1: 1,\n    testParam2: \"test\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "62e65b32-34a8-4cc6-8113-5e80956bbd4e",
                "parentUUID": "5cb46e29-fd46-40ae-b408-02e36b19a8fc",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "5cb46e29-fd46-40ae-b408-02e36b19a8fc",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should set the teaching period code to insert value correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should set the teaching period code to insert value correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodCodeToInsert: null,\n    testParam1: 1,\n    testParam2: \"test\"\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"S1-02\"\n};\nvar stateAfter = {\n    teachingPeriodCodeToInsert: \"S1-02\",\n    testParam1: 1,\n    testParam2: \"test\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "62e65b32-34a8-4cc6-8113-5e80956bbd4e",
                "parentUUID": "5cb46e29-fd46-40ae-b408-02e36b19a8fc",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: UPLOAD_COURSE_SNAPSHOT_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should handle the initiation of a course snapshot upload correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPLOAD_COURSE_SNAPSHOT_PENDING Should handle the initiation of a course snapshot upload correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: true\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "741568c1-af9f-4f86-93be-8c74839f4ced",
                "parentUUID": "467e5776-6b66-41e4-a0b3-e3115df1f70f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "467e5776-6b66-41e4-a0b3-e3115df1f70f",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should handle the initiation of a course snapshot upload correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPLOAD_COURSE_SNAPSHOT_PENDING Should handle the initiation of a course snapshot upload correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: true\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "741568c1-af9f-4f86-93be-8c74839f4ced",
                "parentUUID": "467e5776-6b66-41e4-a0b3-e3115df1f70f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: UPLOAD_COURSE_SNAPSHOT_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should handle the successful upload of a course snapshot correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPLOAD_COURSE_SNAPSHOT_FULFILLED Should handle the successful upload of a course snapshot correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"upload string\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: \"upload string\",\n    courseSnapshotUploadSucessful: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "306b6924-8e5c-4fbb-96dd-619503d85e1d",
                "parentUUID": "e7117bb5-51ea-4f46-9941-c3ff3a77c701",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "e7117bb5-51ea-4f46-9941-c3ff3a77c701",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should handle the successful upload of a course snapshot correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPLOAD_COURSE_SNAPSHOT_FULFILLED Should handle the successful upload of a course snapshot correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"upload string\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: \"upload string\",\n    courseSnapshotUploadSucessful: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "306b6924-8e5c-4fbb-96dd-619503d85e1d",
                "parentUUID": "e7117bb5-51ea-4f46-9941-c3ff3a77c701",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: UPLOAD_COURSE_SNAPSHOT_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should do handle the rejected upload of a course snapshot correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPLOAD_COURSE_SNAPSHOT_REJECTED Should do handle the rejected upload of a course snapshot correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "20be81b5-6473-4845-bfc5-52290dcdf5d7",
                "parentUUID": "715260b0-3ae0-47b0-a5bb-d1dca58b262f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "715260b0-3ae0-47b0-a5bb-d1dca58b262f",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should do handle the rejected upload of a course snapshot correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPLOAD_COURSE_SNAPSHOT_REJECTED Should do handle the rejected upload of a course snapshot correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "20be81b5-6473-4845-bfc5-52290dcdf5d7",
                "parentUUID": "715260b0-3ae0-47b0-a5bb-d1dca58b262f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_COURSE_SNAPSHOT_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should begin fetching a course snapshot correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_SNAPSHOT_PENDING Should begin fetching a course snapshot correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e1b3445d-5808-473c-8293-c2eace8bd8b1",
                "parentUUID": "449cd280-c1ef-4b44-913b-f575a16fd13e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "449cd280-c1ef-4b44-913b-f575a16fd13e",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should begin fetching a course snapshot correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_SNAPSHOT_PENDING Should begin fetching a course snapshot correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e1b3445d-5808-473c-8293-c2eace8bd8b1",
                "parentUUID": "449cd280-c1ef-4b44-913b-f575a16fd13e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_COURSE_SNAPSHOT_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should handle a successful course snapshot fetch correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_SNAPSHOT_FULFILLED Should handle a successful course snapshot fetch correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"Snap data\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: \"Snap data\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7d9eda56-e661-4a84-bb21-0188ee24b69e",
                "parentUUID": "cc7dd205-fff5-4eb7-99e6-c4c38e04320e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "cc7dd205-fff5-4eb7-99e6-c4c38e04320e",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should handle a successful course snapshot fetch correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_SNAPSHOT_FULFILLED Should handle a successful course snapshot fetch correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"Snap data\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: \"Snap data\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7d9eda56-e661-4a84-bb21-0188ee24b69e",
                "parentUUID": "cc7dd205-fff5-4eb7-99e6-c4c38e04320e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_COURSE_SNAPSHOT_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should handle a rejected course snapshot fetch correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_SNAPSHOT_REJECTED Should handle a rejected course snapshot fetch correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d79b312d-1c82-45a5-9fed-c4414b8cf038",
                "parentUUID": "3737019f-26db-4e0f-a815-c9e6032cc6e4",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "3737019f-26db-4e0f-a815-c9e6032cc6e4",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should handle a rejected course snapshot fetch correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_SNAPSHOT_REJECTED Should handle a rejected course snapshot fetch correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d79b312d-1c82-45a5-9fed-c4414b8cf038",
                "parentUUID": "3737019f-26db-4e0f-a815-c9e6032cc6e4",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_COURSES_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSES_PENDING Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: false,\n    courseSearchError: true //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: true,\n    courseSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0042cc75-3ce9-4140-ba39-c482e66dc5e5",
                "parentUUID": "357a3585-c6a7-4a22-80fc-474a4cf3a5c7",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "357a3585-c6a7-4a22-80fc-474a4cf3a5c7",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSES_PENDING Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: false,\n    courseSearchError: true //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: true,\n    courseSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0042cc75-3ce9-4140-ba39-c482e66dc5e5",
                "parentUUID": "357a3585-c6a7-4a22-80fc-474a4cf3a5c7",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_COURSES_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSES_FULFILLED Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: true,\n    courseSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_FULFILLED\",\n    payload: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    courseSearchIsLoading: false,\n    courseSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5ff3060f-a1df-4499-aa21-11ff6fbbedcb",
                "parentUUID": "14f6cbd9-bf82-4c46-a2d8-d092d907b31a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "14f6cbd9-bf82-4c46-a2d8-d092d907b31a",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSES_FULFILLED Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: true,\n    courseSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_FULFILLED\",\n    payload: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    courseSearchIsLoading: false,\n    courseSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5ff3060f-a1df-4499-aa21-11ff6fbbedcb",
                "parentUUID": "14f6cbd9-bf82-4c46-a2d8-d092d907b31a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_COURSES_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSES_REJECTED Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    courseSearchIsLoading: true,\n    courseSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: false,\n    courseSearchError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "140de2fc-3bf7-4ffb-8812-0056584a3d9b",
                "parentUUID": "fb00230d-f2e8-4c67-a6cf-a941767fe840",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "fb00230d-f2e8-4c67-a6cf-a941767fe840",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSES_REJECTED Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    courseSearchIsLoading: true,\n    courseSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: false,\n    courseSearchError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "140de2fc-3bf7-4ffb-8812-0056584a3d9b",
                "parentUUID": "fb00230d-f2e8-4c67-a6cf-a941767fe840",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_AOS_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_AOS_PENDING Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: false,\n    aosSearchError: true //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: true,\n    aosSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "88823bb1-2670-4a44-b18e-80f1f601c214",
                "parentUUID": "86c2f47d-ba33-4829-97eb-0de2c58741d6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "86c2f47d-ba33-4829-97eb-0de2c58741d6",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_AOS_PENDING Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: false,\n    aosSearchError: true //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: true,\n    aosSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "88823bb1-2670-4a44-b18e-80f1f601c214",
                "parentUUID": "86c2f47d-ba33-4829-97eb-0de2c58741d6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_AOS_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_AOS_FULFILLED Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: true,\n    aosSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_FULFILLED\",\n    payload: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    aosSearchIsLoading: false,\n    aosSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c2451801-84e1-4d1f-bfee-5cf1e1723d4b",
                "parentUUID": "a49f7a26-bd5c-40e2-88f5-c03b1c5e42ce",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "a49f7a26-bd5c-40e2-88f5-c03b1c5e42ce",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_AOS_FULFILLED Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: true,\n    aosSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_FULFILLED\",\n    payload: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    aosSearchIsLoading: false,\n    aosSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c2451801-84e1-4d1f-bfee-5cf1e1723d4b",
                "parentUUID": "a49f7a26-bd5c-40e2-88f5-c03b1c5e42ce",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_AOS_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_AOS_REJECTED Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    aosSearchIsLoading: true,\n    aosSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: false,\n    aosSearchError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0e4f83bf-6a4d-46f5-992d-98c09df5f212",
                "parentUUID": "75e2d960-a917-4dbb-9562-166ffb306ad9",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "75e2d960-a917-4dbb-9562-166ffb306ad9",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_AOS_REJECTED Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    aosSearchIsLoading: true,\n    aosSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: false,\n    aosSearchError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0e4f83bf-6a4d-46f5-992d-98c09df5f212",
                "parentUUID": "75e2d960-a917-4dbb-9562-166ffb306ad9",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: UPDATE_AFFECTED_UNITS",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly update the affected units value to the given array",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_AFFECTED_UNITS Should correctly update the affected units value to the given array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: []\n};\nvar action = {\n    type: \"UPDATE_AFFECTED_UNITS\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9acd98fe-7da5-4547-88c3-74e649c61fc0",
                "parentUUID": "be7a1385-036e-444d-be4b-613c2fb83ba4",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "be7a1385-036e-444d-be4b-613c2fb83ba4",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly update the affected units value to the given array",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_AFFECTED_UNITS Should correctly update the affected units value to the given array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: []\n};\nvar action = {\n    type: \"UPDATE_AFFECTED_UNITS\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9acd98fe-7da5-4547-88c3-74e649c61fc0",
                "parentUUID": "be7a1385-036e-444d-be4b-613c2fb83ba4",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: UPDATE_INDEX_OF_TP_TO_REMOVE",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly update the index of tp to remove value to the given value",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_INDEX_OF_TP_TO_REMOVE Should correctly update the index of tp to remove value to the given value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 0\n};\nvar action = {\n    type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\",\n    index: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 1\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "48ab9f31-f4f3-4c97-b037-365769855b01",
                "parentUUID": "8064f57b-2228-4ae5-bee2-384268ca1aa8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "8064f57b-2228-4ae5-bee2-384268ca1aa8",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly update the index of tp to remove value to the given value",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_INDEX_OF_TP_TO_REMOVE Should correctly update the index of tp to remove value to the given value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 0\n};\nvar action = {\n    type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\",\n    index: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 1\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "48ab9f31-f4f3-4c97-b037-365769855b01",
                "parentUUID": "8064f57b-2228-4ae5-bee2-384268ca1aa8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: UPDATE_UNIT_TO_ADD",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set the unit to add to the new unit",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_UNIT_TO_ADD Should correctly set the unit to add to the new unit",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitInfo: \"TestUnit\",\n    unitToAdd: undefined\n};\nvar action = {\n    type: \"UPDATE_UNIT_TO_ADD\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitInfo: \"TestUnit\",\n    unitToAdd: \"TestUnit\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5ba6acf8-647e-48fc-a6c3-563561515c83",
                "parentUUID": "7d102ef2-004c-41b3-919a-6927c200332c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "7d102ef2-004c-41b3-919a-6927c200332c",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly set the unit to add to the new unit",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_UNIT_TO_ADD Should correctly set the unit to add to the new unit",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitInfo: \"TestUnit\",\n    unitToAdd: undefined\n};\nvar action = {\n    type: \"UPDATE_UNIT_TO_ADD\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitInfo: \"TestUnit\",\n    unitToAdd: \"TestUnit\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5ba6acf8-647e-48fc-a6c3-563561515c83",
                "parentUUID": "7d102ef2-004c-41b3-919a-6927c200332c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: UPDATE_UNIT_IS_BEING_DRAGGED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set a non-dragging unit being dragged",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_UNIT_IS_BEING_DRAGGED Should correctly set a non-dragging unit being dragged",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: false\n};\nvar action = {\n    type: \"UPDATE_UNIT_IS_BEING_DRAGGED\",\n    isDragging: true\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a7935035-d6f3-431c-bcce-f11e04073dc0",
                "parentUUID": "b93a2fc2-4cb9-48dc-8920-e805c063d3cf",
                "skipped": false
              },
              {
                "title": "Should correctly set a dragging unit to be not dragged",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_UNIT_IS_BEING_DRAGGED Should correctly set a dragging unit to be not dragged",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: true\n};\nvar action = {\n    type: \"UPDATE_UNIT_IS_BEING_DRAGGED\",\n    isDragging: false\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "87738a02-eea7-4524-81cd-afab67ee9341",
                "parentUUID": "b93a2fc2-4cb9-48dc-8920-e805c063d3cf",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "b93a2fc2-4cb9-48dc-8920-e805c063d3cf",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly set a non-dragging unit being dragged",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_UNIT_IS_BEING_DRAGGED Should correctly set a non-dragging unit being dragged",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: false\n};\nvar action = {\n    type: \"UPDATE_UNIT_IS_BEING_DRAGGED\",\n    isDragging: true\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a7935035-d6f3-431c-bcce-f11e04073dc0",
                "parentUUID": "b93a2fc2-4cb9-48dc-8920-e805c063d3cf",
                "skipped": false
              },
              {
                "title": "Should correctly set a dragging unit to be not dragged",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_UNIT_IS_BEING_DRAGGED Should correctly set a dragging unit to be not dragged",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: true\n};\nvar action = {\n    type: \"UPDATE_UNIT_IS_BEING_DRAGGED\",\n    isDragging: false\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "87738a02-eea7-4524-81cd-afab67ee9341",
                "parentUUID": "b93a2fc2-4cb9-48dc-8920-e805c063d3cf",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: MOVING_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly begin moving a unit",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVING_UNIT Should correctly begin moving a unit",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0\n};\nvar action = {\n    type: \"MOVING_UNIT\",\n    unit: \"TEST-UNIT\",\n    unitIndex: 3,\n    tpIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TEST-UNIT\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 3\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0ba85494-5e04-44c2-90ac-a8e4231e9a6c",
                "parentUUID": "47fc21e5-2519-4509-8aa2-635af0098b7a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "47fc21e5-2519-4509-8aa2-635af0098b7a",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly begin moving a unit",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVING_UNIT Should correctly begin moving a unit",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0\n};\nvar action = {\n    type: \"MOVING_UNIT\",\n    unit: \"TEST-UNIT\",\n    unitIndex: 3,\n    tpIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TEST-UNIT\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 3\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0ba85494-5e04-44c2-90ac-a8e4231e9a6c",
                "parentUUID": "47fc21e5-2519-4509-8aa2-635af0098b7a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: MOVE_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly handle moving a unit to a teaching period earlier than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period earlier than it",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitName: \"TestUnit\", creditPoints: 6 }, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e222ca8a-833e-4085-814b-84e21a832c60",
                "parentUUID": "7cd2d8ab-70f6-4007-b027-50e9531a1a5c",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to a teaching period later than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period later than it",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitName: \"TestUnit\", creditPoints: 6 }, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "258000c5-1b3e-4013-974c-884c2e187096",
                "parentUUID": "7cd2d8ab-70f6-4007-b027-50e9531a1a5c",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to the same teaching period but earlier position",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but earlier position",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [\"PlaceToMoveTo\", { unitName: \"TestUnit\", creditPoints: 6 }, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [{ unitName: \"TestUnit\", creditPoints: 6 }, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c7869a3b-24e5-48d4-a010-414fa6026df1",
                "parentUUID": "7cd2d8ab-70f6-4007-b027-50e9531a1a5c",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to the same teaching period but later position",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but later position",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [{ unitName: \"TestUnit\", creditPoints: 6 }, null, \"PlaceToMoveTo\", null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a946c2cd-7845-48fa-9cf7-2e6b138672a2",
                "parentUUID": "7cd2d8ab-70f6-4007-b027-50e9531a1a5c",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to the same teaching period and exact same position",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period and exact same position",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f51f71ee-39e9-415a-b38c-3a764abc20cb",
                "parentUUID": "7cd2d8ab-70f6-4007-b027-50e9531a1a5c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "7cd2d8ab-70f6-4007-b027-50e9531a1a5c",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly handle moving a unit to a teaching period earlier than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period earlier than it",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitName: \"TestUnit\", creditPoints: 6 }, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e222ca8a-833e-4085-814b-84e21a832c60",
                "parentUUID": "7cd2d8ab-70f6-4007-b027-50e9531a1a5c",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to a teaching period later than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period later than it",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitName: \"TestUnit\", creditPoints: 6 }, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "258000c5-1b3e-4013-974c-884c2e187096",
                "parentUUID": "7cd2d8ab-70f6-4007-b027-50e9531a1a5c",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to the same teaching period but earlier position",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but earlier position",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [\"PlaceToMoveTo\", { unitName: \"TestUnit\", creditPoints: 6 }, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [{ unitName: \"TestUnit\", creditPoints: 6 }, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c7869a3b-24e5-48d4-a010-414fa6026df1",
                "parentUUID": "7cd2d8ab-70f6-4007-b027-50e9531a1a5c",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to the same teaching period but later position",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but later position",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [{ unitName: \"TestUnit\", creditPoints: 6 }, null, \"PlaceToMoveTo\", null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a946c2cd-7845-48fa-9cf7-2e6b138672a2",
                "parentUUID": "7cd2d8ab-70f6-4007-b027-50e9531a1a5c",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to the same teaching period and exact same position",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period and exact same position",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f51f71ee-39e9-415a-b38c-3a764abc20cb",
                "parentUUID": "7cd2d8ab-70f6-4007-b027-50e9531a1a5c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "ACTION: CANCEL_MOVING_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "should cancel moving unit",
                "fullTitle": "REDUCER: CourseStructure ACTION: CANCEL_MOVING_UNIT should cancel moving unit",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: \"TestUnit2\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: undefined,\n    unitsIndexOfUnitToBeMoved: undefined\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "2f979eff-045d-4d4a-94aa-a65c5301b83d",
                "parentUUID": "30b59bc8-e81e-4f8c-ad9e-e584b0f0820f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "30b59bc8-e81e-4f8c-ad9e-e584b0f0820f",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "should cancel moving unit",
                "fullTitle": "REDUCER: CourseStructure ACTION: CANCEL_MOVING_UNIT should cancel moving unit",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: \"TestUnit2\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: undefined,\n    unitsIndexOfUnitToBeMoved: undefined\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "2f979eff-045d-4d4a-94aa-a65c5301b83d",
                "parentUUID": "30b59bc8-e81e-4f8c-ad9e-e584b0f0820f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: SWAP_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly handle swaping a unit to a teaching period earlier than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period earlier than it",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "691f876a-db69-4f9d-9669-4a8728c1103b",
                "parentUUID": "119a9910-32c9-4db8-bce4-4cb6f53f201a",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to a teaching period later than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period later than it",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1d9a799d-7aa3-4f3b-9bc7-7895e02b8f7f",
                "parentUUID": "119a9910-32c9-4db8-bce4-4cb6f53f201a",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to the same teaching period but earlier position",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but earlier position",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "6103b7d3-ffbf-4532-a861-6f17d838d55b",
                "parentUUID": "119a9910-32c9-4db8-bce4-4cb6f53f201a",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to the same teaching period but later position",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but later position",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, \"PlaceToMoveTo\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", null, \"TestUnit\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5f1250a1-5a9c-4bc1-9d85-d16a5d1121af",
                "parentUUID": "119a9910-32c9-4db8-bce4-4cb6f53f201a",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to the same teaching period and exact same position",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period and exact same position",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e57f9342-c30b-47fb-a659-dc7cc7c15b3b",
                "parentUUID": "119a9910-32c9-4db8-bce4-4cb6f53f201a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "119a9910-32c9-4db8-bce4-4cb6f53f201a",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly handle swaping a unit to a teaching period earlier than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period earlier than it",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "691f876a-db69-4f9d-9669-4a8728c1103b",
                "parentUUID": "119a9910-32c9-4db8-bce4-4cb6f53f201a",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to a teaching period later than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period later than it",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1d9a799d-7aa3-4f3b-9bc7-7895e02b8f7f",
                "parentUUID": "119a9910-32c9-4db8-bce4-4cb6f53f201a",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to the same teaching period but earlier position",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but earlier position",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "6103b7d3-ffbf-4532-a861-6f17d838d55b",
                "parentUUID": "119a9910-32c9-4db8-bce4-4cb6f53f201a",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to the same teaching period but later position",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but later position",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, \"PlaceToMoveTo\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", null, \"TestUnit\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5f1250a1-5a9c-4bc1-9d85-d16a5d1121af",
                "parentUUID": "119a9910-32c9-4db8-bce4-4cb6f53f201a",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to the same teaching period and exact same position",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period and exact same position",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e57f9342-c30b-47fb-a659-dc7cc7c15b3b",
                "parentUUID": "119a9910-32c9-4db8-bce4-4cb6f53f201a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          },
          {
            "title": "ACTION: VALIDATE_COURSE",
            "suites": [
              {
                "title": "duplicates:",
                "suites": [],
                "tests": [
                  {
                    "title": "Should not give duplicate unit errors if the first attempt is in the past, and the second attempt is not two or more years into the future.",
                    "fullTitle": "ACTION: VALIDATE_COURSE duplicates: Should not give duplicate unit errors if the first attempt is in the past, and the second attempt is not two or more years into the future.",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: new Date().getFullYear() - 1,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, null]\n    }, {\n        code: \"S1-01\",\n        year: new Date().getFullYear() + 1,\n        units: [null, null, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9e35f5fe-e71f-4a5d-ae95-e61b8e2fb646",
                    "parentUUID": "2c823dbd-32f6-4546-b40a-9827116a7c50",
                    "skipped": false
                  },
                  {
                    "title": "Should give a duplicate unit error if there are two same units in the same teaching period",
                    "fullTitle": "ACTION: VALIDATE_COURSE duplicates: Should give a duplicate unit error if there are two same units in the same teaching period",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2015,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }, {\n        code: \"S2-01\",\n        year: 2015,\n        units: [null, null, null, {\n            unitCode: \"GJQ2039\"\n        }]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2015,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }, {\n        code: \"S2-01\",\n        year: 2015,\n        units: [null, null, null, {\n            unitCode: \"GJQ2039\"\n        }]\n    }],\n    courseErrors: [{\n        message: \"ABCD1234 already exists in the same teaching period. Please remove this unit.\",\n        coordinates: [[0, 3]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "de23fe77-8389-43ff-913a-4ede585a4aed",
                    "parentUUID": "2c823dbd-32f6-4546-b40a-9827116a7c50",
                    "skipped": false
                  },
                  {
                    "title": "Should give a duplicate error if a duplicate unit is placed in a teaching period two years from now",
                    "fullTitle": "ACTION: VALIDATE_COURSE duplicates: Should give a duplicate error if a duplicate unit is placed in a teaching period two years from now",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var currentYear = new Date().getFullYear();\nvar stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: currentYear,\n        units: [{\n            unitCode: \"ABC1234\"\n        }, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 2,\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 2,\n        units: [null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: currentYear,\n        units: [{\n            unitCode: \"ABC1234\"\n        }, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 2,\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 2,\n        units: [null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan. Please plan as if you will pass all units.\",\n        coordinates: [[4, 1]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "971b1110-2c88-4f88-adbc-a1c7caa548ac",
                    "parentUUID": "2c823dbd-32f6-4546-b40a-9827116a7c50",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/reducers/CourseStructure.spec.js",
                "uuid": "2c823dbd-32f6-4546-b40a-9827116a7c50",
                "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
                "passes": [
                  {
                    "title": "Should not give duplicate unit errors if the first attempt is in the past, and the second attempt is not two or more years into the future.",
                    "fullTitle": "ACTION: VALIDATE_COURSE duplicates: Should not give duplicate unit errors if the first attempt is in the past, and the second attempt is not two or more years into the future.",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: new Date().getFullYear() - 1,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, null]\n    }, {\n        code: \"S1-01\",\n        year: new Date().getFullYear() + 1,\n        units: [null, null, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9e35f5fe-e71f-4a5d-ae95-e61b8e2fb646",
                    "parentUUID": "2c823dbd-32f6-4546-b40a-9827116a7c50",
                    "skipped": false
                  },
                  {
                    "title": "Should give a duplicate unit error if there are two same units in the same teaching period",
                    "fullTitle": "ACTION: VALIDATE_COURSE duplicates: Should give a duplicate unit error if there are two same units in the same teaching period",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2015,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }, {\n        code: \"S2-01\",\n        year: 2015,\n        units: [null, null, null, {\n            unitCode: \"GJQ2039\"\n        }]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2015,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }, {\n        code: \"S2-01\",\n        year: 2015,\n        units: [null, null, null, {\n            unitCode: \"GJQ2039\"\n        }]\n    }],\n    courseErrors: [{\n        message: \"ABCD1234 already exists in the same teaching period. Please remove this unit.\",\n        coordinates: [[0, 3]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "de23fe77-8389-43ff-913a-4ede585a4aed",
                    "parentUUID": "2c823dbd-32f6-4546-b40a-9827116a7c50",
                    "skipped": false
                  },
                  {
                    "title": "Should give a duplicate error if a duplicate unit is placed in a teaching period two years from now",
                    "fullTitle": "ACTION: VALIDATE_COURSE duplicates: Should give a duplicate error if a duplicate unit is placed in a teaching period two years from now",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var currentYear = new Date().getFullYear();\nvar stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: currentYear,\n        units: [{\n            unitCode: \"ABC1234\"\n        }, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 2,\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 2,\n        units: [null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: currentYear,\n        units: [{\n            unitCode: \"ABC1234\"\n        }, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 2,\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 2,\n        units: [null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan. Please plan as if you will pass all units.\",\n        coordinates: [[4, 1]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "971b1110-2c88-4f88-adbc-a1c7caa548ac",
                    "parentUUID": "2c823dbd-32f6-4546-b40a-9827116a7c50",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 3
              },
              {
                "title": "offerings:",
                "suites": [],
                "tests": [
                  {
                    "title": "Should give a course error for a unit not being offered in the teaching period it is in",
                    "fullTitle": "ACTION: VALIDATE_COURSE offerings: Should give a course error for a unit not being offered in the teaching period it is in",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2019,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: 2019,\n        units: [null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"First semester 2019 (Day)\"]\n            }]\n        }, null]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2019,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: 2019,\n        units: [null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"First semester 2019 (Day)\"]\n            }]\n        }, null]\n    }],\n    courseErrors: [{\n        message: \"ABC1234 is not offered in second semester, 2019.\",\n        coordinates: [[1, 2]]\n    }],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "93783a9d-58e3-407d-bf38-aab9c41dbb1e",
                    "parentUUID": "d4540e93-ee97-462c-bdfa-472e1918f4f1",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/reducers/CourseStructure.spec.js",
                "uuid": "d4540e93-ee97-462c-bdfa-472e1918f4f1",
                "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
                "passes": [
                  {
                    "title": "Should give a course error for a unit not being offered in the teaching period it is in",
                    "fullTitle": "ACTION: VALIDATE_COURSE offerings: Should give a course error for a unit not being offered in the teaching period it is in",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2019,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: 2019,\n        units: [null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"First semester 2019 (Day)\"]\n            }]\n        }, null]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2019,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: 2019,\n        units: [null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"First semester 2019 (Day)\"]\n            }]\n        }, null]\n    }],\n    courseErrors: [{\n        message: \"ABC1234 is not offered in second semester, 2019.\",\n        coordinates: [[1, 2]]\n    }],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "93783a9d-58e3-407d-bf38-aab9c41dbb1e",
                    "parentUUID": "d4540e93-ee97-462c-bdfa-472e1918f4f1",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1
              },
              {
                "title": "rules:",
                "suites": [],
                "tests": [
                  {
                    "title": "Should give a course error for a missing prereq",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should give a course error for a missing prereq",
                    "timedOut": false,
                    "duration": 7,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"Must have passed an (I/W) unit in {DEF2345, QLS2029}\",\n                endDate: \"\"\n            }]\n        }]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"Must have passed an (I/W) unit in {DEF2345, QLS2029}\",\n                endDate: \"\"\n            }]\n        }]\n    }],\n    courseErrors: [{\n        message: \"You must complete DEF2345 or QLS2029 before you can do ABC1234.\",\n        coordinates: [[0, 3]]\n    }],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5d024ba4-0079-40e6-92f0-db14a8b9c9f4",
                    "parentUUID": "5d7d6bde-088c-45b6-9789-821c8f95b61e",
                    "skipped": false
                  },
                  {
                    "title": "Should give an error for credit points being lower than the minimum required for the unit",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should give an error for credit points being lower than the minimum required for the unit",
                    "timedOut": false,
                    "duration": 13,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2016,\n        code: \"S2-01\",\n        units: [{\n            unitCode: \"TEST1011\",\n            creditPoints: 6\n        }, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"TEST3031\",\n            creditPoints: 6,\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"Must have passed 24 credit points\"\n            }]\n        }, null, null, null]\n    }, {\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2016,\n        code: \"S2-01\",\n        units: [{\n            unitCode: \"TEST1011\",\n            creditPoints: 6\n        }, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"TEST3031\",\n            creditPoints: 6,\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"Must have passed 24 credit points\"\n            }]\n        }, null, null, null]\n    }, {\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"You need 18 more credit points before you can do TEST3031.\",\n        coordinates: [[2, 1]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e2295abe-a937-4265-be7c-19a734901ca4",
                    "parentUUID": "5d7d6bde-088c-45b6-9789-821c8f95b61e",
                    "skipped": false
                  },
                  {
                    "title": "Should correctly handle prohibitions",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should correctly handle prohibitions",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2013,\n        code: \"S1-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\"\n        }]\n    }, {\n        year: 2013,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"BCD1234\",\n            rules: [{\n                ruleSummary: \"INCOMP\",\n                ruleString: \"Incompatible with achievement in {ABC1234}\"\n            }]\n        }, null, null]\n    }],\n    courseErrors: [{\n        message: \"Please remove BCD1234, as completing ABC1234 prohibits you from doing this unit.\",\n        coordinates: [[1, 1]]\n    }]\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fdb4d944-a630-4d4e-b0a0-b77345274ec6",
                    "parentUUID": "5d7d6bde-088c-45b6-9789-821c8f95b61e",
                    "skipped": false
                  },
                  {
                    "title": "Should correctly handle the Do branch of For COURSE_CODE syntax",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should correctly handle the Do branch of For COURSE_CODE syntax",
                    "timedOut": false,
                    "duration": 5,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2014,\n        code: \"S1-01\",\n        units: [{\n            unitCode: \"DEF2345\",\n            unitName: \"Test unit\",\n            rules: [{\n                ruleSummary: \"COREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {S2029, S3019} Do Any passed co-req (I/W) unit in {ABC2022} Otherwise true\",\n                endDate: \"\"\n            }]\n        }, null, null, null]\n    }],\n    courseInfo: {\n        courseCode: \"S2029\"\n    },\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2014,\n        code: \"S1-01\",\n        units: [{\n            unitCode: \"DEF2345\",\n            unitName: \"Test unit\",\n            rules: [{\n                ruleSummary: \"COREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {S2029, S3019} Do Any passed co-req (I/W) unit in {ABC2022} Otherwise true\",\n                endDate: \"\"\n            }]\n        }, null, null, null]\n    }],\n    courseInfo: {\n        courseCode: \"S2029\"\n    },\n    courseErrors: [{\n        message: \"You must complete ABC2022 before or whilst doing DEF2345.\",\n        coordinates: [[0, 0]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "86a95d86-3d4c-48e4-9ffd-ab2df38e19c5",
                    "parentUUID": "5d7d6bde-088c-45b6-9789-821c8f95b61e",
                    "skipped": false
                  },
                  {
                    "title": "Should correctly handle the Otherwise branch of For COURSE_CODE syntax",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should correctly handle the Otherwise branch of For COURSE_CODE syntax",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }, {\n        year: 2018,\n        code: \"WS-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"Winter semester 2018 (Day)\"]\n            }],\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {Q2001, Q2003} Do true Otherwise Must have passed 1 (I/W) units in {TEST1001}\",\n                endDate: \"\"\n            }]\n        }]\n    }, {\n        year: 2018,\n        code: \"S2-01\",\n        units: [null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }, {\n        year: 2018,\n        code: \"WS-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"Winter semester 2018 (Day)\"]\n            }],\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {Q2001, Q2003} Do true Otherwise Must have passed 1 (I/W) units in {TEST1001}\",\n                endDate: \"\"\n            }]\n        }]\n    }, {\n        year: 2018,\n        code: \"S2-01\",\n        units: [null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"You must complete TEST1001 before you can do ABC1234.\",\n        coordinates: [[1, 3]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d11b6d15-6a66-4b52-9ab3-f13f15a4b14b",
                    "parentUUID": "5d7d6bde-088c-45b6-9789-821c8f95b61e",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/reducers/CourseStructure.spec.js",
                "uuid": "5d7d6bde-088c-45b6-9789-821c8f95b61e",
                "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
                "passes": [
                  {
                    "title": "Should give a course error for a missing prereq",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should give a course error for a missing prereq",
                    "timedOut": false,
                    "duration": 7,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"Must have passed an (I/W) unit in {DEF2345, QLS2029}\",\n                endDate: \"\"\n            }]\n        }]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"Must have passed an (I/W) unit in {DEF2345, QLS2029}\",\n                endDate: \"\"\n            }]\n        }]\n    }],\n    courseErrors: [{\n        message: \"You must complete DEF2345 or QLS2029 before you can do ABC1234.\",\n        coordinates: [[0, 3]]\n    }],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5d024ba4-0079-40e6-92f0-db14a8b9c9f4",
                    "parentUUID": "5d7d6bde-088c-45b6-9789-821c8f95b61e",
                    "skipped": false
                  },
                  {
                    "title": "Should give an error for credit points being lower than the minimum required for the unit",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should give an error for credit points being lower than the minimum required for the unit",
                    "timedOut": false,
                    "duration": 13,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2016,\n        code: \"S2-01\",\n        units: [{\n            unitCode: \"TEST1011\",\n            creditPoints: 6\n        }, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"TEST3031\",\n            creditPoints: 6,\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"Must have passed 24 credit points\"\n            }]\n        }, null, null, null]\n    }, {\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2016,\n        code: \"S2-01\",\n        units: [{\n            unitCode: \"TEST1011\",\n            creditPoints: 6\n        }, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"TEST3031\",\n            creditPoints: 6,\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"Must have passed 24 credit points\"\n            }]\n        }, null, null, null]\n    }, {\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"You need 18 more credit points before you can do TEST3031.\",\n        coordinates: [[2, 1]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e2295abe-a937-4265-be7c-19a734901ca4",
                    "parentUUID": "5d7d6bde-088c-45b6-9789-821c8f95b61e",
                    "skipped": false
                  },
                  {
                    "title": "Should correctly handle prohibitions",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should correctly handle prohibitions",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2013,\n        code: \"S1-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\"\n        }]\n    }, {\n        year: 2013,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"BCD1234\",\n            rules: [{\n                ruleSummary: \"INCOMP\",\n                ruleString: \"Incompatible with achievement in {ABC1234}\"\n            }]\n        }, null, null]\n    }],\n    courseErrors: [{\n        message: \"Please remove BCD1234, as completing ABC1234 prohibits you from doing this unit.\",\n        coordinates: [[1, 1]]\n    }]\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fdb4d944-a630-4d4e-b0a0-b77345274ec6",
                    "parentUUID": "5d7d6bde-088c-45b6-9789-821c8f95b61e",
                    "skipped": false
                  },
                  {
                    "title": "Should correctly handle the Do branch of For COURSE_CODE syntax",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should correctly handle the Do branch of For COURSE_CODE syntax",
                    "timedOut": false,
                    "duration": 5,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2014,\n        code: \"S1-01\",\n        units: [{\n            unitCode: \"DEF2345\",\n            unitName: \"Test unit\",\n            rules: [{\n                ruleSummary: \"COREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {S2029, S3019} Do Any passed co-req (I/W) unit in {ABC2022} Otherwise true\",\n                endDate: \"\"\n            }]\n        }, null, null, null]\n    }],\n    courseInfo: {\n        courseCode: \"S2029\"\n    },\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2014,\n        code: \"S1-01\",\n        units: [{\n            unitCode: \"DEF2345\",\n            unitName: \"Test unit\",\n            rules: [{\n                ruleSummary: \"COREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {S2029, S3019} Do Any passed co-req (I/W) unit in {ABC2022} Otherwise true\",\n                endDate: \"\"\n            }]\n        }, null, null, null]\n    }],\n    courseInfo: {\n        courseCode: \"S2029\"\n    },\n    courseErrors: [{\n        message: \"You must complete ABC2022 before or whilst doing DEF2345.\",\n        coordinates: [[0, 0]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "86a95d86-3d4c-48e4-9ffd-ab2df38e19c5",
                    "parentUUID": "5d7d6bde-088c-45b6-9789-821c8f95b61e",
                    "skipped": false
                  },
                  {
                    "title": "Should correctly handle the Otherwise branch of For COURSE_CODE syntax",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should correctly handle the Otherwise branch of For COURSE_CODE syntax",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }, {\n        year: 2018,\n        code: \"WS-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"Winter semester 2018 (Day)\"]\n            }],\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {Q2001, Q2003} Do true Otherwise Must have passed 1 (I/W) units in {TEST1001}\",\n                endDate: \"\"\n            }]\n        }]\n    }, {\n        year: 2018,\n        code: \"S2-01\",\n        units: [null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }, {\n        year: 2018,\n        code: \"WS-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"Winter semester 2018 (Day)\"]\n            }],\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {Q2001, Q2003} Do true Otherwise Must have passed 1 (I/W) units in {TEST1001}\",\n                endDate: \"\"\n            }]\n        }]\n    }, {\n        year: 2018,\n        code: \"S2-01\",\n        units: [null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"You must complete TEST1001 before you can do ABC1234.\",\n        coordinates: [[1, 3]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "d11b6d15-6a66-4b52-9ab3-f13f15a4b14b",
                    "parentUUID": "5d7d6bde-088c-45b6-9789-821c8f95b61e",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 5,
                "totalPasses": 5,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 29
              }
            ],
            "tests": [
              {
                "title": "should give no errors for an empty course plan.",
                "fullTitle": "REDUCER: CourseStructure ACTION: VALIDATE_COURSE should give no errors for an empty course plan.",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan.\"\n    }],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    courseErrors: [],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f643768d-6150-4546-ae08-a757d3edaed3",
                "parentUUID": "327571ab-22ac-46d2-bdea-47c1cfd2187d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "327571ab-22ac-46d2-bdea-47c1cfd2187d",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "should give no errors for an empty course plan.",
                "fullTitle": "REDUCER: CourseStructure ACTION: VALIDATE_COURSE should give no errors for an empty course plan.",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan.\"\n    }],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    courseErrors: [],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f643768d-6150-4546-ae08-a757d3edaed3",
                "parentUUID": "327571ab-22ac-46d2-bdea-47c1cfd2187d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": true,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS",
            "suites": [],
            "tests": [
              {
                "title": "Should leave invalidUnitSlotCoordinates empty if there are no invalid unit slots",
                "fullTitle": "REDUCER: CourseStructure ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS Should leave invalidUnitSlotCoordinates empty if there are no invalid unit slots",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2015,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: false\n};\nvar action = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: {\n        unitCode: \"TEST1001\",\n        unitName: \"Test unit\",\n        locationAndTime: [{\n            location: \"Caulfield\",\n            time: [\"First semester 2017 (Day)\"]\n        }]\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2015,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "262d64c5-ff1c-44d1-8150-320310a41130",
                "parentUUID": "f69d642f-71f5-4b68-9104-72d062c5d748",
                "skipped": false
              },
              {
                "title": "Should highlight teaching periods that contains the same unit",
                "fullTitle": "REDUCER: CourseStructure ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS Should highlight teaching periods that contains the same unit",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var currentYear = new Date().getFullYear();\nvar stateBefore = {\n    teachingPeriods: [{\n        year: currentYear - 2,\n        code: \"FY-01\",\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        year: currentYear - 1,\n        code: \"FY-01\",\n        units: [null, null, {\n            unitCode: \"DEF2345\"\n        }, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: false\n};\nvar action = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: {\n        unitCode: \"ABC1234\",\n        locationAndTime: [{\n            location: \"Parkville\",\n            time: [\"Full year 2018 (Day)\"]\n        }]\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: currentYear - 2,\n        code: \"FY-01\",\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        year: currentYear - 1,\n        code: \"FY-01\",\n        units: [null, null, {\n            unitCode: \"DEF2345\"\n        }, null]\n    }],\n    invalidUnitSlotCoordinates: [[0, null]],\n    highlightingInvalidUnitSlots: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "950b3070-b5c9-41e9-b7b3-d4d6bbd767e6",
                "parentUUID": "f69d642f-71f5-4b68-9104-72d062c5d748",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "f69d642f-71f5-4b68-9104-72d062c5d748",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should leave invalidUnitSlotCoordinates empty if there are no invalid unit slots",
                "fullTitle": "REDUCER: CourseStructure ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS Should leave invalidUnitSlotCoordinates empty if there are no invalid unit slots",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2015,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: false\n};\nvar action = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: {\n        unitCode: \"TEST1001\",\n        unitName: \"Test unit\",\n        locationAndTime: [{\n            location: \"Caulfield\",\n            time: [\"First semester 2017 (Day)\"]\n        }]\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2015,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "262d64c5-ff1c-44d1-8150-320310a41130",
                "parentUUID": "f69d642f-71f5-4b68-9104-72d062c5d748",
                "skipped": false
              },
              {
                "title": "Should highlight teaching periods that contains the same unit",
                "fullTitle": "REDUCER: CourseStructure ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS Should highlight teaching periods that contains the same unit",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var currentYear = new Date().getFullYear();\nvar stateBefore = {\n    teachingPeriods: [{\n        year: currentYear - 2,\n        code: \"FY-01\",\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        year: currentYear - 1,\n        code: \"FY-01\",\n        units: [null, null, {\n            unitCode: \"DEF2345\"\n        }, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: false\n};\nvar action = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: {\n        unitCode: \"ABC1234\",\n        locationAndTime: [{\n            location: \"Parkville\",\n            time: [\"Full year 2018 (Day)\"]\n        }]\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: currentYear - 2,\n        code: \"FY-01\",\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        year: currentYear - 1,\n        code: \"FY-01\",\n        units: [null, null, {\n            unitCode: \"DEF2345\"\n        }, null]\n    }],\n    invalidUnitSlotCoordinates: [[0, null]],\n    highlightingInvalidUnitSlots: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "950b3070-b5c9-41e9-b7b3-d4d6bbd767e6",
                "parentUUID": "f69d642f-71f5-4b68-9104-72d062c5d748",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          },
          {
            "title": "DEFAULT",
            "suites": [],
            "tests": [
              {
                "title": "should not change the state if it receives an unknown action",
                "fullTitle": "REDUCER: CourseStructure DEFAULT should not change the state if it receives an unknown action",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "729e7d64-68d7-4c9a-86a4-0e1f979c36be",
                "parentUUID": "cd612aee-3f58-4ab8-bc0f-96467a3f6def",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "cd612aee-3f58-4ab8-bc0f-96467a3f6def",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "should not change the state if it receives an unknown action",
                "fullTitle": "REDUCER: CourseStructure DEFAULT should not change the state if it receives an unknown action",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "729e7d64-68d7-4c9a-86a4-0e1f979c36be",
                "parentUUID": "cd612aee-3f58-4ab8-bc0f-96467a3f6def",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_IMPORTANT_DATES_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "should begin fetching important dates correctly ",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_IMPORTANT_DATES_PENDING should begin fetching important dates correctly ",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\nvar action = {\n    type: \"FETCH_IMPORTANT_DATES_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: true,\n    importantDatesError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9f7d9e17-68b4-4a5e-897b-0b2799b9d141",
                "parentUUID": "9659f73f-8f0a-4eb8-9b8d-d38a40744890",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "9659f73f-8f0a-4eb8-9b8d-d38a40744890",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "should begin fetching important dates correctly ",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_IMPORTANT_DATES_PENDING should begin fetching important dates correctly ",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\nvar action = {\n    type: \"FETCH_IMPORTANT_DATES_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: true,\n    importantDatesError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9f7d9e17-68b4-4a5e-897b-0b2799b9d141",
                "parentUUID": "9659f73f-8f0a-4eb8-9b8d-d38a40744890",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_IMPORTANT_DATES_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "should handled failed fetch of important dates correctly ",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_IMPORTANT_DATES_REJECTED should handled failed fetch of important dates correctly ",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\nvar action = {\n    type: \"FETCH_IMPORTANT_DATES_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7fc2292a-5afb-480b-b443-2a748d99267f",
                "parentUUID": "3816fbc0-105d-45f1-9814-bc385aac0adf",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "3816fbc0-105d-45f1-9814-bc385aac0adf",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "should handled failed fetch of important dates correctly ",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_IMPORTANT_DATES_REJECTED should handled failed fetch of important dates correctly ",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\nvar action = {\n    type: \"FETCH_IMPORTANT_DATES_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7fc2292a-5afb-480b-b443-2a748d99267f",
                "parentUUID": "3816fbc0-105d-45f1-9814-bc385aac0adf",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_IMPORTANT_DATES_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "should handled failed fetch of important dates correctly ",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_IMPORTANT_DATES_FULFILLED should handled failed fetch of important dates correctly ",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\nvar action = {\n    type: \"FETCH_IMPORTANT_DATES_FULFILLED\",\n    payload: [{\n        \"value\": \"HE IS A SAURABH\"\n    }]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [{ \"value\": \"HE IS A SAURABH\" }],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "45431d0d-c64d-4073-af6b-f7c788a040ff",
                "parentUUID": "235b1c52-18a9-4374-9691-63ba9679d8ab",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "235b1c52-18a9-4374-9691-63ba9679d8ab",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "should handled failed fetch of important dates correctly ",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_IMPORTANT_DATES_FULFILLED should handled failed fetch of important dates correctly ",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\nvar action = {\n    type: \"FETCH_IMPORTANT_DATES_FULFILLED\",\n    payload: [{\n        \"value\": \"HE IS A SAURABH\"\n    }]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [{ \"value\": \"HE IS A SAURABH\" }],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "45431d0d-c64d-4073-af6b-f7c788a040ff",
                "parentUUID": "235b1c52-18a9-4374-9691-63ba9679d8ab",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/reducers/CourseStructure.spec.js",
        "uuid": "84840803-acd3-41ff-bc6d-bb0af0a7cd56",
        "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "REDUCER: Notifications",
        "suites": [
          {
            "title": "ACTION: ADD_NOTIFICATION",
            "suites": [],
            "tests": [
              {
                "title": "should insert a notification from an empty list",
                "fullTitle": "REDUCER: Notifications ACTION: ADD_NOTIFICATION should insert a notification from an empty list",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: []\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "4163b91f-d71f-492e-984f-91aae7fd1b6d",
                "parentUUID": "142bd961-d32c-4cce-a924-6ac6fd004825",
                "skipped": false
              },
              {
                "title": "should prepend a notification into an list of a few existing notifications.",
                "fullTitle": "REDUCER: Notifications ACTION: ADD_NOTIFICATION should prepend a notification into an list of a few existing notifications.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5a98ce8c-74a0-4b8d-bbd0-092a065d5b01",
                "parentUUID": "142bd961-d32c-4cce-a924-6ac6fd004825",
                "skipped": false
              },
              {
                "title": "should replace a notification if it already exists with a specified ID",
                "fullTitle": "REDUCER: Notifications ACTION: ADD_NOTIFICATION should replace a notification if it already exists with a specified ID",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    message: \"New message goes over here\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"New message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "3cdc29f1-d97c-4c7d-a88c-5f3ae874f95d",
                "parentUUID": "142bd961-d32c-4cce-a924-6ac6fd004825",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Notifications.spec.js",
            "uuid": "142bd961-d32c-4cce-a924-6ac6fd004825",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Notifications.spec.js",
            "passes": [
              {
                "title": "should insert a notification from an empty list",
                "fullTitle": "REDUCER: Notifications ACTION: ADD_NOTIFICATION should insert a notification from an empty list",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: []\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "4163b91f-d71f-492e-984f-91aae7fd1b6d",
                "parentUUID": "142bd961-d32c-4cce-a924-6ac6fd004825",
                "skipped": false
              },
              {
                "title": "should prepend a notification into an list of a few existing notifications.",
                "fullTitle": "REDUCER: Notifications ACTION: ADD_NOTIFICATION should prepend a notification into an list of a few existing notifications.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5a98ce8c-74a0-4b8d-bbd0-092a065d5b01",
                "parentUUID": "142bd961-d32c-4cce-a924-6ac6fd004825",
                "skipped": false
              },
              {
                "title": "should replace a notification if it already exists with a specified ID",
                "fullTitle": "REDUCER: Notifications ACTION: ADD_NOTIFICATION should replace a notification if it already exists with a specified ID",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    message: \"New message goes over here\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"New message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "3cdc29f1-d97c-4c7d-a88c-5f3ae874f95d",
                "parentUUID": "142bd961-d32c-4cce-a924-6ac6fd004825",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: REMOVE_NOTIFICATION",
            "suites": [],
            "tests": [
              {
                "title": "Should remove a notification given its ID",
                "fullTitle": "REDUCER: Notifications ACTION: REMOVE_NOTIFICATION Should remove a notification given its ID",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    id: \"CONNECTION_LOST\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0b5d6eef-83e3-4d7f-b723-cc4b0375b276",
                "parentUUID": "5d642abf-fb6e-45c6-9efa-7742c5406bc7",
                "skipped": false
              },
              {
                "title": "Should remove a notification given its index",
                "fullTitle": "REDUCER: Notifications ACTION: REMOVE_NOTIFICATION Should remove a notification given its index",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    index: 1\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "332870c8-9878-4711-a03d-3b2aff6a9c86",
                "parentUUID": "5d642abf-fb6e-45c6-9efa-7742c5406bc7",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Notifications.spec.js",
            "uuid": "5d642abf-fb6e-45c6-9efa-7742c5406bc7",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Notifications.spec.js",
            "passes": [
              {
                "title": "Should remove a notification given its ID",
                "fullTitle": "REDUCER: Notifications ACTION: REMOVE_NOTIFICATION Should remove a notification given its ID",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    id: \"CONNECTION_LOST\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0b5d6eef-83e3-4d7f-b723-cc4b0375b276",
                "parentUUID": "5d642abf-fb6e-45c6-9efa-7742c5406bc7",
                "skipped": false
              },
              {
                "title": "Should remove a notification given its index",
                "fullTitle": "REDUCER: Notifications ACTION: REMOVE_NOTIFICATION Should remove a notification given its index",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    index: 1\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "332870c8-9878-4711-a03d-3b2aff6a9c86",
                "parentUUID": "5d642abf-fb6e-45c6-9efa-7742c5406bc7",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "DEFAULT",
            "suites": [],
            "tests": [
              {
                "title": "Should not change state if it does not recognise an action",
                "fullTitle": "REDUCER: Notifications DEFAULT Should not change state if it does not recognise an action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Notifications2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "c5bbd40d-2a34-4a6c-91b7-c69b0603e457",
                "parentUUID": "f4b7bcdb-a163-4001-8090-14fb644588e7",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Notifications.spec.js",
            "uuid": "f4b7bcdb-a163-4001-8090-14fb644588e7",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Notifications.spec.js",
            "passes": [
              {
                "title": "Should not change state if it does not recognise an action",
                "fullTitle": "REDUCER: Notifications DEFAULT Should not change state if it does not recognise an action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Notifications2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "c5bbd40d-2a34-4a6c-91b7-c69b0603e457",
                "parentUUID": "f4b7bcdb-a163-4001-8090-14fb644588e7",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/reducers/Notifications.spec.js",
        "uuid": "1d5b73b6-653c-469c-92c1-af79643c8c61",
        "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Notifications.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "REDUCER: UI",
        "suites": [
          {
            "title": "ACTION: SHOW_INSERT_TEACHING_PERIOD_UI",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly toggle the insert teaching period UI boolean",
                "fullTitle": "REDUCER: UI ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: true,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9dc36742-3876-42c6-8c0e-9efc204fe9f9",
                "parentUUID": "3e090a16-49de-40b4-a4e4-8c2ff4754491",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "3e090a16-49de-40b4-a4e4-8c2ff4754491",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly toggle the insert teaching period UI boolean",
                "fullTitle": "REDUCER: UI ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: true,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9dc36742-3876-42c6-8c0e-9efc204fe9f9",
                "parentUUID": "3e090a16-49de-40b4-a4e4-8c2ff4754491",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: HIDE_INSERT_TEACHING_PERIOD_UI",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly toggle the insert teaching period UI boolean",
                "fullTitle": "REDUCER: UI ACTION: HIDE_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: true,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5896cb76-a3d1-4df8-9884-8d1fb3be7725",
                "parentUUID": "d40746bd-9f7b-423f-aca2-c902b73c9f6e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "d40746bd-9f7b-423f-aca2-c902b73c9f6e",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly toggle the insert teaching period UI boolean",
                "fullTitle": "REDUCER: UI ACTION: HIDE_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: true,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5896cb76-a3d1-4df8-9884-8d1fb3be7725",
                "parentUUID": "d40746bd-9f7b-423f-aca2-c902b73c9f6e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: ADDING_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set the add unit UI boolean to true and correctly hide the sidebar when a unit is being added",
                "fullTitle": "REDUCER: UI ACTION: ADDING_UNIT Should correctly set the add unit UI boolean to true and correctly hide the sidebar when a unit is being added",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "21136500-c947-4bab-be40-6ee60199bdc9",
                "parentUUID": "dda5a8bb-e50c-4a89-be35-d8f7f489cd44",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "dda5a8bb-e50c-4a89-be35-d8f7f489cd44",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly set the add unit UI boolean to true and correctly hide the sidebar when a unit is being added",
                "fullTitle": "REDUCER: UI ACTION: ADDING_UNIT Should correctly set the add unit UI boolean to true and correctly hide the sidebar when a unit is being added",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "21136500-c947-4bab-be40-6ee60199bdc9",
                "parentUUID": "dda5a8bb-e50c-4a89-be35-d8f7f489cd44",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: ADD_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set the add unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: ADD_UNIT Should correctly set the add unit UI boolean to false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true\n};\nvar action = {\n    type: \"ADD_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f3b21f04-86a1-46cd-a1a2-af07e0f71776",
                "parentUUID": "1f1bf5b8-6786-4e77-af7e-d09af087feaf",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "1f1bf5b8-6786-4e77-af7e-d09af087feaf",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly set the add unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: ADD_UNIT Should correctly set the add unit UI boolean to false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true\n};\nvar action = {\n    type: \"ADD_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f3b21f04-86a1-46cd-a1a2-af07e0f71776",
                "parentUUID": "1f1bf5b8-6786-4e77-af7e-d09af087feaf",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: CANCEL_ADDING_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set the add unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: CANCEL_ADDING_UNIT Should correctly set the add unit UI boolean to false",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true\n};\nvar action = {\n    type: \"CANCEL_ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "24fdcc43-e79d-4d26-81a1-495e419e2530",
                "parentUUID": "36e337b2-eb13-44f6-95ce-bcd9472dce81",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "36e337b2-eb13-44f6-95ce-bcd9472dce81",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly set the add unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: CANCEL_ADDING_UNIT Should correctly set the add unit UI boolean to false",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true\n};\nvar action = {\n    type: \"CANCEL_ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "24fdcc43-e79d-4d26-81a1-495e419e2530",
                "parentUUID": "36e337b2-eb13-44f6-95ce-bcd9472dce81",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: MOVING_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set the move unit UI boolean to true",
                "fullTitle": "REDUCER: UI ACTION: MOVING_UNIT Should correctly set the move unit UI boolean to true",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"MOVING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a99da681-c1d0-431c-87cb-8c02f1d7842a",
                "parentUUID": "7809519c-6bbc-4b10-99aa-be4a73fc9c82",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "7809519c-6bbc-4b10-99aa-be4a73fc9c82",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly set the move unit UI boolean to true",
                "fullTitle": "REDUCER: UI ACTION: MOVING_UNIT Should correctly set the move unit UI boolean to true",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"MOVING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a99da681-c1d0-431c-87cb-8c02f1d7842a",
                "parentUUID": "7809519c-6bbc-4b10-99aa-be4a73fc9c82",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: MOVE_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set the move unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: MOVE_UNIT Should correctly set the move unit UI boolean to false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"MOVE_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "249de938-8dde-49f8-8dcf-0ae0357de59b",
                "parentUUID": "f29bd191-c4f4-41a7-8deb-7bebc00c12ce",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "f29bd191-c4f4-41a7-8deb-7bebc00c12ce",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly set the move unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: MOVE_UNIT Should correctly set the move unit UI boolean to false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"MOVE_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "249de938-8dde-49f8-8dcf-0ae0357de59b",
                "parentUUID": "f29bd191-c4f4-41a7-8deb-7bebc00c12ce",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: SWAP_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set the move unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: SWAP_UNIT Should correctly set the move unit UI boolean to false",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"SWAP_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "27adf6b2-0664-4bab-992d-bb53f8e42fa0",
                "parentUUID": "ef38e1a0-da3a-45e0-a93e-803321368fb5",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "ef38e1a0-da3a-45e0-a93e-803321368fb5",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly set the move unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: SWAP_UNIT Should correctly set the move unit UI boolean to false",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"SWAP_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "27adf6b2-0664-4bab-992d-bb53f8e42fa0",
                "parentUUID": "ef38e1a0-da3a-45e0-a93e-803321368fb5",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: CANCEL_MOVING_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set the move unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: CANCEL_MOVING_UNIT Should correctly set the move unit UI boolean to false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7200a5fe-114b-465a-9b1e-c03912a88414",
                "parentUUID": "58446a91-54ab-4edf-8b8c-9885df890fbd",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "58446a91-54ab-4edf-8b8c-9885df890fbd",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly set the move unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: CANCEL_MOVING_UNIT Should correctly set the move unit UI boolean to false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7200a5fe-114b-465a-9b1e-c03912a88414",
                "parentUUID": "58446a91-54ab-4edf-8b8c-9885df890fbd",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: SET_COURSE_READ_ONLY",
            "suites": [],
            "tests": [
              {
                "title": "Should set the course to read only correctly",
                "fullTitle": "REDUCER: UI ACTION: SET_COURSE_READ_ONLY Should set the course to read only correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: false\n};\nvar action = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "590ff000-1f31-42da-9995-d5755e0db6b6",
                "parentUUID": "aa3265f0-736c-43f3-bc7c-20714f443281",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "aa3265f0-736c-43f3-bc7c-20714f443281",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should set the course to read only correctly",
                "fullTitle": "REDUCER: UI ACTION: SET_COURSE_READ_ONLY Should set the course to read only correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: false\n};\nvar action = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "590ff000-1f31-42da-9995-d5755e0db6b6",
                "parentUUID": "aa3265f0-736c-43f3-bc7c-20714f443281",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: SET_COURSE_READ_AND_WRITE",
            "suites": [],
            "tests": [
              {
                "title": "Should set the course to allow edits correctly",
                "fullTitle": "REDUCER: UI ACTION: SET_COURSE_READ_AND_WRITE Should set the course to allow edits correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: true\n};\nvar action = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9d7a801c-a385-4832-ab6d-ae262a4252a1",
                "parentUUID": "64183b44-d39b-44bf-99aa-c18a9fed7eef",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "64183b44-d39b-44bf-99aa-c18a9fed7eef",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should set the course to allow edits correctly",
                "fullTitle": "REDUCER: UI ACTION: SET_COURSE_READ_AND_WRITE Should set the course to allow edits correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: true\n};\nvar action = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9d7a801c-a385-4832-ab6d-ae262a4252a1",
                "parentUUID": "64183b44-d39b-44bf-99aa-c18a9fed7eef",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly toggle the confirm delete teaching period modal UI to show",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to show",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "bd0d1129-055d-4884-8441-43bb534747fd",
                "parentUUID": "d9b68d93-0702-43b5-ba8f-2e243d344683",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "d9b68d93-0702-43b5-ba8f-2e243d344683",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly toggle the confirm delete teaching period modal UI to show",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to show",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "bd0d1129-055d-4884-8441-43bb534747fd",
                "parentUUID": "d9b68d93-0702-43b5-ba8f-2e243d344683",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly toggle the confirm delete teaching period modal UI to hide",
                "fullTitle": "REDUCER: UI ACTION: HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to hide",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "28c8bb80-b16b-45c6-8ea8-7eea743cc9a2",
                "parentUUID": "e4a10aa3-7ea4-46c8-b6bf-12c821ef4769",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "e4a10aa3-7ea4-46c8-b6bf-12c821ef4769",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly toggle the confirm delete teaching period modal UI to hide",
                "fullTitle": "REDUCER: UI ACTION: HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to hide",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "28c8bb80-b16b-45c6-8ea8-7eea743cc9a2",
                "parentUUID": "e4a10aa3-7ea4-46c8-b6bf-12c821ef4769",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly toggle the confirm decrease study load modal UI to show",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to show",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "572d982d-5295-47ef-be58-0326237306e7",
                "parentUUID": "067f5b9c-9e94-43e6-a588-bbada4d893bf",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "067f5b9c-9e94-43e6-a588-bbada4d893bf",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly toggle the confirm decrease study load modal UI to show",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to show",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "572d982d-5295-47ef-be58-0326237306e7",
                "parentUUID": "067f5b9c-9e94-43e6-a588-bbada4d893bf",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly toggle the confirm decrease study load modal UI to hide",
                "fullTitle": "REDUCER: UI ACTION: HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to hide",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "8c8d18d1-b9bd-420f-a3df-13edcfe336fa",
                "parentUUID": "f3f3253c-23d9-4534-9a71-3326c67ca054",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "f3f3253c-23d9-4534-9a71-3326c67ca054",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly toggle the confirm decrease study load modal UI to hide",
                "fullTitle": "REDUCER: UI ACTION: HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to hide",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "8c8d18d1-b9bd-420f-a3df-13edcfe336fa",
                "parentUUID": "f3f3253c-23d9-4534-9a71-3326c67ca054",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: SHOW_CUSTOM_UNIT_MODAL",
            "suites": [],
            "tests": [
              {
                "title": "Should set show flag for custom unit modal to be true",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be true",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7ddd42c7-3af5-4150-8002-562998bcd2d8",
                "parentUUID": "62709d5f-8654-4044-96c7-208de59aeb71",
                "skipped": false
              },
              {
                "title": "Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CUSTOM_UNIT_MODAL Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"ABC1234\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: \"ABC1234\",\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f30d47eb-acc2-4ad1-9cbb-a6d9b64468d6",
                "parentUUID": "62709d5f-8654-4044-96c7-208de59aeb71",
                "skipped": false
              },
              {
                "title": "Should set unit code and position if it exists on top of setting show flag for custom unit modal to be true",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CUSTOM_UNIT_MODAL Should set unit code and position if it exists on top of setting show flag for custom unit modal to be true",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"ABC1234\",\n    tpIndex: 0,\n    unitIndex: 2\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: \"ABC1234\",\n    customTpIndex: 0,\n    customUnitIndex: 2\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b9889c02-c18d-4c65-b127-ec51ac0b0e23",
                "parentUUID": "62709d5f-8654-4044-96c7-208de59aeb71",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "62709d5f-8654-4044-96c7-208de59aeb71",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should set show flag for custom unit modal to be true",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be true",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7ddd42c7-3af5-4150-8002-562998bcd2d8",
                "parentUUID": "62709d5f-8654-4044-96c7-208de59aeb71",
                "skipped": false
              },
              {
                "title": "Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CUSTOM_UNIT_MODAL Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"ABC1234\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: \"ABC1234\",\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f30d47eb-acc2-4ad1-9cbb-a6d9b64468d6",
                "parentUUID": "62709d5f-8654-4044-96c7-208de59aeb71",
                "skipped": false
              },
              {
                "title": "Should set unit code and position if it exists on top of setting show flag for custom unit modal to be true",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CUSTOM_UNIT_MODAL Should set unit code and position if it exists on top of setting show flag for custom unit modal to be true",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"ABC1234\",\n    tpIndex: 0,\n    unitIndex: 2\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: \"ABC1234\",\n    customTpIndex: 0,\n    customUnitIndex: 2\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b9889c02-c18d-4c65-b127-ec51ac0b0e23",
                "parentUUID": "62709d5f-8654-4044-96c7-208de59aeb71",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: HIDE_CUSTOM_UNIT_MODAL",
            "suites": [],
            "tests": [
              {
                "title": "Should set show flag for custom unit modal to be false",
                "fullTitle": "REDUCER: UI ACTION: HIDE_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: true\n};\nvar action = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "11a4e86c-b1c0-48f1-8214-7af33111ae67",
                "parentUUID": "77fbb374-47c1-486f-8a5d-b9750ab99594",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "77fbb374-47c1-486f-8a5d-b9750ab99594",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should set show flag for custom unit modal to be false",
                "fullTitle": "REDUCER: UI ACTION: HIDE_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: true\n};\nvar action = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "11a4e86c-b1c0-48f1-8214-7af33111ae67",
                "parentUUID": "77fbb374-47c1-486f-8a5d-b9750ab99594",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: SHOW_SIDEBAR",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show the sidebar when called",
                "fullTitle": "REDUCER: UI ACTION: SHOW_SIDEBAR Should correctly show the sidebar when called",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: false\n};\nvar action = {\n    type: \"SHOW_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e8126843-e02f-4395-b00d-b43254f8adb6",
                "parentUUID": "56ed7dab-9117-487a-96a4-28d28ca464db",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "56ed7dab-9117-487a-96a4-28d28ca464db",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly show the sidebar when called",
                "fullTitle": "REDUCER: UI ACTION: SHOW_SIDEBAR Should correctly show the sidebar when called",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: false\n};\nvar action = {\n    type: \"SHOW_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e8126843-e02f-4395-b00d-b43254f8adb6",
                "parentUUID": "56ed7dab-9117-487a-96a4-28d28ca464db",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: HIDE_SIDEBAR",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly hide the sidebar when called",
                "fullTitle": "REDUCER: UI ACTION: HIDE_SIDEBAR Should correctly hide the sidebar when called",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"HIDE_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5f106e09-8cce-4a57-b222-d54c5520364f",
                "parentUUID": "34054f47-d68c-4183-bfd1-5163981df15c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "34054f47-d68c-4183-bfd1-5163981df15c",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly hide the sidebar when called",
                "fullTitle": "REDUCER: UI ACTION: HIDE_SIDEBAR Should correctly hide the sidebar when called",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"HIDE_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5f106e09-8cce-4a57-b222-d54c5520364f",
                "parentUUID": "34054f47-d68c-4183-bfd1-5163981df15c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "DEFAULT",
            "suites": [],
            "tests": [
              {
                "title": "Should not change state if it does not recognise the action",
                "fullTitle": "REDUCER: UI DEFAULT Should not change state if it does not recognise the action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_UI2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "891086fd-e921-4295-b7dc-c02b0eaa3f95",
                "parentUUID": "8d4a7455-6e2b-49b5-9de6-4fe94f912d73",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "8d4a7455-6e2b-49b5-9de6-4fe94f912d73",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should not change state if it does not recognise the action",
                "fullTitle": "REDUCER: UI DEFAULT Should not change state if it does not recognise the action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_UI2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "891086fd-e921-4295-b7dc-c02b0eaa3f95",
                "parentUUID": "8d4a7455-6e2b-49b5-9de6-4fe94f912d73",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/reducers/UI.spec.js",
        "uuid": "843b5bcf-2062-43c5-8ef1-1028f961f671",
        "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/UI.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "UTILS: CostCalc",
        "suites": [],
        "tests": [
          {
            "title": "Should return a non-negative number",
            "fullTitle": "UTILS: CostCalc Should return a non-negative number",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_CostCalc2.default.calculateCost(0, 0)).to.be.gte(0);\nexpect(_CostCalc2.default.calculateCost(2, 6)).to.be.gte(0);",
            "err": {},
            "isRoot": false,
            "uuid": "9a430705-6516-4d0d-82d9-206352261c3a",
            "parentUUID": "98ea361f-c56b-489c-8f05-0bbc15dbdd23",
            "skipped": false
          },
          {
            "title": "Should multiply SCA band cost with credit points",
            "fullTitle": "UTILS: CostCalc Should multiply SCA band cost with credit points",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var scaBand = 3;\nvar creditPoints = 6;\nvar scaBandCost = _CostCalc2.default.calculateCost(scaBand, 1);\nexpect(_CostCalc2.default.calculateCost(scaBand, creditPoints)).to.equal(scaBandCost * creditPoints);",
            "err": {},
            "isRoot": false,
            "uuid": "2e9858a2-e695-4b9c-8fb7-1d7ee4087344",
            "parentUUID": "98ea361f-c56b-489c-8f05-0bbc15dbdd23",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/utils/CostCalc.spec.js",
        "uuid": "98ea361f-c56b-489c-8f05-0bbc15dbdd23",
        "fullFile": "/home/staff01/Documents/monPlanR/test/utils/CostCalc.spec.js",
        "passes": [
          {
            "title": "Should return a non-negative number",
            "fullTitle": "UTILS: CostCalc Should return a non-negative number",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_CostCalc2.default.calculateCost(0, 0)).to.be.gte(0);\nexpect(_CostCalc2.default.calculateCost(2, 6)).to.be.gte(0);",
            "err": {},
            "isRoot": false,
            "uuid": "9a430705-6516-4d0d-82d9-206352261c3a",
            "parentUUID": "98ea361f-c56b-489c-8f05-0bbc15dbdd23",
            "skipped": false
          },
          {
            "title": "Should multiply SCA band cost with credit points",
            "fullTitle": "UTILS: CostCalc Should multiply SCA band cost with credit points",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var scaBand = 3;\nvar creditPoints = 6;\nvar scaBandCost = _CostCalc2.default.calculateCost(scaBand, 1);\nexpect(_CostCalc2.default.calculateCost(scaBand, creditPoints)).to.equal(scaBandCost * creditPoints);",
            "err": {},
            "isRoot": false,
            "uuid": "2e9858a2-e695-4b9c-8fb7-1d7ee4087344",
            "parentUUID": "98ea361f-c56b-489c-8f05-0bbc15dbdd23",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 2,
        "totalPasses": 2,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 1
      },
      {
        "title": "UTILS: NextSemesterString",
        "suites": [
          {
            "title": "nextSemester",
            "suites": [],
            "tests": [
              {
                "title": "Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([], 2011, [])).to.deep.equal({\n    index: 0,\n    year: 2011,\n    code: \"S1-01\",\n    teachingPeriodData: []\n});",
                "err": {},
                "isRoot": false,
                "uuid": "695b76d2-f1b5-47e5-b96e-a32a0087ef42",
                "parentUUID": "52b8bf7d-a449-4029-baef-58f477c07b89",
                "skipped": false
              },
              {
                "title": "Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([], 2029, sortedTeachingPeriodData)).to.deep.equal({\n    index: 0,\n    year: 2029,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
                "err": {},
                "isRoot": false,
                "uuid": "1150facf-2546-4f85-bfc8-2021790f178e",
                "parentUUID": "52b8bf7d-a449-4029-baef-58f477c07b89",
                "skipped": false
              },
              {
                "title": "Should return semester two if the last teaching period is in semester one, with the same year",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should return semester two if the last teaching period is in semester one, with the same year",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2025,\n    code: \"S1-01\"\n}, {\n    year: 2025,\n    code: \"S2-01\"\n}, {\n    year: 2026,\n    code: \"S1-01\"\n}, {\n    year: 2026,\n    code: \"S2-01\"\n}, {\n    year: 2027,\n    code: \"S1-01\"\n}], 2023, sortedTeachingPeriodData)).to.deep.equal({\n    index: 5,\n    year: 2027,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
                "err": {},
                "isRoot": false,
                "uuid": "4a61d66d-cbee-44b0-a879-3bf5e2a87853",
                "parentUUID": "52b8bf7d-a449-4029-baef-58f477c07b89",
                "skipped": false
              },
              {
                "title": "Should return semester one next year if the last teaching period is in semester two",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should return semester one next year if the last teaching period is in semester two",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2015,\n    code: \"FY-01\"\n}, {\n    year: 2017,\n    code: \"S2-01\"\n}], 2015, sortedTeachingPeriodData)).to.deep.equal({\n    index: 2,\n    year: 2018,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
                "err": {},
                "isRoot": false,
                "uuid": "66f586ad-750d-43d0-84c4-094748930dcd",
                "parentUUID": "52b8bf7d-a449-4029-baef-58f477c07b89",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/utils/NextSemesterString.spec.js",
            "uuid": "52b8bf7d-a449-4029-baef-58f477c07b89",
            "fullFile": "/home/staff01/Documents/monPlanR/test/utils/NextSemesterString.spec.js",
            "passes": [
              {
                "title": "Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([], 2011, [])).to.deep.equal({\n    index: 0,\n    year: 2011,\n    code: \"S1-01\",\n    teachingPeriodData: []\n});",
                "err": {},
                "isRoot": false,
                "uuid": "695b76d2-f1b5-47e5-b96e-a32a0087ef42",
                "parentUUID": "52b8bf7d-a449-4029-baef-58f477c07b89",
                "skipped": false
              },
              {
                "title": "Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([], 2029, sortedTeachingPeriodData)).to.deep.equal({\n    index: 0,\n    year: 2029,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
                "err": {},
                "isRoot": false,
                "uuid": "1150facf-2546-4f85-bfc8-2021790f178e",
                "parentUUID": "52b8bf7d-a449-4029-baef-58f477c07b89",
                "skipped": false
              },
              {
                "title": "Should return semester two if the last teaching period is in semester one, with the same year",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should return semester two if the last teaching period is in semester one, with the same year",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2025,\n    code: \"S1-01\"\n}, {\n    year: 2025,\n    code: \"S2-01\"\n}, {\n    year: 2026,\n    code: \"S1-01\"\n}, {\n    year: 2026,\n    code: \"S2-01\"\n}, {\n    year: 2027,\n    code: \"S1-01\"\n}], 2023, sortedTeachingPeriodData)).to.deep.equal({\n    index: 5,\n    year: 2027,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
                "err": {},
                "isRoot": false,
                "uuid": "4a61d66d-cbee-44b0-a879-3bf5e2a87853",
                "parentUUID": "52b8bf7d-a449-4029-baef-58f477c07b89",
                "skipped": false
              },
              {
                "title": "Should return semester one next year if the last teaching period is in semester two",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should return semester one next year if the last teaching period is in semester two",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2015,\n    code: \"FY-01\"\n}, {\n    year: 2017,\n    code: \"S2-01\"\n}], 2015, sortedTeachingPeriodData)).to.deep.equal({\n    index: 2,\n    year: 2018,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
                "err": {},
                "isRoot": false,
                "uuid": "66f586ad-750d-43d0-84c4-094748930dcd",
                "parentUUID": "52b8bf7d-a449-4029-baef-58f477c07b89",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "getSemesterString",
            "suites": [],
            "tests": [
              {
                "title": "Should render a semester string",
                "fullTitle": "UTILS: NextSemesterString getSemesterString Should render a semester string",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2019,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n})).to.equal(\"Semester 2, 2019\");",
                "err": {},
                "isRoot": false,
                "uuid": "8ecd92d3-dd40-451d-b078-6702a62982c0",
                "parentUUID": "0fc3099a-d0c2-44c4-810f-3f90797dc1c3",
                "skipped": false
              },
              {
                "title": "Should revert back to semester codes if teachingPeriodData is not available",
                "fullTitle": "UTILS: NextSemesterString getSemesterString Should revert back to semester codes if teachingPeriodData is not available",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2015,\n    code: \"S1-01\"\n})).to.equal(\"S1-01, 2015\");",
                "err": {},
                "isRoot": false,
                "uuid": "ede81425-88dd-4017-92bf-69979b2cae55",
                "parentUUID": "0fc3099a-d0c2-44c4-810f-3f90797dc1c3",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/utils/NextSemesterString.spec.js",
            "uuid": "0fc3099a-d0c2-44c4-810f-3f90797dc1c3",
            "fullFile": "/home/staff01/Documents/monPlanR/test/utils/NextSemesterString.spec.js",
            "passes": [
              {
                "title": "Should render a semester string",
                "fullTitle": "UTILS: NextSemesterString getSemesterString Should render a semester string",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2019,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n})).to.equal(\"Semester 2, 2019\");",
                "err": {},
                "isRoot": false,
                "uuid": "8ecd92d3-dd40-451d-b078-6702a62982c0",
                "parentUUID": "0fc3099a-d0c2-44c4-810f-3f90797dc1c3",
                "skipped": false
              },
              {
                "title": "Should revert back to semester codes if teachingPeriodData is not available",
                "fullTitle": "UTILS: NextSemesterString getSemesterString Should revert back to semester codes if teachingPeriodData is not available",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2015,\n    code: \"S1-01\"\n})).to.equal(\"S1-01, 2015\");",
                "err": {},
                "isRoot": false,
                "uuid": "ede81425-88dd-4017-92bf-69979b2cae55",
                "parentUUID": "0fc3099a-d0c2-44c4-810f-3f90797dc1c3",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/utils/NextSemesterString.spec.js",
        "uuid": "40abb478-bff5-4989-bd49-72b8aba0aa5c",
        "fullFile": "/home/staff01/Documents/monPlanR/test/utils/NextSemesterString.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "UTILS: ShowYear",
        "suites": [],
        "tests": [
          {
            "title": "Should return the right year based off current month",
            "fullTitle": "UTILS: ShowYear Should return the right year based off current month",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "if (new Date().getMonth() + 1 >= 11) {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear() + 1);\n} else {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear());\n}",
            "err": {},
            "isRoot": false,
            "uuid": "3b0af197-e330-479a-80e0-ce816de6de6e",
            "parentUUID": "b2d3b83a-a0d9-4c92-919f-445f8a1ae697",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/utils/ShowYear.spec.js",
        "uuid": "b2d3b83a-a0d9-4c92-919f-445f8a1ae697",
        "fullFile": "/home/staff01/Documents/monPlanR/test/utils/ShowYear.spec.js",
        "passes": [
          {
            "title": "Should return the right year based off current month",
            "fullTitle": "UTILS: ShowYear Should return the right year based off current month",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "if (new Date().getMonth() + 1 >= 11) {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear() + 1);\n} else {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear());\n}",
            "err": {},
            "isRoot": false,
            "uuid": "3b0af197-e330-479a-80e0-ce816de6de6e",
            "parentUUID": "b2d3b83a-a0d9-4c92-919f-445f8a1ae697",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "UTILS: YearCalc",
        "suites": [],
        "tests": [
          {
            "title": "Should contain the same year as it was specified",
            "fullTitle": "UTILS: YearCalc Should contain the same year as it was specified",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getStartYearVals(2016).find(function (year) {\n    return year.value === 2016;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2017).find(function (year) {\n    return year.value === 2017;\n})).to.be.ok;",
            "err": {},
            "isRoot": false,
            "uuid": "1c5acd20-d859-4bec-a814-b8f2731c09cf",
            "parentUUID": "e33a6cad-c2b7-455c-8a1e-0fbb792b1aa6",
            "skipped": false
          },
          {
            "title": "Should contain a year that is ten years from now",
            "fullTitle": "UTILS: YearCalc Should contain a year that is ten years from now",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getStartYearVals(2019).find(function (year) {\n    return year.value === 2029;\n})).to.be.ok;\nexpect(_YearCalc2.default.getStartYearVals(2012).find(function (year) {\n    return year.value === 2002;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2028;\n})).to.be.ok;",
            "err": {},
            "isRoot": false,
            "uuid": "9b202c8c-ee03-494d-8b35-342c62636fd4",
            "parentUUID": "e33a6cad-c2b7-455c-8a1e-0fbb792b1aa6",
            "skipped": false
          },
          {
            "title": "Should not contain any past year when computing end years",
            "fullTitle": "UTILS: YearCalc Should not contain any past year when computing end years",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2017;\n})).to.be.not.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2008;\n})).to.be.not.ok;",
            "err": {},
            "isRoot": false,
            "uuid": "32ab3f51-8874-4b28-adfd-6b41c759d614",
            "parentUUID": "e33a6cad-c2b7-455c-8a1e-0fbb792b1aa6",
            "skipped": false
          },
          {
            "title": "Should have starting years go in decreasing order from one year ahead to the minimum",
            "fullTitle": "UTILS: YearCalc Should have starting years go in decreasing order from one year ahead to the minimum",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getStartYearVals(2019).slice(0, 12)).to.deep.equal([{\n    text: \"2020\",\n    value: 2020\n}, {\n    text: \"2019\",\n    value: 2019\n}, {\n    text: \"2018\",\n    value: 2018\n}, {\n    text: \"2017\",\n    value: 2017\n}, {\n    text: \"2016\",\n    value: 2016\n}, {\n    text: \"2015\",\n    value: 2015\n}, {\n    text: \"2014\",\n    value: 2014\n}, {\n    text: \"2013\",\n    value: 2013\n}, {\n    text: \"2012\",\n    value: 2012\n}, {\n    text: \"2011\",\n    value: 2011\n}, {\n    text: \"2010\",\n    value: 2010\n}, {\n    text: \"2009\",\n    value: 2009\n}]);",
            "err": {},
            "isRoot": false,
            "uuid": "982bbb8e-a329-4799-b679-55daa73c6d69",
            "parentUUID": "e33a6cad-c2b7-455c-8a1e-0fbb792b1aa6",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/utils/YearCalc.spec.js",
        "uuid": "e33a6cad-c2b7-455c-8a1e-0fbb792b1aa6",
        "fullFile": "/home/staff01/Documents/monPlanR/test/utils/YearCalc.spec.js",
        "passes": [
          {
            "title": "Should contain the same year as it was specified",
            "fullTitle": "UTILS: YearCalc Should contain the same year as it was specified",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getStartYearVals(2016).find(function (year) {\n    return year.value === 2016;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2017).find(function (year) {\n    return year.value === 2017;\n})).to.be.ok;",
            "err": {},
            "isRoot": false,
            "uuid": "1c5acd20-d859-4bec-a814-b8f2731c09cf",
            "parentUUID": "e33a6cad-c2b7-455c-8a1e-0fbb792b1aa6",
            "skipped": false
          },
          {
            "title": "Should contain a year that is ten years from now",
            "fullTitle": "UTILS: YearCalc Should contain a year that is ten years from now",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getStartYearVals(2019).find(function (year) {\n    return year.value === 2029;\n})).to.be.ok;\nexpect(_YearCalc2.default.getStartYearVals(2012).find(function (year) {\n    return year.value === 2002;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2028;\n})).to.be.ok;",
            "err": {},
            "isRoot": false,
            "uuid": "9b202c8c-ee03-494d-8b35-342c62636fd4",
            "parentUUID": "e33a6cad-c2b7-455c-8a1e-0fbb792b1aa6",
            "skipped": false
          },
          {
            "title": "Should not contain any past year when computing end years",
            "fullTitle": "UTILS: YearCalc Should not contain any past year when computing end years",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2017;\n})).to.be.not.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2008;\n})).to.be.not.ok;",
            "err": {},
            "isRoot": false,
            "uuid": "32ab3f51-8874-4b28-adfd-6b41c759d614",
            "parentUUID": "e33a6cad-c2b7-455c-8a1e-0fbb792b1aa6",
            "skipped": false
          },
          {
            "title": "Should have starting years go in decreasing order from one year ahead to the minimum",
            "fullTitle": "UTILS: YearCalc Should have starting years go in decreasing order from one year ahead to the minimum",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getStartYearVals(2019).slice(0, 12)).to.deep.equal([{\n    text: \"2020\",\n    value: 2020\n}, {\n    text: \"2019\",\n    value: 2019\n}, {\n    text: \"2018\",\n    value: 2018\n}, {\n    text: \"2017\",\n    value: 2017\n}, {\n    text: \"2016\",\n    value: 2016\n}, {\n    text: \"2015\",\n    value: 2015\n}, {\n    text: \"2014\",\n    value: 2014\n}, {\n    text: \"2013\",\n    value: 2013\n}, {\n    text: \"2012\",\n    value: 2012\n}, {\n    text: \"2011\",\n    value: 2011\n}, {\n    text: \"2010\",\n    value: 2010\n}, {\n    text: \"2009\",\n    value: 2009\n}]);",
            "err": {},
            "isRoot": false,
            "uuid": "982bbb8e-a329-4799-b679-55daa73c6d69",
            "parentUUID": "e33a6cad-c2b7-455c-8a1e-0fbb792b1aa6",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 4,
        "totalPasses": 4,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 1
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "9f12f50d-78e4-4ad6-a6d6-a87773082a78",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "Should create an action to increment credit points counter",
      "fullTitle": "AC: incrementCreditPoints Should create an action to increment credit points counter",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 5\n};\n(0, _expect2.default)(actions.incrementCreditPoints(5)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "f8a552de-9102-4094-886a-878046938cc5",
      "parentUUID": "abcb9aeb-eb3f-41cd-ba9f-43617ba3d4b8",
      "skipped": false
    },
    {
      "title": "Should create an action to decrement credit points counter",
      "fullTitle": "AC: decrementCreditPoints Should create an action to decrement credit points counter",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 5\n};\n(0, _expect2.default)(actions.decrementCreditPoints(5)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "20bee221-fbba-49ad-b629-6d096f9b930d",
      "parentUUID": "c575937f-b5cb-4875-9352-1e9a880ace09",
      "skipped": false
    },
    {
      "title": "Should create an action to increment cost counter",
      "fullTitle": "AC: incrementCost Should create an action to increment cost counter",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"INCREMENT_COST\",\n    value: 5\n};\n(0, _expect2.default)(actions.incrementCost(5)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "914bbabd-d65a-432f-85a3-de09b925e842",
      "parentUUID": "82a51d8d-9fac-4398-9787-9e0be13f0377",
      "skipped": false
    },
    {
      "title": "Should create an action to decrement cost counter",
      "fullTitle": "AC: decrementCosts Should create an action to decrement cost counter",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"DECREMENT_COST\",\n    value: 5\n};\n(0, _expect2.default)(actions.decrementCost(5)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "24cfe858-31f6-4f26-bf35-821efcbf3744",
      "parentUUID": "29e40737-9824-48fd-abac-f627f685533d",
      "skipped": false
    },
    {
      "title": "Should create an action to insert a teaching period",
      "fullTitle": "AC: insertTeachingPeriod Should create an action to insert a teaching period",
      "timedOut": false,
      "duration": 14,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{\n    type: \"INSERT_TEACHING_PERIOD\",\n    index: 1,\n    year: 2016,\n    code: \"tpCode\"\n}, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n}];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.insertTeachingPeriod(1, 2016, \"tpCode\"));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "ee141465-7cd1-439e-89fb-11af62e9226b",
      "parentUUID": "4de3b2d6-b756-4f0a-9052-88434be7cbc8",
      "skipped": false
    },
    {
      "title": "Should create an action to remove a teaching period",
      "fullTitle": "AC: removeTeachingPeriod Should create an action to remove a teaching period",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1,\n    units: [\"unit1\", \"unit2\", \"unit3\", null]\n}, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n}];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.removeTeachingPeriod(1, [\"unit1\", \"unit2\", \"unit3\", null]));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "60029cc9-2c0d-42c6-b305-2a61280ff284",
      "parentUUID": "412aaa3f-6fe6-4e8b-9716-f5fda2403f3f",
      "skipped": false
    },
    {
      "title": "Should create an action to increase the study load",
      "fullTitle": "AC: increaseStudyLoad Should create an action to increase the study load",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\n(0, _expect2.default)(actions.increaseStudyLoad()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "00c43dd2-fa72-4ed8-a01e-cd5e30dfd00a",
      "parentUUID": "efe666b4-4e60-4d30-b909-6fda0db65fb1",
      "skipped": false
    },
    {
      "title": "Should create an action to increase the study load with units affected",
      "fullTitle": "AC: decreaseStudyLoad Should create an action to increase the study load with units affected",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockTeachingPeriods = [{ year: 2018, code: \"S1-01\", units: [null, null, null, null, \"unit1\"] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }, { year: 2019, code: \"S1-01\", units: [null, null, null, null, \"unit2\"] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null, null] }];\nvar expectedAction = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [\"unit1\", \"unit2\"]\n};\n(0, _expect2.default)(actions.decreaseStudyLoad(mockTeachingPeriods, 4)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "711285e5-2f6e-462e-829a-26d1a7ee8395",
      "parentUUID": "a0b21c75-2ac0-4ec9-8c38-5ba43e0554d2",
      "skipped": false
    },
    {
      "title": "Should create an action to increase the study load with no units affected",
      "fullTitle": "AC: decreaseStudyLoad Should create an action to increase the study load with no units affected",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockTeachingPeriods = [{ year: 2018, code: \"S1-01\", units: [null, null, null, \"unit1\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }, { year: 2019, code: \"S1-01\", units: [null, null, null, \"unit2\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null, null] }];\nvar expectedAction = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: []\n};\n(0, _expect2.default)(actions.decreaseStudyLoad(mockTeachingPeriods, 4)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "ab4de6e2-464b-4006-b996-6a1492524385",
      "parentUUID": "a0b21c75-2ac0-4ec9-8c38-5ba43e0554d2",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for the addition of a unit that is not a custom unit being dragged",
      "fullTitle": "AC: addUnit Should correctly create the actions required for the addition of a unit that is not a custom unit being dragged",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockUnit = {\n                customUnitDragging: false,\n                cost: 200,\n                creditPoints: 6,\n                unitCode: \"TEST1001\"\n            };\n            var expectedActions = [{ type: \"ADD_UNIT\", tpIndex: 1, unitIndex: 1, unit: mockUnit, cost: 200, creditPoints: 6 }, { type: \"CLEAR_HIGHLIGHTING_INVALID_UNIT_SLOTS\" }, { type: \"VALIDATE_COURSE\" }, { type: \"MODIFIED_COURSE_PLAN\" }];\n            var store = mockStore({});\n            store.dispatch(actions.addUnit(1, 1, mockUnit));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "ce651162-9ffe-4d79-82bb-161275295095",
      "parentUUID": "e039b782-8b1b-428b-9ce7-6877484faef1",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for the addition of a unit that is a custom unit being dragged",
      "fullTitle": "AC: addUnit Should correctly create the actions required for the addition of a unit that is a custom unit being dragged",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockUnit = {\n                customUnitDragging: true,\n                cost: 200,\n                creditPoints: 6,\n                unitCode: \"TEST1001\"\n            };\n            var expectedActions = [{\n                type: \"SHOW_CUSTOM_UNIT_MODAL\",\n                unitCode: \"TEST1001\",\n                tpIndex: 1,\n                unitIndex: 1\n            }];\n            var store = mockStore({});\n            store.dispatch(actions.addUnit(1, 1, mockUnit));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "59e4f6c1-719d-4e56-b59e-5ab4a4608c6e",
      "parentUUID": "e039b782-8b1b-428b-9ce7-6877484faef1",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for removal of a unit",
      "fullTitle": "AC: removeUnit Should correctly create the actions required for removal of a unit",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{ type: \"REMOVE_UNIT\", tpIndex: 1, unitIndex: 1, cost: 200, creditPoints: 6 }, { type: \"VALIDATE_COURSE\" }, { type: \"MODIFIED_COURSE_PLAN\" }];\n            var store = mockStore({});\n            store.dispatch(actions.removeUnit(1, 1, 6, 200));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "7112953c-e1ab-4332-ae86-badfdc6c99af",
      "parentUUID": "3ad6c02f-efa9-437a-844c-a98babf357c1",
      "skipped": false
    },
    {
      "title": "Should create the actions for clearing the course",
      "fullTitle": "AC: clearCourse Should create the actions for clearing the course",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{ type: \"CLEAR_COURSE\" }, { type: \"GET_NEXT_SEMESTER_STRING\" }, { type: \"VALIDATE_COURSE\" }];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.clearCourse());\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "a39bfcb0-c9a9-403d-9904-69854d2f5f03",
      "parentUUID": "f8ad7c75-8973-428b-b059-371202b7ddfe",
      "skipped": false
    },
    {
      "title": "Should create the action for generating the course",
      "fullTitle": "AC: generateCourse Should create the action for generating the course",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2016,\n    endYear: 2019\n};\n(0, _expect2.default)(actions.generateCourse(2016, 2019)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "10eb7649-240e-41e0-9c25-278bf53b6829",
      "parentUUID": "dad424f6-5b67-4b30-912a-5ca2f15ac926",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for submission of a year form",
      "fullTitle": "AC: submitYearForm Should correctly create the actions required for submission of a year form",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{ type: \"SUBMIT_YEAR_FORM\", startYear: 2016, endYear: 2019 }, { type: \"GENERATE_COURSE\", startYear: 2016, endYear: 2019 }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\n            var store = mockStore({});\n            store.dispatch(actions.submitYearForm(2016, 2019));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "ce625b24-fd9b-4604-b8c7-01fdf931f336",
      "parentUUID": "9258397c-6953-41b6-8231-5c6dd02dffd2",
      "skipped": false
    },
    {
      "title": "Should correctly create actions required to change the start year",
      "fullTitle": "AC: changeStartYear Should correctly create actions required to change the start year",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{ type: \"CHANGE_START_YEAR\", year: 2020 }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\nvar store = mockStore({});\nstore.dispatch(actions.changeStartYear(2020));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "dfb93e35-a227-468a-948a-b6a9b0f9f7ae",
      "parentUUID": "9c2c5b9b-9b59-47c2-aee0-40a14d6c620a",
      "skipped": false
    },
    {
      "title": "Should create the action for generating the course",
      "fullTitle": "AC: getNextSemesterString Should create the action for generating the course",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n};\n(0, _expect2.default)(actions.getNextSemesterString()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "2be5262d-1d4c-4693-af4a-9317dd4f33e9",
      "parentUUID": "028161a9-901d-4664-b2ba-aa254a1191d5",
      "skipped": false
    },
    {
      "title": "Should create the action for getting affected units in an overload column",
      "fullTitle": "AC: getAffectedUnitsInColumn Should create the action for getting affected units in an overload column",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"GET_AFFECTED_UNITS_IN_OVERLOAD_COLUMN\",\n    index: 4\n};\n(0, _expect2.default)(actions.getAffectedUnitsInColumn(4)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "bc6cbd78-5d87-4350-b0a5-b45fcb8a864c",
      "parentUUID": "5d3e704d-8cd0-427f-a5f6-ab505e42d647",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for deletion of a teaching period with units affected",
      "fullTitle": "AC: attemptToDeleteTeachingPeriod Should correctly create the actions required for deletion of a teaching period with units affected",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockUnits = [{ unitCode: \"TEST101\", unitName: \"unit1\" }, null, { unitCode: \"TEST102\", unitName: \"unit2\" }, null, null];\nvar expectedActions = [{ type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\" }, { type: \"UPDATE_AFFECTED_UNITS\", affectedUnits: [\"TEST101 - unit1\", \"TEST102 - unit2\"] }, { type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\", index: 1 }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDeleteTeachingPeriod(1, mockUnits));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "b2a7cff3-317c-42b3-8493-0b78ff2799e3",
      "parentUUID": "b442ba5f-4958-491f-a3f2-b3b8d0f77b57",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for deletion of a teaching period with no units affected",
      "fullTitle": "AC: attemptToDeleteTeachingPeriod Should correctly create the actions required for deletion of a teaching period with no units affected",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockUnits = [null, null, null, null, null];\nvar expectedActions = [{ type: \"REMOVE_TEACHING_PERIOD\", index: 1, units: [null, null, null, null, null] }, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, { type: \"GET_NEXT_SEMESTER_STRING\" }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDeleteTeachingPeriod(1, mockUnits));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "3ebd03ac-bc91-4e35-b575-29f96db108c0",
      "parentUUID": "b442ba5f-4958-491f-a3f2-b3b8d0f77b57",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for decrease of a study load with units affected",
      "fullTitle": "AC: attemptToDecreaseStudyLoad Should correctly create the actions required for decrease of a study load with units affected",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockTeachingPeriods = [{ units: [null, null, { unitCode: \"TEST10A\", unitName: \"unitA\" }, null, { unitCode: \"TEST101\", unitName: \"unit1\" }] }, { units: [null, null, { unitCode: \"TEST10B\", unitName: \"unitB\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10C\", unitName: \"unitC\" }, null, { unitCode: \"TEST102\", unitName: \"unit2\" }] }, { units: [null, null, { unitCode: \"TEST10D\", unitName: \"unitD\" }, null, null] }];\nvar expectedActions = [{ type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\" }, { type: \"UPDATE_AFFECTED_UNITS\", affectedUnits: [\"TEST101 - unit1\", \"TEST102 - unit2\"] }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDecreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "692dc776-2348-422c-8528-6c72466baed2",
      "parentUUID": "a593780b-e5cd-4b4e-aef8-d9f10bfbb21d",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for decrease of a study load with no units affected",
      "fullTitle": "AC: attemptToDecreaseStudyLoad Should correctly create the actions required for decrease of a study load with no units affected",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockTeachingPeriods = [{ units: [null, null, { unitCode: \"TEST10A\", unitName: \"unitA\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10B\", unitName: \"unitB\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10C\", unitName: \"unitC\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10D\", unitName: \"unitD\" }, null, null] }];\nvar expectedActions = [{ type: \"DECREASE_STUDY_LOAD\", units: [] }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDecreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "130aabb8-a718-44ab-9629-bfb2835145a8",
      "parentUUID": "a593780b-e5cd-4b4e-aef8-d9f10bfbb21d",
      "skipped": false
    },
    {
      "title": "Should create the action for getting affected units in an teaching period row",
      "fullTitle": "AC: getAffectedUnitsInRow Should create the action for getting affected units in an teaching period row",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"GET_AFFECTED_UNITS_IN_TEACHING_PERIOD_ROW\",\n    index: 4\n};\n(0, _expect2.default)(actions.getAffectedUnitsInRow(4)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "345b29fd-6081-47f9-b1ee-734637681dbf",
      "parentUUID": "a74d20c0-6212-4cee-a163-210e00153450",
      "skipped": false
    },
    {
      "title": "Should create the action for validating the course",
      "fullTitle": "AC: validateCourse Should create the action for validating the course",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"VALIDATE_COURSE\"\n};\n(0, _expect2.default)(actions.validateCourse()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "391702a8-34de-4452-9d0f-b6d009aaf26f",
      "parentUUID": "36671556-a640-454d-a8f8-392373ca6f90",
      "skipped": false
    },
    {
      "title": "Should create the action for highlighting the invalid unit slots",
      "fullTitle": "AC: highlightInvalidUnitSlots Should create the action for highlighting the invalid unit slots",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: \"UnitTest\",\n    ignoreCoordinate: false\n};\n(0, _expect2.default)(actions.highlightInvalidUnitSlots(\"UnitTest\", false)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "1744a546-7cf4-4194-99c0-806ad127cf2e",
      "parentUUID": "2bd02fed-72f5-4762-9a4d-3b97e7592ab6",
      "skipped": false
    },
    {
      "title": "Should create the action for clearing the highlighting for invalid unit slots",
      "fullTitle": "AC: clearHighlightingInvalidUnitSlots Should create the action for clearing the highlighting for invalid unit slots",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"CLEAR_HIGHLIGHTING_INVALID_UNIT_SLOTS\"\n};\n(0, _expect2.default)(actions.clearHighlightingInvalidUnitSlots()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "61724cf8-86e7-4949-bfd6-36df93953115",
      "parentUUID": "7aae04d7-4988-4455-9587-d828185c852c",
      "skipped": false
    },
    {
      "title": "Should create an action to show the insert teaching period UI",
      "fullTitle": "AC: showInsertTeachingPeriodUI Should create an action to show the insert teaching period UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"testTPCode\"\n};\n(0, _expect2.default)(actions.showInsertTeachingPeriodUI(\"testTPCode\")).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "1d72f3f0-5f73-4027-862c-5e0dba377c60",
      "parentUUID": "9a3b6be3-d44f-448a-8c33-80df8239dde5",
      "skipped": false
    },
    {
      "title": "Should create an action to hide the insert teaching period UI",
      "fullTitle": "AC: hideInsertTeachingPeriodUI Should create an action to hide the insert teaching period UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\n(0, _expect2.default)(actions.hideInsertTeachingPeriodUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "3df30752-9ffb-4324-86d1-badb084d5f60",
      "parentUUID": "cc6e3ad5-606e-4850-a8b1-2e86a1adbcad",
      "skipped": false
    },
    {
      "title": "Should create an action to show the add unit UI",
      "fullTitle": "AC: showAddingUnitUI Should create an action to show the add unit UI",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_ADD_UNIT_UI\"\n};\n(0, _expect2.default)(actions.showAddingUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "5857ce7a-fff1-408a-9276-9222fcb83942",
      "parentUUID": "f202224e-2559-4842-8f29-a9a975f16664",
      "skipped": false
    },
    {
      "title": "Should create an action to hide the add unit UI",
      "fullTitle": "AC: hideAddingUnitUI Should create an action to hide the add unit UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_ADD_UNIT_UI\"\n};\n(0, _expect2.default)(actions.hideAddingUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "d2c8bde4-9cf8-4461-b493-9cbf3d98863d",
      "parentUUID": "58db3901-eb8f-4fce-8486-0525e9420f96",
      "skipped": false
    },
    {
      "title": "Should create an action to show the move unit UI",
      "fullTitle": "AC: showMoveUnitUI Should create an action to show the move unit UI",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_MOVE_UNIT_UI\"\n};\n(0, _expect2.default)(actions.showMoveUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "b729e7d1-fbae-47c9-bb2c-50d790b93b83",
      "parentUUID": "4cc12b40-d1a5-4455-9123-53a4afb0bedf",
      "skipped": false
    },
    {
      "title": "Should create an action to hide move unit UI",
      "fullTitle": "AC: hideMoveUnitUI Should create an action to hide move unit UI",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_MOVE_UNIT_UI\"\n};\n(0, _expect2.default)(actions.hideMoveUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "4cbcd0bc-a8c7-4f44-8cde-d44670854630",
      "parentUUID": "60165111-914d-4413-a602-d8cf32bf2089",
      "skipped": false
    },
    {
      "title": "Should create an action to show confirm delete teaching period UI",
      "fullTitle": "AC: showConfirmDeleteTeachingPeriodUI Should create an action to show confirm delete teaching period UI",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\n(0, _expect2.default)(actions.showConfirmDeleteTeachingPeriodUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "e766c394-bb0d-4c09-9236-81f1cf944db0",
      "parentUUID": "d1caebef-8879-468b-8c12-0c7fe5606a66",
      "skipped": false
    },
    {
      "title": "Should create an action to hide confirm delete teaching period UI",
      "fullTitle": "AC: hideConfirmDeleteTeachingPeriodUI Should create an action to hide confirm delete teaching period UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\n(0, _expect2.default)(actions.hideConfirmDeleteTeachingPeriodUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "1d41829f-504e-45e2-ab29-8776c4d33bcd",
      "parentUUID": "a519ec5e-251e-4c2a-8746-eadf6a7a5508",
      "skipped": false
    },
    {
      "title": "Should create an action to show confirm decrease study load UI",
      "fullTitle": "AC: showConfirmDecreaseStudyLoadUI Should create an action to show confirm decrease study load UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\n(0, _expect2.default)(actions.showConfirmDecreaseStudyLoadUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "3e302e1f-ccd9-4d54-8f98-c088592f28c4",
      "parentUUID": "9f1bbba0-d5ff-43f6-b9e2-9159185d589a",
      "skipped": false
    },
    {
      "title": "Should create an action to hide confirm decrease study load UI",
      "fullTitle": "AC: hideConfirmDecreaseStudyLoadUI Should create an action to hide confirm decrease study load UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\n(0, _expect2.default)(actions.hideConfirmDecreaseStudyLoadUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "9b8045c9-3ee6-4d95-b071-14052240662c",
      "parentUUID": "e671a9cc-9348-49be-a026-d4170eef1fec",
      "skipped": false
    },
    {
      "title": "Should create an action to show custum unit UI",
      "fullTitle": "AC: showCustomUnitUI Should create an action to show custum unit UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"TEST1001\"\n};\n(0, _expect2.default)(actions.showCustomUnitUI(\"TEST1001\")).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "82064b35-0041-4b75-9d76-8708bd2f3391",
      "parentUUID": "79cfcddf-b232-484f-adea-35734ddb4b2e",
      "skipped": false
    },
    {
      "title": "Should create an action to hide custom unit UI",
      "fullTitle": "AC: hideCustomUnitUI Should create an action to hide custom unit UI",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\n(0, _expect2.default)(actions.hideCustomUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "82d1d33a-cbda-4cbb-844f-0db1ea798363",
      "parentUUID": "be15a8cb-e9bb-4d76-9f43-ef2b6d77b5ab",
      "skipped": false
    },
    {
      "title": "Should create an action to show sidebar",
      "fullTitle": "AC: showSidebar Should create an action to show sidebar",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_SIDEBAR\"\n};\n(0, _expect2.default)(actions.showSidebar()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "2d584868-5e48-4aba-93f5-b6e3dbf80df6",
      "parentUUID": "50ab5558-3ab5-410c-b3b6-ba806447d367",
      "skipped": false
    },
    {
      "title": "Should create an action to hide sidebar",
      "fullTitle": "AC: hideSidebar Should create an action to hide sidebar",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_SIDEBAR\"\n};\n(0, _expect2.default)(actions.hideSidebar()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "5abe6fe7-432e-4d26-98dc-6c9438c25755",
      "parentUUID": "973284cf-8330-4404-ac71-1db6847aa7c5",
      "skipped": false
    },
    {
      "title": "Should create an action to set the course to read only",
      "fullTitle": "AC: setCourseReadOnly Should create an action to set the course to read only",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\n(0, _expect2.default)(actions.setCourseReadOnly()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "df56fb4f-3cf9-4449-95ea-eb47d6fc99fa",
      "parentUUID": "30daee2a-804f-46df-9433-421df9043bd2",
      "skipped": false
    },
    {
      "title": "Should create an action to set the course to read and write",
      "fullTitle": "AC: setCourseReadAndWrite Should create an action to set the course to read and write",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\n(0, _expect2.default)(actions.setCourseReadAndWrite()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "687986b7-ef2a-4762-874e-7e468b6ca696",
      "parentUUID": "80788b71-f472-4952-ada0-04e2e49c809a",
      "skipped": false
    },
    {
      "title": "Should render a notification title and a message",
      "fullTitle": "COMPONENT: Notification Should render a notification title and a message",
      "timedOut": false,
      "duration": 95,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, {\n    title: \"This is a test\",\n    message: \"Some message goes over here\"\n}));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(\"This is a test\");\nexpect(wrapper.text().replace(\"This is a test\", \"\").trim()).to.equal(\"Some message goes over here\");",
      "err": {},
      "isRoot": false,
      "uuid": "b328dd67-f4a9-475a-8fa7-f01fa7122866",
      "parentUUID": "85c5723e-1b55-4064-8bb5-fed57fda2a9e",
      "skipped": false
    },
    {
      "title": "Should have a default level to be info if it is not specified",
      "fullTitle": "COMPONENT: Notification Should have a default level to be info if it is not specified",
      "timedOut": false,
      "duration": 32,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, null)).find(\".info.message\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "0f8a01ce-fe3b-47dc-ba82-822ee69c5e05",
      "parentUUID": "85c5723e-1b55-4064-8bb5-fed57fda2a9e",
      "skipped": false
    },
    {
      "title": "Should follow a specified level",
      "fullTitle": "COMPONENT: Notification Should follow a specified level",
      "timedOut": false,
      "duration": 57,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"info\" })).find(\".info.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"warning\" })).find(\".warning.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"error\" })).find(\".negative.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"success\" })).find(\".positive.message\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "7aa8f290-6a62-4e1f-9f7b-b5385b353341",
      "parentUUID": "85c5723e-1b55-4064-8bb5-fed57fda2a9e",
      "skipped": false
    },
    {
      "title": "should be called exactly once when main button has been clicked",
      "fullTitle": "#addSemester() should be called exactly once when main button has been clicked",
      "timedOut": false,
      "duration": 30,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var addSemester = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: identity,\n    addSemester: addSemester }));\nwrapper.find(\"Button\").forEach(function (button) {\n    button.simulate(\"click\");\n});\nexpect(addSemester).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "7160aa9e-4496-402b-8513-1d1d62784c19",
      "parentUUID": "0af37ec4-dce4-46d9-bd90-9f9bf23c72b3",
      "skipped": false
    },
    {
      "title": "should be called as many times as the number of insert teaching periods options upon click",
      "fullTitle": "#insert() should be called as many times as the number of insert teaching periods options upon click",
      "timedOut": false,
      "duration": 31,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var insert = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: insert,\n    addSemester: identity }));\nvar dropdownItems = wrapper.find(\".item\");\ndropdownItems.forEach(function (node) {\n    return node.simulate(\"click\");\n});\nexpect(insert).to.have.callCount(dropdownItems.length);",
      "err": {},
      "isRoot": false,
      "uuid": "a8473f41-8272-40fe-8fe5-d96de4def382",
      "parentUUID": "d78cfa94-a7ac-495e-9d9f-0e4b17c51f9e",
      "skipped": false
    },
    {
      "title": "should render two ratings",
      "fullTitle": "COMPONENT: SetuRating should render two ratings",
      "timedOut": false,
      "duration": 61,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, null)).find(\".rating\")).to.have.length(2);",
      "err": {},
      "isRoot": false,
      "uuid": "063277b3-069b-4518-835c-d0b59843ff73",
      "parentUUID": "58b05adc-9d17-4757-a3ec-81365378954d",
      "skipped": false
    },
    {
      "title": "should render a book if learning ratings is >=2.5",
      "fullTitle": "COMPONENT: SetuRating should render a book if learning ratings is >=2.5",
      "timedOut": false,
      "duration": 98,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 4.13 })).find(\".book\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.50 })).find(\".book\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "47149133-e782-49d0-937b-c8e45b2d27c7",
      "parentUUID": "58b05adc-9d17-4757-a3ec-81365378954d",
      "skipped": false
    },
    {
      "title": "should render a remove circle if learning ratings is <2.5",
      "fullTitle": "COMPONENT: SetuRating should render a remove circle if learning ratings is <2.5",
      "timedOut": false,
      "duration": 87,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 1.51 })).find(\".remove.circle\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.49 })).find(\".remove.circle\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "b6b6b46d-c7b1-4959-8921-85ab6999454a",
      "parentUUID": "58b05adc-9d17-4757-a3ec-81365378954d",
      "skipped": false
    },
    {
      "title": "should render a thumbs up if enjoyment ratings is >=2.5",
      "fullTitle": "COMPONENT: SetuRating should render a thumbs up if enjoyment ratings is >=2.5",
      "timedOut": false,
      "duration": 66,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 4.13 })).find(\".thumbs.up\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.50 })).find(\".thumbs.up\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "e8c10f4d-59d4-47dd-9af9-4d37cab5d3d9",
      "parentUUID": "58b05adc-9d17-4757-a3ec-81365378954d",
      "skipped": false
    },
    {
      "title": "should render a thumbs down if enjoyment ratings is <2.5",
      "fullTitle": "COMPONENT: SetuRating should render a thumbs down if enjoyment ratings is <2.5",
      "timedOut": false,
      "duration": 65,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 1.51 })).find(\".thumbs.down\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.49 })).find(\".thumbs.down\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "be7ff447-cb49-417f-8bf4-c578c117bdf3",
      "parentUUID": "58b05adc-9d17-4757-a3ec-81365378954d",
      "skipped": false
    },
    {
      "title": "should only render a unit code and a unit name",
      "fullTitle": "#presentational should only render a unit code and a unit name",
      "timedOut": false,
      "duration": 38,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var unitCode = \"ABC1234\";\nvar unitName = \"Example unit\";\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: unitCode,\n    name: unitName }));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(unitCode);\nexpect(wrapper.find(\".message\").text().replace(unitCode, \"\").trim()).to.equal(unitName);",
      "err": {},
      "isRoot": false,
      "uuid": "9fd6fceb-67a4-48d4-894c-9218cd75e56f",
      "parentUUID": "3abacfe2-9cc2-447e-a8f0-81b80e91f8ce",
      "skipped": false
    },
    {
      "title": "should render a close button only when mouse is over the unit",
      "fullTitle": "#presentational should render a close button only when mouse is over the unit",
      "timedOut": false,
      "duration": 79,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    hovering: false }));\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");\nwrapper.setProps({\n    hovering: true\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"visible\");\nwrapper.setProps({\n    hovering: false\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");",
      "err": {},
      "isRoot": false,
      "uuid": "842b6719-7d38-427f-897d-f485525ea9db",
      "parentUUID": "3abacfe2-9cc2-447e-a8f0-81b80e91f8ce",
      "skipped": false
    },
    {
      "title": "Should call willAddUnit if unit is a newUnit and it has been clicked",
      "fullTitle": "#events Should call willAddUnit if unit is a newUnit and it has been clicked",
      "timedOut": false,
      "duration": 74,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    newUnit: true,\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    willAddUnit: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"click\");\nexpect(eventFunc).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "a29f31da-c6fe-4199-8cee-53411d80bec4",
      "parentUUID": "eeb2da63-a44a-45ba-ad49-4a073885ed58",
      "skipped": false
    },
    {
      "title": "Should call handleUnitMouseOver when mouse is over the unit",
      "fullTitle": "#events Should call handleUnitMouseOver when mouse is over the unit",
      "timedOut": false,
      "duration": 51,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseOver: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseOver\");\nexpect(eventFunc).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "46fb68aa-273d-4335-a54a-20a0571dfa5f",
      "parentUUID": "eeb2da63-a44a-45ba-ad49-4a073885ed58",
      "skipped": false
    },
    {
      "title": "Should call handleUnitMouseMove when mouse moves over the unit",
      "fullTitle": "#events Should call handleUnitMouseMove when mouse moves over the unit",
      "timedOut": false,
      "duration": 31,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseMove: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseMove\");\nexpect(eventFunc).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "2daf59c7-c246-45e1-a922-c95e46c103d7",
      "parentUUID": "eeb2da63-a44a-45ba-ad49-4a073885ed58",
      "skipped": false
    },
    {
      "title": "Should call handleUnitMouseOut when mouse is over the unit",
      "fullTitle": "#events Should call handleUnitMouseOut when mouse is over the unit",
      "timedOut": false,
      "duration": 25,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseOut: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseOut\");\nexpect(eventFunc).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "7ca0f9f8-6a09-44c9-afb8-6b6fadc4da53",
      "parentUUID": "eeb2da63-a44a-45ba-ad49-4a073885ed58",
      "skipped": false
    },
    {
      "title": "Should correctly call movingUnit when it is being dragged",
      "fullTitle": "#DnD Should correctly call movingUnit when it is being dragged",
      "timedOut": false,
      "duration": 12,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "testingBeginDrag = true;\ntestingEndDrag = false;\nbackend.simulateBeginDrag([sourceId]);\nexpect(movingUnitSpy).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "035ba8fc-493a-4cfa-a0a8-2fc8d163dd52",
      "parentUUID": "986f17c1-ac3b-438b-ad62-e2e359ce4b20",
      "skipped": false
    },
    {
      "title": "Should correctylc call cancelMovingUnit ",
      "fullTitle": "#DnD Should correctylc call cancelMovingUnit ",
      "timedOut": false,
      "duration": 20,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "testingBeginDrag = false;\ntestingEndDrag = true;\nbackend.simulateBeginDrag([sourceId]);\nbackend.simulateEndDrag(sourceId);\nexpect(cancelMovingUnitSpy).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "f0e26388-3e6b-4437-918e-7b3dfac43736",
      "parentUUID": "986f17c1-ac3b-438b-ad62-e2e359ce4b20",
      "skipped": false
    },
    {
      "title": "Should increment the credit point state by a given value",
      "fullTitle": "ACTION: INCREMENT_CREDIT_POINTS Should increment the credit point state by a given value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 2, creditPoints: 0 };\nvar action = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 2,\n    creditPoints: 1\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1c37c067-fb29-4ab1-9c00-68607bb12679",
      "parentUUID": "94dca748-9b9d-4377-99fd-8789d30baf1d",
      "skipped": false
    },
    {
      "title": "Should decrement the credit point state by a given value",
      "fullTitle": "ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state by a given value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4246d247-7d72-4706-9633-7be5db193aa5",
      "parentUUID": "9cd2c4ae-6239-4cca-8917-7894e04324a8",
      "skipped": false
    },
    {
      "title": "Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
      "fullTitle": "ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 0\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "84fd273f-4842-4ee3-b8fe-55ee99f119d4",
      "parentUUID": "9cd2c4ae-6239-4cca-8917-7894e04324a8",
      "skipped": false
    },
    {
      "title": "Should increment the cost state by a given value",
      "fullTitle": "ACTION: INCREMENT_COST Should increment the cost state by a given value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 20, creditPoints: 13 };\nvar action = {\n    type: \"INCREMENT_COST\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 21,\n    creditPoints: 13\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "78e2d3e1-6bbf-4b62-9255-52fd24bc9496",
      "parentUUID": "0f4a0a84-666a-4b2c-955e-14528ddf184f",
      "skipped": false
    },
    {
      "title": "Should decrement the cost state by a given value",
      "fullTitle": "ACTION: DECREMENT_COST Should decrement the cost state by a given value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e188be9c-340a-47b5-a2d3-809f6ac28b45",
      "parentUUID": "624ca6da-98ff-49a9-99dd-8e9900d98645",
      "skipped": false
    },
    {
      "title": "Should decrement the cost state to 0 if a value given is larger than the current credit point value",
      "fullTitle": "ACTION: DECREMENT_COST Should decrement the cost state to 0 if a value given is larger than the current credit point value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 0,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7e289d10-36f6-4ce5-9d79-93ce7718eefa",
      "parentUUID": "624ca6da-98ff-49a9-99dd-8e9900d98645",
      "skipped": false
    },
    {
      "title": "Should reset the cost and credit point counters to 0",
      "fullTitle": "ACTION: CLEAR_COURSE Should reset the cost and credit point counters to 0",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b14ada3f-6446-4543-9711-b03c713914a8",
      "parentUUID": "e3073ebc-aaac-4b61-9cd8-0c5c61cdc269",
      "skipped": false
    },
    {
      "title": "Should correctly go through and decrement the counters for each value ",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should correctly go through and decrement the counters for each value ",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { cost: 2, creditPoints: 20 }, { cost: 5, creditPoints: 10 }, null]\n};\nvar stateAfter = { cost: 43, creditPoints: 10 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1961357d-0c8f-42a5-98c1-31e9d2f907be",
      "parentUUID": "db51b15d-5bee-44ce-9c1f-3bd56fbb2c76",
      "skipped": false
    },
    {
      "title": "Should not decrement the counters below 0 ",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should not decrement the counters below 0 ",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { cost: 25, creditPoints: 20 }, { cost: 30, creditPoints: 30 }, { cost: 0, creditPoints: 10 }]\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5633450a-187d-4f6b-88db-221a4141378b",
      "parentUUID": "db51b15d-5bee-44ce-9c1f-3bd56fbb2c76",
      "skipped": false
    },
    {
      "title": "Should correctly decrement the counters based on the given units creditpoints and cost",
      "fullTitle": "ACTION: REMOVE_UNIT Should correctly decrement the counters based on the given units creditpoints and cost",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 20 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d00c8a6d-c821-4da0-90a6-4c00f8011d52",
      "parentUUID": "b0ea797e-be63-4a7f-9e82-345477c38da5",
      "skipped": false
    },
    {
      "title": "Should not decrement the counters below 0",
      "fullTitle": "ACTION: REMOVE_UNIT Should not decrement the counters below 0",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d4a4ff38-15e0-4d43-a587-5a48cce575a9",
      "parentUUID": "b0ea797e-be63-4a7f-9e82-345477c38da5",
      "skipped": false
    },
    {
      "title": "Should correctly increment the counters when a unit is added to the plan",
      "fullTitle": "ACTION: ADD_UNIT Should correctly increment the counters when a unit is added to the plan",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"ADD_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 30 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1a973c2b-23fc-421f-bec6-20874d4dd541",
      "parentUUID": "cdd986d2-1a9f-4031-a006-a1701481b5c8",
      "skipped": false
    },
    {
      "title": "Should not decrease counters if there are no units in the overload column",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units in the overload column",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: []\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "83f8aa34-06a2-4429-aedf-2a7dc17841be",
      "parentUUID": "6f78d6a4-4404-4afc-ae69-dd52744e5d70",
      "skipped": false
    },
    {
      "title": "Should not decrease counters if there are no units which have values in the overload column",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units which have values in the overload column",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [null, {}]\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "b0a26597-d68d-4043-811e-a42f8a9ba31c",
      "parentUUID": "6f78d6a4-4404-4afc-ae69-dd52744e5d70",
      "skipped": false
    },
    {
      "title": "Should decrease counters correctly for units in the overload column",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should decrease counters correctly for units in the overload column",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [{\n        CreditPoints: 6,\n        Cost: 1134\n    }, {\n        CreditPoints: 12,\n        Cost: 2256\n    }]\n};\nvar stateAfter = { cost: 36610, creditPoints: 126 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "47d0962c-2adb-4564-b7de-1504c1f2f8dc",
      "parentUUID": "6f78d6a4-4404-4afc-ae69-dd52744e5d70",
      "skipped": false
    },
    {
      "title": "Should not change state if it does not recognise an action",
      "fullTitle": "DEFAULT Should not change state if it does not recognise an action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "45a9c0e8-e156-40b5-bd44-d0e27e6652ba",
      "parentUUID": "73d9070e-296b-4e8a-b897-471bda453b4e",
      "skipped": false
    },
    {
      "title": "Should insert a teaching period with the given info correctly into middle of array",
      "fullTitle": "ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into middle of array",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2018,\n    code: \"S2-01\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "322b124b-c109-4fd2-b69b-fb2a622bcfea",
      "parentUUID": "1fed1b69-7788-41c8-8528-7e4ba1bc44ff",
      "skipped": false
    },
    {
      "title": "Should insert a teaching period with the given info correctly into start of array",
      "fullTitle": "ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into start of array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2016,\n    code: \"S2-01\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2016, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0e9adf4f-3923-4b0a-b233-62542ed12fa8",
      "parentUUID": "1fed1b69-7788-41c8-8528-7e4ba1bc44ff",
      "skipped": false
    },
    {
      "title": "Should remove a teaching period at the given index",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the given index",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c7c6c137-02e1-469c-bbc3-f47598ea8f3a",
      "parentUUID": "5f0f9e6f-aad9-4f9d-8840-71a568b0180e",
      "skipped": false
    },
    {
      "title": "Should remove a teaching period at the start of the array",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the start of the array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "fadb91da-6db3-4cf4-afb5-570d46d5007e",
      "parentUUID": "5f0f9e6f-aad9-4f9d-8840-71a568b0180e",
      "skipped": false
    },
    {
      "title": "Should add the given teaching period to the end of the array",
      "fullTitle": "ACTION: APPEND_TEACHING_PERIOD Should add the given teaching period to the end of the array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"APPEND_TEACHING_PERIOD\",\n    year: 2020,\n    code: \"S2-01\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2020, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "3516eb8a-dba4-497a-a92d-af601e655362",
      "parentUUID": "ebbcdf85-5a52-4425-b1fc-4ed4ca84cd23",
      "skipped": false
    },
    {
      "title": "Should increase the study load if the study load is less than 4",
      "fullTitle": "ACTION: INCREASE_STUDY_LOAD Should increase the study load if the study load is less than 4",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "05d176ae-0ce9-4e1a-bf2b-87722ee6bf57",
      "parentUUID": "9987da2d-5830-47d7-8b28-bd144414964a",
      "skipped": false
    },
    {
      "title": "Should not increase the study load if the study load is 6 or greater",
      "fullTitle": "ACTION: INCREASE_STUDY_LOAD Should not increase the study load if the study load is 6 or greater",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null, null] }],\n    numberOfUnits: 6\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null, null] }],\n    numberOfUnits: 6\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c39029d1-2408-4903-9ce4-09fed04824e9",
      "parentUUID": "9987da2d-5830-47d7-8b28-bd144414964a",
      "skipped": false
    },
    {
      "title": "Should decrease the study load if the study load is greater than 4",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should decrease the study load if the study load is greater than 4",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "3217749b-f792-4b64-84d7-4a68e4bb1378",
      "parentUUID": "55848f71-ade4-4d1c-bade-c2410df29ffe",
      "skipped": false
    },
    {
      "title": "Should not decrease the study load if the study load is 4 or less",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should not decrease the study load if the study load is 4 or less",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4cf4a590-30d8-4c98-9836-320e1608b95c",
      "parentUUID": "55848f71-ade4-4d1c-bade-c2410df29ffe",
      "skipped": false
    },
    {
      "title": "Should remove all teaching periods and set the amount of units to 4",
      "fullTitle": "ACTION: CLEAR_COURSE Should remove all teaching periods and set the amount of units to 4",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = {\n    courseInfo: {\n        courseName: \"\",\n        faculty: \"\",\n        creditPoints: 0,\n        courseDescription: \"\",\n        durationStr: \"\",\n        modeAndLocation: \"\",\n        awards: \"\",\n        abrTitle: \"\"\n    },\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ddf0cb6e-f547-4493-b26c-343e73826197",
      "parentUUID": "848c620c-1119-4cb4-97a0-68939a0d824d",
      "skipped": false
    },
    {
      "title": "Should add a unit correctly to the start of an array",
      "fullTitle": "ACTION: ADD_UNIT Should add a unit correctly to the start of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", totalCreditpoints: 6, units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }, null, null, null] }, { year: 2018, code: \"S2-01\", totalCreditpoints: 0, units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", totalCreditpoints: 0, units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c22a4359-868d-47ca-940f-beabca79a11e",
      "parentUUID": "bb7af9c5-2897-4c68-a035-ba729c97b296",
      "skipped": false
    },
    {
      "title": "Should add a unit correctly to the middle of an array",
      "fullTitle": "ACTION: ADD_UNIT Should add a unit correctly to the middle of an array",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ff1306d9-24e1-4cc2-9d07-1ac8a5f7ba1c",
      "parentUUID": "bb7af9c5-2897-4c68-a035-ba729c97b296",
      "skipped": false
    },
    {
      "title": "Should add a unit correctly to the end of an array",
      "fullTitle": "ACTION: ADD_UNIT Should add a unit correctly to the end of an array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d779be0d-b0af-43da-bca4-f80396843a96",
      "parentUUID": "bb7af9c5-2897-4c68-a035-ba729c97b296",
      "skipped": false
    },
    {
      "title": "Should remove a unit correctly frpm the start of an array",
      "fullTitle": "ACTION: REMOVE_UNIT Should remove a unit correctly frpm the start of an array",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0,\n    creditPoints: 6\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "76a14573-c483-4ef5-bb81-6977616d52ff",
      "parentUUID": "7f1db6f6-73d0-4797-a319-ec12c48a78af",
      "skipped": false
    },
    {
      "title": "Should remove a unit correctly from the middle of an array",
      "fullTitle": "ACTION: REMOVE_UNIT Should remove a unit correctly from the middle of an array",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1,\n    creditPoints: 6\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "6466181d-5d08-4011-b914-068175005332",
      "parentUUID": "7f1db6f6-73d0-4797-a319-ec12c48a78af",
      "skipped": false
    },
    {
      "title": "Should remove a unit correctly from the end of an array",
      "fullTitle": "ACTION: REMOVE_UNIT Should remove a unit correctly from the end of an array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3,\n    creditPoints: 6\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "8f79ee1b-f062-4ef6-b713-3a52b2b10547",
      "parentUUID": "7f1db6f6-73d0-4797-a319-ec12c48a78af",
      "skipped": false
    },
    {
      "title": "Should generate a course structure with valid start and end years",
      "fullTitle": "ACTION: GENERATE_COURSE Should generate a course structure with valid start and end years",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2014,\n    endYear: 2016\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "279b3edb-24f9-4847-8021-1316cb1995ec",
      "parentUUID": "929e6625-0ff7-463e-bcce-5e5242d07aa0",
      "skipped": false
    },
    {
      "title": "Should return an empty course structure with invalid start and end years.",
      "fullTitle": "ACTION: GENERATE_COURSE Should return an empty course structure with invalid start and end years.",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2017,\n    endYear: 2013\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7ffc00d4-a1bd-4fa4-a262-3ee6492e3b16",
      "parentUUID": "929e6625-0ff7-463e-bcce-5e5242d07aa0",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course info is loading",
      "fullTitle": "ACTION: FETCH_COURSE_INFO_PENDING Should correctly show that the course info is loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a50ff060-ee1d-41a9-b5e4-883a6af0aa51",
      "parentUUID": "1e6e5764-228a-44de-88bf-fa8718354d7b",
      "skipped": false
    },
    {
      "title": "Should correctly return the payload and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    focusedCourse: null,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_FULFILLED\",\n    payload: { data: {\n            \"propertyMap\": {\n                courseCode: \"Test Code\",\n                courseName: \"Test Course\",\n                mangFac: \"Test Faculty\",\n                creditPoints: 100,\n                courseDescrip: {\n                    \"value\": \"Test Description\"\n                },\n                courseDuration: \"Test Duration\",\n                modeLoc: {\n                    \"value\": \"Test mode and location\"\n                },\n                courseAward: \"Test awards\",\n                abrevTitle: \"Test abreviated title\"\n            }\n        } },\n    courseCode: \"COURSE101\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: {\n        courseCode: \"Test Code\",\n        courseName: \"Test Course\",\n        faculty: \"Test Faculty\",\n        creditPoints: 100,\n        courseDescription: \"Test Description\",\n        durationStr: \"Test Duration\",\n        modeAndLocation: \"Test mode and location\",\n        awards: \"Test awards\",\n        abrTitle: \"Test abreviated title\"\n    },\n    focusedCourse: \"COURSE101\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d5baf0ff-e36f-446c-ada2-3524883f8555",
      "parentUUID": "8cfe7efb-a27b-4695-a9ab-5a60c79d60c8",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course info fetch failed and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_INFO_REJECTED Should correctly show that the course info fetch failed and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: true,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9df7b1e2-27ad-40bd-a743-6efd9a83a713",
      "parentUUID": "cbb779c1-8161-42c8-9223-97c9484ad631",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course template is loading",
      "fullTitle": "ACTION: FETCH_COURSE_TEMPLATE_PENDING Should correctly show that the course template is loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "57528897-7f84-4626-a55d-5a052228beb4",
      "parentUUID": "8265a775-b3b5-4e3c-aae1-f82584881c45",
      "skipped": false
    },
    {
      "title": "Should correctly return the payload and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_TEMPLATE_FULFILLED Should correctly return the payload and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_FULFILLED\",\n    payload: {\n        data: {\n            propertyMap: \"Fake Course Template\"\n        }\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: \"Fake Course Template\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "de1682fa-c3ed-4e0a-8da4-b60f545eeb54",
      "parentUUID": "147e75e7-264f-4a1b-ac15-b18ad4a36d7a",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course template fetch failed and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_TEMPLATE_REJECTED Should correctly show that the course template fetch failed and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: true,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0a44f99b-7bcf-4f04-83e4-61183c4bbe25",
      "parentUUID": "c30fb2b6-b103-4215-84a6-6eec777f37b0",
      "skipped": false
    },
    {
      "title": "Should correctly show that the unit info is loading",
      "fullTitle": "ACTION: FETCH_UNIT_INFO_PENDING Should correctly show that the unit info is loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: {\n        preqs: \"\",\n        creditPoints: 0,\n        rules: [],\n        locationAndTime: \"\",\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"\",\n        eftsl: 0,\n        descriptions: \"\"\n    },\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: {\n        preqs: \"\",\n        creditPoints: 0,\n        rules: [],\n        locationAndTime: \"\",\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"\",\n        eftsl: 0,\n        descriptions: \"\"\n    },\n    focusedUnitCode: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "25f4e404-1d03-4d92-8f7b-6f37646a1a81",
      "parentUUID": "e1c444be-0c82-4400-a279-80b2281351df",
      "skipped": false
    },
    {
      "title": "Should correctly return the payload and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_UNIT_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_FULFILLED\",\n    payload: { data: \"Fake Unit Info\" },\n    unitCode: \"FAKE1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: \"Fake Unit Info\",\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b3d2bd1f-ea28-460d-9d3e-bd73cc8c1e73",
      "parentUUID": "c2e2edee-363d-477f-b7b1-fc03b4f700e7",
      "skipped": false
    },
    {
      "title": "Should correctly show that the unit info fetch failed and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_UNIT_INFO_REJECTED Should correctly show that the unit info fetch failed and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_REJECTED\",\n    payload: {\n        response: {\n            status: 404\n        }\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: {\n        response: {\n            status: 404\n        }\n    },\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f1fa6284-183a-417b-9e23-bf8823c9dcf2",
      "parentUUID": "17da366d-ae3b-4d38-aa99-d81b234110ca",
      "skipped": false
    },
    {
      "title": "Should accurately set the start year and the focused course on submission",
      "fullTitle": "ACTION: SUBMIT_COURSE_FORM Should accurately set the start year and the focused course on submission",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_COURSE_FORM\",\n    startYear: 2020,\n    courseCode: \"TEST1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: \"TEST1001\",\n    startYear: 2020,\n    endYear: 2020\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "cc46c6f0-ab4e-4fa6-93e0-6369ca768405",
      "parentUUID": "d4f51604-a6b9-469f-aefe-a2f84ec13001",
      "skipped": false
    },
    {
      "title": "Should accurately set the start year and end year on submission",
      "fullTitle": "ACTION: SUBMIT_YEAR_FORM Should accurately set the start year and end year on submission",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_YEAR_FORM\",\n    startYear: 2020,\n    endYear: 2025\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2020,\n    endYear: 2025\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "47dd3f14-22ce-4693-b861-5a704382e6a7",
      "parentUUID": "56b35839-500e-4ad1-bbb1-bc63f29b38da",
      "skipped": false
    },
    {
      "title": "Should correctly handle  of teaching periods data",
      "fullTitle": "ACTION: FETCH_TEACHING_PERIODS_PENDING Should correctly handle  of teaching periods data",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c3e42447-acd5-46ed-80b4-859b6f27a4b6",
      "parentUUID": "7ef78267-e755-409d-ba55-3f8ae3e33375",
      "skipped": false
    },
    {
      "title": "Should correctly handle  of teaching periods data",
      "fullTitle": "ACTION: FETCH_TEACHING_PERIODS_FULFILLED Should correctly handle  of teaching periods data",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_FULFILLED\",\n    payload: \"Teaching period strings\"\n};\nvar stateAfter = {\n    teachingPeriodData: \"Teaching period strings\",\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "895b784a-104f-4a54-a7d7-d77e04896b38",
      "parentUUID": "47e88131-71e7-4730-8cf1-bc242386792f",
      "skipped": false
    },
    {
      "title": "Should correctly handle  of teaching periods data",
      "fullTitle": "ACTION: FETCH_TEACHING_PERIODS_REJECTED Should correctly handle  of teaching periods data",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9c886681-68dc-4f06-b317-78f65206752c",
      "parentUUID": "851681b3-aa53-47c3-8745-b16dbbce13ab",
      "skipped": false
    },
    {
      "title": "Should set the teaching period code to insert value correctly",
      "fullTitle": "ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should set the teaching period code to insert value correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodCodeToInsert: null,\n    testParam1: 1,\n    testParam2: \"test\"\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"S1-02\"\n};\nvar stateAfter = {\n    teachingPeriodCodeToInsert: \"S1-02\",\n    testParam1: 1,\n    testParam2: \"test\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "62e65b32-34a8-4cc6-8113-5e80956bbd4e",
      "parentUUID": "5cb46e29-fd46-40ae-b408-02e36b19a8fc",
      "skipped": false
    },
    {
      "title": "Should handle the initiation of a course snapshot upload correctly",
      "fullTitle": "ACTION: UPLOAD_COURSE_SNAPSHOT_PENDING Should handle the initiation of a course snapshot upload correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: true\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "741568c1-af9f-4f86-93be-8c74839f4ced",
      "parentUUID": "467e5776-6b66-41e4-a0b3-e3115df1f70f",
      "skipped": false
    },
    {
      "title": "Should handle the successful upload of a course snapshot correctly",
      "fullTitle": "ACTION: UPLOAD_COURSE_SNAPSHOT_FULFILLED Should handle the successful upload of a course snapshot correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"upload string\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: \"upload string\",\n    courseSnapshotUploadSucessful: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "306b6924-8e5c-4fbb-96dd-619503d85e1d",
      "parentUUID": "e7117bb5-51ea-4f46-9941-c3ff3a77c701",
      "skipped": false
    },
    {
      "title": "Should do handle the rejected upload of a course snapshot correctly",
      "fullTitle": "ACTION: UPLOAD_COURSE_SNAPSHOT_REJECTED Should do handle the rejected upload of a course snapshot correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "20be81b5-6473-4845-bfc5-52290dcdf5d7",
      "parentUUID": "715260b0-3ae0-47b0-a5bb-d1dca58b262f",
      "skipped": false
    },
    {
      "title": "Should begin fetching a course snapshot correctly",
      "fullTitle": "ACTION: FETCH_COURSE_SNAPSHOT_PENDING Should begin fetching a course snapshot correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e1b3445d-5808-473c-8293-c2eace8bd8b1",
      "parentUUID": "449cd280-c1ef-4b44-913b-f575a16fd13e",
      "skipped": false
    },
    {
      "title": "Should handle a successful course snapshot fetch correctly",
      "fullTitle": "ACTION: FETCH_COURSE_SNAPSHOT_FULFILLED Should handle a successful course snapshot fetch correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"Snap data\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: \"Snap data\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7d9eda56-e661-4a84-bb21-0188ee24b69e",
      "parentUUID": "cc7dd205-fff5-4eb7-99e6-c4c38e04320e",
      "skipped": false
    },
    {
      "title": "Should handle a rejected course snapshot fetch correctly",
      "fullTitle": "ACTION: FETCH_COURSE_SNAPSHOT_REJECTED Should handle a rejected course snapshot fetch correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d79b312d-1c82-45a5-9fed-c4414b8cf038",
      "parentUUID": "3737019f-26db-4e0f-a815-c9e6032cc6e4",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_COURSES_PENDING Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: false,\n    courseSearchError: true //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: true,\n    courseSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0042cc75-3ce9-4140-ba39-c482e66dc5e5",
      "parentUUID": "357a3585-c6a7-4a22-80fc-474a4cf3a5c7",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_COURSES_FULFILLED Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: true,\n    courseSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_FULFILLED\",\n    payload: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    courseSearchIsLoading: false,\n    courseSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5ff3060f-a1df-4499-aa21-11ff6fbbedcb",
      "parentUUID": "14f6cbd9-bf82-4c46-a2d8-d092d907b31a",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_COURSES_REJECTED Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    courseSearchIsLoading: true,\n    courseSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: false,\n    courseSearchError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "140de2fc-3bf7-4ffb-8812-0056584a3d9b",
      "parentUUID": "fb00230d-f2e8-4c67-a6cf-a941767fe840",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_AOS_PENDING Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: false,\n    aosSearchError: true //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: true,\n    aosSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "88823bb1-2670-4a44-b18e-80f1f601c214",
      "parentUUID": "86c2f47d-ba33-4829-97eb-0de2c58741d6",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_AOS_FULFILLED Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: true,\n    aosSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_FULFILLED\",\n    payload: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    aosSearchIsLoading: false,\n    aosSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c2451801-84e1-4d1f-bfee-5cf1e1723d4b",
      "parentUUID": "a49f7a26-bd5c-40e2-88f5-c03b1c5e42ce",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_AOS_REJECTED Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    aosSearchIsLoading: true,\n    aosSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: false,\n    aosSearchError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0e4f83bf-6a4d-46f5-992d-98c09df5f212",
      "parentUUID": "75e2d960-a917-4dbb-9562-166ffb306ad9",
      "skipped": false
    },
    {
      "title": "Should correctly update the affected units value to the given array",
      "fullTitle": "ACTION: UPDATE_AFFECTED_UNITS Should correctly update the affected units value to the given array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: []\n};\nvar action = {\n    type: \"UPDATE_AFFECTED_UNITS\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9acd98fe-7da5-4547-88c3-74e649c61fc0",
      "parentUUID": "be7a1385-036e-444d-be4b-613c2fb83ba4",
      "skipped": false
    },
    {
      "title": "Should correctly update the index of tp to remove value to the given value",
      "fullTitle": "ACTION: UPDATE_INDEX_OF_TP_TO_REMOVE Should correctly update the index of tp to remove value to the given value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 0\n};\nvar action = {\n    type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\",\n    index: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 1\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "48ab9f31-f4f3-4c97-b037-365769855b01",
      "parentUUID": "8064f57b-2228-4ae5-bee2-384268ca1aa8",
      "skipped": false
    },
    {
      "title": "Should correctly set the unit to add to the new unit",
      "fullTitle": "ACTION: UPDATE_UNIT_TO_ADD Should correctly set the unit to add to the new unit",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitInfo: \"TestUnit\",\n    unitToAdd: undefined\n};\nvar action = {\n    type: \"UPDATE_UNIT_TO_ADD\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitInfo: \"TestUnit\",\n    unitToAdd: \"TestUnit\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5ba6acf8-647e-48fc-a6c3-563561515c83",
      "parentUUID": "7d102ef2-004c-41b3-919a-6927c200332c",
      "skipped": false
    },
    {
      "title": "Should correctly set a non-dragging unit being dragged",
      "fullTitle": "ACTION: UPDATE_UNIT_IS_BEING_DRAGGED Should correctly set a non-dragging unit being dragged",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: false\n};\nvar action = {\n    type: \"UPDATE_UNIT_IS_BEING_DRAGGED\",\n    isDragging: true\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a7935035-d6f3-431c-bcce-f11e04073dc0",
      "parentUUID": "b93a2fc2-4cb9-48dc-8920-e805c063d3cf",
      "skipped": false
    },
    {
      "title": "Should correctly set a dragging unit to be not dragged",
      "fullTitle": "ACTION: UPDATE_UNIT_IS_BEING_DRAGGED Should correctly set a dragging unit to be not dragged",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: true\n};\nvar action = {\n    type: \"UPDATE_UNIT_IS_BEING_DRAGGED\",\n    isDragging: false\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "87738a02-eea7-4524-81cd-afab67ee9341",
      "parentUUID": "b93a2fc2-4cb9-48dc-8920-e805c063d3cf",
      "skipped": false
    },
    {
      "title": "Should correctly begin moving a unit",
      "fullTitle": "ACTION: MOVING_UNIT Should correctly begin moving a unit",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0\n};\nvar action = {\n    type: \"MOVING_UNIT\",\n    unit: \"TEST-UNIT\",\n    unitIndex: 3,\n    tpIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TEST-UNIT\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 3\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0ba85494-5e04-44c2-90ac-a8e4231e9a6c",
      "parentUUID": "47fc21e5-2519-4509-8aa2-635af0098b7a",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to a teaching period earlier than it",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period earlier than it",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitName: \"TestUnit\", creditPoints: 6 }, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e222ca8a-833e-4085-814b-84e21a832c60",
      "parentUUID": "7cd2d8ab-70f6-4007-b027-50e9531a1a5c",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to a teaching period later than it",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period later than it",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitName: \"TestUnit\", creditPoints: 6 }, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "258000c5-1b3e-4013-974c-884c2e187096",
      "parentUUID": "7cd2d8ab-70f6-4007-b027-50e9531a1a5c",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to the same teaching period but earlier position",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but earlier position",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [\"PlaceToMoveTo\", { unitName: \"TestUnit\", creditPoints: 6 }, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [{ unitName: \"TestUnit\", creditPoints: 6 }, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c7869a3b-24e5-48d4-a010-414fa6026df1",
      "parentUUID": "7cd2d8ab-70f6-4007-b027-50e9531a1a5c",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to the same teaching period but later position",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but later position",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [{ unitName: \"TestUnit\", creditPoints: 6 }, null, \"PlaceToMoveTo\", null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a946c2cd-7845-48fa-9cf7-2e6b138672a2",
      "parentUUID": "7cd2d8ab-70f6-4007-b027-50e9531a1a5c",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to the same teaching period and exact same position",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period and exact same position",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f51f71ee-39e9-415a-b38c-3a764abc20cb",
      "parentUUID": "7cd2d8ab-70f6-4007-b027-50e9531a1a5c",
      "skipped": false
    },
    {
      "title": "should cancel moving unit",
      "fullTitle": "ACTION: CANCEL_MOVING_UNIT should cancel moving unit",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: \"TestUnit2\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: undefined,\n    unitsIndexOfUnitToBeMoved: undefined\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "2f979eff-045d-4d4a-94aa-a65c5301b83d",
      "parentUUID": "30b59bc8-e81e-4f8c-ad9e-e584b0f0820f",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to a teaching period earlier than it",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period earlier than it",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "691f876a-db69-4f9d-9669-4a8728c1103b",
      "parentUUID": "119a9910-32c9-4db8-bce4-4cb6f53f201a",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to a teaching period later than it",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period later than it",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1d9a799d-7aa3-4f3b-9bc7-7895e02b8f7f",
      "parentUUID": "119a9910-32c9-4db8-bce4-4cb6f53f201a",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to the same teaching period but earlier position",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but earlier position",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "6103b7d3-ffbf-4532-a861-6f17d838d55b",
      "parentUUID": "119a9910-32c9-4db8-bce4-4cb6f53f201a",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to the same teaching period but later position",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but later position",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, \"PlaceToMoveTo\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", null, \"TestUnit\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5f1250a1-5a9c-4bc1-9d85-d16a5d1121af",
      "parentUUID": "119a9910-32c9-4db8-bce4-4cb6f53f201a",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to the same teaching period and exact same position",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period and exact same position",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e57f9342-c30b-47fb-a659-dc7cc7c15b3b",
      "parentUUID": "119a9910-32c9-4db8-bce4-4cb6f53f201a",
      "skipped": false
    },
    {
      "title": "should give no errors for an empty course plan.",
      "fullTitle": "ACTION: VALIDATE_COURSE should give no errors for an empty course plan.",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan.\"\n    }],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    courseErrors: [],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f643768d-6150-4546-ae08-a757d3edaed3",
      "parentUUID": "327571ab-22ac-46d2-bdea-47c1cfd2187d",
      "skipped": false
    },
    {
      "title": "Should not give duplicate unit errors if the first attempt is in the past, and the second attempt is not two or more years into the future.",
      "fullTitle": "duplicates: Should not give duplicate unit errors if the first attempt is in the past, and the second attempt is not two or more years into the future.",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: new Date().getFullYear() - 1,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, null]\n    }, {\n        code: \"S1-01\",\n        year: new Date().getFullYear() + 1,\n        units: [null, null, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "9e35f5fe-e71f-4a5d-ae95-e61b8e2fb646",
      "parentUUID": "2c823dbd-32f6-4546-b40a-9827116a7c50",
      "skipped": false
    },
    {
      "title": "Should give a duplicate unit error if there are two same units in the same teaching period",
      "fullTitle": "duplicates: Should give a duplicate unit error if there are two same units in the same teaching period",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2015,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }, {\n        code: \"S2-01\",\n        year: 2015,\n        units: [null, null, null, {\n            unitCode: \"GJQ2039\"\n        }]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2015,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }, {\n        code: \"S2-01\",\n        year: 2015,\n        units: [null, null, null, {\n            unitCode: \"GJQ2039\"\n        }]\n    }],\n    courseErrors: [{\n        message: \"ABCD1234 already exists in the same teaching period. Please remove this unit.\",\n        coordinates: [[0, 3]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "de23fe77-8389-43ff-913a-4ede585a4aed",
      "parentUUID": "2c823dbd-32f6-4546-b40a-9827116a7c50",
      "skipped": false
    },
    {
      "title": "Should give a duplicate error if a duplicate unit is placed in a teaching period two years from now",
      "fullTitle": "duplicates: Should give a duplicate error if a duplicate unit is placed in a teaching period two years from now",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var currentYear = new Date().getFullYear();\nvar stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: currentYear,\n        units: [{\n            unitCode: \"ABC1234\"\n        }, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 2,\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 2,\n        units: [null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: currentYear,\n        units: [{\n            unitCode: \"ABC1234\"\n        }, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 2,\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 2,\n        units: [null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan. Please plan as if you will pass all units.\",\n        coordinates: [[4, 1]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "971b1110-2c88-4f88-adbc-a1c7caa548ac",
      "parentUUID": "2c823dbd-32f6-4546-b40a-9827116a7c50",
      "skipped": false
    },
    {
      "title": "Should give a course error for a unit not being offered in the teaching period it is in",
      "fullTitle": "offerings: Should give a course error for a unit not being offered in the teaching period it is in",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2019,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: 2019,\n        units: [null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"First semester 2019 (Day)\"]\n            }]\n        }, null]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2019,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: 2019,\n        units: [null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"First semester 2019 (Day)\"]\n            }]\n        }, null]\n    }],\n    courseErrors: [{\n        message: \"ABC1234 is not offered in second semester, 2019.\",\n        coordinates: [[1, 2]]\n    }],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "93783a9d-58e3-407d-bf38-aab9c41dbb1e",
      "parentUUID": "d4540e93-ee97-462c-bdfa-472e1918f4f1",
      "skipped": false
    },
    {
      "title": "Should give a course error for a missing prereq",
      "fullTitle": "rules: Should give a course error for a missing prereq",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"Must have passed an (I/W) unit in {DEF2345, QLS2029}\",\n                endDate: \"\"\n            }]\n        }]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"Must have passed an (I/W) unit in {DEF2345, QLS2029}\",\n                endDate: \"\"\n            }]\n        }]\n    }],\n    courseErrors: [{\n        message: \"You must complete DEF2345 or QLS2029 before you can do ABC1234.\",\n        coordinates: [[0, 3]]\n    }],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5d024ba4-0079-40e6-92f0-db14a8b9c9f4",
      "parentUUID": "5d7d6bde-088c-45b6-9789-821c8f95b61e",
      "skipped": false
    },
    {
      "title": "Should give an error for credit points being lower than the minimum required for the unit",
      "fullTitle": "rules: Should give an error for credit points being lower than the minimum required for the unit",
      "timedOut": false,
      "duration": 13,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2016,\n        code: \"S2-01\",\n        units: [{\n            unitCode: \"TEST1011\",\n            creditPoints: 6\n        }, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"TEST3031\",\n            creditPoints: 6,\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"Must have passed 24 credit points\"\n            }]\n        }, null, null, null]\n    }, {\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2016,\n        code: \"S2-01\",\n        units: [{\n            unitCode: \"TEST1011\",\n            creditPoints: 6\n        }, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"TEST3031\",\n            creditPoints: 6,\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"Must have passed 24 credit points\"\n            }]\n        }, null, null, null]\n    }, {\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"You need 18 more credit points before you can do TEST3031.\",\n        coordinates: [[2, 1]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e2295abe-a937-4265-be7c-19a734901ca4",
      "parentUUID": "5d7d6bde-088c-45b6-9789-821c8f95b61e",
      "skipped": false
    },
    {
      "title": "Should correctly handle prohibitions",
      "fullTitle": "rules: Should correctly handle prohibitions",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2013,\n        code: \"S1-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\"\n        }]\n    }, {\n        year: 2013,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"BCD1234\",\n            rules: [{\n                ruleSummary: \"INCOMP\",\n                ruleString: \"Incompatible with achievement in {ABC1234}\"\n            }]\n        }, null, null]\n    }],\n    courseErrors: [{\n        message: \"Please remove BCD1234, as completing ABC1234 prohibits you from doing this unit.\",\n        coordinates: [[1, 1]]\n    }]\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "fdb4d944-a630-4d4e-b0a0-b77345274ec6",
      "parentUUID": "5d7d6bde-088c-45b6-9789-821c8f95b61e",
      "skipped": false
    },
    {
      "title": "Should correctly handle the Do branch of For COURSE_CODE syntax",
      "fullTitle": "rules: Should correctly handle the Do branch of For COURSE_CODE syntax",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2014,\n        code: \"S1-01\",\n        units: [{\n            unitCode: \"DEF2345\",\n            unitName: \"Test unit\",\n            rules: [{\n                ruleSummary: \"COREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {S2029, S3019} Do Any passed co-req (I/W) unit in {ABC2022} Otherwise true\",\n                endDate: \"\"\n            }]\n        }, null, null, null]\n    }],\n    courseInfo: {\n        courseCode: \"S2029\"\n    },\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2014,\n        code: \"S1-01\",\n        units: [{\n            unitCode: \"DEF2345\",\n            unitName: \"Test unit\",\n            rules: [{\n                ruleSummary: \"COREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {S2029, S3019} Do Any passed co-req (I/W) unit in {ABC2022} Otherwise true\",\n                endDate: \"\"\n            }]\n        }, null, null, null]\n    }],\n    courseInfo: {\n        courseCode: \"S2029\"\n    },\n    courseErrors: [{\n        message: \"You must complete ABC2022 before or whilst doing DEF2345.\",\n        coordinates: [[0, 0]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "86a95d86-3d4c-48e4-9ffd-ab2df38e19c5",
      "parentUUID": "5d7d6bde-088c-45b6-9789-821c8f95b61e",
      "skipped": false
    },
    {
      "title": "Should correctly handle the Otherwise branch of For COURSE_CODE syntax",
      "fullTitle": "rules: Should correctly handle the Otherwise branch of For COURSE_CODE syntax",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }, {\n        year: 2018,\n        code: \"WS-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"Winter semester 2018 (Day)\"]\n            }],\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {Q2001, Q2003} Do true Otherwise Must have passed 1 (I/W) units in {TEST1001}\",\n                endDate: \"\"\n            }]\n        }]\n    }, {\n        year: 2018,\n        code: \"S2-01\",\n        units: [null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }, {\n        year: 2018,\n        code: \"WS-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"Winter semester 2018 (Day)\"]\n            }],\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {Q2001, Q2003} Do true Otherwise Must have passed 1 (I/W) units in {TEST1001}\",\n                endDate: \"\"\n            }]\n        }]\n    }, {\n        year: 2018,\n        code: \"S2-01\",\n        units: [null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"You must complete TEST1001 before you can do ABC1234.\",\n        coordinates: [[1, 3]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d11b6d15-6a66-4b52-9ab3-f13f15a4b14b",
      "parentUUID": "5d7d6bde-088c-45b6-9789-821c8f95b61e",
      "skipped": false
    },
    {
      "title": "Should leave invalidUnitSlotCoordinates empty if there are no invalid unit slots",
      "fullTitle": "ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS Should leave invalidUnitSlotCoordinates empty if there are no invalid unit slots",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2015,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: false\n};\nvar action = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: {\n        unitCode: \"TEST1001\",\n        unitName: \"Test unit\",\n        locationAndTime: [{\n            location: \"Caulfield\",\n            time: [\"First semester 2017 (Day)\"]\n        }]\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2015,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "262d64c5-ff1c-44d1-8150-320310a41130",
      "parentUUID": "f69d642f-71f5-4b68-9104-72d062c5d748",
      "skipped": false
    },
    {
      "title": "Should highlight teaching periods that contains the same unit",
      "fullTitle": "ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS Should highlight teaching periods that contains the same unit",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var currentYear = new Date().getFullYear();\nvar stateBefore = {\n    teachingPeriods: [{\n        year: currentYear - 2,\n        code: \"FY-01\",\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        year: currentYear - 1,\n        code: \"FY-01\",\n        units: [null, null, {\n            unitCode: \"DEF2345\"\n        }, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: false\n};\nvar action = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: {\n        unitCode: \"ABC1234\",\n        locationAndTime: [{\n            location: \"Parkville\",\n            time: [\"Full year 2018 (Day)\"]\n        }]\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: currentYear - 2,\n        code: \"FY-01\",\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        year: currentYear - 1,\n        code: \"FY-01\",\n        units: [null, null, {\n            unitCode: \"DEF2345\"\n        }, null]\n    }],\n    invalidUnitSlotCoordinates: [[0, null]],\n    highlightingInvalidUnitSlots: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "950b3070-b5c9-41e9-b7b3-d4d6bbd767e6",
      "parentUUID": "f69d642f-71f5-4b68-9104-72d062c5d748",
      "skipped": false
    },
    {
      "title": "should not change the state if it receives an unknown action",
      "fullTitle": "DEFAULT should not change the state if it receives an unknown action",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "729e7d64-68d7-4c9a-86a4-0e1f979c36be",
      "parentUUID": "cd612aee-3f58-4ab8-bc0f-96467a3f6def",
      "skipped": false
    },
    {
      "title": "should begin fetching important dates correctly ",
      "fullTitle": "ACTION: FETCH_IMPORTANT_DATES_PENDING should begin fetching important dates correctly ",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\nvar action = {\n    type: \"FETCH_IMPORTANT_DATES_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: true,\n    importantDatesError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9f7d9e17-68b4-4a5e-897b-0b2799b9d141",
      "parentUUID": "9659f73f-8f0a-4eb8-9b8d-d38a40744890",
      "skipped": false
    },
    {
      "title": "should handled failed fetch of important dates correctly ",
      "fullTitle": "ACTION: FETCH_IMPORTANT_DATES_REJECTED should handled failed fetch of important dates correctly ",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\nvar action = {\n    type: \"FETCH_IMPORTANT_DATES_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7fc2292a-5afb-480b-b443-2a748d99267f",
      "parentUUID": "3816fbc0-105d-45f1-9814-bc385aac0adf",
      "skipped": false
    },
    {
      "title": "should handled failed fetch of important dates correctly ",
      "fullTitle": "ACTION: FETCH_IMPORTANT_DATES_FULFILLED should handled failed fetch of important dates correctly ",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\nvar action = {\n    type: \"FETCH_IMPORTANT_DATES_FULFILLED\",\n    payload: [{\n        \"value\": \"HE IS A SAURABH\"\n    }]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [{ \"value\": \"HE IS A SAURABH\" }],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "45431d0d-c64d-4073-af6b-f7c788a040ff",
      "parentUUID": "235b1c52-18a9-4374-9691-63ba9679d8ab",
      "skipped": false
    },
    {
      "title": "should insert a notification from an empty list",
      "fullTitle": "ACTION: ADD_NOTIFICATION should insert a notification from an empty list",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: []\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4163b91f-d71f-492e-984f-91aae7fd1b6d",
      "parentUUID": "142bd961-d32c-4cce-a924-6ac6fd004825",
      "skipped": false
    },
    {
      "title": "should prepend a notification into an list of a few existing notifications.",
      "fullTitle": "ACTION: ADD_NOTIFICATION should prepend a notification into an list of a few existing notifications.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5a98ce8c-74a0-4b8d-bbd0-092a065d5b01",
      "parentUUID": "142bd961-d32c-4cce-a924-6ac6fd004825",
      "skipped": false
    },
    {
      "title": "should replace a notification if it already exists with a specified ID",
      "fullTitle": "ACTION: ADD_NOTIFICATION should replace a notification if it already exists with a specified ID",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    message: \"New message goes over here\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"New message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "3cdc29f1-d97c-4c7d-a88c-5f3ae874f95d",
      "parentUUID": "142bd961-d32c-4cce-a924-6ac6fd004825",
      "skipped": false
    },
    {
      "title": "Should remove a notification given its ID",
      "fullTitle": "ACTION: REMOVE_NOTIFICATION Should remove a notification given its ID",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    id: \"CONNECTION_LOST\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0b5d6eef-83e3-4d7f-b723-cc4b0375b276",
      "parentUUID": "5d642abf-fb6e-45c6-9efa-7742c5406bc7",
      "skipped": false
    },
    {
      "title": "Should remove a notification given its index",
      "fullTitle": "ACTION: REMOVE_NOTIFICATION Should remove a notification given its index",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    index: 1\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "332870c8-9878-4711-a03d-3b2aff6a9c86",
      "parentUUID": "5d642abf-fb6e-45c6-9efa-7742c5406bc7",
      "skipped": false
    },
    {
      "title": "Should not change state if it does not recognise an action",
      "fullTitle": "DEFAULT Should not change state if it does not recognise an action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Notifications2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "c5bbd40d-2a34-4a6c-91b7-c69b0603e457",
      "parentUUID": "f4b7bcdb-a163-4001-8090-14fb644588e7",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the insert teaching period UI boolean",
      "fullTitle": "ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: true,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9dc36742-3876-42c6-8c0e-9efc204fe9f9",
      "parentUUID": "3e090a16-49de-40b4-a4e4-8c2ff4754491",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the insert teaching period UI boolean",
      "fullTitle": "ACTION: HIDE_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: true,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5896cb76-a3d1-4df8-9884-8d1fb3be7725",
      "parentUUID": "d40746bd-9f7b-423f-aca2-c902b73c9f6e",
      "skipped": false
    },
    {
      "title": "Should correctly set the add unit UI boolean to true and correctly hide the sidebar when a unit is being added",
      "fullTitle": "ACTION: ADDING_UNIT Should correctly set the add unit UI boolean to true and correctly hide the sidebar when a unit is being added",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "21136500-c947-4bab-be40-6ee60199bdc9",
      "parentUUID": "dda5a8bb-e50c-4a89-be35-d8f7f489cd44",
      "skipped": false
    },
    {
      "title": "Should correctly set the add unit UI boolean to false",
      "fullTitle": "ACTION: ADD_UNIT Should correctly set the add unit UI boolean to false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true\n};\nvar action = {\n    type: \"ADD_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f3b21f04-86a1-46cd-a1a2-af07e0f71776",
      "parentUUID": "1f1bf5b8-6786-4e77-af7e-d09af087feaf",
      "skipped": false
    },
    {
      "title": "Should correctly set the add unit UI boolean to false",
      "fullTitle": "ACTION: CANCEL_ADDING_UNIT Should correctly set the add unit UI boolean to false",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true\n};\nvar action = {\n    type: \"CANCEL_ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "24fdcc43-e79d-4d26-81a1-495e419e2530",
      "parentUUID": "36e337b2-eb13-44f6-95ce-bcd9472dce81",
      "skipped": false
    },
    {
      "title": "Should correctly set the move unit UI boolean to true",
      "fullTitle": "ACTION: MOVING_UNIT Should correctly set the move unit UI boolean to true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"MOVING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a99da681-c1d0-431c-87cb-8c02f1d7842a",
      "parentUUID": "7809519c-6bbc-4b10-99aa-be4a73fc9c82",
      "skipped": false
    },
    {
      "title": "Should correctly set the move unit UI boolean to false",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly set the move unit UI boolean to false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"MOVE_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "249de938-8dde-49f8-8dcf-0ae0357de59b",
      "parentUUID": "f29bd191-c4f4-41a7-8deb-7bebc00c12ce",
      "skipped": false
    },
    {
      "title": "Should correctly set the move unit UI boolean to false",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly set the move unit UI boolean to false",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"SWAP_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "27adf6b2-0664-4bab-992d-bb53f8e42fa0",
      "parentUUID": "ef38e1a0-da3a-45e0-a93e-803321368fb5",
      "skipped": false
    },
    {
      "title": "Should correctly set the move unit UI boolean to false",
      "fullTitle": "ACTION: CANCEL_MOVING_UNIT Should correctly set the move unit UI boolean to false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7200a5fe-114b-465a-9b1e-c03912a88414",
      "parentUUID": "58446a91-54ab-4edf-8b8c-9885df890fbd",
      "skipped": false
    },
    {
      "title": "Should set the course to read only correctly",
      "fullTitle": "ACTION: SET_COURSE_READ_ONLY Should set the course to read only correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: false\n};\nvar action = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "590ff000-1f31-42da-9995-d5755e0db6b6",
      "parentUUID": "aa3265f0-736c-43f3-bc7c-20714f443281",
      "skipped": false
    },
    {
      "title": "Should set the course to allow edits correctly",
      "fullTitle": "ACTION: SET_COURSE_READ_AND_WRITE Should set the course to allow edits correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: true\n};\nvar action = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9d7a801c-a385-4832-ab6d-ae262a4252a1",
      "parentUUID": "64183b44-d39b-44bf-99aa-c18a9fed7eef",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm delete teaching period modal UI to show",
      "fullTitle": "ACTION: SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to show",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "bd0d1129-055d-4884-8441-43bb534747fd",
      "parentUUID": "d9b68d93-0702-43b5-ba8f-2e243d344683",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm delete teaching period modal UI to hide",
      "fullTitle": "ACTION: HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to hide",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "28c8bb80-b16b-45c6-8ea8-7eea743cc9a2",
      "parentUUID": "e4a10aa3-7ea4-46c8-b6bf-12c821ef4769",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm decrease study load modal UI to show",
      "fullTitle": "ACTION: SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to show",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "572d982d-5295-47ef-be58-0326237306e7",
      "parentUUID": "067f5b9c-9e94-43e6-a588-bbada4d893bf",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm decrease study load modal UI to hide",
      "fullTitle": "ACTION: HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to hide",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "8c8d18d1-b9bd-420f-a3df-13edcfe336fa",
      "parentUUID": "f3f3253c-23d9-4534-9a71-3326c67ca054",
      "skipped": false
    },
    {
      "title": "Should set show flag for custom unit modal to be true",
      "fullTitle": "ACTION: SHOW_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7ddd42c7-3af5-4150-8002-562998bcd2d8",
      "parentUUID": "62709d5f-8654-4044-96c7-208de59aeb71",
      "skipped": false
    },
    {
      "title": "Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
      "fullTitle": "ACTION: SHOW_CUSTOM_UNIT_MODAL Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"ABC1234\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: \"ABC1234\",\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f30d47eb-acc2-4ad1-9cbb-a6d9b64468d6",
      "parentUUID": "62709d5f-8654-4044-96c7-208de59aeb71",
      "skipped": false
    },
    {
      "title": "Should set unit code and position if it exists on top of setting show flag for custom unit modal to be true",
      "fullTitle": "ACTION: SHOW_CUSTOM_UNIT_MODAL Should set unit code and position if it exists on top of setting show flag for custom unit modal to be true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"ABC1234\",\n    tpIndex: 0,\n    unitIndex: 2\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: \"ABC1234\",\n    customTpIndex: 0,\n    customUnitIndex: 2\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b9889c02-c18d-4c65-b127-ec51ac0b0e23",
      "parentUUID": "62709d5f-8654-4044-96c7-208de59aeb71",
      "skipped": false
    },
    {
      "title": "Should set show flag for custom unit modal to be false",
      "fullTitle": "ACTION: HIDE_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: true\n};\nvar action = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "11a4e86c-b1c0-48f1-8214-7af33111ae67",
      "parentUUID": "77fbb374-47c1-486f-8a5d-b9750ab99594",
      "skipped": false
    },
    {
      "title": "Should correctly show the sidebar when called",
      "fullTitle": "ACTION: SHOW_SIDEBAR Should correctly show the sidebar when called",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: false\n};\nvar action = {\n    type: \"SHOW_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e8126843-e02f-4395-b00d-b43254f8adb6",
      "parentUUID": "56ed7dab-9117-487a-96a4-28d28ca464db",
      "skipped": false
    },
    {
      "title": "Should correctly hide the sidebar when called",
      "fullTitle": "ACTION: HIDE_SIDEBAR Should correctly hide the sidebar when called",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"HIDE_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5f106e09-8cce-4a57-b222-d54c5520364f",
      "parentUUID": "34054f47-d68c-4183-bfd1-5163981df15c",
      "skipped": false
    },
    {
      "title": "Should not change state if it does not recognise the action",
      "fullTitle": "DEFAULT Should not change state if it does not recognise the action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_UI2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "891086fd-e921-4295-b7dc-c02b0eaa3f95",
      "parentUUID": "8d4a7455-6e2b-49b5-9de6-4fe94f912d73",
      "skipped": false
    },
    {
      "title": "Should return a non-negative number",
      "fullTitle": "UTILS: CostCalc Should return a non-negative number",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_CostCalc2.default.calculateCost(0, 0)).to.be.gte(0);\nexpect(_CostCalc2.default.calculateCost(2, 6)).to.be.gte(0);",
      "err": {},
      "isRoot": false,
      "uuid": "9a430705-6516-4d0d-82d9-206352261c3a",
      "parentUUID": "98ea361f-c56b-489c-8f05-0bbc15dbdd23",
      "skipped": false
    },
    {
      "title": "Should multiply SCA band cost with credit points",
      "fullTitle": "UTILS: CostCalc Should multiply SCA band cost with credit points",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var scaBand = 3;\nvar creditPoints = 6;\nvar scaBandCost = _CostCalc2.default.calculateCost(scaBand, 1);\nexpect(_CostCalc2.default.calculateCost(scaBand, creditPoints)).to.equal(scaBandCost * creditPoints);",
      "err": {},
      "isRoot": false,
      "uuid": "2e9858a2-e695-4b9c-8fb7-1d7ee4087344",
      "parentUUID": "98ea361f-c56b-489c-8f05-0bbc15dbdd23",
      "skipped": false
    },
    {
      "title": "Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
      "fullTitle": "nextSemester Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([], 2011, [])).to.deep.equal({\n    index: 0,\n    year: 2011,\n    code: \"S1-01\",\n    teachingPeriodData: []\n});",
      "err": {},
      "isRoot": false,
      "uuid": "695b76d2-f1b5-47e5-b96e-a32a0087ef42",
      "parentUUID": "52b8bf7d-a449-4029-baef-58f477c07b89",
      "skipped": false
    },
    {
      "title": "Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
      "fullTitle": "nextSemester Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([], 2029, sortedTeachingPeriodData)).to.deep.equal({\n    index: 0,\n    year: 2029,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
      "err": {},
      "isRoot": false,
      "uuid": "1150facf-2546-4f85-bfc8-2021790f178e",
      "parentUUID": "52b8bf7d-a449-4029-baef-58f477c07b89",
      "skipped": false
    },
    {
      "title": "Should return semester two if the last teaching period is in semester one, with the same year",
      "fullTitle": "nextSemester Should return semester two if the last teaching period is in semester one, with the same year",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2025,\n    code: \"S1-01\"\n}, {\n    year: 2025,\n    code: \"S2-01\"\n}, {\n    year: 2026,\n    code: \"S1-01\"\n}, {\n    year: 2026,\n    code: \"S2-01\"\n}, {\n    year: 2027,\n    code: \"S1-01\"\n}], 2023, sortedTeachingPeriodData)).to.deep.equal({\n    index: 5,\n    year: 2027,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
      "err": {},
      "isRoot": false,
      "uuid": "4a61d66d-cbee-44b0-a879-3bf5e2a87853",
      "parentUUID": "52b8bf7d-a449-4029-baef-58f477c07b89",
      "skipped": false
    },
    {
      "title": "Should return semester one next year if the last teaching period is in semester two",
      "fullTitle": "nextSemester Should return semester one next year if the last teaching period is in semester two",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2015,\n    code: \"FY-01\"\n}, {\n    year: 2017,\n    code: \"S2-01\"\n}], 2015, sortedTeachingPeriodData)).to.deep.equal({\n    index: 2,\n    year: 2018,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
      "err": {},
      "isRoot": false,
      "uuid": "66f586ad-750d-43d0-84c4-094748930dcd",
      "parentUUID": "52b8bf7d-a449-4029-baef-58f477c07b89",
      "skipped": false
    },
    {
      "title": "Should render a semester string",
      "fullTitle": "getSemesterString Should render a semester string",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2019,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n})).to.equal(\"Semester 2, 2019\");",
      "err": {},
      "isRoot": false,
      "uuid": "8ecd92d3-dd40-451d-b078-6702a62982c0",
      "parentUUID": "0fc3099a-d0c2-44c4-810f-3f90797dc1c3",
      "skipped": false
    },
    {
      "title": "Should revert back to semester codes if teachingPeriodData is not available",
      "fullTitle": "getSemesterString Should revert back to semester codes if teachingPeriodData is not available",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2015,\n    code: \"S1-01\"\n})).to.equal(\"S1-01, 2015\");",
      "err": {},
      "isRoot": false,
      "uuid": "ede81425-88dd-4017-92bf-69979b2cae55",
      "parentUUID": "0fc3099a-d0c2-44c4-810f-3f90797dc1c3",
      "skipped": false
    },
    {
      "title": "Should return the right year based off current month",
      "fullTitle": "UTILS: ShowYear Should return the right year based off current month",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "if (new Date().getMonth() + 1 >= 11) {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear() + 1);\n} else {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear());\n}",
      "err": {},
      "isRoot": false,
      "uuid": "3b0af197-e330-479a-80e0-ce816de6de6e",
      "parentUUID": "b2d3b83a-a0d9-4c92-919f-445f8a1ae697",
      "skipped": false
    },
    {
      "title": "Should contain the same year as it was specified",
      "fullTitle": "UTILS: YearCalc Should contain the same year as it was specified",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getStartYearVals(2016).find(function (year) {\n    return year.value === 2016;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2017).find(function (year) {\n    return year.value === 2017;\n})).to.be.ok;",
      "err": {},
      "isRoot": false,
      "uuid": "1c5acd20-d859-4bec-a814-b8f2731c09cf",
      "parentUUID": "e33a6cad-c2b7-455c-8a1e-0fbb792b1aa6",
      "skipped": false
    },
    {
      "title": "Should contain a year that is ten years from now",
      "fullTitle": "UTILS: YearCalc Should contain a year that is ten years from now",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getStartYearVals(2019).find(function (year) {\n    return year.value === 2029;\n})).to.be.ok;\nexpect(_YearCalc2.default.getStartYearVals(2012).find(function (year) {\n    return year.value === 2002;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2028;\n})).to.be.ok;",
      "err": {},
      "isRoot": false,
      "uuid": "9b202c8c-ee03-494d-8b35-342c62636fd4",
      "parentUUID": "e33a6cad-c2b7-455c-8a1e-0fbb792b1aa6",
      "skipped": false
    },
    {
      "title": "Should not contain any past year when computing end years",
      "fullTitle": "UTILS: YearCalc Should not contain any past year when computing end years",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2017;\n})).to.be.not.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2008;\n})).to.be.not.ok;",
      "err": {},
      "isRoot": false,
      "uuid": "32ab3f51-8874-4b28-adfd-6b41c759d614",
      "parentUUID": "e33a6cad-c2b7-455c-8a1e-0fbb792b1aa6",
      "skipped": false
    },
    {
      "title": "Should have starting years go in decreasing order from one year ahead to the minimum",
      "fullTitle": "UTILS: YearCalc Should have starting years go in decreasing order from one year ahead to the minimum",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getStartYearVals(2019).slice(0, 12)).to.deep.equal([{\n    text: \"2020\",\n    value: 2020\n}, {\n    text: \"2019\",\n    value: 2019\n}, {\n    text: \"2018\",\n    value: 2018\n}, {\n    text: \"2017\",\n    value: 2017\n}, {\n    text: \"2016\",\n    value: 2016\n}, {\n    text: \"2015\",\n    value: 2015\n}, {\n    text: \"2014\",\n    value: 2014\n}, {\n    text: \"2013\",\n    value: 2013\n}, {\n    text: \"2012\",\n    value: 2012\n}, {\n    text: \"2011\",\n    value: 2011\n}, {\n    text: \"2010\",\n    value: 2010\n}, {\n    text: \"2009\",\n    value: 2009\n}]);",
      "err": {},
      "isRoot": false,
      "uuid": "982bbb8e-a329-4799-b679-55daa73c6d69",
      "parentUUID": "e33a6cad-c2b7-455c-8a1e-0fbb792b1aa6",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "Should create an action to increment credit points counter",
      "fullTitle": "AC: incrementCreditPoints Should create an action to increment credit points counter",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 5\n};\n(0, _expect2.default)(actions.incrementCreditPoints(5)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "f8a552de-9102-4094-886a-878046938cc5",
      "parentUUID": "abcb9aeb-eb3f-41cd-ba9f-43617ba3d4b8",
      "skipped": false
    },
    {
      "title": "Should create an action to decrement credit points counter",
      "fullTitle": "AC: decrementCreditPoints Should create an action to decrement credit points counter",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 5\n};\n(0, _expect2.default)(actions.decrementCreditPoints(5)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "20bee221-fbba-49ad-b629-6d096f9b930d",
      "parentUUID": "c575937f-b5cb-4875-9352-1e9a880ace09",
      "skipped": false
    },
    {
      "title": "Should create an action to increment cost counter",
      "fullTitle": "AC: incrementCost Should create an action to increment cost counter",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"INCREMENT_COST\",\n    value: 5\n};\n(0, _expect2.default)(actions.incrementCost(5)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "914bbabd-d65a-432f-85a3-de09b925e842",
      "parentUUID": "82a51d8d-9fac-4398-9787-9e0be13f0377",
      "skipped": false
    },
    {
      "title": "Should create an action to decrement cost counter",
      "fullTitle": "AC: decrementCosts Should create an action to decrement cost counter",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"DECREMENT_COST\",\n    value: 5\n};\n(0, _expect2.default)(actions.decrementCost(5)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "24cfe858-31f6-4f26-bf35-821efcbf3744",
      "parentUUID": "29e40737-9824-48fd-abac-f627f685533d",
      "skipped": false
    },
    {
      "title": "Should create an action to insert a teaching period",
      "fullTitle": "AC: insertTeachingPeriod Should create an action to insert a teaching period",
      "timedOut": false,
      "duration": 14,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{\n    type: \"INSERT_TEACHING_PERIOD\",\n    index: 1,\n    year: 2016,\n    code: \"tpCode\"\n}, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n}];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.insertTeachingPeriod(1, 2016, \"tpCode\"));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "ee141465-7cd1-439e-89fb-11af62e9226b",
      "parentUUID": "4de3b2d6-b756-4f0a-9052-88434be7cbc8",
      "skipped": false
    },
    {
      "title": "Should create an action to remove a teaching period",
      "fullTitle": "AC: removeTeachingPeriod Should create an action to remove a teaching period",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1,\n    units: [\"unit1\", \"unit2\", \"unit3\", null]\n}, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n}];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.removeTeachingPeriod(1, [\"unit1\", \"unit2\", \"unit3\", null]));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "60029cc9-2c0d-42c6-b305-2a61280ff284",
      "parentUUID": "412aaa3f-6fe6-4e8b-9716-f5fda2403f3f",
      "skipped": false
    },
    {
      "title": "Should create an action to increase the study load",
      "fullTitle": "AC: increaseStudyLoad Should create an action to increase the study load",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\n(0, _expect2.default)(actions.increaseStudyLoad()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "00c43dd2-fa72-4ed8-a01e-cd5e30dfd00a",
      "parentUUID": "efe666b4-4e60-4d30-b909-6fda0db65fb1",
      "skipped": false
    },
    {
      "title": "Should create an action to increase the study load with units affected",
      "fullTitle": "AC: decreaseStudyLoad Should create an action to increase the study load with units affected",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockTeachingPeriods = [{ year: 2018, code: \"S1-01\", units: [null, null, null, null, \"unit1\"] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }, { year: 2019, code: \"S1-01\", units: [null, null, null, null, \"unit2\"] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null, null] }];\nvar expectedAction = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [\"unit1\", \"unit2\"]\n};\n(0, _expect2.default)(actions.decreaseStudyLoad(mockTeachingPeriods, 4)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "711285e5-2f6e-462e-829a-26d1a7ee8395",
      "parentUUID": "a0b21c75-2ac0-4ec9-8c38-5ba43e0554d2",
      "skipped": false
    },
    {
      "title": "Should create an action to increase the study load with no units affected",
      "fullTitle": "AC: decreaseStudyLoad Should create an action to increase the study load with no units affected",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockTeachingPeriods = [{ year: 2018, code: \"S1-01\", units: [null, null, null, \"unit1\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }, { year: 2019, code: \"S1-01\", units: [null, null, null, \"unit2\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null, null] }];\nvar expectedAction = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: []\n};\n(0, _expect2.default)(actions.decreaseStudyLoad(mockTeachingPeriods, 4)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "ab4de6e2-464b-4006-b996-6a1492524385",
      "parentUUID": "a0b21c75-2ac0-4ec9-8c38-5ba43e0554d2",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for the addition of a unit that is not a custom unit being dragged",
      "fullTitle": "AC: addUnit Should correctly create the actions required for the addition of a unit that is not a custom unit being dragged",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockUnit = {\n                customUnitDragging: false,\n                cost: 200,\n                creditPoints: 6,\n                unitCode: \"TEST1001\"\n            };\n            var expectedActions = [{ type: \"ADD_UNIT\", tpIndex: 1, unitIndex: 1, unit: mockUnit, cost: 200, creditPoints: 6 }, { type: \"CLEAR_HIGHLIGHTING_INVALID_UNIT_SLOTS\" }, { type: \"VALIDATE_COURSE\" }, { type: \"MODIFIED_COURSE_PLAN\" }];\n            var store = mockStore({});\n            store.dispatch(actions.addUnit(1, 1, mockUnit));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "ce651162-9ffe-4d79-82bb-161275295095",
      "parentUUID": "e039b782-8b1b-428b-9ce7-6877484faef1",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for the addition of a unit that is a custom unit being dragged",
      "fullTitle": "AC: addUnit Should correctly create the actions required for the addition of a unit that is a custom unit being dragged",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockUnit = {\n                customUnitDragging: true,\n                cost: 200,\n                creditPoints: 6,\n                unitCode: \"TEST1001\"\n            };\n            var expectedActions = [{\n                type: \"SHOW_CUSTOM_UNIT_MODAL\",\n                unitCode: \"TEST1001\",\n                tpIndex: 1,\n                unitIndex: 1\n            }];\n            var store = mockStore({});\n            store.dispatch(actions.addUnit(1, 1, mockUnit));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "59e4f6c1-719d-4e56-b59e-5ab4a4608c6e",
      "parentUUID": "e039b782-8b1b-428b-9ce7-6877484faef1",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for removal of a unit",
      "fullTitle": "AC: removeUnit Should correctly create the actions required for removal of a unit",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{ type: \"REMOVE_UNIT\", tpIndex: 1, unitIndex: 1, cost: 200, creditPoints: 6 }, { type: \"VALIDATE_COURSE\" }, { type: \"MODIFIED_COURSE_PLAN\" }];\n            var store = mockStore({});\n            store.dispatch(actions.removeUnit(1, 1, 6, 200));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "7112953c-e1ab-4332-ae86-badfdc6c99af",
      "parentUUID": "3ad6c02f-efa9-437a-844c-a98babf357c1",
      "skipped": false
    },
    {
      "title": "Should create the actions for clearing the course",
      "fullTitle": "AC: clearCourse Should create the actions for clearing the course",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{ type: \"CLEAR_COURSE\" }, { type: \"GET_NEXT_SEMESTER_STRING\" }, { type: \"VALIDATE_COURSE\" }];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.clearCourse());\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "a39bfcb0-c9a9-403d-9904-69854d2f5f03",
      "parentUUID": "f8ad7c75-8973-428b-b059-371202b7ddfe",
      "skipped": false
    },
    {
      "title": "Should create the action for generating the course",
      "fullTitle": "AC: generateCourse Should create the action for generating the course",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2016,\n    endYear: 2019\n};\n(0, _expect2.default)(actions.generateCourse(2016, 2019)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "10eb7649-240e-41e0-9c25-278bf53b6829",
      "parentUUID": "dad424f6-5b67-4b30-912a-5ca2f15ac926",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for submission of a year form",
      "fullTitle": "AC: submitYearForm Should correctly create the actions required for submission of a year form",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{ type: \"SUBMIT_YEAR_FORM\", startYear: 2016, endYear: 2019 }, { type: \"GENERATE_COURSE\", startYear: 2016, endYear: 2019 }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\n            var store = mockStore({});\n            store.dispatch(actions.submitYearForm(2016, 2019));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "ce625b24-fd9b-4604-b8c7-01fdf931f336",
      "parentUUID": "9258397c-6953-41b6-8231-5c6dd02dffd2",
      "skipped": false
    },
    {
      "title": "Should correctly create actions required to change the start year",
      "fullTitle": "AC: changeStartYear Should correctly create actions required to change the start year",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{ type: \"CHANGE_START_YEAR\", year: 2020 }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\nvar store = mockStore({});\nstore.dispatch(actions.changeStartYear(2020));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "dfb93e35-a227-468a-948a-b6a9b0f9f7ae",
      "parentUUID": "9c2c5b9b-9b59-47c2-aee0-40a14d6c620a",
      "skipped": false
    },
    {
      "title": "Should create the action for generating the course",
      "fullTitle": "AC: getNextSemesterString Should create the action for generating the course",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n};\n(0, _expect2.default)(actions.getNextSemesterString()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "2be5262d-1d4c-4693-af4a-9317dd4f33e9",
      "parentUUID": "028161a9-901d-4664-b2ba-aa254a1191d5",
      "skipped": false
    },
    {
      "title": "Should create the action for getting affected units in an overload column",
      "fullTitle": "AC: getAffectedUnitsInColumn Should create the action for getting affected units in an overload column",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"GET_AFFECTED_UNITS_IN_OVERLOAD_COLUMN\",\n    index: 4\n};\n(0, _expect2.default)(actions.getAffectedUnitsInColumn(4)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "bc6cbd78-5d87-4350-b0a5-b45fcb8a864c",
      "parentUUID": "5d3e704d-8cd0-427f-a5f6-ab505e42d647",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for deletion of a teaching period with units affected",
      "fullTitle": "AC: attemptToDeleteTeachingPeriod Should correctly create the actions required for deletion of a teaching period with units affected",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockUnits = [{ unitCode: \"TEST101\", unitName: \"unit1\" }, null, { unitCode: \"TEST102\", unitName: \"unit2\" }, null, null];\nvar expectedActions = [{ type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\" }, { type: \"UPDATE_AFFECTED_UNITS\", affectedUnits: [\"TEST101 - unit1\", \"TEST102 - unit2\"] }, { type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\", index: 1 }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDeleteTeachingPeriod(1, mockUnits));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "b2a7cff3-317c-42b3-8493-0b78ff2799e3",
      "parentUUID": "b442ba5f-4958-491f-a3f2-b3b8d0f77b57",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for deletion of a teaching period with no units affected",
      "fullTitle": "AC: attemptToDeleteTeachingPeriod Should correctly create the actions required for deletion of a teaching period with no units affected",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockUnits = [null, null, null, null, null];\nvar expectedActions = [{ type: \"REMOVE_TEACHING_PERIOD\", index: 1, units: [null, null, null, null, null] }, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, { type: \"GET_NEXT_SEMESTER_STRING\" }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDeleteTeachingPeriod(1, mockUnits));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "3ebd03ac-bc91-4e35-b575-29f96db108c0",
      "parentUUID": "b442ba5f-4958-491f-a3f2-b3b8d0f77b57",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for decrease of a study load with units affected",
      "fullTitle": "AC: attemptToDecreaseStudyLoad Should correctly create the actions required for decrease of a study load with units affected",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockTeachingPeriods = [{ units: [null, null, { unitCode: \"TEST10A\", unitName: \"unitA\" }, null, { unitCode: \"TEST101\", unitName: \"unit1\" }] }, { units: [null, null, { unitCode: \"TEST10B\", unitName: \"unitB\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10C\", unitName: \"unitC\" }, null, { unitCode: \"TEST102\", unitName: \"unit2\" }] }, { units: [null, null, { unitCode: \"TEST10D\", unitName: \"unitD\" }, null, null] }];\nvar expectedActions = [{ type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\" }, { type: \"UPDATE_AFFECTED_UNITS\", affectedUnits: [\"TEST101 - unit1\", \"TEST102 - unit2\"] }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDecreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "692dc776-2348-422c-8528-6c72466baed2",
      "parentUUID": "a593780b-e5cd-4b4e-aef8-d9f10bfbb21d",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for decrease of a study load with no units affected",
      "fullTitle": "AC: attemptToDecreaseStudyLoad Should correctly create the actions required for decrease of a study load with no units affected",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockTeachingPeriods = [{ units: [null, null, { unitCode: \"TEST10A\", unitName: \"unitA\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10B\", unitName: \"unitB\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10C\", unitName: \"unitC\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10D\", unitName: \"unitD\" }, null, null] }];\nvar expectedActions = [{ type: \"DECREASE_STUDY_LOAD\", units: [] }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDecreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "130aabb8-a718-44ab-9629-bfb2835145a8",
      "parentUUID": "a593780b-e5cd-4b4e-aef8-d9f10bfbb21d",
      "skipped": false
    },
    {
      "title": "Should create the action for getting affected units in an teaching period row",
      "fullTitle": "AC: getAffectedUnitsInRow Should create the action for getting affected units in an teaching period row",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"GET_AFFECTED_UNITS_IN_TEACHING_PERIOD_ROW\",\n    index: 4\n};\n(0, _expect2.default)(actions.getAffectedUnitsInRow(4)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "345b29fd-6081-47f9-b1ee-734637681dbf",
      "parentUUID": "a74d20c0-6212-4cee-a163-210e00153450",
      "skipped": false
    },
    {
      "title": "Should create the action for validating the course",
      "fullTitle": "AC: validateCourse Should create the action for validating the course",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"VALIDATE_COURSE\"\n};\n(0, _expect2.default)(actions.validateCourse()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "391702a8-34de-4452-9d0f-b6d009aaf26f",
      "parentUUID": "36671556-a640-454d-a8f8-392373ca6f90",
      "skipped": false
    },
    {
      "title": "Should create the action for highlighting the invalid unit slots",
      "fullTitle": "AC: highlightInvalidUnitSlots Should create the action for highlighting the invalid unit slots",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: \"UnitTest\",\n    ignoreCoordinate: false\n};\n(0, _expect2.default)(actions.highlightInvalidUnitSlots(\"UnitTest\", false)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "1744a546-7cf4-4194-99c0-806ad127cf2e",
      "parentUUID": "2bd02fed-72f5-4762-9a4d-3b97e7592ab6",
      "skipped": false
    },
    {
      "title": "Should create the action for clearing the highlighting for invalid unit slots",
      "fullTitle": "AC: clearHighlightingInvalidUnitSlots Should create the action for clearing the highlighting for invalid unit slots",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"CLEAR_HIGHLIGHTING_INVALID_UNIT_SLOTS\"\n};\n(0, _expect2.default)(actions.clearHighlightingInvalidUnitSlots()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "61724cf8-86e7-4949-bfd6-36df93953115",
      "parentUUID": "7aae04d7-4988-4455-9587-d828185c852c",
      "skipped": false
    },
    {
      "title": "Should create an action to show the insert teaching period UI",
      "fullTitle": "AC: showInsertTeachingPeriodUI Should create an action to show the insert teaching period UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"testTPCode\"\n};\n(0, _expect2.default)(actions.showInsertTeachingPeriodUI(\"testTPCode\")).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "1d72f3f0-5f73-4027-862c-5e0dba377c60",
      "parentUUID": "9a3b6be3-d44f-448a-8c33-80df8239dde5",
      "skipped": false
    },
    {
      "title": "Should create an action to hide the insert teaching period UI",
      "fullTitle": "AC: hideInsertTeachingPeriodUI Should create an action to hide the insert teaching period UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\n(0, _expect2.default)(actions.hideInsertTeachingPeriodUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "3df30752-9ffb-4324-86d1-badb084d5f60",
      "parentUUID": "cc6e3ad5-606e-4850-a8b1-2e86a1adbcad",
      "skipped": false
    },
    {
      "title": "Should create an action to show the add unit UI",
      "fullTitle": "AC: showAddingUnitUI Should create an action to show the add unit UI",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_ADD_UNIT_UI\"\n};\n(0, _expect2.default)(actions.showAddingUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "5857ce7a-fff1-408a-9276-9222fcb83942",
      "parentUUID": "f202224e-2559-4842-8f29-a9a975f16664",
      "skipped": false
    },
    {
      "title": "Should create an action to hide the add unit UI",
      "fullTitle": "AC: hideAddingUnitUI Should create an action to hide the add unit UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_ADD_UNIT_UI\"\n};\n(0, _expect2.default)(actions.hideAddingUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "d2c8bde4-9cf8-4461-b493-9cbf3d98863d",
      "parentUUID": "58db3901-eb8f-4fce-8486-0525e9420f96",
      "skipped": false
    },
    {
      "title": "Should create an action to show the move unit UI",
      "fullTitle": "AC: showMoveUnitUI Should create an action to show the move unit UI",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_MOVE_UNIT_UI\"\n};\n(0, _expect2.default)(actions.showMoveUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "b729e7d1-fbae-47c9-bb2c-50d790b93b83",
      "parentUUID": "4cc12b40-d1a5-4455-9123-53a4afb0bedf",
      "skipped": false
    },
    {
      "title": "Should create an action to hide move unit UI",
      "fullTitle": "AC: hideMoveUnitUI Should create an action to hide move unit UI",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_MOVE_UNIT_UI\"\n};\n(0, _expect2.default)(actions.hideMoveUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "4cbcd0bc-a8c7-4f44-8cde-d44670854630",
      "parentUUID": "60165111-914d-4413-a602-d8cf32bf2089",
      "skipped": false
    },
    {
      "title": "Should create an action to show confirm delete teaching period UI",
      "fullTitle": "AC: showConfirmDeleteTeachingPeriodUI Should create an action to show confirm delete teaching period UI",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\n(0, _expect2.default)(actions.showConfirmDeleteTeachingPeriodUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "e766c394-bb0d-4c09-9236-81f1cf944db0",
      "parentUUID": "d1caebef-8879-468b-8c12-0c7fe5606a66",
      "skipped": false
    },
    {
      "title": "Should create an action to hide confirm delete teaching period UI",
      "fullTitle": "AC: hideConfirmDeleteTeachingPeriodUI Should create an action to hide confirm delete teaching period UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\n(0, _expect2.default)(actions.hideConfirmDeleteTeachingPeriodUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "1d41829f-504e-45e2-ab29-8776c4d33bcd",
      "parentUUID": "a519ec5e-251e-4c2a-8746-eadf6a7a5508",
      "skipped": false
    },
    {
      "title": "Should create an action to show confirm decrease study load UI",
      "fullTitle": "AC: showConfirmDecreaseStudyLoadUI Should create an action to show confirm decrease study load UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\n(0, _expect2.default)(actions.showConfirmDecreaseStudyLoadUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "3e302e1f-ccd9-4d54-8f98-c088592f28c4",
      "parentUUID": "9f1bbba0-d5ff-43f6-b9e2-9159185d589a",
      "skipped": false
    },
    {
      "title": "Should create an action to hide confirm decrease study load UI",
      "fullTitle": "AC: hideConfirmDecreaseStudyLoadUI Should create an action to hide confirm decrease study load UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\n(0, _expect2.default)(actions.hideConfirmDecreaseStudyLoadUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "9b8045c9-3ee6-4d95-b071-14052240662c",
      "parentUUID": "e671a9cc-9348-49be-a026-d4170eef1fec",
      "skipped": false
    },
    {
      "title": "Should create an action to show custum unit UI",
      "fullTitle": "AC: showCustomUnitUI Should create an action to show custum unit UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"TEST1001\"\n};\n(0, _expect2.default)(actions.showCustomUnitUI(\"TEST1001\")).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "82064b35-0041-4b75-9d76-8708bd2f3391",
      "parentUUID": "79cfcddf-b232-484f-adea-35734ddb4b2e",
      "skipped": false
    },
    {
      "title": "Should create an action to hide custom unit UI",
      "fullTitle": "AC: hideCustomUnitUI Should create an action to hide custom unit UI",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\n(0, _expect2.default)(actions.hideCustomUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "82d1d33a-cbda-4cbb-844f-0db1ea798363",
      "parentUUID": "be15a8cb-e9bb-4d76-9f43-ef2b6d77b5ab",
      "skipped": false
    },
    {
      "title": "Should create an action to show sidebar",
      "fullTitle": "AC: showSidebar Should create an action to show sidebar",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_SIDEBAR\"\n};\n(0, _expect2.default)(actions.showSidebar()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "2d584868-5e48-4aba-93f5-b6e3dbf80df6",
      "parentUUID": "50ab5558-3ab5-410c-b3b6-ba806447d367",
      "skipped": false
    },
    {
      "title": "Should create an action to hide sidebar",
      "fullTitle": "AC: hideSidebar Should create an action to hide sidebar",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_SIDEBAR\"\n};\n(0, _expect2.default)(actions.hideSidebar()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "5abe6fe7-432e-4d26-98dc-6c9438c25755",
      "parentUUID": "973284cf-8330-4404-ac71-1db6847aa7c5",
      "skipped": false
    },
    {
      "title": "Should create an action to set the course to read only",
      "fullTitle": "AC: setCourseReadOnly Should create an action to set the course to read only",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\n(0, _expect2.default)(actions.setCourseReadOnly()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "df56fb4f-3cf9-4449-95ea-eb47d6fc99fa",
      "parentUUID": "30daee2a-804f-46df-9433-421df9043bd2",
      "skipped": false
    },
    {
      "title": "Should create an action to set the course to read and write",
      "fullTitle": "AC: setCourseReadAndWrite Should create an action to set the course to read and write",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\n(0, _expect2.default)(actions.setCourseReadAndWrite()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "687986b7-ef2a-4762-874e-7e468b6ca696",
      "parentUUID": "80788b71-f472-4952-ada0-04e2e49c809a",
      "skipped": false
    },
    {
      "title": "Should render a notification title and a message",
      "fullTitle": "COMPONENT: Notification Should render a notification title and a message",
      "timedOut": false,
      "duration": 95,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, {\n    title: \"This is a test\",\n    message: \"Some message goes over here\"\n}));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(\"This is a test\");\nexpect(wrapper.text().replace(\"This is a test\", \"\").trim()).to.equal(\"Some message goes over here\");",
      "err": {},
      "isRoot": false,
      "uuid": "b328dd67-f4a9-475a-8fa7-f01fa7122866",
      "parentUUID": "85c5723e-1b55-4064-8bb5-fed57fda2a9e",
      "skipped": false
    },
    {
      "title": "Should have a default level to be info if it is not specified",
      "fullTitle": "COMPONENT: Notification Should have a default level to be info if it is not specified",
      "timedOut": false,
      "duration": 32,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, null)).find(\".info.message\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "0f8a01ce-fe3b-47dc-ba82-822ee69c5e05",
      "parentUUID": "85c5723e-1b55-4064-8bb5-fed57fda2a9e",
      "skipped": false
    },
    {
      "title": "Should follow a specified level",
      "fullTitle": "COMPONENT: Notification Should follow a specified level",
      "timedOut": false,
      "duration": 57,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"info\" })).find(\".info.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"warning\" })).find(\".warning.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"error\" })).find(\".negative.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"success\" })).find(\".positive.message\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "7aa8f290-6a62-4e1f-9f7b-b5385b353341",
      "parentUUID": "85c5723e-1b55-4064-8bb5-fed57fda2a9e",
      "skipped": false
    },
    {
      "title": "should be called exactly once when main button has been clicked",
      "fullTitle": "#addSemester() should be called exactly once when main button has been clicked",
      "timedOut": false,
      "duration": 30,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var addSemester = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: identity,\n    addSemester: addSemester }));\nwrapper.find(\"Button\").forEach(function (button) {\n    button.simulate(\"click\");\n});\nexpect(addSemester).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "7160aa9e-4496-402b-8513-1d1d62784c19",
      "parentUUID": "0af37ec4-dce4-46d9-bd90-9f9bf23c72b3",
      "skipped": false
    },
    {
      "title": "should be called as many times as the number of insert teaching periods options upon click",
      "fullTitle": "#insert() should be called as many times as the number of insert teaching periods options upon click",
      "timedOut": false,
      "duration": 31,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var insert = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: insert,\n    addSemester: identity }));\nvar dropdownItems = wrapper.find(\".item\");\ndropdownItems.forEach(function (node) {\n    return node.simulate(\"click\");\n});\nexpect(insert).to.have.callCount(dropdownItems.length);",
      "err": {},
      "isRoot": false,
      "uuid": "a8473f41-8272-40fe-8fe5-d96de4def382",
      "parentUUID": "d78cfa94-a7ac-495e-9d9f-0e4b17c51f9e",
      "skipped": false
    },
    {
      "title": "should render two ratings",
      "fullTitle": "COMPONENT: SetuRating should render two ratings",
      "timedOut": false,
      "duration": 61,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, null)).find(\".rating\")).to.have.length(2);",
      "err": {},
      "isRoot": false,
      "uuid": "063277b3-069b-4518-835c-d0b59843ff73",
      "parentUUID": "58b05adc-9d17-4757-a3ec-81365378954d",
      "skipped": false
    },
    {
      "title": "should render a book if learning ratings is >=2.5",
      "fullTitle": "COMPONENT: SetuRating should render a book if learning ratings is >=2.5",
      "timedOut": false,
      "duration": 98,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 4.13 })).find(\".book\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.50 })).find(\".book\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "47149133-e782-49d0-937b-c8e45b2d27c7",
      "parentUUID": "58b05adc-9d17-4757-a3ec-81365378954d",
      "skipped": false
    },
    {
      "title": "should render a remove circle if learning ratings is <2.5",
      "fullTitle": "COMPONENT: SetuRating should render a remove circle if learning ratings is <2.5",
      "timedOut": false,
      "duration": 87,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 1.51 })).find(\".remove.circle\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.49 })).find(\".remove.circle\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "b6b6b46d-c7b1-4959-8921-85ab6999454a",
      "parentUUID": "58b05adc-9d17-4757-a3ec-81365378954d",
      "skipped": false
    },
    {
      "title": "should render a thumbs up if enjoyment ratings is >=2.5",
      "fullTitle": "COMPONENT: SetuRating should render a thumbs up if enjoyment ratings is >=2.5",
      "timedOut": false,
      "duration": 66,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 4.13 })).find(\".thumbs.up\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.50 })).find(\".thumbs.up\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "e8c10f4d-59d4-47dd-9af9-4d37cab5d3d9",
      "parentUUID": "58b05adc-9d17-4757-a3ec-81365378954d",
      "skipped": false
    },
    {
      "title": "should render a thumbs down if enjoyment ratings is <2.5",
      "fullTitle": "COMPONENT: SetuRating should render a thumbs down if enjoyment ratings is <2.5",
      "timedOut": false,
      "duration": 65,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 1.51 })).find(\".thumbs.down\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.49 })).find(\".thumbs.down\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "be7ff447-cb49-417f-8bf4-c578c117bdf3",
      "parentUUID": "58b05adc-9d17-4757-a3ec-81365378954d",
      "skipped": false
    },
    {
      "title": "should only render a unit code and a unit name",
      "fullTitle": "#presentational should only render a unit code and a unit name",
      "timedOut": false,
      "duration": 38,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var unitCode = \"ABC1234\";\nvar unitName = \"Example unit\";\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: unitCode,\n    name: unitName }));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(unitCode);\nexpect(wrapper.find(\".message\").text().replace(unitCode, \"\").trim()).to.equal(unitName);",
      "err": {},
      "isRoot": false,
      "uuid": "9fd6fceb-67a4-48d4-894c-9218cd75e56f",
      "parentUUID": "3abacfe2-9cc2-447e-a8f0-81b80e91f8ce",
      "skipped": false
    },
    {
      "title": "should render a close button only when mouse is over the unit",
      "fullTitle": "#presentational should render a close button only when mouse is over the unit",
      "timedOut": false,
      "duration": 79,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    hovering: false }));\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");\nwrapper.setProps({\n    hovering: true\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"visible\");\nwrapper.setProps({\n    hovering: false\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");",
      "err": {},
      "isRoot": false,
      "uuid": "842b6719-7d38-427f-897d-f485525ea9db",
      "parentUUID": "3abacfe2-9cc2-447e-a8f0-81b80e91f8ce",
      "skipped": false
    },
    {
      "title": "Should call willAddUnit if unit is a newUnit and it has been clicked",
      "fullTitle": "#events Should call willAddUnit if unit is a newUnit and it has been clicked",
      "timedOut": false,
      "duration": 74,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    newUnit: true,\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    willAddUnit: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"click\");\nexpect(eventFunc).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "a29f31da-c6fe-4199-8cee-53411d80bec4",
      "parentUUID": "eeb2da63-a44a-45ba-ad49-4a073885ed58",
      "skipped": false
    },
    {
      "title": "Should call handleUnitMouseOver when mouse is over the unit",
      "fullTitle": "#events Should call handleUnitMouseOver when mouse is over the unit",
      "timedOut": false,
      "duration": 51,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseOver: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseOver\");\nexpect(eventFunc).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "46fb68aa-273d-4335-a54a-20a0571dfa5f",
      "parentUUID": "eeb2da63-a44a-45ba-ad49-4a073885ed58",
      "skipped": false
    },
    {
      "title": "Should call handleUnitMouseMove when mouse moves over the unit",
      "fullTitle": "#events Should call handleUnitMouseMove when mouse moves over the unit",
      "timedOut": false,
      "duration": 31,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseMove: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseMove\");\nexpect(eventFunc).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "2daf59c7-c246-45e1-a922-c95e46c103d7",
      "parentUUID": "eeb2da63-a44a-45ba-ad49-4a073885ed58",
      "skipped": false
    },
    {
      "title": "Should call handleUnitMouseOut when mouse is over the unit",
      "fullTitle": "#events Should call handleUnitMouseOut when mouse is over the unit",
      "timedOut": false,
      "duration": 25,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseOut: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseOut\");\nexpect(eventFunc).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "7ca0f9f8-6a09-44c9-afb8-6b6fadc4da53",
      "parentUUID": "eeb2da63-a44a-45ba-ad49-4a073885ed58",
      "skipped": false
    },
    {
      "title": "Should correctly call movingUnit when it is being dragged",
      "fullTitle": "#DnD Should correctly call movingUnit when it is being dragged",
      "timedOut": false,
      "duration": 12,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "testingBeginDrag = true;\ntestingEndDrag = false;\nbackend.simulateBeginDrag([sourceId]);\nexpect(movingUnitSpy).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "035ba8fc-493a-4cfa-a0a8-2fc8d163dd52",
      "parentUUID": "986f17c1-ac3b-438b-ad62-e2e359ce4b20",
      "skipped": false
    },
    {
      "title": "Should correctylc call cancelMovingUnit ",
      "fullTitle": "#DnD Should correctylc call cancelMovingUnit ",
      "timedOut": false,
      "duration": 20,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "testingBeginDrag = false;\ntestingEndDrag = true;\nbackend.simulateBeginDrag([sourceId]);\nbackend.simulateEndDrag(sourceId);\nexpect(cancelMovingUnitSpy).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "f0e26388-3e6b-4437-918e-7b3dfac43736",
      "parentUUID": "986f17c1-ac3b-438b-ad62-e2e359ce4b20",
      "skipped": false
    },
    {
      "title": "Should increment the credit point state by a given value",
      "fullTitle": "ACTION: INCREMENT_CREDIT_POINTS Should increment the credit point state by a given value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 2, creditPoints: 0 };\nvar action = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 2,\n    creditPoints: 1\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1c37c067-fb29-4ab1-9c00-68607bb12679",
      "parentUUID": "94dca748-9b9d-4377-99fd-8789d30baf1d",
      "skipped": false
    },
    {
      "title": "Should decrement the credit point state by a given value",
      "fullTitle": "ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state by a given value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4246d247-7d72-4706-9633-7be5db193aa5",
      "parentUUID": "9cd2c4ae-6239-4cca-8917-7894e04324a8",
      "skipped": false
    },
    {
      "title": "Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
      "fullTitle": "ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 0\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "84fd273f-4842-4ee3-b8fe-55ee99f119d4",
      "parentUUID": "9cd2c4ae-6239-4cca-8917-7894e04324a8",
      "skipped": false
    },
    {
      "title": "Should increment the cost state by a given value",
      "fullTitle": "ACTION: INCREMENT_COST Should increment the cost state by a given value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 20, creditPoints: 13 };\nvar action = {\n    type: \"INCREMENT_COST\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 21,\n    creditPoints: 13\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "78e2d3e1-6bbf-4b62-9255-52fd24bc9496",
      "parentUUID": "0f4a0a84-666a-4b2c-955e-14528ddf184f",
      "skipped": false
    },
    {
      "title": "Should decrement the cost state by a given value",
      "fullTitle": "ACTION: DECREMENT_COST Should decrement the cost state by a given value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e188be9c-340a-47b5-a2d3-809f6ac28b45",
      "parentUUID": "624ca6da-98ff-49a9-99dd-8e9900d98645",
      "skipped": false
    },
    {
      "title": "Should decrement the cost state to 0 if a value given is larger than the current credit point value",
      "fullTitle": "ACTION: DECREMENT_COST Should decrement the cost state to 0 if a value given is larger than the current credit point value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 0,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7e289d10-36f6-4ce5-9d79-93ce7718eefa",
      "parentUUID": "624ca6da-98ff-49a9-99dd-8e9900d98645",
      "skipped": false
    },
    {
      "title": "Should reset the cost and credit point counters to 0",
      "fullTitle": "ACTION: CLEAR_COURSE Should reset the cost and credit point counters to 0",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b14ada3f-6446-4543-9711-b03c713914a8",
      "parentUUID": "e3073ebc-aaac-4b61-9cd8-0c5c61cdc269",
      "skipped": false
    },
    {
      "title": "Should correctly go through and decrement the counters for each value ",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should correctly go through and decrement the counters for each value ",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { cost: 2, creditPoints: 20 }, { cost: 5, creditPoints: 10 }, null]\n};\nvar stateAfter = { cost: 43, creditPoints: 10 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1961357d-0c8f-42a5-98c1-31e9d2f907be",
      "parentUUID": "db51b15d-5bee-44ce-9c1f-3bd56fbb2c76",
      "skipped": false
    },
    {
      "title": "Should not decrement the counters below 0 ",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should not decrement the counters below 0 ",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { cost: 25, creditPoints: 20 }, { cost: 30, creditPoints: 30 }, { cost: 0, creditPoints: 10 }]\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5633450a-187d-4f6b-88db-221a4141378b",
      "parentUUID": "db51b15d-5bee-44ce-9c1f-3bd56fbb2c76",
      "skipped": false
    },
    {
      "title": "Should correctly decrement the counters based on the given units creditpoints and cost",
      "fullTitle": "ACTION: REMOVE_UNIT Should correctly decrement the counters based on the given units creditpoints and cost",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 20 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d00c8a6d-c821-4da0-90a6-4c00f8011d52",
      "parentUUID": "b0ea797e-be63-4a7f-9e82-345477c38da5",
      "skipped": false
    },
    {
      "title": "Should not decrement the counters below 0",
      "fullTitle": "ACTION: REMOVE_UNIT Should not decrement the counters below 0",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d4a4ff38-15e0-4d43-a587-5a48cce575a9",
      "parentUUID": "b0ea797e-be63-4a7f-9e82-345477c38da5",
      "skipped": false
    },
    {
      "title": "Should correctly increment the counters when a unit is added to the plan",
      "fullTitle": "ACTION: ADD_UNIT Should correctly increment the counters when a unit is added to the plan",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"ADD_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 30 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1a973c2b-23fc-421f-bec6-20874d4dd541",
      "parentUUID": "cdd986d2-1a9f-4031-a006-a1701481b5c8",
      "skipped": false
    },
    {
      "title": "Should not decrease counters if there are no units in the overload column",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units in the overload column",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: []\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "83f8aa34-06a2-4429-aedf-2a7dc17841be",
      "parentUUID": "6f78d6a4-4404-4afc-ae69-dd52744e5d70",
      "skipped": false
    },
    {
      "title": "Should not decrease counters if there are no units which have values in the overload column",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units which have values in the overload column",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [null, {}]\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "b0a26597-d68d-4043-811e-a42f8a9ba31c",
      "parentUUID": "6f78d6a4-4404-4afc-ae69-dd52744e5d70",
      "skipped": false
    },
    {
      "title": "Should decrease counters correctly for units in the overload column",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should decrease counters correctly for units in the overload column",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [{\n        CreditPoints: 6,\n        Cost: 1134\n    }, {\n        CreditPoints: 12,\n        Cost: 2256\n    }]\n};\nvar stateAfter = { cost: 36610, creditPoints: 126 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "47d0962c-2adb-4564-b7de-1504c1f2f8dc",
      "parentUUID": "6f78d6a4-4404-4afc-ae69-dd52744e5d70",
      "skipped": false
    },
    {
      "title": "Should not change state if it does not recognise an action",
      "fullTitle": "DEFAULT Should not change state if it does not recognise an action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "45a9c0e8-e156-40b5-bd44-d0e27e6652ba",
      "parentUUID": "73d9070e-296b-4e8a-b897-471bda453b4e",
      "skipped": false
    },
    {
      "title": "Should insert a teaching period with the given info correctly into middle of array",
      "fullTitle": "ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into middle of array",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2018,\n    code: \"S2-01\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "322b124b-c109-4fd2-b69b-fb2a622bcfea",
      "parentUUID": "1fed1b69-7788-41c8-8528-7e4ba1bc44ff",
      "skipped": false
    },
    {
      "title": "Should insert a teaching period with the given info correctly into start of array",
      "fullTitle": "ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into start of array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2016,\n    code: \"S2-01\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2016, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0e9adf4f-3923-4b0a-b233-62542ed12fa8",
      "parentUUID": "1fed1b69-7788-41c8-8528-7e4ba1bc44ff",
      "skipped": false
    },
    {
      "title": "Should remove a teaching period at the given index",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the given index",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c7c6c137-02e1-469c-bbc3-f47598ea8f3a",
      "parentUUID": "5f0f9e6f-aad9-4f9d-8840-71a568b0180e",
      "skipped": false
    },
    {
      "title": "Should remove a teaching period at the start of the array",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the start of the array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "fadb91da-6db3-4cf4-afb5-570d46d5007e",
      "parentUUID": "5f0f9e6f-aad9-4f9d-8840-71a568b0180e",
      "skipped": false
    },
    {
      "title": "Should add the given teaching period to the end of the array",
      "fullTitle": "ACTION: APPEND_TEACHING_PERIOD Should add the given teaching period to the end of the array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"APPEND_TEACHING_PERIOD\",\n    year: 2020,\n    code: \"S2-01\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2020, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "3516eb8a-dba4-497a-a92d-af601e655362",
      "parentUUID": "ebbcdf85-5a52-4425-b1fc-4ed4ca84cd23",
      "skipped": false
    },
    {
      "title": "Should increase the study load if the study load is less than 4",
      "fullTitle": "ACTION: INCREASE_STUDY_LOAD Should increase the study load if the study load is less than 4",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "05d176ae-0ce9-4e1a-bf2b-87722ee6bf57",
      "parentUUID": "9987da2d-5830-47d7-8b28-bd144414964a",
      "skipped": false
    },
    {
      "title": "Should not increase the study load if the study load is 6 or greater",
      "fullTitle": "ACTION: INCREASE_STUDY_LOAD Should not increase the study load if the study load is 6 or greater",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null, null] }],\n    numberOfUnits: 6\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null, null] }],\n    numberOfUnits: 6\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c39029d1-2408-4903-9ce4-09fed04824e9",
      "parentUUID": "9987da2d-5830-47d7-8b28-bd144414964a",
      "skipped": false
    },
    {
      "title": "Should decrease the study load if the study load is greater than 4",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should decrease the study load if the study load is greater than 4",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "3217749b-f792-4b64-84d7-4a68e4bb1378",
      "parentUUID": "55848f71-ade4-4d1c-bade-c2410df29ffe",
      "skipped": false
    },
    {
      "title": "Should not decrease the study load if the study load is 4 or less",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should not decrease the study load if the study load is 4 or less",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4cf4a590-30d8-4c98-9836-320e1608b95c",
      "parentUUID": "55848f71-ade4-4d1c-bade-c2410df29ffe",
      "skipped": false
    },
    {
      "title": "Should remove all teaching periods and set the amount of units to 4",
      "fullTitle": "ACTION: CLEAR_COURSE Should remove all teaching periods and set the amount of units to 4",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = {\n    courseInfo: {\n        courseName: \"\",\n        faculty: \"\",\n        creditPoints: 0,\n        courseDescription: \"\",\n        durationStr: \"\",\n        modeAndLocation: \"\",\n        awards: \"\",\n        abrTitle: \"\"\n    },\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ddf0cb6e-f547-4493-b26c-343e73826197",
      "parentUUID": "848c620c-1119-4cb4-97a0-68939a0d824d",
      "skipped": false
    },
    {
      "title": "Should add a unit correctly to the start of an array",
      "fullTitle": "ACTION: ADD_UNIT Should add a unit correctly to the start of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", totalCreditpoints: 6, units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }, null, null, null] }, { year: 2018, code: \"S2-01\", totalCreditpoints: 0, units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", totalCreditpoints: 0, units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c22a4359-868d-47ca-940f-beabca79a11e",
      "parentUUID": "bb7af9c5-2897-4c68-a035-ba729c97b296",
      "skipped": false
    },
    {
      "title": "Should add a unit correctly to the middle of an array",
      "fullTitle": "ACTION: ADD_UNIT Should add a unit correctly to the middle of an array",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ff1306d9-24e1-4cc2-9d07-1ac8a5f7ba1c",
      "parentUUID": "bb7af9c5-2897-4c68-a035-ba729c97b296",
      "skipped": false
    },
    {
      "title": "Should add a unit correctly to the end of an array",
      "fullTitle": "ACTION: ADD_UNIT Should add a unit correctly to the end of an array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d779be0d-b0af-43da-bca4-f80396843a96",
      "parentUUID": "bb7af9c5-2897-4c68-a035-ba729c97b296",
      "skipped": false
    },
    {
      "title": "Should remove a unit correctly frpm the start of an array",
      "fullTitle": "ACTION: REMOVE_UNIT Should remove a unit correctly frpm the start of an array",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0,\n    creditPoints: 6\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "76a14573-c483-4ef5-bb81-6977616d52ff",
      "parentUUID": "7f1db6f6-73d0-4797-a319-ec12c48a78af",
      "skipped": false
    },
    {
      "title": "Should remove a unit correctly from the middle of an array",
      "fullTitle": "ACTION: REMOVE_UNIT Should remove a unit correctly from the middle of an array",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1,\n    creditPoints: 6\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "6466181d-5d08-4011-b914-068175005332",
      "parentUUID": "7f1db6f6-73d0-4797-a319-ec12c48a78af",
      "skipped": false
    },
    {
      "title": "Should remove a unit correctly from the end of an array",
      "fullTitle": "ACTION: REMOVE_UNIT Should remove a unit correctly from the end of an array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3,\n    creditPoints: 6\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "8f79ee1b-f062-4ef6-b713-3a52b2b10547",
      "parentUUID": "7f1db6f6-73d0-4797-a319-ec12c48a78af",
      "skipped": false
    },
    {
      "title": "Should generate a course structure with valid start and end years",
      "fullTitle": "ACTION: GENERATE_COURSE Should generate a course structure with valid start and end years",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2014,\n    endYear: 2016\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "279b3edb-24f9-4847-8021-1316cb1995ec",
      "parentUUID": "929e6625-0ff7-463e-bcce-5e5242d07aa0",
      "skipped": false
    },
    {
      "title": "Should return an empty course structure with invalid start and end years.",
      "fullTitle": "ACTION: GENERATE_COURSE Should return an empty course structure with invalid start and end years.",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2017,\n    endYear: 2013\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7ffc00d4-a1bd-4fa4-a262-3ee6492e3b16",
      "parentUUID": "929e6625-0ff7-463e-bcce-5e5242d07aa0",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course info is loading",
      "fullTitle": "ACTION: FETCH_COURSE_INFO_PENDING Should correctly show that the course info is loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a50ff060-ee1d-41a9-b5e4-883a6af0aa51",
      "parentUUID": "1e6e5764-228a-44de-88bf-fa8718354d7b",
      "skipped": false
    },
    {
      "title": "Should correctly return the payload and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    focusedCourse: null,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_FULFILLED\",\n    payload: { data: {\n            \"propertyMap\": {\n                courseCode: \"Test Code\",\n                courseName: \"Test Course\",\n                mangFac: \"Test Faculty\",\n                creditPoints: 100,\n                courseDescrip: {\n                    \"value\": \"Test Description\"\n                },\n                courseDuration: \"Test Duration\",\n                modeLoc: {\n                    \"value\": \"Test mode and location\"\n                },\n                courseAward: \"Test awards\",\n                abrevTitle: \"Test abreviated title\"\n            }\n        } },\n    courseCode: \"COURSE101\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: {\n        courseCode: \"Test Code\",\n        courseName: \"Test Course\",\n        faculty: \"Test Faculty\",\n        creditPoints: 100,\n        courseDescription: \"Test Description\",\n        durationStr: \"Test Duration\",\n        modeAndLocation: \"Test mode and location\",\n        awards: \"Test awards\",\n        abrTitle: \"Test abreviated title\"\n    },\n    focusedCourse: \"COURSE101\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d5baf0ff-e36f-446c-ada2-3524883f8555",
      "parentUUID": "8cfe7efb-a27b-4695-a9ab-5a60c79d60c8",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course info fetch failed and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_INFO_REJECTED Should correctly show that the course info fetch failed and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: true,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9df7b1e2-27ad-40bd-a743-6efd9a83a713",
      "parentUUID": "cbb779c1-8161-42c8-9223-97c9484ad631",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course template is loading",
      "fullTitle": "ACTION: FETCH_COURSE_TEMPLATE_PENDING Should correctly show that the course template is loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "57528897-7f84-4626-a55d-5a052228beb4",
      "parentUUID": "8265a775-b3b5-4e3c-aae1-f82584881c45",
      "skipped": false
    },
    {
      "title": "Should correctly return the payload and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_TEMPLATE_FULFILLED Should correctly return the payload and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_FULFILLED\",\n    payload: {\n        data: {\n            propertyMap: \"Fake Course Template\"\n        }\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: \"Fake Course Template\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "de1682fa-c3ed-4e0a-8da4-b60f545eeb54",
      "parentUUID": "147e75e7-264f-4a1b-ac15-b18ad4a36d7a",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course template fetch failed and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_TEMPLATE_REJECTED Should correctly show that the course template fetch failed and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: true,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0a44f99b-7bcf-4f04-83e4-61183c4bbe25",
      "parentUUID": "c30fb2b6-b103-4215-84a6-6eec777f37b0",
      "skipped": false
    },
    {
      "title": "Should correctly show that the unit info is loading",
      "fullTitle": "ACTION: FETCH_UNIT_INFO_PENDING Should correctly show that the unit info is loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: {\n        preqs: \"\",\n        creditPoints: 0,\n        rules: [],\n        locationAndTime: \"\",\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"\",\n        eftsl: 0,\n        descriptions: \"\"\n    },\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: {\n        preqs: \"\",\n        creditPoints: 0,\n        rules: [],\n        locationAndTime: \"\",\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"\",\n        eftsl: 0,\n        descriptions: \"\"\n    },\n    focusedUnitCode: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "25f4e404-1d03-4d92-8f7b-6f37646a1a81",
      "parentUUID": "e1c444be-0c82-4400-a279-80b2281351df",
      "skipped": false
    },
    {
      "title": "Should correctly return the payload and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_UNIT_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_FULFILLED\",\n    payload: { data: \"Fake Unit Info\" },\n    unitCode: \"FAKE1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: \"Fake Unit Info\",\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b3d2bd1f-ea28-460d-9d3e-bd73cc8c1e73",
      "parentUUID": "c2e2edee-363d-477f-b7b1-fc03b4f700e7",
      "skipped": false
    },
    {
      "title": "Should correctly show that the unit info fetch failed and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_UNIT_INFO_REJECTED Should correctly show that the unit info fetch failed and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_REJECTED\",\n    payload: {\n        response: {\n            status: 404\n        }\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: {\n        response: {\n            status: 404\n        }\n    },\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f1fa6284-183a-417b-9e23-bf8823c9dcf2",
      "parentUUID": "17da366d-ae3b-4d38-aa99-d81b234110ca",
      "skipped": false
    },
    {
      "title": "Should accurately set the start year and the focused course on submission",
      "fullTitle": "ACTION: SUBMIT_COURSE_FORM Should accurately set the start year and the focused course on submission",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_COURSE_FORM\",\n    startYear: 2020,\n    courseCode: \"TEST1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: \"TEST1001\",\n    startYear: 2020,\n    endYear: 2020\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "cc46c6f0-ab4e-4fa6-93e0-6369ca768405",
      "parentUUID": "d4f51604-a6b9-469f-aefe-a2f84ec13001",
      "skipped": false
    },
    {
      "title": "Should accurately set the start year and end year on submission",
      "fullTitle": "ACTION: SUBMIT_YEAR_FORM Should accurately set the start year and end year on submission",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_YEAR_FORM\",\n    startYear: 2020,\n    endYear: 2025\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2020,\n    endYear: 2025\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "47dd3f14-22ce-4693-b861-5a704382e6a7",
      "parentUUID": "56b35839-500e-4ad1-bbb1-bc63f29b38da",
      "skipped": false
    },
    {
      "title": "Should correctly handle  of teaching periods data",
      "fullTitle": "ACTION: FETCH_TEACHING_PERIODS_PENDING Should correctly handle  of teaching periods data",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c3e42447-acd5-46ed-80b4-859b6f27a4b6",
      "parentUUID": "7ef78267-e755-409d-ba55-3f8ae3e33375",
      "skipped": false
    },
    {
      "title": "Should correctly handle  of teaching periods data",
      "fullTitle": "ACTION: FETCH_TEACHING_PERIODS_FULFILLED Should correctly handle  of teaching periods data",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_FULFILLED\",\n    payload: \"Teaching period strings\"\n};\nvar stateAfter = {\n    teachingPeriodData: \"Teaching period strings\",\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "895b784a-104f-4a54-a7d7-d77e04896b38",
      "parentUUID": "47e88131-71e7-4730-8cf1-bc242386792f",
      "skipped": false
    },
    {
      "title": "Should correctly handle  of teaching periods data",
      "fullTitle": "ACTION: FETCH_TEACHING_PERIODS_REJECTED Should correctly handle  of teaching periods data",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9c886681-68dc-4f06-b317-78f65206752c",
      "parentUUID": "851681b3-aa53-47c3-8745-b16dbbce13ab",
      "skipped": false
    },
    {
      "title": "Should set the teaching period code to insert value correctly",
      "fullTitle": "ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should set the teaching period code to insert value correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodCodeToInsert: null,\n    testParam1: 1,\n    testParam2: \"test\"\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"S1-02\"\n};\nvar stateAfter = {\n    teachingPeriodCodeToInsert: \"S1-02\",\n    testParam1: 1,\n    testParam2: \"test\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "62e65b32-34a8-4cc6-8113-5e80956bbd4e",
      "parentUUID": "5cb46e29-fd46-40ae-b408-02e36b19a8fc",
      "skipped": false
    },
    {
      "title": "Should handle the initiation of a course snapshot upload correctly",
      "fullTitle": "ACTION: UPLOAD_COURSE_SNAPSHOT_PENDING Should handle the initiation of a course snapshot upload correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: true\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "741568c1-af9f-4f86-93be-8c74839f4ced",
      "parentUUID": "467e5776-6b66-41e4-a0b3-e3115df1f70f",
      "skipped": false
    },
    {
      "title": "Should handle the successful upload of a course snapshot correctly",
      "fullTitle": "ACTION: UPLOAD_COURSE_SNAPSHOT_FULFILLED Should handle the successful upload of a course snapshot correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"upload string\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: \"upload string\",\n    courseSnapshotUploadSucessful: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "306b6924-8e5c-4fbb-96dd-619503d85e1d",
      "parentUUID": "e7117bb5-51ea-4f46-9941-c3ff3a77c701",
      "skipped": false
    },
    {
      "title": "Should do handle the rejected upload of a course snapshot correctly",
      "fullTitle": "ACTION: UPLOAD_COURSE_SNAPSHOT_REJECTED Should do handle the rejected upload of a course snapshot correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "20be81b5-6473-4845-bfc5-52290dcdf5d7",
      "parentUUID": "715260b0-3ae0-47b0-a5bb-d1dca58b262f",
      "skipped": false
    },
    {
      "title": "Should begin fetching a course snapshot correctly",
      "fullTitle": "ACTION: FETCH_COURSE_SNAPSHOT_PENDING Should begin fetching a course snapshot correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e1b3445d-5808-473c-8293-c2eace8bd8b1",
      "parentUUID": "449cd280-c1ef-4b44-913b-f575a16fd13e",
      "skipped": false
    },
    {
      "title": "Should handle a successful course snapshot fetch correctly",
      "fullTitle": "ACTION: FETCH_COURSE_SNAPSHOT_FULFILLED Should handle a successful course snapshot fetch correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"Snap data\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: \"Snap data\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7d9eda56-e661-4a84-bb21-0188ee24b69e",
      "parentUUID": "cc7dd205-fff5-4eb7-99e6-c4c38e04320e",
      "skipped": false
    },
    {
      "title": "Should handle a rejected course snapshot fetch correctly",
      "fullTitle": "ACTION: FETCH_COURSE_SNAPSHOT_REJECTED Should handle a rejected course snapshot fetch correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d79b312d-1c82-45a5-9fed-c4414b8cf038",
      "parentUUID": "3737019f-26db-4e0f-a815-c9e6032cc6e4",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_COURSES_PENDING Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: false,\n    courseSearchError: true //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: true,\n    courseSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0042cc75-3ce9-4140-ba39-c482e66dc5e5",
      "parentUUID": "357a3585-c6a7-4a22-80fc-474a4cf3a5c7",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_COURSES_FULFILLED Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: true,\n    courseSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_FULFILLED\",\n    payload: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    courseSearchIsLoading: false,\n    courseSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5ff3060f-a1df-4499-aa21-11ff6fbbedcb",
      "parentUUID": "14f6cbd9-bf82-4c46-a2d8-d092d907b31a",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_COURSES_REJECTED Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    courseSearchIsLoading: true,\n    courseSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: false,\n    courseSearchError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "140de2fc-3bf7-4ffb-8812-0056584a3d9b",
      "parentUUID": "fb00230d-f2e8-4c67-a6cf-a941767fe840",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_AOS_PENDING Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: false,\n    aosSearchError: true //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: true,\n    aosSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "88823bb1-2670-4a44-b18e-80f1f601c214",
      "parentUUID": "86c2f47d-ba33-4829-97eb-0de2c58741d6",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_AOS_FULFILLED Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: true,\n    aosSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_FULFILLED\",\n    payload: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    aosSearchIsLoading: false,\n    aosSearchError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c2451801-84e1-4d1f-bfee-5cf1e1723d4b",
      "parentUUID": "a49f7a26-bd5c-40e2-88f5-c03b1c5e42ce",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_AOS_REJECTED Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    aosSearchIsLoading: true,\n    aosSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: false,\n    aosSearchError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0e4f83bf-6a4d-46f5-992d-98c09df5f212",
      "parentUUID": "75e2d960-a917-4dbb-9562-166ffb306ad9",
      "skipped": false
    },
    {
      "title": "Should correctly update the affected units value to the given array",
      "fullTitle": "ACTION: UPDATE_AFFECTED_UNITS Should correctly update the affected units value to the given array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: []\n};\nvar action = {\n    type: \"UPDATE_AFFECTED_UNITS\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9acd98fe-7da5-4547-88c3-74e649c61fc0",
      "parentUUID": "be7a1385-036e-444d-be4b-613c2fb83ba4",
      "skipped": false
    },
    {
      "title": "Should correctly update the index of tp to remove value to the given value",
      "fullTitle": "ACTION: UPDATE_INDEX_OF_TP_TO_REMOVE Should correctly update the index of tp to remove value to the given value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 0\n};\nvar action = {\n    type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\",\n    index: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 1\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "48ab9f31-f4f3-4c97-b037-365769855b01",
      "parentUUID": "8064f57b-2228-4ae5-bee2-384268ca1aa8",
      "skipped": false
    },
    {
      "title": "Should correctly set the unit to add to the new unit",
      "fullTitle": "ACTION: UPDATE_UNIT_TO_ADD Should correctly set the unit to add to the new unit",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitInfo: \"TestUnit\",\n    unitToAdd: undefined\n};\nvar action = {\n    type: \"UPDATE_UNIT_TO_ADD\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitInfo: \"TestUnit\",\n    unitToAdd: \"TestUnit\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5ba6acf8-647e-48fc-a6c3-563561515c83",
      "parentUUID": "7d102ef2-004c-41b3-919a-6927c200332c",
      "skipped": false
    },
    {
      "title": "Should correctly set a non-dragging unit being dragged",
      "fullTitle": "ACTION: UPDATE_UNIT_IS_BEING_DRAGGED Should correctly set a non-dragging unit being dragged",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: false\n};\nvar action = {\n    type: \"UPDATE_UNIT_IS_BEING_DRAGGED\",\n    isDragging: true\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a7935035-d6f3-431c-bcce-f11e04073dc0",
      "parentUUID": "b93a2fc2-4cb9-48dc-8920-e805c063d3cf",
      "skipped": false
    },
    {
      "title": "Should correctly set a dragging unit to be not dragged",
      "fullTitle": "ACTION: UPDATE_UNIT_IS_BEING_DRAGGED Should correctly set a dragging unit to be not dragged",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: true\n};\nvar action = {\n    type: \"UPDATE_UNIT_IS_BEING_DRAGGED\",\n    isDragging: false\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitIsBeingDragged: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "87738a02-eea7-4524-81cd-afab67ee9341",
      "parentUUID": "b93a2fc2-4cb9-48dc-8920-e805c063d3cf",
      "skipped": false
    },
    {
      "title": "Should correctly begin moving a unit",
      "fullTitle": "ACTION: MOVING_UNIT Should correctly begin moving a unit",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0\n};\nvar action = {\n    type: \"MOVING_UNIT\",\n    unit: \"TEST-UNIT\",\n    unitIndex: 3,\n    tpIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TEST-UNIT\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 3\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0ba85494-5e04-44c2-90ac-a8e4231e9a6c",
      "parentUUID": "47fc21e5-2519-4509-8aa2-635af0098b7a",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to a teaching period earlier than it",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period earlier than it",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitName: \"TestUnit\", creditPoints: 6 }, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e222ca8a-833e-4085-814b-84e21a832c60",
      "parentUUID": "7cd2d8ab-70f6-4007-b027-50e9531a1a5c",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to a teaching period later than it",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period later than it",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitName: \"TestUnit\", creditPoints: 6 }, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "258000c5-1b3e-4013-974c-884c2e187096",
      "parentUUID": "7cd2d8ab-70f6-4007-b027-50e9531a1a5c",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to the same teaching period but earlier position",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but earlier position",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [\"PlaceToMoveTo\", { unitName: \"TestUnit\", creditPoints: 6 }, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [{ unitName: \"TestUnit\", creditPoints: 6 }, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c7869a3b-24e5-48d4-a010-414fa6026df1",
      "parentUUID": "7cd2d8ab-70f6-4007-b027-50e9531a1a5c",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to the same teaching period but later position",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but later position",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [{ unitName: \"TestUnit\", creditPoints: 6 }, null, \"PlaceToMoveTo\", null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a946c2cd-7845-48fa-9cf7-2e6b138672a2",
      "parentUUID": "7cd2d8ab-70f6-4007-b027-50e9531a1a5c",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to the same teaching period and exact same position",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period and exact same position",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f51f71ee-39e9-415a-b38c-3a764abc20cb",
      "parentUUID": "7cd2d8ab-70f6-4007-b027-50e9531a1a5c",
      "skipped": false
    },
    {
      "title": "should cancel moving unit",
      "fullTitle": "ACTION: CANCEL_MOVING_UNIT should cancel moving unit",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: \"TestUnit2\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: undefined,\n    unitsIndexOfUnitToBeMoved: undefined\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "2f979eff-045d-4d4a-94aa-a65c5301b83d",
      "parentUUID": "30b59bc8-e81e-4f8c-ad9e-e584b0f0820f",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to a teaching period earlier than it",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period earlier than it",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "691f876a-db69-4f9d-9669-4a8728c1103b",
      "parentUUID": "119a9910-32c9-4db8-bce4-4cb6f53f201a",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to a teaching period later than it",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period later than it",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1d9a799d-7aa3-4f3b-9bc7-7895e02b8f7f",
      "parentUUID": "119a9910-32c9-4db8-bce4-4cb6f53f201a",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to the same teaching period but earlier position",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but earlier position",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "6103b7d3-ffbf-4532-a861-6f17d838d55b",
      "parentUUID": "119a9910-32c9-4db8-bce4-4cb6f53f201a",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to the same teaching period but later position",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but later position",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, \"PlaceToMoveTo\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", null, \"TestUnit\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5f1250a1-5a9c-4bc1-9d85-d16a5d1121af",
      "parentUUID": "119a9910-32c9-4db8-bce4-4cb6f53f201a",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to the same teaching period and exact same position",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period and exact same position",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e57f9342-c30b-47fb-a659-dc7cc7c15b3b",
      "parentUUID": "119a9910-32c9-4db8-bce4-4cb6f53f201a",
      "skipped": false
    },
    {
      "title": "should give no errors for an empty course plan.",
      "fullTitle": "ACTION: VALIDATE_COURSE should give no errors for an empty course plan.",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan.\"\n    }],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    courseErrors: [],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f643768d-6150-4546-ae08-a757d3edaed3",
      "parentUUID": "327571ab-22ac-46d2-bdea-47c1cfd2187d",
      "skipped": false
    },
    {
      "title": "Should not give duplicate unit errors if the first attempt is in the past, and the second attempt is not two or more years into the future.",
      "fullTitle": "duplicates: Should not give duplicate unit errors if the first attempt is in the past, and the second attempt is not two or more years into the future.",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: new Date().getFullYear() - 1,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, null]\n    }, {\n        code: \"S1-01\",\n        year: new Date().getFullYear() + 1,\n        units: [null, null, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "9e35f5fe-e71f-4a5d-ae95-e61b8e2fb646",
      "parentUUID": "2c823dbd-32f6-4546-b40a-9827116a7c50",
      "skipped": false
    },
    {
      "title": "Should give a duplicate unit error if there are two same units in the same teaching period",
      "fullTitle": "duplicates: Should give a duplicate unit error if there are two same units in the same teaching period",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2015,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }, {\n        code: \"S2-01\",\n        year: 2015,\n        units: [null, null, null, {\n            unitCode: \"GJQ2039\"\n        }]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2015,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }, {\n        code: \"S2-01\",\n        year: 2015,\n        units: [null, null, null, {\n            unitCode: \"GJQ2039\"\n        }]\n    }],\n    courseErrors: [{\n        message: \"ABCD1234 already exists in the same teaching period. Please remove this unit.\",\n        coordinates: [[0, 3]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "de23fe77-8389-43ff-913a-4ede585a4aed",
      "parentUUID": "2c823dbd-32f6-4546-b40a-9827116a7c50",
      "skipped": false
    },
    {
      "title": "Should give a duplicate error if a duplicate unit is placed in a teaching period two years from now",
      "fullTitle": "duplicates: Should give a duplicate error if a duplicate unit is placed in a teaching period two years from now",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var currentYear = new Date().getFullYear();\nvar stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: currentYear,\n        units: [{\n            unitCode: \"ABC1234\"\n        }, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 2,\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 2,\n        units: [null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: currentYear,\n        units: [{\n            unitCode: \"ABC1234\"\n        }, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 2,\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 2,\n        units: [null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan. Please plan as if you will pass all units.\",\n        coordinates: [[4, 1]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "971b1110-2c88-4f88-adbc-a1c7caa548ac",
      "parentUUID": "2c823dbd-32f6-4546-b40a-9827116a7c50",
      "skipped": false
    },
    {
      "title": "Should give a course error for a unit not being offered in the teaching period it is in",
      "fullTitle": "offerings: Should give a course error for a unit not being offered in the teaching period it is in",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2019,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: 2019,\n        units: [null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"First semester 2019 (Day)\"]\n            }]\n        }, null]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2019,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: 2019,\n        units: [null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"First semester 2019 (Day)\"]\n            }]\n        }, null]\n    }],\n    courseErrors: [{\n        message: \"ABC1234 is not offered in second semester, 2019.\",\n        coordinates: [[1, 2]]\n    }],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "93783a9d-58e3-407d-bf38-aab9c41dbb1e",
      "parentUUID": "d4540e93-ee97-462c-bdfa-472e1918f4f1",
      "skipped": false
    },
    {
      "title": "Should give a course error for a missing prereq",
      "fullTitle": "rules: Should give a course error for a missing prereq",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"Must have passed an (I/W) unit in {DEF2345, QLS2029}\",\n                endDate: \"\"\n            }]\n        }]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"Must have passed an (I/W) unit in {DEF2345, QLS2029}\",\n                endDate: \"\"\n            }]\n        }]\n    }],\n    courseErrors: [{\n        message: \"You must complete DEF2345 or QLS2029 before you can do ABC1234.\",\n        coordinates: [[0, 3]]\n    }],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5d024ba4-0079-40e6-92f0-db14a8b9c9f4",
      "parentUUID": "5d7d6bde-088c-45b6-9789-821c8f95b61e",
      "skipped": false
    },
    {
      "title": "Should give an error for credit points being lower than the minimum required for the unit",
      "fullTitle": "rules: Should give an error for credit points being lower than the minimum required for the unit",
      "timedOut": false,
      "duration": 13,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2016,\n        code: \"S2-01\",\n        units: [{\n            unitCode: \"TEST1011\",\n            creditPoints: 6\n        }, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"TEST3031\",\n            creditPoints: 6,\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"Must have passed 24 credit points\"\n            }]\n        }, null, null, null]\n    }, {\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2016,\n        code: \"S2-01\",\n        units: [{\n            unitCode: \"TEST1011\",\n            creditPoints: 6\n        }, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"TEST3031\",\n            creditPoints: 6,\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"Must have passed 24 credit points\"\n            }]\n        }, null, null, null]\n    }, {\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"You need 18 more credit points before you can do TEST3031.\",\n        coordinates: [[2, 1]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e2295abe-a937-4265-be7c-19a734901ca4",
      "parentUUID": "5d7d6bde-088c-45b6-9789-821c8f95b61e",
      "skipped": false
    },
    {
      "title": "Should correctly handle prohibitions",
      "fullTitle": "rules: Should correctly handle prohibitions",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2013,\n        code: \"S1-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\"\n        }]\n    }, {\n        year: 2013,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"BCD1234\",\n            rules: [{\n                ruleSummary: \"INCOMP\",\n                ruleString: \"Incompatible with achievement in {ABC1234}\"\n            }]\n        }, null, null]\n    }],\n    courseErrors: [{\n        message: \"Please remove BCD1234, as completing ABC1234 prohibits you from doing this unit.\",\n        coordinates: [[1, 1]]\n    }]\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "fdb4d944-a630-4d4e-b0a0-b77345274ec6",
      "parentUUID": "5d7d6bde-088c-45b6-9789-821c8f95b61e",
      "skipped": false
    },
    {
      "title": "Should correctly handle the Do branch of For COURSE_CODE syntax",
      "fullTitle": "rules: Should correctly handle the Do branch of For COURSE_CODE syntax",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2014,\n        code: \"S1-01\",\n        units: [{\n            unitCode: \"DEF2345\",\n            unitName: \"Test unit\",\n            rules: [{\n                ruleSummary: \"COREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {S2029, S3019} Do Any passed co-req (I/W) unit in {ABC2022} Otherwise true\",\n                endDate: \"\"\n            }]\n        }, null, null, null]\n    }],\n    courseInfo: {\n        courseCode: \"S2029\"\n    },\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2014,\n        code: \"S1-01\",\n        units: [{\n            unitCode: \"DEF2345\",\n            unitName: \"Test unit\",\n            rules: [{\n                ruleSummary: \"COREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {S2029, S3019} Do Any passed co-req (I/W) unit in {ABC2022} Otherwise true\",\n                endDate: \"\"\n            }]\n        }, null, null, null]\n    }],\n    courseInfo: {\n        courseCode: \"S2029\"\n    },\n    courseErrors: [{\n        message: \"You must complete ABC2022 before or whilst doing DEF2345.\",\n        coordinates: [[0, 0]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "86a95d86-3d4c-48e4-9ffd-ab2df38e19c5",
      "parentUUID": "5d7d6bde-088c-45b6-9789-821c8f95b61e",
      "skipped": false
    },
    {
      "title": "Should correctly handle the Otherwise branch of For COURSE_CODE syntax",
      "fullTitle": "rules: Should correctly handle the Otherwise branch of For COURSE_CODE syntax",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }, {\n        year: 2018,\n        code: \"WS-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"Winter semester 2018 (Day)\"]\n            }],\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {Q2001, Q2003} Do true Otherwise Must have passed 1 (I/W) units in {TEST1001}\",\n                endDate: \"\"\n            }]\n        }]\n    }, {\n        year: 2018,\n        code: \"S2-01\",\n        units: [null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }, {\n        year: 2018,\n        code: \"WS-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"Winter semester 2018 (Day)\"]\n            }],\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {Q2001, Q2003} Do true Otherwise Must have passed 1 (I/W) units in {TEST1001}\",\n                endDate: \"\"\n            }]\n        }]\n    }, {\n        year: 2018,\n        code: \"S2-01\",\n        units: [null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"You must complete TEST1001 before you can do ABC1234.\",\n        coordinates: [[1, 3]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d11b6d15-6a66-4b52-9ab3-f13f15a4b14b",
      "parentUUID": "5d7d6bde-088c-45b6-9789-821c8f95b61e",
      "skipped": false
    },
    {
      "title": "Should leave invalidUnitSlotCoordinates empty if there are no invalid unit slots",
      "fullTitle": "ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS Should leave invalidUnitSlotCoordinates empty if there are no invalid unit slots",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2015,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: false\n};\nvar action = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: {\n        unitCode: \"TEST1001\",\n        unitName: \"Test unit\",\n        locationAndTime: [{\n            location: \"Caulfield\",\n            time: [\"First semester 2017 (Day)\"]\n        }]\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2015,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "262d64c5-ff1c-44d1-8150-320310a41130",
      "parentUUID": "f69d642f-71f5-4b68-9104-72d062c5d748",
      "skipped": false
    },
    {
      "title": "Should highlight teaching periods that contains the same unit",
      "fullTitle": "ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS Should highlight teaching periods that contains the same unit",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var currentYear = new Date().getFullYear();\nvar stateBefore = {\n    teachingPeriods: [{\n        year: currentYear - 2,\n        code: \"FY-01\",\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        year: currentYear - 1,\n        code: \"FY-01\",\n        units: [null, null, {\n            unitCode: \"DEF2345\"\n        }, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: false\n};\nvar action = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: {\n        unitCode: \"ABC1234\",\n        locationAndTime: [{\n            location: \"Parkville\",\n            time: [\"Full year 2018 (Day)\"]\n        }]\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: currentYear - 2,\n        code: \"FY-01\",\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        year: currentYear - 1,\n        code: \"FY-01\",\n        units: [null, null, {\n            unitCode: \"DEF2345\"\n        }, null]\n    }],\n    invalidUnitSlotCoordinates: [[0, null]],\n    highlightingInvalidUnitSlots: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "950b3070-b5c9-41e9-b7b3-d4d6bbd767e6",
      "parentUUID": "f69d642f-71f5-4b68-9104-72d062c5d748",
      "skipped": false
    },
    {
      "title": "should not change the state if it receives an unknown action",
      "fullTitle": "DEFAULT should not change the state if it receives an unknown action",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "729e7d64-68d7-4c9a-86a4-0e1f979c36be",
      "parentUUID": "cd612aee-3f58-4ab8-bc0f-96467a3f6def",
      "skipped": false
    },
    {
      "title": "should begin fetching important dates correctly ",
      "fullTitle": "ACTION: FETCH_IMPORTANT_DATES_PENDING should begin fetching important dates correctly ",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\nvar action = {\n    type: \"FETCH_IMPORTANT_DATES_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: true,\n    importantDatesError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9f7d9e17-68b4-4a5e-897b-0b2799b9d141",
      "parentUUID": "9659f73f-8f0a-4eb8-9b8d-d38a40744890",
      "skipped": false
    },
    {
      "title": "should handled failed fetch of important dates correctly ",
      "fullTitle": "ACTION: FETCH_IMPORTANT_DATES_REJECTED should handled failed fetch of important dates correctly ",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\nvar action = {\n    type: \"FETCH_IMPORTANT_DATES_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7fc2292a-5afb-480b-b443-2a748d99267f",
      "parentUUID": "3816fbc0-105d-45f1-9814-bc385aac0adf",
      "skipped": false
    },
    {
      "title": "should handled failed fetch of important dates correctly ",
      "fullTitle": "ACTION: FETCH_IMPORTANT_DATES_FULFILLED should handled failed fetch of important dates correctly ",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\nvar action = {\n    type: \"FETCH_IMPORTANT_DATES_FULFILLED\",\n    payload: [{\n        \"value\": \"HE IS A SAURABH\"\n    }]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [{ \"value\": \"HE IS A SAURABH\" }],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "45431d0d-c64d-4073-af6b-f7c788a040ff",
      "parentUUID": "235b1c52-18a9-4374-9691-63ba9679d8ab",
      "skipped": false
    },
    {
      "title": "should insert a notification from an empty list",
      "fullTitle": "ACTION: ADD_NOTIFICATION should insert a notification from an empty list",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: []\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4163b91f-d71f-492e-984f-91aae7fd1b6d",
      "parentUUID": "142bd961-d32c-4cce-a924-6ac6fd004825",
      "skipped": false
    },
    {
      "title": "should prepend a notification into an list of a few existing notifications.",
      "fullTitle": "ACTION: ADD_NOTIFICATION should prepend a notification into an list of a few existing notifications.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5a98ce8c-74a0-4b8d-bbd0-092a065d5b01",
      "parentUUID": "142bd961-d32c-4cce-a924-6ac6fd004825",
      "skipped": false
    },
    {
      "title": "should replace a notification if it already exists with a specified ID",
      "fullTitle": "ACTION: ADD_NOTIFICATION should replace a notification if it already exists with a specified ID",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    message: \"New message goes over here\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"New message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "3cdc29f1-d97c-4c7d-a88c-5f3ae874f95d",
      "parentUUID": "142bd961-d32c-4cce-a924-6ac6fd004825",
      "skipped": false
    },
    {
      "title": "Should remove a notification given its ID",
      "fullTitle": "ACTION: REMOVE_NOTIFICATION Should remove a notification given its ID",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    id: \"CONNECTION_LOST\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0b5d6eef-83e3-4d7f-b723-cc4b0375b276",
      "parentUUID": "5d642abf-fb6e-45c6-9efa-7742c5406bc7",
      "skipped": false
    },
    {
      "title": "Should remove a notification given its index",
      "fullTitle": "ACTION: REMOVE_NOTIFICATION Should remove a notification given its index",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    index: 1\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "332870c8-9878-4711-a03d-3b2aff6a9c86",
      "parentUUID": "5d642abf-fb6e-45c6-9efa-7742c5406bc7",
      "skipped": false
    },
    {
      "title": "Should not change state if it does not recognise an action",
      "fullTitle": "DEFAULT Should not change state if it does not recognise an action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Notifications2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "c5bbd40d-2a34-4a6c-91b7-c69b0603e457",
      "parentUUID": "f4b7bcdb-a163-4001-8090-14fb644588e7",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the insert teaching period UI boolean",
      "fullTitle": "ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: true,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9dc36742-3876-42c6-8c0e-9efc204fe9f9",
      "parentUUID": "3e090a16-49de-40b4-a4e4-8c2ff4754491",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the insert teaching period UI boolean",
      "fullTitle": "ACTION: HIDE_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: true,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5896cb76-a3d1-4df8-9884-8d1fb3be7725",
      "parentUUID": "d40746bd-9f7b-423f-aca2-c902b73c9f6e",
      "skipped": false
    },
    {
      "title": "Should correctly set the add unit UI boolean to true and correctly hide the sidebar when a unit is being added",
      "fullTitle": "ACTION: ADDING_UNIT Should correctly set the add unit UI boolean to true and correctly hide the sidebar when a unit is being added",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "21136500-c947-4bab-be40-6ee60199bdc9",
      "parentUUID": "dda5a8bb-e50c-4a89-be35-d8f7f489cd44",
      "skipped": false
    },
    {
      "title": "Should correctly set the add unit UI boolean to false",
      "fullTitle": "ACTION: ADD_UNIT Should correctly set the add unit UI boolean to false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true\n};\nvar action = {\n    type: \"ADD_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f3b21f04-86a1-46cd-a1a2-af07e0f71776",
      "parentUUID": "1f1bf5b8-6786-4e77-af7e-d09af087feaf",
      "skipped": false
    },
    {
      "title": "Should correctly set the add unit UI boolean to false",
      "fullTitle": "ACTION: CANCEL_ADDING_UNIT Should correctly set the add unit UI boolean to false",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true\n};\nvar action = {\n    type: \"CANCEL_ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "24fdcc43-e79d-4d26-81a1-495e419e2530",
      "parentUUID": "36e337b2-eb13-44f6-95ce-bcd9472dce81",
      "skipped": false
    },
    {
      "title": "Should correctly set the move unit UI boolean to true",
      "fullTitle": "ACTION: MOVING_UNIT Should correctly set the move unit UI boolean to true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"MOVING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a99da681-c1d0-431c-87cb-8c02f1d7842a",
      "parentUUID": "7809519c-6bbc-4b10-99aa-be4a73fc9c82",
      "skipped": false
    },
    {
      "title": "Should correctly set the move unit UI boolean to false",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly set the move unit UI boolean to false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"MOVE_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "249de938-8dde-49f8-8dcf-0ae0357de59b",
      "parentUUID": "f29bd191-c4f4-41a7-8deb-7bebc00c12ce",
      "skipped": false
    },
    {
      "title": "Should correctly set the move unit UI boolean to false",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly set the move unit UI boolean to false",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"SWAP_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "27adf6b2-0664-4bab-992d-bb53f8e42fa0",
      "parentUUID": "ef38e1a0-da3a-45e0-a93e-803321368fb5",
      "skipped": false
    },
    {
      "title": "Should correctly set the move unit UI boolean to false",
      "fullTitle": "ACTION: CANCEL_MOVING_UNIT Should correctly set the move unit UI boolean to false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7200a5fe-114b-465a-9b1e-c03912a88414",
      "parentUUID": "58446a91-54ab-4edf-8b8c-9885df890fbd",
      "skipped": false
    },
    {
      "title": "Should set the course to read only correctly",
      "fullTitle": "ACTION: SET_COURSE_READ_ONLY Should set the course to read only correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: false\n};\nvar action = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "590ff000-1f31-42da-9995-d5755e0db6b6",
      "parentUUID": "aa3265f0-736c-43f3-bc7c-20714f443281",
      "skipped": false
    },
    {
      "title": "Should set the course to allow edits correctly",
      "fullTitle": "ACTION: SET_COURSE_READ_AND_WRITE Should set the course to allow edits correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: true\n};\nvar action = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9d7a801c-a385-4832-ab6d-ae262a4252a1",
      "parentUUID": "64183b44-d39b-44bf-99aa-c18a9fed7eef",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm delete teaching period modal UI to show",
      "fullTitle": "ACTION: SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to show",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "bd0d1129-055d-4884-8441-43bb534747fd",
      "parentUUID": "d9b68d93-0702-43b5-ba8f-2e243d344683",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm delete teaching period modal UI to hide",
      "fullTitle": "ACTION: HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to hide",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "28c8bb80-b16b-45c6-8ea8-7eea743cc9a2",
      "parentUUID": "e4a10aa3-7ea4-46c8-b6bf-12c821ef4769",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm decrease study load modal UI to show",
      "fullTitle": "ACTION: SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to show",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "572d982d-5295-47ef-be58-0326237306e7",
      "parentUUID": "067f5b9c-9e94-43e6-a588-bbada4d893bf",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm decrease study load modal UI to hide",
      "fullTitle": "ACTION: HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to hide",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "8c8d18d1-b9bd-420f-a3df-13edcfe336fa",
      "parentUUID": "f3f3253c-23d9-4534-9a71-3326c67ca054",
      "skipped": false
    },
    {
      "title": "Should set show flag for custom unit modal to be true",
      "fullTitle": "ACTION: SHOW_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7ddd42c7-3af5-4150-8002-562998bcd2d8",
      "parentUUID": "62709d5f-8654-4044-96c7-208de59aeb71",
      "skipped": false
    },
    {
      "title": "Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
      "fullTitle": "ACTION: SHOW_CUSTOM_UNIT_MODAL Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"ABC1234\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: \"ABC1234\",\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f30d47eb-acc2-4ad1-9cbb-a6d9b64468d6",
      "parentUUID": "62709d5f-8654-4044-96c7-208de59aeb71",
      "skipped": false
    },
    {
      "title": "Should set unit code and position if it exists on top of setting show flag for custom unit modal to be true",
      "fullTitle": "ACTION: SHOW_CUSTOM_UNIT_MODAL Should set unit code and position if it exists on top of setting show flag for custom unit modal to be true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"ABC1234\",\n    tpIndex: 0,\n    unitIndex: 2\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: \"ABC1234\",\n    customTpIndex: 0,\n    customUnitIndex: 2\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b9889c02-c18d-4c65-b127-ec51ac0b0e23",
      "parentUUID": "62709d5f-8654-4044-96c7-208de59aeb71",
      "skipped": false
    },
    {
      "title": "Should set show flag for custom unit modal to be false",
      "fullTitle": "ACTION: HIDE_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: true\n};\nvar action = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "11a4e86c-b1c0-48f1-8214-7af33111ae67",
      "parentUUID": "77fbb374-47c1-486f-8a5d-b9750ab99594",
      "skipped": false
    },
    {
      "title": "Should correctly show the sidebar when called",
      "fullTitle": "ACTION: SHOW_SIDEBAR Should correctly show the sidebar when called",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: false\n};\nvar action = {\n    type: \"SHOW_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e8126843-e02f-4395-b00d-b43254f8adb6",
      "parentUUID": "56ed7dab-9117-487a-96a4-28d28ca464db",
      "skipped": false
    },
    {
      "title": "Should correctly hide the sidebar when called",
      "fullTitle": "ACTION: HIDE_SIDEBAR Should correctly hide the sidebar when called",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"HIDE_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5f106e09-8cce-4a57-b222-d54c5520364f",
      "parentUUID": "34054f47-d68c-4183-bfd1-5163981df15c",
      "skipped": false
    },
    {
      "title": "Should not change state if it does not recognise the action",
      "fullTitle": "DEFAULT Should not change state if it does not recognise the action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_UI2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "891086fd-e921-4295-b7dc-c02b0eaa3f95",
      "parentUUID": "8d4a7455-6e2b-49b5-9de6-4fe94f912d73",
      "skipped": false
    },
    {
      "title": "Should return a non-negative number",
      "fullTitle": "UTILS: CostCalc Should return a non-negative number",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_CostCalc2.default.calculateCost(0, 0)).to.be.gte(0);\nexpect(_CostCalc2.default.calculateCost(2, 6)).to.be.gte(0);",
      "err": {},
      "isRoot": false,
      "uuid": "9a430705-6516-4d0d-82d9-206352261c3a",
      "parentUUID": "98ea361f-c56b-489c-8f05-0bbc15dbdd23",
      "skipped": false
    },
    {
      "title": "Should multiply SCA band cost with credit points",
      "fullTitle": "UTILS: CostCalc Should multiply SCA band cost with credit points",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var scaBand = 3;\nvar creditPoints = 6;\nvar scaBandCost = _CostCalc2.default.calculateCost(scaBand, 1);\nexpect(_CostCalc2.default.calculateCost(scaBand, creditPoints)).to.equal(scaBandCost * creditPoints);",
      "err": {},
      "isRoot": false,
      "uuid": "2e9858a2-e695-4b9c-8fb7-1d7ee4087344",
      "parentUUID": "98ea361f-c56b-489c-8f05-0bbc15dbdd23",
      "skipped": false
    },
    {
      "title": "Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
      "fullTitle": "nextSemester Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([], 2011, [])).to.deep.equal({\n    index: 0,\n    year: 2011,\n    code: \"S1-01\",\n    teachingPeriodData: []\n});",
      "err": {},
      "isRoot": false,
      "uuid": "695b76d2-f1b5-47e5-b96e-a32a0087ef42",
      "parentUUID": "52b8bf7d-a449-4029-baef-58f477c07b89",
      "skipped": false
    },
    {
      "title": "Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
      "fullTitle": "nextSemester Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([], 2029, sortedTeachingPeriodData)).to.deep.equal({\n    index: 0,\n    year: 2029,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
      "err": {},
      "isRoot": false,
      "uuid": "1150facf-2546-4f85-bfc8-2021790f178e",
      "parentUUID": "52b8bf7d-a449-4029-baef-58f477c07b89",
      "skipped": false
    },
    {
      "title": "Should return semester two if the last teaching period is in semester one, with the same year",
      "fullTitle": "nextSemester Should return semester two if the last teaching period is in semester one, with the same year",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2025,\n    code: \"S1-01\"\n}, {\n    year: 2025,\n    code: \"S2-01\"\n}, {\n    year: 2026,\n    code: \"S1-01\"\n}, {\n    year: 2026,\n    code: \"S2-01\"\n}, {\n    year: 2027,\n    code: \"S1-01\"\n}], 2023, sortedTeachingPeriodData)).to.deep.equal({\n    index: 5,\n    year: 2027,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
      "err": {},
      "isRoot": false,
      "uuid": "4a61d66d-cbee-44b0-a879-3bf5e2a87853",
      "parentUUID": "52b8bf7d-a449-4029-baef-58f477c07b89",
      "skipped": false
    },
    {
      "title": "Should return semester one next year if the last teaching period is in semester two",
      "fullTitle": "nextSemester Should return semester one next year if the last teaching period is in semester two",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2015,\n    code: \"FY-01\"\n}, {\n    year: 2017,\n    code: \"S2-01\"\n}], 2015, sortedTeachingPeriodData)).to.deep.equal({\n    index: 2,\n    year: 2018,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
      "err": {},
      "isRoot": false,
      "uuid": "66f586ad-750d-43d0-84c4-094748930dcd",
      "parentUUID": "52b8bf7d-a449-4029-baef-58f477c07b89",
      "skipped": false
    },
    {
      "title": "Should render a semester string",
      "fullTitle": "getSemesterString Should render a semester string",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2019,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n})).to.equal(\"Semester 2, 2019\");",
      "err": {},
      "isRoot": false,
      "uuid": "8ecd92d3-dd40-451d-b078-6702a62982c0",
      "parentUUID": "0fc3099a-d0c2-44c4-810f-3f90797dc1c3",
      "skipped": false
    },
    {
      "title": "Should revert back to semester codes if teachingPeriodData is not available",
      "fullTitle": "getSemesterString Should revert back to semester codes if teachingPeriodData is not available",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2015,\n    code: \"S1-01\"\n})).to.equal(\"S1-01, 2015\");",
      "err": {},
      "isRoot": false,
      "uuid": "ede81425-88dd-4017-92bf-69979b2cae55",
      "parentUUID": "0fc3099a-d0c2-44c4-810f-3f90797dc1c3",
      "skipped": false
    },
    {
      "title": "Should return the right year based off current month",
      "fullTitle": "UTILS: ShowYear Should return the right year based off current month",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "if (new Date().getMonth() + 1 >= 11) {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear() + 1);\n} else {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear());\n}",
      "err": {},
      "isRoot": false,
      "uuid": "3b0af197-e330-479a-80e0-ce816de6de6e",
      "parentUUID": "b2d3b83a-a0d9-4c92-919f-445f8a1ae697",
      "skipped": false
    },
    {
      "title": "Should contain the same year as it was specified",
      "fullTitle": "UTILS: YearCalc Should contain the same year as it was specified",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getStartYearVals(2016).find(function (year) {\n    return year.value === 2016;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2017).find(function (year) {\n    return year.value === 2017;\n})).to.be.ok;",
      "err": {},
      "isRoot": false,
      "uuid": "1c5acd20-d859-4bec-a814-b8f2731c09cf",
      "parentUUID": "e33a6cad-c2b7-455c-8a1e-0fbb792b1aa6",
      "skipped": false
    },
    {
      "title": "Should contain a year that is ten years from now",
      "fullTitle": "UTILS: YearCalc Should contain a year that is ten years from now",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getStartYearVals(2019).find(function (year) {\n    return year.value === 2029;\n})).to.be.ok;\nexpect(_YearCalc2.default.getStartYearVals(2012).find(function (year) {\n    return year.value === 2002;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2028;\n})).to.be.ok;",
      "err": {},
      "isRoot": false,
      "uuid": "9b202c8c-ee03-494d-8b35-342c62636fd4",
      "parentUUID": "e33a6cad-c2b7-455c-8a1e-0fbb792b1aa6",
      "skipped": false
    },
    {
      "title": "Should not contain any past year when computing end years",
      "fullTitle": "UTILS: YearCalc Should not contain any past year when computing end years",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2017;\n})).to.be.not.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2008;\n})).to.be.not.ok;",
      "err": {},
      "isRoot": false,
      "uuid": "32ab3f51-8874-4b28-adfd-6b41c759d614",
      "parentUUID": "e33a6cad-c2b7-455c-8a1e-0fbb792b1aa6",
      "skipped": false
    },
    {
      "title": "Should have starting years go in decreasing order from one year ahead to the minimum",
      "fullTitle": "UTILS: YearCalc Should have starting years go in decreasing order from one year ahead to the minimum",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getStartYearVals(2019).slice(0, 12)).to.deep.equal([{\n    text: \"2020\",\n    value: 2020\n}, {\n    text: \"2019\",\n    value: 2019\n}, {\n    text: \"2018\",\n    value: 2018\n}, {\n    text: \"2017\",\n    value: 2017\n}, {\n    text: \"2016\",\n    value: 2016\n}, {\n    text: \"2015\",\n    value: 2015\n}, {\n    text: \"2014\",\n    value: 2014\n}, {\n    text: \"2013\",\n    value: 2013\n}, {\n    text: \"2012\",\n    value: 2012\n}, {\n    text: \"2011\",\n    value: 2011\n}, {\n    text: \"2010\",\n    value: 2010\n}, {\n    text: \"2009\",\n    value: 2009\n}]);",
      "err": {},
      "isRoot": false,
      "uuid": "982bbb8e-a329-4799-b679-55daa73c6d69",
      "parentUUID": "e33a6cad-c2b7-455c-8a1e-0fbb792b1aa6",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2017
}