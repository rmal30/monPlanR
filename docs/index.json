{
  "stats": {
    "suites": 166,
    "tests": 205,
    "passes": 205,
    "pending": 0,
    "failures": 0,
    "start": "2017-04-06T02:54:45.023Z",
    "end": "2017-04-06T02:54:45.729Z",
    "duration": 706,
    "testsRegistered": 205,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "ACTION-CREATOR: CounterActions",
        "suites": [
          {
            "title": "AC: incrementCreditPoints",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to increment credit points counter",
                "fullTitle": "ACTION-CREATOR: CounterActions AC: incrementCreditPoints Should create an action to increment credit points counter",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 5\n};\n(0, _expect2.default)(actions.incrementCreditPoints(5)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "9a365398-0920-4ac3-93e6-f038b4df350d",
                "parentUUID": "837a9421-002c-49ae-9c3d-34ce805ec5d2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CounterActions.spec.js",
            "uuid": "837a9421-002c-49ae-9c3d-34ce805ec5d2",
            "fullFile": "/home/xav/dev/monPlanR/test/actionCreators/CounterActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to increment credit points counter",
                "fullTitle": "ACTION-CREATOR: CounterActions AC: incrementCreditPoints Should create an action to increment credit points counter",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 5\n};\n(0, _expect2.default)(actions.incrementCreditPoints(5)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "9a365398-0920-4ac3-93e6-f038b4df350d",
                "parentUUID": "837a9421-002c-49ae-9c3d-34ce805ec5d2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "AC: decrementCreditPoints",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to decrement credit points counter",
                "fullTitle": "ACTION-CREATOR: CounterActions AC: decrementCreditPoints Should create an action to decrement credit points counter",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 5\n};\n(0, _expect2.default)(actions.decrementCreditPoints(5)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "7bbaf56c-15cd-4439-91d2-b97eed2604df",
                "parentUUID": "d5fcbd85-b88d-47a8-8e30-74fc97fa7a93",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CounterActions.spec.js",
            "uuid": "d5fcbd85-b88d-47a8-8e30-74fc97fa7a93",
            "fullFile": "/home/xav/dev/monPlanR/test/actionCreators/CounterActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to decrement credit points counter",
                "fullTitle": "ACTION-CREATOR: CounterActions AC: decrementCreditPoints Should create an action to decrement credit points counter",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 5\n};\n(0, _expect2.default)(actions.decrementCreditPoints(5)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "7bbaf56c-15cd-4439-91d2-b97eed2604df",
                "parentUUID": "d5fcbd85-b88d-47a8-8e30-74fc97fa7a93",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "AC: incrementCost",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to increment cost counter",
                "fullTitle": "ACTION-CREATOR: CounterActions AC: incrementCost Should create an action to increment cost counter",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"INCREMENT_COST\",\n    value: 5\n};\n(0, _expect2.default)(actions.incrementCost(5)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "d468deb2-4e07-4fc6-9f3f-b44f925992d2",
                "parentUUID": "782338b4-278d-4585-887d-4b689b048164",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CounterActions.spec.js",
            "uuid": "782338b4-278d-4585-887d-4b689b048164",
            "fullFile": "/home/xav/dev/monPlanR/test/actionCreators/CounterActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to increment cost counter",
                "fullTitle": "ACTION-CREATOR: CounterActions AC: incrementCost Should create an action to increment cost counter",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"INCREMENT_COST\",\n    value: 5\n};\n(0, _expect2.default)(actions.incrementCost(5)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "d468deb2-4e07-4fc6-9f3f-b44f925992d2",
                "parentUUID": "782338b4-278d-4585-887d-4b689b048164",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "AC: decrementCosts",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to decrement cost counter",
                "fullTitle": "ACTION-CREATOR: CounterActions AC: decrementCosts Should create an action to decrement cost counter",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"DECREMENT_COST\",\n    value: 5\n};\n(0, _expect2.default)(actions.decrementCost(5)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "0cc451ee-f903-4d5a-8f87-c960b087c1cb",
                "parentUUID": "e57e469a-e7e4-49ed-a831-a596d7042919",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CounterActions.spec.js",
            "uuid": "e57e469a-e7e4-49ed-a831-a596d7042919",
            "fullFile": "/home/xav/dev/monPlanR/test/actionCreators/CounterActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to decrement cost counter",
                "fullTitle": "ACTION-CREATOR: CounterActions AC: decrementCosts Should create an action to decrement cost counter",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"DECREMENT_COST\",\n    value: 5\n};\n(0, _expect2.default)(actions.decrementCost(5)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "0cc451ee-f903-4d5a-8f87-c960b087c1cb",
                "parentUUID": "e57e469a-e7e4-49ed-a831-a596d7042919",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/actionCreators/CounterActions.spec.js",
        "uuid": "70f5e21d-fcff-40df-b0fd-3667f9ff9dfe",
        "fullFile": "/home/xav/dev/monPlanR/test/actionCreators/CounterActions.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "ACTION-CREATOR: CourseActions",
        "suites": [
          {
            "title": "AC: insertTeachingPeriod",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to insert a teaching period",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: insertTeachingPeriod Should create an action to insert a teaching period",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{\n    type: \"INSERT_TEACHING_PERIOD\",\n    index: 1,\n    year: 2016,\n    code: \"tpCode\"\n}, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n}];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.insertTeachingPeriod(1, 2016, \"tpCode\"));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "cf53c603-58aa-4095-b67e-a20b8cbcefd6",
                "parentUUID": "b76f8771-46ed-482e-89c3-539800f8f1c0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "b76f8771-46ed-482e-89c3-539800f8f1c0",
            "fullFile": "/home/xav/dev/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to insert a teaching period",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: insertTeachingPeriod Should create an action to insert a teaching period",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{\n    type: \"INSERT_TEACHING_PERIOD\",\n    index: 1,\n    year: 2016,\n    code: \"tpCode\"\n}, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n}];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.insertTeachingPeriod(1, 2016, \"tpCode\"));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "cf53c603-58aa-4095-b67e-a20b8cbcefd6",
                "parentUUID": "b76f8771-46ed-482e-89c3-539800f8f1c0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3,
            "rootEmpty": false
          },
          {
            "title": "AC: removeTeachingPeriod",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to remove a teaching period",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: removeTeachingPeriod Should create an action to remove a teaching period",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1,\n    units: [\"unit1\", \"unit2\", \"unit3\", null]\n}, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n}];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.removeTeachingPeriod(1, [\"unit1\", \"unit2\", \"unit3\", null]));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "64862fb9-b782-4bab-b761-20216d91764f",
                "parentUUID": "b6c36f98-82e0-4212-bb1a-96d127422d3f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "b6c36f98-82e0-4212-bb1a-96d127422d3f",
            "fullFile": "/home/xav/dev/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to remove a teaching period",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: removeTeachingPeriod Should create an action to remove a teaching period",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1,\n    units: [\"unit1\", \"unit2\", \"unit3\", null]\n}, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n}];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.removeTeachingPeriod(1, [\"unit1\", \"unit2\", \"unit3\", null]));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "64862fb9-b782-4bab-b761-20216d91764f",
                "parentUUID": "b6c36f98-82e0-4212-bb1a-96d127422d3f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "AC: increaseStudyLoad",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to increase the study load",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: increaseStudyLoad Should create an action to increase the study load",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\n(0, _expect2.default)(actions.increaseStudyLoad()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "adc26fa7-8832-4c23-9376-5ff23756a59c",
                "parentUUID": "3c4ff35e-0424-4010-984b-1d540e687b9e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "3c4ff35e-0424-4010-984b-1d540e687b9e",
            "fullFile": "/home/xav/dev/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to increase the study load",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: increaseStudyLoad Should create an action to increase the study load",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\n(0, _expect2.default)(actions.increaseStudyLoad()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "adc26fa7-8832-4c23-9376-5ff23756a59c",
                "parentUUID": "3c4ff35e-0424-4010-984b-1d540e687b9e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "AC: decreaseStudyLoad",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to increase the study load with units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: decreaseStudyLoad Should create an action to increase the study load with units affected",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockTeachingPeriods = [{ year: 2018, code: \"S1-01\", units: [null, null, null, null, { unitName: \"unit1\", creditPoints: 6 }] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }, { year: 2019, code: \"S1-01\", units: [null, null, null, null, { unitName: \"unit2\", creditPoints: 6 }] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null, null] }];\nvar expectedActions = [{ type: \"PREP_FOR_DELETION\", unitCoords: [[0, 4], [2, 4]] }, { type: \"DECREASE_STUDY_LOAD\", units: [{ unitName: \"unit1\", creditPoints: 6 }, { unitName: \"unit2\", creditPoints: 6 }] }];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.decreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "933533f4-77db-4b49-a6bd-eec667df9e8a",
                "parentUUID": "b973e418-4b8d-41f2-8ad6-6af883dbf763",
                "skipped": false
              },
              {
                "title": "Should create an action to increase the study load with no units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: decreaseStudyLoad Should create an action to increase the study load with no units affected",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockTeachingPeriods = [{ year: 2018, code: \"S1-01\", units: [null, null, null, \"unit1\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }, { year: 2019, code: \"S1-01\", units: [null, null, null, \"unit2\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null, null] }];\nvar expectedActions = [{ type: \"PREP_FOR_DELETION\", unitCoords: [] }, { type: \"DECREASE_STUDY_LOAD\", units: [] }];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.decreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "3f3f36c3-4538-4d56-83af-8a9181dd46e6",
                "parentUUID": "b973e418-4b8d-41f2-8ad6-6af883dbf763",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "b973e418-4b8d-41f2-8ad6-6af883dbf763",
            "fullFile": "/home/xav/dev/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to increase the study load with units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: decreaseStudyLoad Should create an action to increase the study load with units affected",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockTeachingPeriods = [{ year: 2018, code: \"S1-01\", units: [null, null, null, null, { unitName: \"unit1\", creditPoints: 6 }] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }, { year: 2019, code: \"S1-01\", units: [null, null, null, null, { unitName: \"unit2\", creditPoints: 6 }] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null, null] }];\nvar expectedActions = [{ type: \"PREP_FOR_DELETION\", unitCoords: [[0, 4], [2, 4]] }, { type: \"DECREASE_STUDY_LOAD\", units: [{ unitName: \"unit1\", creditPoints: 6 }, { unitName: \"unit2\", creditPoints: 6 }] }];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.decreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "933533f4-77db-4b49-a6bd-eec667df9e8a",
                "parentUUID": "b973e418-4b8d-41f2-8ad6-6af883dbf763",
                "skipped": false
              },
              {
                "title": "Should create an action to increase the study load with no units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: decreaseStudyLoad Should create an action to increase the study load with no units affected",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockTeachingPeriods = [{ year: 2018, code: \"S1-01\", units: [null, null, null, \"unit1\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }, { year: 2019, code: \"S1-01\", units: [null, null, null, \"unit2\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null, null] }];\nvar expectedActions = [{ type: \"PREP_FOR_DELETION\", unitCoords: [] }, { type: \"DECREASE_STUDY_LOAD\", units: [] }];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.decreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "3f3f36c3-4538-4d56-83af-8a9181dd46e6",
                "parentUUID": "b973e418-4b8d-41f2-8ad6-6af883dbf763",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "AC: addUnit",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly create the actions required for the addition of a unit that is not a custom unit being dragged",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: addUnit Should correctly create the actions required for the addition of a unit that is not a custom unit being dragged",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockUnit = {\n                customUnitDragging: false,\n                cost: 200,\n                creditPoints: 6,\n                unitCode: \"TEST1001\"\n            };\n            var expectedActions = [{ type: \"ADD_UNIT\", tpIndex: 1, unitIndex: 1, unit: mockUnit, cost: 200, creditPoints: 6 }, { type: \"CLEAR_HIGHLIGHTING_INVALID_UNIT_SLOTS\" }, { type: \"VALIDATE_COURSE\" }, { type: \"MODIFIED_COURSE_PLAN\" }];\n            var store = mockStore({});\n            store.dispatch(actions.addUnit(1, 1, mockUnit));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "798471b5-36a6-4a82-a2da-1ce042cb60c4",
                "parentUUID": "a3b1275c-1788-4fae-945d-b171594a92aa",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "a3b1275c-1788-4fae-945d-b171594a92aa",
            "fullFile": "/home/xav/dev/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should correctly create the actions required for the addition of a unit that is not a custom unit being dragged",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: addUnit Should correctly create the actions required for the addition of a unit that is not a custom unit being dragged",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockUnit = {\n                customUnitDragging: false,\n                cost: 200,\n                creditPoints: 6,\n                unitCode: \"TEST1001\"\n            };\n            var expectedActions = [{ type: \"ADD_UNIT\", tpIndex: 1, unitIndex: 1, unit: mockUnit, cost: 200, creditPoints: 6 }, { type: \"CLEAR_HIGHLIGHTING_INVALID_UNIT_SLOTS\" }, { type: \"VALIDATE_COURSE\" }, { type: \"MODIFIED_COURSE_PLAN\" }];\n            var store = mockStore({});\n            store.dispatch(actions.addUnit(1, 1, mockUnit));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "798471b5-36a6-4a82-a2da-1ce042cb60c4",
                "parentUUID": "a3b1275c-1788-4fae-945d-b171594a92aa",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "AC: removeUnit",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly create the actions required for removal of a unit",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: removeUnit Should correctly create the actions required for removal of a unit",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{ type: \"REMOVE_UNIT\", tpIndex: 1, unitIndex: 1, cost: 200, creditPoints: 6 }, { type: \"VALIDATE_COURSE\" }, { type: \"MODIFIED_COURSE_PLAN\" }];\n            var store = mockStore({});\n            store.dispatch(actions.removeUnit(1, 1, 6, 200));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "867d0036-97a7-4b16-93f9-286307d489e4",
                "parentUUID": "79feeb05-e086-4984-9db5-9d59daaf47bf",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "79feeb05-e086-4984-9db5-9d59daaf47bf",
            "fullFile": "/home/xav/dev/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should correctly create the actions required for removal of a unit",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: removeUnit Should correctly create the actions required for removal of a unit",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{ type: \"REMOVE_UNIT\", tpIndex: 1, unitIndex: 1, cost: 200, creditPoints: 6 }, { type: \"VALIDATE_COURSE\" }, { type: \"MODIFIED_COURSE_PLAN\" }];\n            var store = mockStore({});\n            store.dispatch(actions.removeUnit(1, 1, 6, 200));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "867d0036-97a7-4b16-93f9-286307d489e4",
                "parentUUID": "79feeb05-e086-4984-9db5-9d59daaf47bf",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "AC: clearCourse",
            "suites": [],
            "tests": [
              {
                "title": "Should create the actions for clearing the course",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: clearCourse Should create the actions for clearing the course",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{ type: \"CLEAR_COURSE\" }, { type: \"GET_NEXT_SEMESTER_STRING\" }, { type: \"VALIDATE_COURSE\" }];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.clearCourse());\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "0406dea3-60bb-4bb3-965b-2e3fdf85a767",
                "parentUUID": "e0f242c0-10a5-44d5-ba95-226fc57497d7",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "e0f242c0-10a5-44d5-ba95-226fc57497d7",
            "fullFile": "/home/xav/dev/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create the actions for clearing the course",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: clearCourse Should create the actions for clearing the course",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{ type: \"CLEAR_COURSE\" }, { type: \"GET_NEXT_SEMESTER_STRING\" }, { type: \"VALIDATE_COURSE\" }];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.clearCourse());\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "0406dea3-60bb-4bb3-965b-2e3fdf85a767",
                "parentUUID": "e0f242c0-10a5-44d5-ba95-226fc57497d7",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "AC: generateCourse",
            "suites": [],
            "tests": [
              {
                "title": "Should create the action for generating the course",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: generateCourse Should create the action for generating the course",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2016,\n    endYear: 2019\n};\n(0, _expect2.default)(actions.generateCourse(2016, 2019)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "e2f245c8-8b65-4642-b161-93a038709fd4",
                "parentUUID": "dc0877d5-d278-47cb-b18f-3ab229cc1a5c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "dc0877d5-d278-47cb-b18f-3ab229cc1a5c",
            "fullFile": "/home/xav/dev/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create the action for generating the course",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: generateCourse Should create the action for generating the course",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2016,\n    endYear: 2019\n};\n(0, _expect2.default)(actions.generateCourse(2016, 2019)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "e2f245c8-8b65-4642-b161-93a038709fd4",
                "parentUUID": "dc0877d5-d278-47cb-b18f-3ab229cc1a5c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "AC: submitYearForm",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly create the actions required for submission of a year form",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: submitYearForm Should correctly create the actions required for submission of a year form",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{ type: \"SUBMIT_YEAR_FORM\", startYear: 2016, endYear: 2019 }, { type: \"GENERATE_COURSE\", startYear: 2016, endYear: 2019 }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\n            var store = mockStore({});\n            store.dispatch(actions.submitYearForm(2016, 2019));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "835aeedc-5740-49b0-9f95-6ee2e4833e60",
                "parentUUID": "33a8a998-628e-4550-8a4a-0a32b1f6f5a9",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "33a8a998-628e-4550-8a4a-0a32b1f6f5a9",
            "fullFile": "/home/xav/dev/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should correctly create the actions required for submission of a year form",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: submitYearForm Should correctly create the actions required for submission of a year form",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{ type: \"SUBMIT_YEAR_FORM\", startYear: 2016, endYear: 2019 }, { type: \"GENERATE_COURSE\", startYear: 2016, endYear: 2019 }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\n            var store = mockStore({});\n            store.dispatch(actions.submitYearForm(2016, 2019));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "835aeedc-5740-49b0-9f95-6ee2e4833e60",
                "parentUUID": "33a8a998-628e-4550-8a4a-0a32b1f6f5a9",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "AC: changeStartYear",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly create actions required to change the start year",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: changeStartYear Should correctly create actions required to change the start year",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{ type: \"CHANGE_START_YEAR\", year: 2020 }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\nvar store = mockStore({});\nstore.dispatch(actions.changeStartYear(2020));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "33118a89-3bd9-43a0-9153-227095e78231",
                "parentUUID": "9e15aa65-960c-48ee-b5e3-72542323d53d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "9e15aa65-960c-48ee-b5e3-72542323d53d",
            "fullFile": "/home/xav/dev/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should correctly create actions required to change the start year",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: changeStartYear Should correctly create actions required to change the start year",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedActions = [{ type: \"CHANGE_START_YEAR\", year: 2020 }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\nvar store = mockStore({});\nstore.dispatch(actions.changeStartYear(2020));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "33118a89-3bd9-43a0-9153-227095e78231",
                "parentUUID": "9e15aa65-960c-48ee-b5e3-72542323d53d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "AC: getNextSemesterString",
            "suites": [],
            "tests": [
              {
                "title": "Should create the action for generating the course",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: getNextSemesterString Should create the action for generating the course",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n};\n(0, _expect2.default)(actions.getNextSemesterString()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "422f8503-7bac-45c6-a132-df15fccedca4",
                "parentUUID": "8b21b377-a6d7-444e-9839-6e6c7c312e1e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "8b21b377-a6d7-444e-9839-6e6c7c312e1e",
            "fullFile": "/home/xav/dev/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create the action for generating the course",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: getNextSemesterString Should create the action for generating the course",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n};\n(0, _expect2.default)(actions.getNextSemesterString()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "422f8503-7bac-45c6-a132-df15fccedca4",
                "parentUUID": "8b21b377-a6d7-444e-9839-6e6c7c312e1e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "AC: getAffectedUnitsInColumn",
            "suites": [],
            "tests": [
              {
                "title": "Should create the action for getting affected units in an overload column",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: getAffectedUnitsInColumn Should create the action for getting affected units in an overload column",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"GET_AFFECTED_UNITS_IN_OVERLOAD_COLUMN\",\n    index: 4\n};\n(0, _expect2.default)(actions.getAffectedUnitsInColumn(4)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "53006f6c-6f5f-475d-bc40-c45acb220813",
                "parentUUID": "dc463f13-6e44-47eb-81f0-f07c2793d775",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "dc463f13-6e44-47eb-81f0-f07c2793d775",
            "fullFile": "/home/xav/dev/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create the action for getting affected units in an overload column",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: getAffectedUnitsInColumn Should create the action for getting affected units in an overload column",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"GET_AFFECTED_UNITS_IN_OVERLOAD_COLUMN\",\n    index: 4\n};\n(0, _expect2.default)(actions.getAffectedUnitsInColumn(4)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "53006f6c-6f5f-475d-bc40-c45acb220813",
                "parentUUID": "dc463f13-6e44-47eb-81f0-f07c2793d775",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "AC: attemptToDeleteTeachingPeriod",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly create the actions required for deletion of a teaching period with units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: attemptToDeleteTeachingPeriod Should correctly create the actions required for deletion of a teaching period with units affected",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockUnits = [{ unitCode: \"TEST101\", unitName: \"unit1\" }, null, { unitCode: \"TEST102\", unitName: \"unit2\" }, null, null];\nvar expectedActions = [{ type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\" }, { type: \"UPDATE_AFFECTED_UNITS\", affectedUnits: [\"TEST101 - unit1\", \"TEST102 - unit2\"] }, { type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\", index: 1 }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDeleteTeachingPeriod(1, mockUnits));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "5c18fab0-8a55-421f-92aa-55fdbcf197d7",
                "parentUUID": "dc8370ca-875e-4291-8a45-1c9ae7010fa2",
                "skipped": false
              },
              {
                "title": "Should correctly create the actions required for deletion of a teaching period with no units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: attemptToDeleteTeachingPeriod Should correctly create the actions required for deletion of a teaching period with no units affected",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockUnits = [null, null, null, null, null];\nvar expectedActions = [{ type: \"REMOVE_TEACHING_PERIOD\", index: 1, units: [null, null, null, null, null] }, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, { type: \"GET_NEXT_SEMESTER_STRING\" }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDeleteTeachingPeriod(1, mockUnits));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "5c0c8679-cc85-48a7-bcbe-1c51f9cb50e4",
                "parentUUID": "dc8370ca-875e-4291-8a45-1c9ae7010fa2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "dc8370ca-875e-4291-8a45-1c9ae7010fa2",
            "fullFile": "/home/xav/dev/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should correctly create the actions required for deletion of a teaching period with units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: attemptToDeleteTeachingPeriod Should correctly create the actions required for deletion of a teaching period with units affected",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockUnits = [{ unitCode: \"TEST101\", unitName: \"unit1\" }, null, { unitCode: \"TEST102\", unitName: \"unit2\" }, null, null];\nvar expectedActions = [{ type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\" }, { type: \"UPDATE_AFFECTED_UNITS\", affectedUnits: [\"TEST101 - unit1\", \"TEST102 - unit2\"] }, { type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\", index: 1 }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDeleteTeachingPeriod(1, mockUnits));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "5c18fab0-8a55-421f-92aa-55fdbcf197d7",
                "parentUUID": "dc8370ca-875e-4291-8a45-1c9ae7010fa2",
                "skipped": false
              },
              {
                "title": "Should correctly create the actions required for deletion of a teaching period with no units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: attemptToDeleteTeachingPeriod Should correctly create the actions required for deletion of a teaching period with no units affected",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockUnits = [null, null, null, null, null];\nvar expectedActions = [{ type: \"REMOVE_TEACHING_PERIOD\", index: 1, units: [null, null, null, null, null] }, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, { type: \"GET_NEXT_SEMESTER_STRING\" }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDeleteTeachingPeriod(1, mockUnits));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "5c0c8679-cc85-48a7-bcbe-1c51f9cb50e4",
                "parentUUID": "dc8370ca-875e-4291-8a45-1c9ae7010fa2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2,
            "rootEmpty": false
          },
          {
            "title": "AC: attemptToDecreaseStudyLoad",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly create the actions required for decrease of a study load with units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: attemptToDecreaseStudyLoad Should correctly create the actions required for decrease of a study load with units affected",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockTeachingPeriods = [{ units: [null, null, { unitCode: \"TEST10A\", unitName: \"unitA\" }, null, { unitCode: \"TEST101\", unitName: \"unit1\", creditPoints: 6 }] }, { units: [null, null, { unitCode: \"TEST10B\", unitName: \"unitB\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10C\", unitName: \"unitC\" }, null, { unitCode: \"TEST102\", unitName: \"unit2\", creditPoints: 6 }] }, { units: [null, null, { unitCode: \"TEST10D\", unitName: \"unitD\" }, null, null] }];\nvar expectedActions = [{ type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\" }, { type: \"UPDATE_AFFECTED_UNITS\", affectedUnits: [\"TEST101 - unit1\", \"TEST102 - unit2\"] }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDecreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "cc58e662-75c1-41e2-b24a-9fd523af88d6",
                "parentUUID": "d4c4cef4-9ce5-4afd-8bf0-63909752cc17",
                "skipped": false
              },
              {
                "title": "Should correctly create the actions required for decrease of a study load with no units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: attemptToDecreaseStudyLoad Should correctly create the actions required for decrease of a study load with no units affected",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockTeachingPeriods = [{ units: [null, null, { unitCode: \"TEST10A\", unitName: \"unitA\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10B\", unitName: \"unitB\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10C\", unitName: \"unitC\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10D\", unitName: \"unitD\" }, null, null] }];\nvar expectedActions = [{ type: \"PREP_FOR_DELETION\", unitCoords: [] }, { type: \"DECREASE_STUDY_LOAD\", units: [] }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDecreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "46afd084-8975-4fc3-a522-b8981d33fd4f",
                "parentUUID": "d4c4cef4-9ce5-4afd-8bf0-63909752cc17",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "d4c4cef4-9ce5-4afd-8bf0-63909752cc17",
            "fullFile": "/home/xav/dev/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should correctly create the actions required for decrease of a study load with units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: attemptToDecreaseStudyLoad Should correctly create the actions required for decrease of a study load with units affected",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockTeachingPeriods = [{ units: [null, null, { unitCode: \"TEST10A\", unitName: \"unitA\" }, null, { unitCode: \"TEST101\", unitName: \"unit1\", creditPoints: 6 }] }, { units: [null, null, { unitCode: \"TEST10B\", unitName: \"unitB\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10C\", unitName: \"unitC\" }, null, { unitCode: \"TEST102\", unitName: \"unit2\", creditPoints: 6 }] }, { units: [null, null, { unitCode: \"TEST10D\", unitName: \"unitD\" }, null, null] }];\nvar expectedActions = [{ type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\" }, { type: \"UPDATE_AFFECTED_UNITS\", affectedUnits: [\"TEST101 - unit1\", \"TEST102 - unit2\"] }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDecreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "cc58e662-75c1-41e2-b24a-9fd523af88d6",
                "parentUUID": "d4c4cef4-9ce5-4afd-8bf0-63909752cc17",
                "skipped": false
              },
              {
                "title": "Should correctly create the actions required for decrease of a study load with no units affected",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: attemptToDecreaseStudyLoad Should correctly create the actions required for decrease of a study load with no units affected",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var mockTeachingPeriods = [{ units: [null, null, { unitCode: \"TEST10A\", unitName: \"unitA\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10B\", unitName: \"unitB\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10C\", unitName: \"unitC\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10D\", unitName: \"unitD\" }, null, null] }];\nvar expectedActions = [{ type: \"PREP_FOR_DELETION\", unitCoords: [] }, { type: \"DECREASE_STUDY_LOAD\", units: [] }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDecreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
                "err": {},
                "isRoot": false,
                "uuid": "46afd084-8975-4fc3-a522-b8981d33fd4f",
                "parentUUID": "d4c4cef4-9ce5-4afd-8bf0-63909752cc17",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2,
            "rootEmpty": false
          },
          {
            "title": "AC: getAffectedUnitsInRow",
            "suites": [],
            "tests": [
              {
                "title": "Should create the action for getting affected units in an teaching period row",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: getAffectedUnitsInRow Should create the action for getting affected units in an teaching period row",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"GET_AFFECTED_UNITS_IN_TEACHING_PERIOD_ROW\",\n    index: 4\n};\n(0, _expect2.default)(actions.getAffectedUnitsInRow(4)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "e02cc80e-3dae-407c-863b-1a2c7b4e7f50",
                "parentUUID": "fa11876f-7c90-47dd-a79a-1fe283ca0e51",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "fa11876f-7c90-47dd-a79a-1fe283ca0e51",
            "fullFile": "/home/xav/dev/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create the action for getting affected units in an teaching period row",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: getAffectedUnitsInRow Should create the action for getting affected units in an teaching period row",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"GET_AFFECTED_UNITS_IN_TEACHING_PERIOD_ROW\",\n    index: 4\n};\n(0, _expect2.default)(actions.getAffectedUnitsInRow(4)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "e02cc80e-3dae-407c-863b-1a2c7b4e7f50",
                "parentUUID": "fa11876f-7c90-47dd-a79a-1fe283ca0e51",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "AC: validateCourse",
            "suites": [],
            "tests": [
              {
                "title": "Should create the action for validating the course",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: validateCourse Should create the action for validating the course",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"VALIDATE_COURSE\"\n};\n(0, _expect2.default)(actions.validateCourse()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "9a4225ab-d964-48c3-9d99-96e17032a438",
                "parentUUID": "afa78aa5-5f0a-4860-9999-0de1d1f9a0bc",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "afa78aa5-5f0a-4860-9999-0de1d1f9a0bc",
            "fullFile": "/home/xav/dev/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create the action for validating the course",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: validateCourse Should create the action for validating the course",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"VALIDATE_COURSE\"\n};\n(0, _expect2.default)(actions.validateCourse()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "9a4225ab-d964-48c3-9d99-96e17032a438",
                "parentUUID": "afa78aa5-5f0a-4860-9999-0de1d1f9a0bc",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "AC: highlightInvalidUnitSlots",
            "suites": [],
            "tests": [
              {
                "title": "Should create the action for highlighting the invalid unit slots",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: highlightInvalidUnitSlots Should create the action for highlighting the invalid unit slots",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: \"UnitTest\",\n    ignoreCoordinate: false\n};\n(0, _expect2.default)(actions.highlightInvalidUnitSlots(\"UnitTest\", false)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "97e7db97-5f13-4e1a-92f1-f80400d1f355",
                "parentUUID": "02d6b517-ca16-4429-b6e9-66cdef43dd2d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "02d6b517-ca16-4429-b6e9-66cdef43dd2d",
            "fullFile": "/home/xav/dev/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create the action for highlighting the invalid unit slots",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: highlightInvalidUnitSlots Should create the action for highlighting the invalid unit slots",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: \"UnitTest\",\n    ignoreCoordinate: false\n};\n(0, _expect2.default)(actions.highlightInvalidUnitSlots(\"UnitTest\", false)).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "97e7db97-5f13-4e1a-92f1-f80400d1f355",
                "parentUUID": "02d6b517-ca16-4429-b6e9-66cdef43dd2d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "AC: clearHighlightingInvalidUnitSlots",
            "suites": [],
            "tests": [
              {
                "title": "Should create the action for clearing the highlighting for invalid unit slots",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: clearHighlightingInvalidUnitSlots Should create the action for clearing the highlighting for invalid unit slots",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"CLEAR_HIGHLIGHTING_INVALID_UNIT_SLOTS\"\n};\n(0, _expect2.default)(actions.clearHighlightingInvalidUnitSlots()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "0507c93f-3edf-4b8d-88dc-046eeb22cf89",
                "parentUUID": "5bef1b96-1c71-42d5-af48-6bd51bc596c1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/CourseActions.spec.js",
            "uuid": "5bef1b96-1c71-42d5-af48-6bd51bc596c1",
            "fullFile": "/home/xav/dev/monPlanR/test/actionCreators/CourseActions.spec.js",
            "passes": [
              {
                "title": "Should create the action for clearing the highlighting for invalid unit slots",
                "fullTitle": "ACTION-CREATOR: CourseActions AC: clearHighlightingInvalidUnitSlots Should create the action for clearing the highlighting for invalid unit slots",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"CLEAR_HIGHLIGHTING_INVALID_UNIT_SLOTS\"\n};\n(0, _expect2.default)(actions.clearHighlightingInvalidUnitSlots()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "0507c93f-3edf-4b8d-88dc-046eeb22cf89",
                "parentUUID": "5bef1b96-1c71-42d5-af48-6bd51bc596c1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/actionCreators/CourseActions.spec.js",
        "uuid": "a4dc8003-40a5-4bd1-a39a-84cc1c5df02d",
        "fullFile": "/home/xav/dev/monPlanR/test/actionCreators/CourseActions.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "ACTION-CREATOR: UIActions",
        "suites": [
          {
            "title": "AC: showInsertTeachingPeriodUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to show the insert teaching period UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showInsertTeachingPeriodUI Should create an action to show the insert teaching period UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"testTPCode\"\n};\n(0, _expect2.default)(actions.showInsertTeachingPeriodUI(\"testTPCode\")).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "9e035380-28c3-4781-a908-dabe1ccc7e96",
                "parentUUID": "4c1d6a41-30fb-4730-b410-526fbea809b3",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "4c1d6a41-30fb-4730-b410-526fbea809b3",
            "fullFile": "/home/xav/dev/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to show the insert teaching period UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showInsertTeachingPeriodUI Should create an action to show the insert teaching period UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"testTPCode\"\n};\n(0, _expect2.default)(actions.showInsertTeachingPeriodUI(\"testTPCode\")).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "9e035380-28c3-4781-a908-dabe1ccc7e96",
                "parentUUID": "4c1d6a41-30fb-4730-b410-526fbea809b3",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "AC: hideInsertTeachingPeriodUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to hide the insert teaching period UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideInsertTeachingPeriodUI Should create an action to hide the insert teaching period UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\n(0, _expect2.default)(actions.hideInsertTeachingPeriodUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "e76c8b86-f9fe-49b8-b390-ea5443ac69c6",
                "parentUUID": "7ed137a5-26a6-4e31-bfff-bf4cf2722095",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "7ed137a5-26a6-4e31-bfff-bf4cf2722095",
            "fullFile": "/home/xav/dev/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to hide the insert teaching period UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideInsertTeachingPeriodUI Should create an action to hide the insert teaching period UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\n(0, _expect2.default)(actions.hideInsertTeachingPeriodUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "e76c8b86-f9fe-49b8-b390-ea5443ac69c6",
                "parentUUID": "7ed137a5-26a6-4e31-bfff-bf4cf2722095",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "AC: showAddingUnitUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to show the add unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showAddingUnitUI Should create an action to show the add unit UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_ADD_UNIT_UI\"\n};\n(0, _expect2.default)(actions.showAddingUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "9ae6eaf6-1227-4c0b-989c-aa47241fe70a",
                "parentUUID": "daa9600b-0320-4ee0-b6cc-0b8986cc62fd",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "daa9600b-0320-4ee0-b6cc-0b8986cc62fd",
            "fullFile": "/home/xav/dev/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to show the add unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showAddingUnitUI Should create an action to show the add unit UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_ADD_UNIT_UI\"\n};\n(0, _expect2.default)(actions.showAddingUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "9ae6eaf6-1227-4c0b-989c-aa47241fe70a",
                "parentUUID": "daa9600b-0320-4ee0-b6cc-0b8986cc62fd",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "AC: hideAddingUnitUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to hide the add unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideAddingUnitUI Should create an action to hide the add unit UI",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_ADD_UNIT_UI\"\n};\n(0, _expect2.default)(actions.hideAddingUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "695685b5-0e57-4b72-bdfa-ce5cf85c2cbd",
                "parentUUID": "cd20a3a2-832d-4c75-bd95-04892ae50d3a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "cd20a3a2-832d-4c75-bd95-04892ae50d3a",
            "fullFile": "/home/xav/dev/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to hide the add unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideAddingUnitUI Should create an action to hide the add unit UI",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_ADD_UNIT_UI\"\n};\n(0, _expect2.default)(actions.hideAddingUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "695685b5-0e57-4b72-bdfa-ce5cf85c2cbd",
                "parentUUID": "cd20a3a2-832d-4c75-bd95-04892ae50d3a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "AC: showMoveUnitUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to show the move unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showMoveUnitUI Should create an action to show the move unit UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_MOVE_UNIT_UI\"\n};\n(0, _expect2.default)(actions.showMoveUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "9b4dab74-4d28-44b7-bddd-9ccf73f68cce",
                "parentUUID": "d11c364d-a3a8-4238-aee1-1e0e449f4b7b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "d11c364d-a3a8-4238-aee1-1e0e449f4b7b",
            "fullFile": "/home/xav/dev/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to show the move unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showMoveUnitUI Should create an action to show the move unit UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_MOVE_UNIT_UI\"\n};\n(0, _expect2.default)(actions.showMoveUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "9b4dab74-4d28-44b7-bddd-9ccf73f68cce",
                "parentUUID": "d11c364d-a3a8-4238-aee1-1e0e449f4b7b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "AC: hideMoveUnitUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to hide move unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideMoveUnitUI Should create an action to hide move unit UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_MOVE_UNIT_UI\"\n};\n(0, _expect2.default)(actions.hideMoveUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "79271b8c-8038-4ac8-b8d0-3bb0992cf909",
                "parentUUID": "002a94c1-11ed-4240-881c-a7ab86b721db",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "002a94c1-11ed-4240-881c-a7ab86b721db",
            "fullFile": "/home/xav/dev/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to hide move unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideMoveUnitUI Should create an action to hide move unit UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_MOVE_UNIT_UI\"\n};\n(0, _expect2.default)(actions.hideMoveUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "79271b8c-8038-4ac8-b8d0-3bb0992cf909",
                "parentUUID": "002a94c1-11ed-4240-881c-a7ab86b721db",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "AC: showConfirmDeleteTeachingPeriodUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to show confirm delete teaching period UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showConfirmDeleteTeachingPeriodUI Should create an action to show confirm delete teaching period UI",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\n(0, _expect2.default)(actions.showConfirmDeleteTeachingPeriodUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "af41c925-c6d1-4b99-b84b-b9036c6a8652",
                "parentUUID": "b8727103-aa6c-4740-861d-3bdb35100232",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "b8727103-aa6c-4740-861d-3bdb35100232",
            "fullFile": "/home/xav/dev/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to show confirm delete teaching period UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showConfirmDeleteTeachingPeriodUI Should create an action to show confirm delete teaching period UI",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\n(0, _expect2.default)(actions.showConfirmDeleteTeachingPeriodUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "af41c925-c6d1-4b99-b84b-b9036c6a8652",
                "parentUUID": "b8727103-aa6c-4740-861d-3bdb35100232",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "AC: hideConfirmDeleteTeachingPeriodUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to hide confirm delete teaching period UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideConfirmDeleteTeachingPeriodUI Should create an action to hide confirm delete teaching period UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\n(0, _expect2.default)(actions.hideConfirmDeleteTeachingPeriodUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "0a91bdce-4199-4a2b-9004-bb74ace1cd66",
                "parentUUID": "64b5d9fa-50e8-4827-833d-aeb9771b0a70",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "64b5d9fa-50e8-4827-833d-aeb9771b0a70",
            "fullFile": "/home/xav/dev/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to hide confirm delete teaching period UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideConfirmDeleteTeachingPeriodUI Should create an action to hide confirm delete teaching period UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\n(0, _expect2.default)(actions.hideConfirmDeleteTeachingPeriodUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "0a91bdce-4199-4a2b-9004-bb74ace1cd66",
                "parentUUID": "64b5d9fa-50e8-4827-833d-aeb9771b0a70",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "AC: showConfirmDecreaseStudyLoadUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to show confirm decrease study load UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showConfirmDecreaseStudyLoadUI Should create an action to show confirm decrease study load UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\n(0, _expect2.default)(actions.showConfirmDecreaseStudyLoadUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "9e5b8fd8-3983-4efb-835e-410ac0be1e7d",
                "parentUUID": "546f8bfa-f15c-4c1e-a811-f568c3bfc5d9",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "546f8bfa-f15c-4c1e-a811-f568c3bfc5d9",
            "fullFile": "/home/xav/dev/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to show confirm decrease study load UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showConfirmDecreaseStudyLoadUI Should create an action to show confirm decrease study load UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\n(0, _expect2.default)(actions.showConfirmDecreaseStudyLoadUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "9e5b8fd8-3983-4efb-835e-410ac0be1e7d",
                "parentUUID": "546f8bfa-f15c-4c1e-a811-f568c3bfc5d9",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "AC: hideConfirmDecreaseStudyLoadUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to hide confirm decrease study load UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideConfirmDecreaseStudyLoadUI Should create an action to hide confirm decrease study load UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\n(0, _expect2.default)(actions.hideConfirmDecreaseStudyLoadUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "f5e4d0f8-9293-4e9f-9266-f2edb9abd579",
                "parentUUID": "49347b73-4c35-4c71-9772-b0fba834659c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "49347b73-4c35-4c71-9772-b0fba834659c",
            "fullFile": "/home/xav/dev/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to hide confirm decrease study load UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideConfirmDecreaseStudyLoadUI Should create an action to hide confirm decrease study load UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\n(0, _expect2.default)(actions.hideConfirmDecreaseStudyLoadUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "f5e4d0f8-9293-4e9f-9266-f2edb9abd579",
                "parentUUID": "49347b73-4c35-4c71-9772-b0fba834659c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "AC: showCustomUnitUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to show custum unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showCustomUnitUI Should create an action to show custum unit UI",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"TEST1001\"\n};\n(0, _expect2.default)(actions.showCustomUnitUI(\"TEST1001\")).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "111f792e-e4e7-4055-baf0-8d4ced85e3ee",
                "parentUUID": "3febcc15-a7a7-4ea7-b06e-bd071272aa73",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "3febcc15-a7a7-4ea7-b06e-bd071272aa73",
            "fullFile": "/home/xav/dev/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to show custum unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showCustomUnitUI Should create an action to show custum unit UI",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"TEST1001\"\n};\n(0, _expect2.default)(actions.showCustomUnitUI(\"TEST1001\")).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "111f792e-e4e7-4055-baf0-8d4ced85e3ee",
                "parentUUID": "3febcc15-a7a7-4ea7-b06e-bd071272aa73",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "AC: hideCustomUnitUI",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to hide custom unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideCustomUnitUI Should create an action to hide custom unit UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\n(0, _expect2.default)(actions.hideCustomUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "96b88d77-5032-423a-9c54-b50979b55e87",
                "parentUUID": "14edf7e7-9c31-4b93-a584-bfb5afd17bd3",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "14edf7e7-9c31-4b93-a584-bfb5afd17bd3",
            "fullFile": "/home/xav/dev/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to hide custom unit UI",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideCustomUnitUI Should create an action to hide custom unit UI",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\n(0, _expect2.default)(actions.hideCustomUnitUI()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "96b88d77-5032-423a-9c54-b50979b55e87",
                "parentUUID": "14edf7e7-9c31-4b93-a584-bfb5afd17bd3",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "AC: showSidebar",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to show sidebar",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showSidebar Should create an action to show sidebar",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_SIDEBAR\"\n};\n(0, _expect2.default)(actions.showSidebar()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "3487c80b-18a4-45c7-8d9c-d663b7f1d0b2",
                "parentUUID": "c80ccd05-936d-415c-950b-7bd1fad4898e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "c80ccd05-936d-415c-950b-7bd1fad4898e",
            "fullFile": "/home/xav/dev/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to show sidebar",
                "fullTitle": "ACTION-CREATOR: UIActions AC: showSidebar Should create an action to show sidebar",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SHOW_SIDEBAR\"\n};\n(0, _expect2.default)(actions.showSidebar()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "3487c80b-18a4-45c7-8d9c-d663b7f1d0b2",
                "parentUUID": "c80ccd05-936d-415c-950b-7bd1fad4898e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "AC: hideSidebar",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to hide sidebar",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideSidebar Should create an action to hide sidebar",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_SIDEBAR\"\n};\n(0, _expect2.default)(actions.hideSidebar()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "f3fbbfe0-bc26-445e-80a9-b8470b6386c9",
                "parentUUID": "740a0b10-a6f8-40b5-9750-950e6d7a6ac9",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "740a0b10-a6f8-40b5-9750-950e6d7a6ac9",
            "fullFile": "/home/xav/dev/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to hide sidebar",
                "fullTitle": "ACTION-CREATOR: UIActions AC: hideSidebar Should create an action to hide sidebar",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"HIDE_SIDEBAR\"\n};\n(0, _expect2.default)(actions.hideSidebar()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "f3fbbfe0-bc26-445e-80a9-b8470b6386c9",
                "parentUUID": "740a0b10-a6f8-40b5-9750-950e6d7a6ac9",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "AC: setCourseReadOnly",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to set the course to read only",
                "fullTitle": "ACTION-CREATOR: UIActions AC: setCourseReadOnly Should create an action to set the course to read only",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\n(0, _expect2.default)(actions.setCourseReadOnly()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "08266100-7a70-4a09-83d3-f08f7aab889e",
                "parentUUID": "9c5d6f11-e99d-4c05-abba-6eb9509d6c5c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "9c5d6f11-e99d-4c05-abba-6eb9509d6c5c",
            "fullFile": "/home/xav/dev/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to set the course to read only",
                "fullTitle": "ACTION-CREATOR: UIActions AC: setCourseReadOnly Should create an action to set the course to read only",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\n(0, _expect2.default)(actions.setCourseReadOnly()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "08266100-7a70-4a09-83d3-f08f7aab889e",
                "parentUUID": "9c5d6f11-e99d-4c05-abba-6eb9509d6c5c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "AC: setCourseReadAndWrite",
            "suites": [],
            "tests": [
              {
                "title": "Should create an action to set the course to read and write",
                "fullTitle": "ACTION-CREATOR: UIActions AC: setCourseReadAndWrite Should create an action to set the course to read and write",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\n(0, _expect2.default)(actions.setCourseReadAndWrite()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "93a3a172-d4af-4d7c-961f-c9b562151f54",
                "parentUUID": "490816d5-534f-4f1e-9944-5fe7a3a830ff",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/actionCreators/UIActions.spec.js",
            "uuid": "490816d5-534f-4f1e-9944-5fe7a3a830ff",
            "fullFile": "/home/xav/dev/monPlanR/test/actionCreators/UIActions.spec.js",
            "passes": [
              {
                "title": "Should create an action to set the course to read and write",
                "fullTitle": "ACTION-CREATOR: UIActions AC: setCourseReadAndWrite Should create an action to set the course to read and write",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var expectedAction = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\n(0, _expect2.default)(actions.setCourseReadAndWrite()).toEqual(expectedAction);",
                "err": {},
                "isRoot": false,
                "uuid": "93a3a172-d4af-4d7c-961f-c9b562151f54",
                "parentUUID": "490816d5-534f-4f1e-9944-5fe7a3a830ff",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/actionCreators/UIActions.spec.js",
        "uuid": "cb54ad6c-cfb2-4b5e-a269-5777c1922823",
        "fullFile": "/home/xav/dev/monPlanR/test/actionCreators/UIActions.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "COMPONENT: Notification",
        "suites": [],
        "tests": [
          {
            "title": "Should render a notification title and a message",
            "fullTitle": "COMPONENT: Notification Should render a notification title and a message",
            "timedOut": false,
            "duration": 30,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, {\n    title: \"This is a test\",\n    message: \"Some message goes over here\"\n}));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(\"This is a test\");\nexpect(wrapper.text().replace(\"This is a test\", \"\").trim()).to.equal(\"Some message goes over here\");",
            "err": {},
            "isRoot": false,
            "uuid": "5840b127-0f97-4a40-aac2-d9bb691b0119",
            "parentUUID": "b07bf38c-cff6-41a9-9c6d-3f0abd01d742",
            "skipped": false
          },
          {
            "title": "Should have a default level to be info if it is not specified",
            "fullTitle": "COMPONENT: Notification Should have a default level to be info if it is not specified",
            "timedOut": false,
            "duration": 7,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, null)).find(\".info.message\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "0a1a9fb5-c775-4dce-b631-aa645b7f7748",
            "parentUUID": "b07bf38c-cff6-41a9-9c6d-3f0abd01d742",
            "skipped": false
          },
          {
            "title": "Should follow a specified level",
            "fullTitle": "COMPONENT: Notification Should follow a specified level",
            "timedOut": false,
            "duration": 46,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"info\" })).find(\".info.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"warning\" })).find(\".warning.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"error\" })).find(\".negative.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"success\" })).find(\".positive.message\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "e75253e1-4d92-4b40-9b2e-6c2d6a1cb48a",
            "parentUUID": "b07bf38c-cff6-41a9-9c6d-3f0abd01d742",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/components/Notifications/Notification.spec.jsx",
        "uuid": "b07bf38c-cff6-41a9-9c6d-3f0abd01d742",
        "fullFile": "/home/xav/dev/monPlanR/test/components/Notifications/Notification.spec.jsx",
        "passes": [
          {
            "title": "Should render a notification title and a message",
            "fullTitle": "COMPONENT: Notification Should render a notification title and a message",
            "timedOut": false,
            "duration": 30,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, {\n    title: \"This is a test\",\n    message: \"Some message goes over here\"\n}));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(\"This is a test\");\nexpect(wrapper.text().replace(\"This is a test\", \"\").trim()).to.equal(\"Some message goes over here\");",
            "err": {},
            "isRoot": false,
            "uuid": "5840b127-0f97-4a40-aac2-d9bb691b0119",
            "parentUUID": "b07bf38c-cff6-41a9-9c6d-3f0abd01d742",
            "skipped": false
          },
          {
            "title": "Should have a default level to be info if it is not specified",
            "fullTitle": "COMPONENT: Notification Should have a default level to be info if it is not specified",
            "timedOut": false,
            "duration": 7,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, null)).find(\".info.message\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "0a1a9fb5-c775-4dce-b631-aa645b7f7748",
            "parentUUID": "b07bf38c-cff6-41a9-9c6d-3f0abd01d742",
            "skipped": false
          },
          {
            "title": "Should follow a specified level",
            "fullTitle": "COMPONENT: Notification Should follow a specified level",
            "timedOut": false,
            "duration": 46,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"info\" })).find(\".info.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"warning\" })).find(\".warning.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"error\" })).find(\".negative.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"success\" })).find(\".positive.message\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "e75253e1-4d92-4b40-9b2e-6c2d6a1cb48a",
            "parentUUID": "b07bf38c-cff6-41a9-9c6d-3f0abd01d742",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 3,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 83,
        "rootEmpty": false
      },
      {
        "title": "COMPONENT: InsertTeachingPeriodButton",
        "suites": [
          {
            "title": "#addSemester()",
            "suites": [],
            "tests": [
              {
                "title": "should be called exactly once when main button has been clicked",
                "fullTitle": "COMPONENT: InsertTeachingPeriodButton #addSemester() should be called exactly once when main button has been clicked",
                "timedOut": false,
                "duration": 18,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var addSemester = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: identity,\n    addSemester: addSemester }));\nwrapper.find(\"Button\").forEach(function (button) {\n    button.simulate(\"click\");\n});\nexpect(addSemester).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "e1746248-ed9a-45f0-90fb-1ad9061a9bfa",
                "parentUUID": "53be1ecb-8029-4c58-9611-f49546854e20",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/components/TeachingPeriod/InsertTeachingPeriodButton.spec.jsx",
            "uuid": "53be1ecb-8029-4c58-9611-f49546854e20",
            "fullFile": "/home/xav/dev/monPlanR/test/components/TeachingPeriod/InsertTeachingPeriodButton.spec.jsx",
            "passes": [
              {
                "title": "should be called exactly once when main button has been clicked",
                "fullTitle": "COMPONENT: InsertTeachingPeriodButton #addSemester() should be called exactly once when main button has been clicked",
                "timedOut": false,
                "duration": 18,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var addSemester = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: identity,\n    addSemester: addSemester }));\nwrapper.find(\"Button\").forEach(function (button) {\n    button.simulate(\"click\");\n});\nexpect(addSemester).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "e1746248-ed9a-45f0-90fb-1ad9061a9bfa",
                "parentUUID": "53be1ecb-8029-4c58-9611-f49546854e20",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 18,
            "rootEmpty": false
          },
          {
            "title": "#insert()",
            "suites": [],
            "tests": [
              {
                "title": "should be called as many times as the number of insert teaching periods options upon click",
                "fullTitle": "COMPONENT: InsertTeachingPeriodButton #insert() should be called as many times as the number of insert teaching periods options upon click",
                "timedOut": false,
                "duration": 30,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var insert = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: insert,\n    addSemester: identity }));\nvar dropdownItems = wrapper.find(\".item\");\ndropdownItems.forEach(function (node) {\n    return node.simulate(\"click\");\n});\nexpect(insert).to.have.callCount(dropdownItems.length);",
                "err": {},
                "isRoot": false,
                "uuid": "2a4d8127-2371-4445-82f4-36634c3b15cd",
                "parentUUID": "21fe4322-06b7-45f3-957f-cf8c8a2e525a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/components/TeachingPeriod/InsertTeachingPeriodButton.spec.jsx",
            "uuid": "21fe4322-06b7-45f3-957f-cf8c8a2e525a",
            "fullFile": "/home/xav/dev/monPlanR/test/components/TeachingPeriod/InsertTeachingPeriodButton.spec.jsx",
            "passes": [
              {
                "title": "should be called as many times as the number of insert teaching periods options upon click",
                "fullTitle": "COMPONENT: InsertTeachingPeriodButton #insert() should be called as many times as the number of insert teaching periods options upon click",
                "timedOut": false,
                "duration": 30,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var insert = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: insert,\n    addSemester: identity }));\nvar dropdownItems = wrapper.find(\".item\");\ndropdownItems.forEach(function (node) {\n    return node.simulate(\"click\");\n});\nexpect(insert).to.have.callCount(dropdownItems.length);",
                "err": {},
                "isRoot": false,
                "uuid": "2a4d8127-2371-4445-82f4-36634c3b15cd",
                "parentUUID": "21fe4322-06b7-45f3-957f-cf8c8a2e525a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 30,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/components/TeachingPeriod/InsertTeachingPeriodButton.spec.jsx",
        "uuid": "8c49dd98-fa09-4869-97c8-7741be891b45",
        "fullFile": "/home/xav/dev/monPlanR/test/components/TeachingPeriod/InsertTeachingPeriodButton.spec.jsx",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "COMPONENT: SetuRating",
        "suites": [],
        "tests": [
          {
            "title": "should render two ratings",
            "fullTitle": "COMPONENT: SetuRating should render two ratings",
            "timedOut": false,
            "duration": 35,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, null)).find(\".rating\")).to.have.length(2);",
            "err": {},
            "isRoot": false,
            "uuid": "5b933d71-db4f-4489-9209-98c3e62d39e7",
            "parentUUID": "ff22c4b5-e133-44a2-8b44-49cfe68f01af",
            "skipped": false
          },
          {
            "title": "should render a book if learning ratings is >=2.5",
            "fullTitle": "COMPONENT: SetuRating should render a book if learning ratings is >=2.5",
            "timedOut": false,
            "duration": 36,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 4.13 })).find(\".book\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.50 })).find(\".book\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "b166aa03-a181-486c-aa97-fce8bb3bfcea",
            "parentUUID": "ff22c4b5-e133-44a2-8b44-49cfe68f01af",
            "skipped": false
          },
          {
            "title": "should render a remove circle if learning ratings is <2.5",
            "fullTitle": "COMPONENT: SetuRating should render a remove circle if learning ratings is <2.5",
            "timedOut": false,
            "duration": 29,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 1.51 })).find(\".remove.circle\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.49 })).find(\".remove.circle\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "ccb899b3-66f4-4f23-a630-2f86c0991fe9",
            "parentUUID": "ff22c4b5-e133-44a2-8b44-49cfe68f01af",
            "skipped": false
          },
          {
            "title": "should render a thumbs up if enjoyment ratings is >=2.5",
            "fullTitle": "COMPONENT: SetuRating should render a thumbs up if enjoyment ratings is >=2.5",
            "timedOut": false,
            "duration": 24,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 4.13 })).find(\".thumbs.up\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.50 })).find(\".thumbs.up\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "7f1c14f7-33f5-4320-a7a0-5dff81f8eb33",
            "parentUUID": "ff22c4b5-e133-44a2-8b44-49cfe68f01af",
            "skipped": false
          },
          {
            "title": "should render a thumbs down if enjoyment ratings is <2.5",
            "fullTitle": "COMPONENT: SetuRating should render a thumbs down if enjoyment ratings is <2.5",
            "timedOut": false,
            "duration": 31,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 1.51 })).find(\".thumbs.down\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.49 })).find(\".thumbs.down\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "0273b59c-38b9-4b08-a958-addf553379f6",
            "parentUUID": "ff22c4b5-e133-44a2-8b44-49cfe68f01af",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/components/Unit/SetuRating.spec.jsx",
        "uuid": "ff22c4b5-e133-44a2-8b44-49cfe68f01af",
        "fullFile": "/home/xav/dev/monPlanR/test/components/Unit/SetuRating.spec.jsx",
        "passes": [
          {
            "title": "should render two ratings",
            "fullTitle": "COMPONENT: SetuRating should render two ratings",
            "timedOut": false,
            "duration": 35,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, null)).find(\".rating\")).to.have.length(2);",
            "err": {},
            "isRoot": false,
            "uuid": "5b933d71-db4f-4489-9209-98c3e62d39e7",
            "parentUUID": "ff22c4b5-e133-44a2-8b44-49cfe68f01af",
            "skipped": false
          },
          {
            "title": "should render a book if learning ratings is >=2.5",
            "fullTitle": "COMPONENT: SetuRating should render a book if learning ratings is >=2.5",
            "timedOut": false,
            "duration": 36,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 4.13 })).find(\".book\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.50 })).find(\".book\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "b166aa03-a181-486c-aa97-fce8bb3bfcea",
            "parentUUID": "ff22c4b5-e133-44a2-8b44-49cfe68f01af",
            "skipped": false
          },
          {
            "title": "should render a remove circle if learning ratings is <2.5",
            "fullTitle": "COMPONENT: SetuRating should render a remove circle if learning ratings is <2.5",
            "timedOut": false,
            "duration": 29,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 1.51 })).find(\".remove.circle\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.49 })).find(\".remove.circle\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "ccb899b3-66f4-4f23-a630-2f86c0991fe9",
            "parentUUID": "ff22c4b5-e133-44a2-8b44-49cfe68f01af",
            "skipped": false
          },
          {
            "title": "should render a thumbs up if enjoyment ratings is >=2.5",
            "fullTitle": "COMPONENT: SetuRating should render a thumbs up if enjoyment ratings is >=2.5",
            "timedOut": false,
            "duration": 24,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 4.13 })).find(\".thumbs.up\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.50 })).find(\".thumbs.up\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "7f1c14f7-33f5-4320-a7a0-5dff81f8eb33",
            "parentUUID": "ff22c4b5-e133-44a2-8b44-49cfe68f01af",
            "skipped": false
          },
          {
            "title": "should render a thumbs down if enjoyment ratings is <2.5",
            "fullTitle": "COMPONENT: SetuRating should render a thumbs down if enjoyment ratings is <2.5",
            "timedOut": false,
            "duration": 31,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 1.51 })).find(\".thumbs.down\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.49 })).find(\".thumbs.down\")).to.have.length(1);",
            "err": {},
            "isRoot": false,
            "uuid": "0273b59c-38b9-4b08-a958-addf553379f6",
            "parentUUID": "ff22c4b5-e133-44a2-8b44-49cfe68f01af",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 5,
        "totalPasses": 5,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 155,
        "rootEmpty": false
      },
      {
        "title": "COMPONENT: UnitMessage",
        "suites": [
          {
            "title": "#presentational",
            "suites": [],
            "tests": [
              {
                "title": "should only render a unit code and a unit name",
                "fullTitle": "COMPONENT: UnitMessage #presentational should only render a unit code and a unit name",
                "timedOut": false,
                "duration": 29,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var unitCode = \"ABC1234\";\nvar unitName = \"Example unit\";\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: unitCode,\n    name: unitName }));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(unitCode);\nexpect(wrapper.find(\".message\").text().replace(unitCode, \"\").trim()).to.equal(unitName);",
                "err": {},
                "isRoot": false,
                "uuid": "9aca6994-f2da-4b03-a74c-797ed808dd82",
                "parentUUID": "bdf8f1b1-238d-488d-a88e-a6eeb6c60253",
                "skipped": false
              },
              {
                "title": "should render a close button only when mouse is over the unit",
                "fullTitle": "COMPONENT: UnitMessage #presentational should render a close button only when mouse is over the unit",
                "timedOut": false,
                "duration": 51,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    hovering: false }));\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");\nwrapper.setProps({\n    hovering: true\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"visible\");\nwrapper.setProps({\n    hovering: false\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");",
                "err": {},
                "isRoot": false,
                "uuid": "f9dcf4e7-c86b-415c-b126-60297840297f",
                "parentUUID": "bdf8f1b1-238d-488d-a88e-a6eeb6c60253",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/components/Unit/UnitMessage.spec.jsx",
            "uuid": "bdf8f1b1-238d-488d-a88e-a6eeb6c60253",
            "fullFile": "/home/xav/dev/monPlanR/test/components/Unit/UnitMessage.spec.jsx",
            "passes": [
              {
                "title": "should only render a unit code and a unit name",
                "fullTitle": "COMPONENT: UnitMessage #presentational should only render a unit code and a unit name",
                "timedOut": false,
                "duration": 29,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var unitCode = \"ABC1234\";\nvar unitName = \"Example unit\";\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: unitCode,\n    name: unitName }));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(unitCode);\nexpect(wrapper.find(\".message\").text().replace(unitCode, \"\").trim()).to.equal(unitName);",
                "err": {},
                "isRoot": false,
                "uuid": "9aca6994-f2da-4b03-a74c-797ed808dd82",
                "parentUUID": "bdf8f1b1-238d-488d-a88e-a6eeb6c60253",
                "skipped": false
              },
              {
                "title": "should render a close button only when mouse is over the unit",
                "fullTitle": "COMPONENT: UnitMessage #presentational should render a close button only when mouse is over the unit",
                "timedOut": false,
                "duration": 51,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    hovering: false }));\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");\nwrapper.setProps({\n    hovering: true\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"visible\");\nwrapper.setProps({\n    hovering: false\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");",
                "err": {},
                "isRoot": false,
                "uuid": "f9dcf4e7-c86b-415c-b126-60297840297f",
                "parentUUID": "bdf8f1b1-238d-488d-a88e-a6eeb6c60253",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 80,
            "rootEmpty": false
          },
          {
            "title": "#events",
            "suites": [],
            "tests": [
              {
                "title": "Should call willAddUnit if unit is a newUnit and it has been clicked",
                "fullTitle": "COMPONENT: UnitMessage #events Should call willAddUnit if unit is a newUnit and it has been clicked",
                "timedOut": false,
                "duration": 34,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    newUnit: true,\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    willAddUnit: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"click\");\nexpect(eventFunc).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "dfef33f3-98ed-4406-b4e7-0b790448d9a5",
                "parentUUID": "05914997-c97e-4d14-bd8c-d2a05fcb2647",
                "skipped": false
              },
              {
                "title": "Should call handleUnitMouseOver when mouse is over the unit",
                "fullTitle": "COMPONENT: UnitMessage #events Should call handleUnitMouseOver when mouse is over the unit",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseOver: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseOver\");\nexpect(eventFunc).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "e0d67d8c-ab6d-4055-8478-f745972d9a83",
                "parentUUID": "05914997-c97e-4d14-bd8c-d2a05fcb2647",
                "skipped": false
              },
              {
                "title": "Should call handleUnitMouseMove when mouse moves over the unit",
                "fullTitle": "COMPONENT: UnitMessage #events Should call handleUnitMouseMove when mouse moves over the unit",
                "timedOut": false,
                "duration": 13,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseMove: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseMove\");\nexpect(eventFunc).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "500d6cee-2af5-477a-aad3-3f470ae9afea",
                "parentUUID": "05914997-c97e-4d14-bd8c-d2a05fcb2647",
                "skipped": false
              },
              {
                "title": "Should call handleUnitMouseOut when mouse is over the unit",
                "fullTitle": "COMPONENT: UnitMessage #events Should call handleUnitMouseOut when mouse is over the unit",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseOut: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseOut\");\nexpect(eventFunc).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "a324f9fa-a68c-45bc-9dcb-a867e352a917",
                "parentUUID": "05914997-c97e-4d14-bd8c-d2a05fcb2647",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/components/Unit/UnitMessage.spec.jsx",
            "uuid": "05914997-c97e-4d14-bd8c-d2a05fcb2647",
            "fullFile": "/home/xav/dev/monPlanR/test/components/Unit/UnitMessage.spec.jsx",
            "passes": [
              {
                "title": "Should call willAddUnit if unit is a newUnit and it has been clicked",
                "fullTitle": "COMPONENT: UnitMessage #events Should call willAddUnit if unit is a newUnit and it has been clicked",
                "timedOut": false,
                "duration": 34,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    newUnit: true,\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    willAddUnit: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"click\");\nexpect(eventFunc).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "dfef33f3-98ed-4406-b4e7-0b790448d9a5",
                "parentUUID": "05914997-c97e-4d14-bd8c-d2a05fcb2647",
                "skipped": false
              },
              {
                "title": "Should call handleUnitMouseOver when mouse is over the unit",
                "fullTitle": "COMPONENT: UnitMessage #events Should call handleUnitMouseOver when mouse is over the unit",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseOver: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseOver\");\nexpect(eventFunc).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "e0d67d8c-ab6d-4055-8478-f745972d9a83",
                "parentUUID": "05914997-c97e-4d14-bd8c-d2a05fcb2647",
                "skipped": false
              },
              {
                "title": "Should call handleUnitMouseMove when mouse moves over the unit",
                "fullTitle": "COMPONENT: UnitMessage #events Should call handleUnitMouseMove when mouse moves over the unit",
                "timedOut": false,
                "duration": 13,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseMove: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseMove\");\nexpect(eventFunc).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "500d6cee-2af5-477a-aad3-3f470ae9afea",
                "parentUUID": "05914997-c97e-4d14-bd8c-d2a05fcb2647",
                "skipped": false
              },
              {
                "title": "Should call handleUnitMouseOut when mouse is over the unit",
                "fullTitle": "COMPONENT: UnitMessage #events Should call handleUnitMouseOut when mouse is over the unit",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseOut: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseOut\");\nexpect(eventFunc).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "a324f9fa-a68c-45bc-9dcb-a867e352a917",
                "parentUUID": "05914997-c97e-4d14-bd8c-d2a05fcb2647",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 61,
            "rootEmpty": false
          },
          {
            "title": "#DnD",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly call movingUnit when it is being dragged",
                "fullTitle": "COMPONENT: UnitMessage #DnD Should correctly call movingUnit when it is being dragged",
                "timedOut": false,
                "duration": 10,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "testingBeginDrag = true;\ntestingEndDrag = false;\nbackend.simulateBeginDrag([sourceId]);\nexpect(movingUnitSpy).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "f17b1b77-17c5-4553-bae7-3c4f90d25f84",
                "parentUUID": "91641afd-9ed0-46ab-8fed-22717b104d90",
                "skipped": false
              },
              {
                "title": "Should correctylc call cancelMovingUnit ",
                "fullTitle": "COMPONENT: UnitMessage #DnD Should correctylc call cancelMovingUnit ",
                "timedOut": false,
                "duration": 11,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "testingBeginDrag = false;\ntestingEndDrag = true;\nbackend.simulateBeginDrag([sourceId]);\nbackend.simulateEndDrag(sourceId);\nexpect(cancelMovingUnitSpy).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "e78d4e38-3cdc-492f-94cb-50125c166a7e",
                "parentUUID": "91641afd-9ed0-46ab-8fed-22717b104d90",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/components/Unit/UnitMessage.spec.jsx",
            "uuid": "91641afd-9ed0-46ab-8fed-22717b104d90",
            "fullFile": "/home/xav/dev/monPlanR/test/components/Unit/UnitMessage.spec.jsx",
            "passes": [
              {
                "title": "Should correctly call movingUnit when it is being dragged",
                "fullTitle": "COMPONENT: UnitMessage #DnD Should correctly call movingUnit when it is being dragged",
                "timedOut": false,
                "duration": 10,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "testingBeginDrag = true;\ntestingEndDrag = false;\nbackend.simulateBeginDrag([sourceId]);\nexpect(movingUnitSpy).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "f17b1b77-17c5-4553-bae7-3c4f90d25f84",
                "parentUUID": "91641afd-9ed0-46ab-8fed-22717b104d90",
                "skipped": false
              },
              {
                "title": "Should correctylc call cancelMovingUnit ",
                "fullTitle": "COMPONENT: UnitMessage #DnD Should correctylc call cancelMovingUnit ",
                "timedOut": false,
                "duration": 11,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "testingBeginDrag = false;\ntestingEndDrag = true;\nbackend.simulateBeginDrag([sourceId]);\nbackend.simulateEndDrag(sourceId);\nexpect(cancelMovingUnitSpy).to.have.been.calledOnce;",
                "err": {},
                "isRoot": false,
                "uuid": "e78d4e38-3cdc-492f-94cb-50125c166a7e",
                "parentUUID": "91641afd-9ed0-46ab-8fed-22717b104d90",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 21,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/components/Unit/UnitMessage.spec.jsx",
        "uuid": "1598df99-c61f-41b4-8230-59ee158b5eb4",
        "fullFile": "/home/xav/dev/monPlanR/test/components/Unit/UnitMessage.spec.jsx",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "REDUCER: Career",
        "suites": [
          {
            "title": "ACTION: FETCH_CAREER_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly begin fetching a career",
                "fullTitle": "REDUCER: Career ACTION: FETCH_CAREER_PENDING Should correctly begin fetching a career",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    career: {},\n    careerIsLoading: false,\n    careerLoadError: true, // this should reset error so we start it as true to test\n    relatedDegrees: [],\n    relatedDegreesAreLoading: false,\n    relatedDegreesError: false\n};\nvar action = {\n    type: \"FETCH_CAREER_PENDING\"\n};\nvar stateAfter = {\n    career: {},\n    careerIsLoading: true,\n    careerLoadError: false,\n    relatedDegrees: [],\n    relatedDegreesAreLoading: false,\n    relatedDegreesError: false\n};\ntest(_CareerReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ec1d06d6-2b07-4726-93c0-f6c1bd302ed0",
                "parentUUID": "3a21ee23-09da-4137-a8c9-8cb930e5a444",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CareerReducer.spec.js",
            "uuid": "3a21ee23-09da-4137-a8c9-8cb930e5a444",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CareerReducer.spec.js",
            "passes": [
              {
                "title": "Should correctly begin fetching a career",
                "fullTitle": "REDUCER: Career ACTION: FETCH_CAREER_PENDING Should correctly begin fetching a career",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    career: {},\n    careerIsLoading: false,\n    careerLoadError: true, // this should reset error so we start it as true to test\n    relatedDegrees: [],\n    relatedDegreesAreLoading: false,\n    relatedDegreesError: false\n};\nvar action = {\n    type: \"FETCH_CAREER_PENDING\"\n};\nvar stateAfter = {\n    career: {},\n    careerIsLoading: true,\n    careerLoadError: false,\n    relatedDegrees: [],\n    relatedDegreesAreLoading: false,\n    relatedDegreesError: false\n};\ntest(_CareerReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ec1d06d6-2b07-4726-93c0-f6c1bd302ed0",
                "parentUUID": "3a21ee23-09da-4137-a8c9-8cb930e5a444",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "ACTION: FETCH_CAREER_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly handle a successful fetch of a career",
                "fullTitle": "REDUCER: Career ACTION: FETCH_CAREER_FULFILLED Should correctly handle a successful fetch of a career",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    career: {},\n    careerIsLoading: true,\n    careerLoadError: false,\n    relatedDegrees: [],\n    relatedDegreesAreLoading: false,\n    relatedDegreesError: false\n};\nvar action = {\n    type: \"FETCH_CAREER_FULFILLED\",\n    payload: {\n        title: \"Unit tester\",\n        description: \"Someone who tests\",\n        relatedDegrees: [\"A\", \"B\", \"C\"]\n    }\n};\nvar stateAfter = {\n    career: {\n        title: \"Unit tester\",\n        description: \"Someone who tests\",\n        relatedDegrees: [\"A\", \"B\", \"C\"]\n    },\n    careerIsLoading: false,\n    careerLoadError: false,\n    relatedDegrees: [],\n    relatedDegreesAreLoading: false,\n    relatedDegreesError: false\n};\ntest(_CareerReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a5124a36-d6b4-4f35-9e51-283341fc711d",
                "parentUUID": "c087aec2-ef3e-40cb-a2bf-e1d010c813a8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CareerReducer.spec.js",
            "uuid": "c087aec2-ef3e-40cb-a2bf-e1d010c813a8",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CareerReducer.spec.js",
            "passes": [
              {
                "title": "Should correctly handle a successful fetch of a career",
                "fullTitle": "REDUCER: Career ACTION: FETCH_CAREER_FULFILLED Should correctly handle a successful fetch of a career",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    career: {},\n    careerIsLoading: true,\n    careerLoadError: false,\n    relatedDegrees: [],\n    relatedDegreesAreLoading: false,\n    relatedDegreesError: false\n};\nvar action = {\n    type: \"FETCH_CAREER_FULFILLED\",\n    payload: {\n        title: \"Unit tester\",\n        description: \"Someone who tests\",\n        relatedDegrees: [\"A\", \"B\", \"C\"]\n    }\n};\nvar stateAfter = {\n    career: {\n        title: \"Unit tester\",\n        description: \"Someone who tests\",\n        relatedDegrees: [\"A\", \"B\", \"C\"]\n    },\n    careerIsLoading: false,\n    careerLoadError: false,\n    relatedDegrees: [],\n    relatedDegreesAreLoading: false,\n    relatedDegreesError: false\n};\ntest(_CareerReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a5124a36-d6b4-4f35-9e51-283341fc711d",
                "parentUUID": "c087aec2-ef3e-40cb-a2bf-e1d010c813a8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: FETCH_CAREER_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly handle an unsuccessful fetch of a career",
                "fullTitle": "REDUCER: Career ACTION: FETCH_CAREER_REJECTED Should correctly handle an unsuccessful fetch of a career",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    career: { testVar: \"some data the should be reset\" },\n    careerIsLoading: true,\n    careerLoadError: false,\n    relatedDegrees: [],\n    relatedDegreesAreLoading: false,\n    relatedDegreesError: false\n};\nvar action = {\n    type: \"FETCH_CAREER_REJECTED\"\n};\nvar stateAfter = {\n    career: {},\n    careerIsLoading: false,\n    careerLoadError: true,\n    relatedDegrees: [],\n    relatedDegreesAreLoading: false,\n    relatedDegreesError: false\n};\ntest(_CareerReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "60d6d488-9aa2-4b02-8c50-64d4bf73f78b",
                "parentUUID": "65135dfd-1415-439f-9b65-9035cc7fb6ce",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CareerReducer.spec.js",
            "uuid": "65135dfd-1415-439f-9b65-9035cc7fb6ce",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CareerReducer.spec.js",
            "passes": [
              {
                "title": "Should correctly handle an unsuccessful fetch of a career",
                "fullTitle": "REDUCER: Career ACTION: FETCH_CAREER_REJECTED Should correctly handle an unsuccessful fetch of a career",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    career: { testVar: \"some data the should be reset\" },\n    careerIsLoading: true,\n    careerLoadError: false,\n    relatedDegrees: [],\n    relatedDegreesAreLoading: false,\n    relatedDegreesError: false\n};\nvar action = {\n    type: \"FETCH_CAREER_REJECTED\"\n};\nvar stateAfter = {\n    career: {},\n    careerIsLoading: false,\n    careerLoadError: true,\n    relatedDegrees: [],\n    relatedDegreesAreLoading: false,\n    relatedDegreesError: false\n};\ntest(_CareerReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "60d6d488-9aa2-4b02-8c50-64d4bf73f78b",
                "parentUUID": "65135dfd-1415-439f-9b65-9035cc7fb6ce",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: FETCH_RELATED_DEGREES_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly begin fetching the related degrees to a career",
                "fullTitle": "REDUCER: Career ACTION: FETCH_RELATED_DEGREES_PENDING Should correctly begin fetching the related degrees to a career",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    career: {\n        id: \"3\",\n        title: \"Criminologist\",\n        description: \"Why did they do it? Crimes can be puzzling to most...\",\n        videoCode: \"XGer682MdJE\",\n        videoThumbnail: \"\",\n        promoPhoto: \"\",\n        relatedDegrees: [\"A2000-0-2\"]\n    },\n    careerIsLoading: false,\n    careerLoadError: false,\n    relatedDegrees: [],\n    relatedDegreesAreLoading: false,\n    relatedDegreesError: true // should reset here\n};\nvar action = {\n    type: \"FETCH_RELATED_DEGREES_PENDING\"\n};\nvar stateAfter = {\n    career: {\n        id: \"3\",\n        title: \"Criminologist\",\n        description: \"Why did they do it? Crimes can be puzzling to most...\",\n        videoCode: \"XGer682MdJE\",\n        videoThumbnail: \"\",\n        promoPhoto: \"\",\n        relatedDegrees: [\"A2000-0-2\"]\n    },\n    careerIsLoading: false,\n    careerLoadError: false,\n    relatedDegrees: [],\n    relatedDegreesAreLoading: true,\n    relatedDegreesError: false\n};\ntest(_CareerReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c02b900b-fa23-4c57-849e-e16a679fcf21",
                "parentUUID": "f3b81594-fbd7-4ba0-a1e3-528091f9b8e8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CareerReducer.spec.js",
            "uuid": "f3b81594-fbd7-4ba0-a1e3-528091f9b8e8",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CareerReducer.spec.js",
            "passes": [
              {
                "title": "Should correctly begin fetching the related degrees to a career",
                "fullTitle": "REDUCER: Career ACTION: FETCH_RELATED_DEGREES_PENDING Should correctly begin fetching the related degrees to a career",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    career: {\n        id: \"3\",\n        title: \"Criminologist\",\n        description: \"Why did they do it? Crimes can be puzzling to most...\",\n        videoCode: \"XGer682MdJE\",\n        videoThumbnail: \"\",\n        promoPhoto: \"\",\n        relatedDegrees: [\"A2000-0-2\"]\n    },\n    careerIsLoading: false,\n    careerLoadError: false,\n    relatedDegrees: [],\n    relatedDegreesAreLoading: false,\n    relatedDegreesError: true // should reset here\n};\nvar action = {\n    type: \"FETCH_RELATED_DEGREES_PENDING\"\n};\nvar stateAfter = {\n    career: {\n        id: \"3\",\n        title: \"Criminologist\",\n        description: \"Why did they do it? Crimes can be puzzling to most...\",\n        videoCode: \"XGer682MdJE\",\n        videoThumbnail: \"\",\n        promoPhoto: \"\",\n        relatedDegrees: [\"A2000-0-2\"]\n    },\n    careerIsLoading: false,\n    careerLoadError: false,\n    relatedDegrees: [],\n    relatedDegreesAreLoading: true,\n    relatedDegreesError: false\n};\ntest(_CareerReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c02b900b-fa23-4c57-849e-e16a679fcf21",
                "parentUUID": "f3b81594-fbd7-4ba0-a1e3-528091f9b8e8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: FETCH_RELATED_DEGREES_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly handle the successful fetch of related degrees to a career",
                "fullTitle": "REDUCER: Career ACTION: FETCH_RELATED_DEGREES_FULFILLED Should correctly handle the successful fetch of related degrees to a career",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    career: {\n        id: \"3\",\n        title: \"Criminologist\",\n        description: \"Why did they do it? Crimes can be puzzling to most...\",\n        videoCode: \"XGer682MdJE\",\n        videoThumbnail: \"\",\n        promoPhoto: \"\",\n        relatedDegrees: [\"A2000-0-2\"]\n    },\n    careerIsLoading: false,\n    careerLoadError: false,\n    relatedDegrees: [],\n    relatedDegreesAreLoading: true,\n    relatedDegreesError: false // should reset here\n};\nvar action = {\n    type: \"FETCH_RELATED_DEGREES_FULFILLED\",\n    payload: [{\n        code: \"A2000\",\n        title: \"Bachelor of Arts\",\n        description: \"Arts at Monash is your comprehensive gateway to a wide range of fascinating and rewarding areas of study across the arts, humanities, and social sciences. Taking an innovative approach in tackling world issues and fostering a global perspective, you will develop the research skills, advanced discipline knowledge and self reliance to acquire information, assess evidence and convey complex ideas in speech and writing in order to answer complicated questions. And with the scope to choose from almost 40 different major and minor areas of study, including languages, social studies, communications, politics, human rights, and international relations, you will develop an informed, critical awareness of the fields you're most passionate about, laying the groundwork for a wealth of exciting careers.\",\n        videoCode: \"\",\n        videoThumbnail: \"\",\n        promoPhoto: \"\",\n        specialisations: [],\n        majors: \"History\"\n    }, {\n        code: \"A2000\",\n        title: \"Bachelor of Arts\",\n        description: \"Arts at Monash is your comprehensive gateway to a wide range of fascinating and rewarding areas of study across the arts, humanities, and social sciences. Taking an innovative approach in tackling world issues and fostering a global perspective, you will develop the research skills, advanced discipline knowledge and self reliance to acquire information, assess evidence and convey complex ideas in speech and writing in order to answer complicated questions. And with the scope to choose from almost 40 different major and minor areas of study, including languages, social studies, communications, politics, human rights, and international relations, you will develop an informed, critical awareness of the fields you're most passionate about, laying the groundwork for a wealth of exciting careers.\",\n        videoCode: \"\",\n        videoThumbnail: \"\",\n        promoPhoto: \"\",\n        specialisations: [],\n        majors: \"Journalism\"\n    }]\n};\nvar stateAfter = {\n    career: {\n        id: \"3\",\n        title: \"Criminologist\",\n        description: \"Why did they do it? Crimes can be puzzling to most...\",\n        videoCode: \"XGer682MdJE\",\n        videoThumbnail: \"\",\n        promoPhoto: \"\",\n        relatedDegrees: [\"A2000-0-2\"]\n    },\n    careerIsLoading: false,\n    careerLoadError: false,\n    relatedDegrees: [{\n        code: \"A2000\",\n        title: \"Bachelor of Arts\",\n        description: \"Arts at Monash is your comprehensive gateway to a wide range of fascinating and rewarding areas of study across the arts, humanities, and social sciences. Taking an innovative approach in tackling world issues and fostering a global perspective, you will develop the research skills, advanced discipline knowledge and self reliance to acquire information, assess evidence and convey complex ideas in speech and writing in order to answer complicated questions. And with the scope to choose from almost 40 different major and minor areas of study, including languages, social studies, communications, politics, human rights, and international relations, you will develop an informed, critical awareness of the fields you're most passionate about, laying the groundwork for a wealth of exciting careers.\",\n        videoCode: \"\",\n        videoThumbnail: \"\",\n        promoPhoto: \"\",\n        specialisations: [],\n        majors: \"History\"\n    }, {\n        code: \"A2000\",\n        title: \"Bachelor of Arts\",\n        description: \"Arts at Monash is your comprehensive gateway to a wide range of fascinating and rewarding areas of study across the arts, humanities, and social sciences. Taking an innovative approach in tackling world issues and fostering a global perspective, you will develop the research skills, advanced discipline knowledge and self reliance to acquire information, assess evidence and convey complex ideas in speech and writing in order to answer complicated questions. And with the scope to choose from almost 40 different major and minor areas of study, including languages, social studies, communications, politics, human rights, and international relations, you will develop an informed, critical awareness of the fields you're most passionate about, laying the groundwork for a wealth of exciting careers.\",\n        videoCode: \"\",\n        videoThumbnail: \"\",\n        promoPhoto: \"\",\n        specialisations: [],\n        majors: \"Journalism\"\n    }],\n    relatedDegreesAreLoading: false,\n    relatedDegreesError: false\n};\ntest(_CareerReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "32100156-4d0c-464c-b911-07633809837a",
                "parentUUID": "13a047d8-1a47-407d-bf32-b29fe6c53514",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CareerReducer.spec.js",
            "uuid": "13a047d8-1a47-407d-bf32-b29fe6c53514",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CareerReducer.spec.js",
            "passes": [
              {
                "title": "Should correctly handle the successful fetch of related degrees to a career",
                "fullTitle": "REDUCER: Career ACTION: FETCH_RELATED_DEGREES_FULFILLED Should correctly handle the successful fetch of related degrees to a career",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    career: {\n        id: \"3\",\n        title: \"Criminologist\",\n        description: \"Why did they do it? Crimes can be puzzling to most...\",\n        videoCode: \"XGer682MdJE\",\n        videoThumbnail: \"\",\n        promoPhoto: \"\",\n        relatedDegrees: [\"A2000-0-2\"]\n    },\n    careerIsLoading: false,\n    careerLoadError: false,\n    relatedDegrees: [],\n    relatedDegreesAreLoading: true,\n    relatedDegreesError: false // should reset here\n};\nvar action = {\n    type: \"FETCH_RELATED_DEGREES_FULFILLED\",\n    payload: [{\n        code: \"A2000\",\n        title: \"Bachelor of Arts\",\n        description: \"Arts at Monash is your comprehensive gateway to a wide range of fascinating and rewarding areas of study across the arts, humanities, and social sciences. Taking an innovative approach in tackling world issues and fostering a global perspective, you will develop the research skills, advanced discipline knowledge and self reliance to acquire information, assess evidence and convey complex ideas in speech and writing in order to answer complicated questions. And with the scope to choose from almost 40 different major and minor areas of study, including languages, social studies, communications, politics, human rights, and international relations, you will develop an informed, critical awareness of the fields you're most passionate about, laying the groundwork for a wealth of exciting careers.\",\n        videoCode: \"\",\n        videoThumbnail: \"\",\n        promoPhoto: \"\",\n        specialisations: [],\n        majors: \"History\"\n    }, {\n        code: \"A2000\",\n        title: \"Bachelor of Arts\",\n        description: \"Arts at Monash is your comprehensive gateway to a wide range of fascinating and rewarding areas of study across the arts, humanities, and social sciences. Taking an innovative approach in tackling world issues and fostering a global perspective, you will develop the research skills, advanced discipline knowledge and self reliance to acquire information, assess evidence and convey complex ideas in speech and writing in order to answer complicated questions. And with the scope to choose from almost 40 different major and minor areas of study, including languages, social studies, communications, politics, human rights, and international relations, you will develop an informed, critical awareness of the fields you're most passionate about, laying the groundwork for a wealth of exciting careers.\",\n        videoCode: \"\",\n        videoThumbnail: \"\",\n        promoPhoto: \"\",\n        specialisations: [],\n        majors: \"Journalism\"\n    }]\n};\nvar stateAfter = {\n    career: {\n        id: \"3\",\n        title: \"Criminologist\",\n        description: \"Why did they do it? Crimes can be puzzling to most...\",\n        videoCode: \"XGer682MdJE\",\n        videoThumbnail: \"\",\n        promoPhoto: \"\",\n        relatedDegrees: [\"A2000-0-2\"]\n    },\n    careerIsLoading: false,\n    careerLoadError: false,\n    relatedDegrees: [{\n        code: \"A2000\",\n        title: \"Bachelor of Arts\",\n        description: \"Arts at Monash is your comprehensive gateway to a wide range of fascinating and rewarding areas of study across the arts, humanities, and social sciences. Taking an innovative approach in tackling world issues and fostering a global perspective, you will develop the research skills, advanced discipline knowledge and self reliance to acquire information, assess evidence and convey complex ideas in speech and writing in order to answer complicated questions. And with the scope to choose from almost 40 different major and minor areas of study, including languages, social studies, communications, politics, human rights, and international relations, you will develop an informed, critical awareness of the fields you're most passionate about, laying the groundwork for a wealth of exciting careers.\",\n        videoCode: \"\",\n        videoThumbnail: \"\",\n        promoPhoto: \"\",\n        specialisations: [],\n        majors: \"History\"\n    }, {\n        code: \"A2000\",\n        title: \"Bachelor of Arts\",\n        description: \"Arts at Monash is your comprehensive gateway to a wide range of fascinating and rewarding areas of study across the arts, humanities, and social sciences. Taking an innovative approach in tackling world issues and fostering a global perspective, you will develop the research skills, advanced discipline knowledge and self reliance to acquire information, assess evidence and convey complex ideas in speech and writing in order to answer complicated questions. And with the scope to choose from almost 40 different major and minor areas of study, including languages, social studies, communications, politics, human rights, and international relations, you will develop an informed, critical awareness of the fields you're most passionate about, laying the groundwork for a wealth of exciting careers.\",\n        videoCode: \"\",\n        videoThumbnail: \"\",\n        promoPhoto: \"\",\n        specialisations: [],\n        majors: \"Journalism\"\n    }],\n    relatedDegreesAreLoading: false,\n    relatedDegreesError: false\n};\ntest(_CareerReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "32100156-4d0c-464c-b911-07633809837a",
                "parentUUID": "13a047d8-1a47-407d-bf32-b29fe6c53514",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "ACTION: FETCH_RELATED_DEGREES_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly handle the unsuccessful fetch of the related degrees to a career",
                "fullTitle": "REDUCER: Career ACTION: FETCH_RELATED_DEGREES_REJECTED Should correctly handle the unsuccessful fetch of the related degrees to a career",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    career: {\n        id: \"3\",\n        title: \"Criminologist\",\n        description: \"Why did they do it? Crimes can be puzzling to most...\",\n        videoCode: \"XGer682MdJE\",\n        videoThumbnail: \"\",\n        promoPhoto: \"\",\n        relatedDegrees: [\"A2000-0-2\"]\n    },\n    careerIsLoading: false,\n    careerLoadError: false,\n    relatedDegrees: [{ these: \"values should be gone when error hits\" }],\n    relatedDegreesAreLoading: true,\n    relatedDegreesError: false\n};\nvar action = {\n    type: \"FETCH_RELATED_DEGREES_REJECTED\"\n};\nvar stateAfter = {\n    career: {\n        id: \"3\",\n        title: \"Criminologist\",\n        description: \"Why did they do it? Crimes can be puzzling to most...\",\n        videoCode: \"XGer682MdJE\",\n        videoThumbnail: \"\",\n        promoPhoto: \"\",\n        relatedDegrees: [\"A2000-0-2\"]\n    },\n    careerIsLoading: false,\n    careerLoadError: false,\n    relatedDegrees: [],\n    relatedDegreesAreLoading: false,\n    relatedDegreesError: true\n};\ntest(_CareerReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "25c0a26d-3f73-403e-bc4b-4116c71f2d3e",
                "parentUUID": "f5065dcb-1526-4ebe-9f89-75f4d41be1c7",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CareerReducer.spec.js",
            "uuid": "f5065dcb-1526-4ebe-9f89-75f4d41be1c7",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CareerReducer.spec.js",
            "passes": [
              {
                "title": "Should correctly handle the unsuccessful fetch of the related degrees to a career",
                "fullTitle": "REDUCER: Career ACTION: FETCH_RELATED_DEGREES_REJECTED Should correctly handle the unsuccessful fetch of the related degrees to a career",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    career: {\n        id: \"3\",\n        title: \"Criminologist\",\n        description: \"Why did they do it? Crimes can be puzzling to most...\",\n        videoCode: \"XGer682MdJE\",\n        videoThumbnail: \"\",\n        promoPhoto: \"\",\n        relatedDegrees: [\"A2000-0-2\"]\n    },\n    careerIsLoading: false,\n    careerLoadError: false,\n    relatedDegrees: [{ these: \"values should be gone when error hits\" }],\n    relatedDegreesAreLoading: true,\n    relatedDegreesError: false\n};\nvar action = {\n    type: \"FETCH_RELATED_DEGREES_REJECTED\"\n};\nvar stateAfter = {\n    career: {\n        id: \"3\",\n        title: \"Criminologist\",\n        description: \"Why did they do it? Crimes can be puzzling to most...\",\n        videoCode: \"XGer682MdJE\",\n        videoThumbnail: \"\",\n        promoPhoto: \"\",\n        relatedDegrees: [\"A2000-0-2\"]\n    },\n    careerIsLoading: false,\n    careerLoadError: false,\n    relatedDegrees: [],\n    relatedDegreesAreLoading: false,\n    relatedDegreesError: true\n};\ntest(_CareerReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "25c0a26d-3f73-403e-bc4b-4116c71f2d3e",
                "parentUUID": "f5065dcb-1526-4ebe-9f89-75f4d41be1c7",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/reducers/CareerReducer.spec.js",
        "uuid": "2408dbff-d455-4fbf-8992-1e7f37860df2",
        "fullFile": "/home/xav/dev/monPlanR/test/reducers/CareerReducer.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "REDUCER: Careers",
        "suites": [
          {
            "title": "ACTION: FETCH_CAREERS_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly begin fetching the careers array",
                "fullTitle": "REDUCER: Careers ACTION: FETCH_CAREERS_PENDING Should correctly begin fetching the careers array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    careers: [],\n    careersAreLoading: false,\n    careersLoadError: true // test that reset works\n};\nvar action = {\n    type: \"FETCH_CAREERS_PENDING\"\n};\nvar stateAfter = {\n    careers: [],\n    careersAreLoading: true,\n    careersLoadError: false\n};\ntest(_CareersReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b73d1ff8-d2dd-4534-aea4-c3e5815c964d",
                "parentUUID": "a13e7332-8b9a-4571-bd71-064283afb41a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CareersReducer.spec.js",
            "uuid": "a13e7332-8b9a-4571-bd71-064283afb41a",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CareersReducer.spec.js",
            "passes": [
              {
                "title": "Should correctly begin fetching the careers array",
                "fullTitle": "REDUCER: Careers ACTION: FETCH_CAREERS_PENDING Should correctly begin fetching the careers array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    careers: [],\n    careersAreLoading: false,\n    careersLoadError: true // test that reset works\n};\nvar action = {\n    type: \"FETCH_CAREERS_PENDING\"\n};\nvar stateAfter = {\n    careers: [],\n    careersAreLoading: true,\n    careersLoadError: false\n};\ntest(_CareersReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b73d1ff8-d2dd-4534-aea4-c3e5815c964d",
                "parentUUID": "a13e7332-8b9a-4571-bd71-064283afb41a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "ACTION: FETCH_CAREERS_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly handle a successful fetch of a career",
                "fullTitle": "REDUCER: Careers ACTION: FETCH_CAREERS_FULFILLED Should correctly handle a successful fetch of a career",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    careers: [],\n    careersAreLoading: true,\n    careersLoadError: false // test that reset works\n};\nvar action = {\n    type: \"FETCH_CAREERS_FULFILLED\",\n    payload: [{ careerOb1: \"hello\" }, { careerOb2: \"world!\" }]\n};\nvar stateAfter = {\n    careers: [{ careerOb1: \"hello\" }, { careerOb2: \"world!\" }],\n    careersAreLoading: false,\n    careersLoadError: false\n};\ntest(_CareersReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "39b3a0ce-f9f9-4e77-8846-583291ce341b",
                "parentUUID": "c530ba17-caa2-466d-a245-c8aeac4a19ab",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CareersReducer.spec.js",
            "uuid": "c530ba17-caa2-466d-a245-c8aeac4a19ab",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CareersReducer.spec.js",
            "passes": [
              {
                "title": "Should correctly handle a successful fetch of a career",
                "fullTitle": "REDUCER: Careers ACTION: FETCH_CAREERS_FULFILLED Should correctly handle a successful fetch of a career",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    careers: [],\n    careersAreLoading: true,\n    careersLoadError: false // test that reset works\n};\nvar action = {\n    type: \"FETCH_CAREERS_FULFILLED\",\n    payload: [{ careerOb1: \"hello\" }, { careerOb2: \"world!\" }]\n};\nvar stateAfter = {\n    careers: [{ careerOb1: \"hello\" }, { careerOb2: \"world!\" }],\n    careersAreLoading: false,\n    careersLoadError: false\n};\ntest(_CareersReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "39b3a0ce-f9f9-4e77-8846-583291ce341b",
                "parentUUID": "c530ba17-caa2-466d-a245-c8aeac4a19ab",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: FETCH_CAREERS_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly handle an unsuccessful fetch of a career",
                "fullTitle": "REDUCER: Careers ACTION: FETCH_CAREERS_REJECTED Should correctly handle an unsuccessful fetch of a career",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    careers: [{ careerOb1: \"hello\" }, { careerOb2: \"world!\" }], // test reset works\n    careersAreLoading: true,\n    careersLoadError: false\n};\nvar action = {\n    type: \"FETCH_CAREERS_REJECTED\"\n};\nvar stateAfter = {\n    careers: [],\n    careersAreLoading: false,\n    careersLoadError: true\n};\ntest(_CareersReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "44d06024-7384-4994-8d1a-411a7fad4d6a",
                "parentUUID": "e3a21a31-e73a-48ce-8b4d-2c58c4d58c1c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CareersReducer.spec.js",
            "uuid": "e3a21a31-e73a-48ce-8b4d-2c58c4d58c1c",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CareersReducer.spec.js",
            "passes": [
              {
                "title": "Should correctly handle an unsuccessful fetch of a career",
                "fullTitle": "REDUCER: Careers ACTION: FETCH_CAREERS_REJECTED Should correctly handle an unsuccessful fetch of a career",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    careers: [{ careerOb1: \"hello\" }, { careerOb2: \"world!\" }], // test reset works\n    careersAreLoading: true,\n    careersLoadError: false\n};\nvar action = {\n    type: \"FETCH_CAREERS_REJECTED\"\n};\nvar stateAfter = {\n    careers: [],\n    careersAreLoading: false,\n    careersLoadError: true\n};\ntest(_CareersReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "44d06024-7384-4994-8d1a-411a7fad4d6a",
                "parentUUID": "e3a21a31-e73a-48ce-8b4d-2c58c4d58c1c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/reducers/CareersReducer.spec.js",
        "uuid": "9de6e724-cfee-42dd-a33b-70deb0351e70",
        "fullFile": "/home/xav/dev/monPlanR/test/reducers/CareersReducer.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "REDUCER: Counter",
        "suites": [
          {
            "title": "ACTION: INCREMENT_CREDIT_POINTS",
            "suites": [],
            "tests": [
              {
                "title": "Should increment the credit point state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: INCREMENT_CREDIT_POINTS Should increment the credit point state by a given value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 2, creditPoints: 0 };\nvar action = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 2,\n    creditPoints: 1\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "72653da2-eaf5-45d9-ad85-4e9b7f7bb5a7",
                "parentUUID": "d05c1d22-3088-46b3-9ea6-00ffa712de5e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "d05c1d22-3088-46b3-9ea6-00ffa712de5e",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should increment the credit point state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: INCREMENT_CREDIT_POINTS Should increment the credit point state by a given value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 2, creditPoints: 0 };\nvar action = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 2,\n    creditPoints: 1\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "72653da2-eaf5-45d9-ad85-4e9b7f7bb5a7",
                "parentUUID": "d05c1d22-3088-46b3-9ea6-00ffa712de5e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "ACTION: DECREMENT_CREDIT_POINTS",
            "suites": [],
            "tests": [
              {
                "title": "Should decrement the credit point state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state by a given value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d30a0fda-17bf-468e-b26b-669c85e92e97",
                "parentUUID": "2fde71da-3272-4557-9903-3c89303e91f6",
                "skipped": false
              },
              {
                "title": "Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 0\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f1f4407b-633d-447b-b560-7ae3f5890302",
                "parentUUID": "2fde71da-3272-4557-9903-3c89303e91f6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "2fde71da-3272-4557-9903-3c89303e91f6",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should decrement the credit point state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state by a given value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d30a0fda-17bf-468e-b26b-669c85e92e97",
                "parentUUID": "2fde71da-3272-4557-9903-3c89303e91f6",
                "skipped": false
              },
              {
                "title": "Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 0\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f1f4407b-633d-447b-b560-7ae3f5890302",
                "parentUUID": "2fde71da-3272-4557-9903-3c89303e91f6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "ACTION: INCREMENT_COST",
            "suites": [],
            "tests": [
              {
                "title": "Should increment the cost state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: INCREMENT_COST Should increment the cost state by a given value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 20, creditPoints: 13 };\nvar action = {\n    type: \"INCREMENT_COST\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 21,\n    creditPoints: 13\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "85e5a7ef-e5d8-4bee-ac03-08a2d6ca2b1e",
                "parentUUID": "2a87abdd-19fd-4e60-b0b8-05dec488cc41",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "2a87abdd-19fd-4e60-b0b8-05dec488cc41",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should increment the cost state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: INCREMENT_COST Should increment the cost state by a given value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 20, creditPoints: 13 };\nvar action = {\n    type: \"INCREMENT_COST\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 21,\n    creditPoints: 13\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "85e5a7ef-e5d8-4bee-ac03-08a2d6ca2b1e",
                "parentUUID": "2a87abdd-19fd-4e60-b0b8-05dec488cc41",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: DECREMENT_COST",
            "suites": [],
            "tests": [
              {
                "title": "Should decrement the cost state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_COST Should decrement the cost state by a given value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "24bce0fe-67f1-4a36-bdff-5ae9eb584551",
                "parentUUID": "d5ea99a1-ebd2-41ca-b597-6f6607c69b90",
                "skipped": false
              },
              {
                "title": "Should decrement the cost state to 0 if a value given is larger than the current credit point value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_COST Should decrement the cost state to 0 if a value given is larger than the current credit point value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 0,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ea8bda44-91d5-4642-8898-c680719da9bc",
                "parentUUID": "d5ea99a1-ebd2-41ca-b597-6f6607c69b90",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "d5ea99a1-ebd2-41ca-b597-6f6607c69b90",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should decrement the cost state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_COST Should decrement the cost state by a given value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "24bce0fe-67f1-4a36-bdff-5ae9eb584551",
                "parentUUID": "d5ea99a1-ebd2-41ca-b597-6f6607c69b90",
                "skipped": false
              },
              {
                "title": "Should decrement the cost state to 0 if a value given is larger than the current credit point value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_COST Should decrement the cost state to 0 if a value given is larger than the current credit point value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 0,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ea8bda44-91d5-4642-8898-c680719da9bc",
                "parentUUID": "d5ea99a1-ebd2-41ca-b597-6f6607c69b90",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "ACTION: CLEAR_COURSE",
            "suites": [],
            "tests": [
              {
                "title": "Should reset the cost and credit point counters to 0",
                "fullTitle": "REDUCER: Counter ACTION: CLEAR_COURSE Should reset the cost and credit point counters to 0",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "2302f2e2-aca6-44f8-b228-ca8e4c126871",
                "parentUUID": "8f92cb40-74f6-4f06-a984-e797a3bccf3c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "8f92cb40-74f6-4f06-a984-e797a3bccf3c",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should reset the cost and credit point counters to 0",
                "fullTitle": "REDUCER: Counter ACTION: CLEAR_COURSE Should reset the cost and credit point counters to 0",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "2302f2e2-aca6-44f8-b228-ca8e4c126871",
                "parentUUID": "8f92cb40-74f6-4f06-a984-e797a3bccf3c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: REMOVE_TEACHING_PERIOD",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly go through and decrement the counters for each value ",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_TEACHING_PERIOD Should correctly go through and decrement the counters for each value ",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { cost: 2, creditPoints: 20 }, { cost: 5, creditPoints: 10 }, null]\n};\nvar stateAfter = { cost: 43, creditPoints: 10 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f398a351-a9ea-4519-be26-52bd26623431",
                "parentUUID": "94d27432-536d-45a8-abd6-f582ff61ff8f",
                "skipped": false
              },
              {
                "title": "Should not decrement the counters below 0 ",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_TEACHING_PERIOD Should not decrement the counters below 0 ",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { cost: 25, creditPoints: 20 }, { cost: 30, creditPoints: 30 }, { cost: 0, creditPoints: 10 }]\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b95fe169-1b7e-411c-b27a-c8de39072710",
                "parentUUID": "94d27432-536d-45a8-abd6-f582ff61ff8f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "94d27432-536d-45a8-abd6-f582ff61ff8f",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should correctly go through and decrement the counters for each value ",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_TEACHING_PERIOD Should correctly go through and decrement the counters for each value ",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { cost: 2, creditPoints: 20 }, { cost: 5, creditPoints: 10 }, null]\n};\nvar stateAfter = { cost: 43, creditPoints: 10 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f398a351-a9ea-4519-be26-52bd26623431",
                "parentUUID": "94d27432-536d-45a8-abd6-f582ff61ff8f",
                "skipped": false
              },
              {
                "title": "Should not decrement the counters below 0 ",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_TEACHING_PERIOD Should not decrement the counters below 0 ",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { cost: 25, creditPoints: 20 }, { cost: 30, creditPoints: 30 }, { cost: 0, creditPoints: 10 }]\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b95fe169-1b7e-411c-b27a-c8de39072710",
                "parentUUID": "94d27432-536d-45a8-abd6-f582ff61ff8f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "ACTION: REMOVE_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly decrement the counters based on the given units creditpoints and cost",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_UNIT Should correctly decrement the counters based on the given units creditpoints and cost",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 20 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7d6b456f-deb8-4ae2-a9a6-f9cf3efabfef",
                "parentUUID": "2a219f6c-a124-4edf-a169-4879a951ea9a",
                "skipped": false
              },
              {
                "title": "Should not decrement the counters below 0",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_UNIT Should not decrement the counters below 0",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1cf2a543-2c86-4150-874b-c9b3d926a5e2",
                "parentUUID": "2a219f6c-a124-4edf-a169-4879a951ea9a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "2a219f6c-a124-4edf-a169-4879a951ea9a",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should correctly decrement the counters based on the given units creditpoints and cost",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_UNIT Should correctly decrement the counters based on the given units creditpoints and cost",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 20 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7d6b456f-deb8-4ae2-a9a6-f9cf3efabfef",
                "parentUUID": "2a219f6c-a124-4edf-a169-4879a951ea9a",
                "skipped": false
              },
              {
                "title": "Should not decrement the counters below 0",
                "fullTitle": "REDUCER: Counter ACTION: REMOVE_UNIT Should not decrement the counters below 0",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1cf2a543-2c86-4150-874b-c9b3d926a5e2",
                "parentUUID": "2a219f6c-a124-4edf-a169-4879a951ea9a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: ADD_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly increment the counters when a unit is added to the plan",
                "fullTitle": "REDUCER: Counter ACTION: ADD_UNIT Should correctly increment the counters when a unit is added to the plan",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"ADD_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 30 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "8628309c-8f58-4e3c-9e05-06497919dd9f",
                "parentUUID": "556c6b0b-e866-4ab3-ba47-197a8f30891d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "556c6b0b-e866-4ab3-ba47-197a8f30891d",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should correctly increment the counters when a unit is added to the plan",
                "fullTitle": "REDUCER: Counter ACTION: ADD_UNIT Should correctly increment the counters when a unit is added to the plan",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"ADD_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 30 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "8628309c-8f58-4e3c-9e05-06497919dd9f",
                "parentUUID": "556c6b0b-e866-4ab3-ba47-197a8f30891d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: DECREASE_STUDY_LOAD",
            "suites": [],
            "tests": [
              {
                "title": "Should not decrease counters if there are no units in the overload column",
                "fullTitle": "REDUCER: Counter ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units in the overload column",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: []\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "49b046e5-5d92-4b6b-b3b0-e33753ec05ce",
                "parentUUID": "ffb251f5-60b9-4243-a399-ce3b6406b348",
                "skipped": false
              },
              {
                "title": "Should not decrease counters if there are no units which have values in the overload column",
                "fullTitle": "REDUCER: Counter ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units which have values in the overload column",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [null, {}]\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "17405124-adaa-4aed-a9eb-1b5341ca9235",
                "parentUUID": "ffb251f5-60b9-4243-a399-ce3b6406b348",
                "skipped": false
              },
              {
                "title": "Should decrease counters correctly for units in the overload column",
                "fullTitle": "REDUCER: Counter ACTION: DECREASE_STUDY_LOAD Should decrease counters correctly for units in the overload column",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [{\n        CreditPoints: 6,\n        Cost: 1134\n    }, {\n        CreditPoints: 12,\n        Cost: 2256\n    }]\n};\nvar stateAfter = { cost: 36610, creditPoints: 126 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "300c3978-6e6e-48e7-aec8-579fb43a4b81",
                "parentUUID": "ffb251f5-60b9-4243-a399-ce3b6406b348",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "ffb251f5-60b9-4243-a399-ce3b6406b348",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should not decrease counters if there are no units in the overload column",
                "fullTitle": "REDUCER: Counter ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units in the overload column",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: []\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "49b046e5-5d92-4b6b-b3b0-e33753ec05ce",
                "parentUUID": "ffb251f5-60b9-4243-a399-ce3b6406b348",
                "skipped": false
              },
              {
                "title": "Should not decrease counters if there are no units which have values in the overload column",
                "fullTitle": "REDUCER: Counter ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units which have values in the overload column",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [null, {}]\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "17405124-adaa-4aed-a9eb-1b5341ca9235",
                "parentUUID": "ffb251f5-60b9-4243-a399-ce3b6406b348",
                "skipped": false
              },
              {
                "title": "Should decrease counters correctly for units in the overload column",
                "fullTitle": "REDUCER: Counter ACTION: DECREASE_STUDY_LOAD Should decrease counters correctly for units in the overload column",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [{\n        CreditPoints: 6,\n        Cost: 1134\n    }, {\n        CreditPoints: 12,\n        Cost: 2256\n    }]\n};\nvar stateAfter = { cost: 36610, creditPoints: 126 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "300c3978-6e6e-48e7-aec8-579fb43a4b81",
                "parentUUID": "ffb251f5-60b9-4243-a399-ce3b6406b348",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "DEFAULT",
            "suites": [],
            "tests": [
              {
                "title": "Should not change state if it does not recognise an action",
                "fullTitle": "REDUCER: Counter DEFAULT Should not change state if it does not recognise an action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "fe5ac410-03f6-4977-b0f1-bd0270343155",
                "parentUUID": "87756b48-994b-4c57-9f35-9441f19fd94b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "87756b48-994b-4c57-9f35-9441f19fd94b",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should not change state if it does not recognise an action",
                "fullTitle": "REDUCER: Counter DEFAULT Should not change state if it does not recognise an action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "fe5ac410-03f6-4977-b0f1-bd0270343155",
                "parentUUID": "87756b48-994b-4c57-9f35-9441f19fd94b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/reducers/Counter.spec.js",
        "uuid": "8f37c2b7-64f8-4cdf-bbe3-c540982d2382",
        "fullFile": "/home/xav/dev/monPlanR/test/reducers/Counter.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "REDUCER: CourseSearch",
        "suites": [
          {
            "title": "ACTION: FETCH_COURSES_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseSearch ACTION: FETCH_COURSES_PENDING Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: false,\n    courseSearchError: true //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: true,\n    courseSearchError: false\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b8a0ec7a-3dfb-4957-bcd1-5bf8f0430b29",
                "parentUUID": "36a736af-688b-4866-929f-086f07d32536",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseSearchReducer.spec.js",
            "uuid": "36a736af-688b-4866-929f-086f07d32536",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseSearchReducer.spec.js",
            "passes": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseSearch ACTION: FETCH_COURSES_PENDING Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: false,\n    courseSearchError: true //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: true,\n    courseSearchError: false\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b8a0ec7a-3dfb-4957-bcd1-5bf8f0430b29",
                "parentUUID": "36a736af-688b-4866-929f-086f07d32536",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "ACTION: FETCH_COURSES_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseSearch ACTION: FETCH_COURSES_FULFILLED Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: true,\n    courseSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_FULFILLED\",\n    payload: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    courseSearchIsLoading: false,\n    courseSearchError: false\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a12e3042-fa63-4a37-9690-95d865945116",
                "parentUUID": "d823c5d7-3240-46cd-ab47-f73095f34d70",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseSearchReducer.spec.js",
            "uuid": "d823c5d7-3240-46cd-ab47-f73095f34d70",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseSearchReducer.spec.js",
            "passes": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseSearch ACTION: FETCH_COURSES_FULFILLED Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: true,\n    courseSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_FULFILLED\",\n    payload: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    courseSearchIsLoading: false,\n    courseSearchError: false\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a12e3042-fa63-4a37-9690-95d865945116",
                "parentUUID": "d823c5d7-3240-46cd-ab47-f73095f34d70",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: FETCH_COURSES_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseSearch ACTION: FETCH_COURSES_REJECTED Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    courseSearchIsLoading: true,\n    courseSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: false,\n    courseSearchError: true\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "769741de-7532-4dd7-8317-118a88a133d3",
                "parentUUID": "706d90db-6c3b-4c46-bc1d-0dc57af6cbbf",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseSearchReducer.spec.js",
            "uuid": "706d90db-6c3b-4c46-bc1d-0dc57af6cbbf",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseSearchReducer.spec.js",
            "passes": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseSearch ACTION: FETCH_COURSES_REJECTED Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    courseSearchIsLoading: true,\n    courseSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: false,\n    courseSearchError: true\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "769741de-7532-4dd7-8317-118a88a133d3",
                "parentUUID": "706d90db-6c3b-4c46-bc1d-0dc57af6cbbf",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: FETCH_AOS_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseSearch ACTION: FETCH_AOS_PENDING Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: false,\n    aosSearchError: true //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: true,\n    aosSearchError: false\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ce397d36-38e1-4518-a63b-63dc0c99a079",
                "parentUUID": "e588f6e9-7c11-46d3-abe7-412faf1c5321",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseSearchReducer.spec.js",
            "uuid": "e588f6e9-7c11-46d3-abe7-412faf1c5321",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseSearchReducer.spec.js",
            "passes": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseSearch ACTION: FETCH_AOS_PENDING Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: false,\n    aosSearchError: true //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: true,\n    aosSearchError: false\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ce397d36-38e1-4518-a63b-63dc0c99a079",
                "parentUUID": "e588f6e9-7c11-46d3-abe7-412faf1c5321",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: FETCH_AOS_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseSearch ACTION: FETCH_AOS_FULFILLED Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: true,\n    aosSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_FULFILLED\",\n    payload: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    aosSearchIsLoading: false,\n    aosSearchError: false\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1a3ad2ab-4e79-49c3-ab43-80345962fec8",
                "parentUUID": "9c773dfa-653a-4660-9ecf-fd822d0fc853",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseSearchReducer.spec.js",
            "uuid": "9c773dfa-653a-4660-9ecf-fd822d0fc853",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseSearchReducer.spec.js",
            "passes": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseSearch ACTION: FETCH_AOS_FULFILLED Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: true,\n    aosSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_FULFILLED\",\n    payload: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    aosSearchIsLoading: false,\n    aosSearchError: false\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1a3ad2ab-4e79-49c3-ab43-80345962fec8",
                "parentUUID": "9c773dfa-653a-4660-9ecf-fd822d0fc853",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: FETCH_AOS_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseSearch ACTION: FETCH_AOS_REJECTED Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    aosSearchIsLoading: true,\n    aosSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: false,\n    aosSearchError: true\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "873c7a16-7192-4bba-a53c-c937967a67ed",
                "parentUUID": "c098de3d-2880-4d8c-ba2a-325d0d23e12b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseSearchReducer.spec.js",
            "uuid": "c098de3d-2880-4d8c-ba2a-325d0d23e12b",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseSearchReducer.spec.js",
            "passes": [
              {
                "title": "Should begin fetching the basic courses list correctly",
                "fullTitle": "REDUCER: CourseSearch ACTION: FETCH_AOS_REJECTED Should begin fetching the basic courses list correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    aosSearchIsLoading: true,\n    aosSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: false,\n    aosSearchError: true\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "873c7a16-7192-4bba-a53c-c937967a67ed",
                "parentUUID": "c098de3d-2880-4d8c-ba2a-325d0d23e12b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/reducers/CourseSearchReducer.spec.js",
        "uuid": "59ac2795-8f69-42ff-84b5-3802a87ad6d5",
        "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseSearchReducer.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "REDUCER: CourseSnapshot",
        "suites": [
          {
            "title": "ACTION: UPLOAD_COURSE_SNAPSHOT_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should handle the initiation of a course snapshot upload correctly",
                "fullTitle": "REDUCER: CourseSnapshot ACTION: UPLOAD_COURSE_SNAPSHOT_PENDING Should handle the initiation of a course snapshot upload correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: true\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7d538132-cf68-44fb-8c0d-9ca04a60ede9",
                "parentUUID": "6b03e224-b798-4693-be8c-7630fda5f8cd",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseSnapshotReducer.spec.js",
            "uuid": "6b03e224-b798-4693-be8c-7630fda5f8cd",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseSnapshotReducer.spec.js",
            "passes": [
              {
                "title": "Should handle the initiation of a course snapshot upload correctly",
                "fullTitle": "REDUCER: CourseSnapshot ACTION: UPLOAD_COURSE_SNAPSHOT_PENDING Should handle the initiation of a course snapshot upload correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: true\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7d538132-cf68-44fb-8c0d-9ca04a60ede9",
                "parentUUID": "6b03e224-b798-4693-be8c-7630fda5f8cd",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: UPLOAD_COURSE_SNAPSHOT_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should handle the successful upload of a course snapshot correctly",
                "fullTitle": "REDUCER: CourseSnapshot ACTION: UPLOAD_COURSE_SNAPSHOT_FULFILLED Should handle the successful upload of a course snapshot correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"upload string\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: \"upload string\",\n    courseSnapshotUploadSucessful: true\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "83216e48-427a-4102-8263-7eb90af407bf",
                "parentUUID": "e3c6b069-1f0c-4aaf-a229-f6d0d3a02179",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseSnapshotReducer.spec.js",
            "uuid": "e3c6b069-1f0c-4aaf-a229-f6d0d3a02179",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseSnapshotReducer.spec.js",
            "passes": [
              {
                "title": "Should handle the successful upload of a course snapshot correctly",
                "fullTitle": "REDUCER: CourseSnapshot ACTION: UPLOAD_COURSE_SNAPSHOT_FULFILLED Should handle the successful upload of a course snapshot correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"upload string\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: \"upload string\",\n    courseSnapshotUploadSucessful: true\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "83216e48-427a-4102-8263-7eb90af407bf",
                "parentUUID": "e3c6b069-1f0c-4aaf-a229-f6d0d3a02179",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: UPLOAD_COURSE_SNAPSHOT_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should do handle the rejected upload of a course snapshot correctly",
                "fullTitle": "REDUCER: CourseSnapshot ACTION: UPLOAD_COURSE_SNAPSHOT_REJECTED Should do handle the rejected upload of a course snapshot correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "517d0c25-d4ed-418d-b6da-a3027477c392",
                "parentUUID": "7be102ea-ec4b-47c4-a096-f883215c2239",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseSnapshotReducer.spec.js",
            "uuid": "7be102ea-ec4b-47c4-a096-f883215c2239",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseSnapshotReducer.spec.js",
            "passes": [
              {
                "title": "Should do handle the rejected upload of a course snapshot correctly",
                "fullTitle": "REDUCER: CourseSnapshot ACTION: UPLOAD_COURSE_SNAPSHOT_REJECTED Should do handle the rejected upload of a course snapshot correctly",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "517d0c25-d4ed-418d-b6da-a3027477c392",
                "parentUUID": "7be102ea-ec4b-47c4-a096-f883215c2239",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "ACTION: FETCH_COURSE_SNAPSHOT_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should begin fetching a course snapshot correctly",
                "fullTitle": "REDUCER: CourseSnapshot ACTION: FETCH_COURSE_SNAPSHOT_PENDING Should begin fetching a course snapshot correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "82a36990-4d71-480e-9234-1e742eb63541",
                "parentUUID": "d7aec2c0-5c85-417a-997f-3b6c6d81056e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseSnapshotReducer.spec.js",
            "uuid": "d7aec2c0-5c85-417a-997f-3b6c6d81056e",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseSnapshotReducer.spec.js",
            "passes": [
              {
                "title": "Should begin fetching a course snapshot correctly",
                "fullTitle": "REDUCER: CourseSnapshot ACTION: FETCH_COURSE_SNAPSHOT_PENDING Should begin fetching a course snapshot correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "82a36990-4d71-480e-9234-1e742eb63541",
                "parentUUID": "d7aec2c0-5c85-417a-997f-3b6c6d81056e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: FETCH_COURSE_SNAPSHOT_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should handle a successful course snapshot fetch correctly",
                "fullTitle": "REDUCER: CourseSnapshot ACTION: FETCH_COURSE_SNAPSHOT_FULFILLED Should handle a successful course snapshot fetch correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"Snap data\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: \"Snap data\"\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "821cb264-c356-40ee-93e5-1d5de76c3c19",
                "parentUUID": "cd09f7a8-db32-4255-82c6-f323fc2ade0a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseSnapshotReducer.spec.js",
            "uuid": "cd09f7a8-db32-4255-82c6-f323fc2ade0a",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseSnapshotReducer.spec.js",
            "passes": [
              {
                "title": "Should handle a successful course snapshot fetch correctly",
                "fullTitle": "REDUCER: CourseSnapshot ACTION: FETCH_COURSE_SNAPSHOT_FULFILLED Should handle a successful course snapshot fetch correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"Snap data\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: \"Snap data\"\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "821cb264-c356-40ee-93e5-1d5de76c3c19",
                "parentUUID": "cd09f7a8-db32-4255-82c6-f323fc2ade0a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: FETCH_COURSE_SNAPSHOT_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should handle a rejected course snapshot fetch correctly",
                "fullTitle": "REDUCER: CourseSnapshot ACTION: FETCH_COURSE_SNAPSHOT_REJECTED Should handle a rejected course snapshot fetch correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9f2b4550-e500-432e-b5b8-649035f36c9d",
                "parentUUID": "2545a88f-a99c-4f85-85a7-d21692b4c112",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseSnapshotReducer.spec.js",
            "uuid": "2545a88f-a99c-4f85-85a7-d21692b4c112",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseSnapshotReducer.spec.js",
            "passes": [
              {
                "title": "Should handle a rejected course snapshot fetch correctly",
                "fullTitle": "REDUCER: CourseSnapshot ACTION: FETCH_COURSE_SNAPSHOT_REJECTED Should handle a rejected course snapshot fetch correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9f2b4550-e500-432e-b5b8-649035f36c9d",
                "parentUUID": "2545a88f-a99c-4f85-85a7-d21692b4c112",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/reducers/CourseSnapshotReducer.spec.js",
        "uuid": "8203d8c1-0dd3-4914-b537-680d3c74d1d0",
        "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseSnapshotReducer.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "REDUCER: CourseStructure",
        "suites": [
          {
            "title": "ACTION: INSERT_TEACHING_PERIOD",
            "suites": [],
            "tests": [
              {
                "title": "Should insert a teaching period with the given info correctly into middle of array",
                "fullTitle": "REDUCER: CourseStructure ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into middle of array",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2018,\n    code: \"S2-01\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "79c1d8a0-b48c-4b31-a38f-b6863500110c",
                "parentUUID": "fa4261b3-78ad-417a-847a-65933fd85457",
                "skipped": false
              },
              {
                "title": "Should insert a teaching period with the given info correctly into start of array",
                "fullTitle": "REDUCER: CourseStructure ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into start of array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2016,\n    code: \"S2-01\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2016, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "4dac658b-cffc-47e8-9570-00ec157a5e8e",
                "parentUUID": "fa4261b3-78ad-417a-847a-65933fd85457",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "fa4261b3-78ad-417a-847a-65933fd85457",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should insert a teaching period with the given info correctly into middle of array",
                "fullTitle": "REDUCER: CourseStructure ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into middle of array",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2018,\n    code: \"S2-01\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "79c1d8a0-b48c-4b31-a38f-b6863500110c",
                "parentUUID": "fa4261b3-78ad-417a-847a-65933fd85457",
                "skipped": false
              },
              {
                "title": "Should insert a teaching period with the given info correctly into start of array",
                "fullTitle": "REDUCER: CourseStructure ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into start of array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2016,\n    code: \"S2-01\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2016, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "4dac658b-cffc-47e8-9570-00ec157a5e8e",
                "parentUUID": "fa4261b3-78ad-417a-847a-65933fd85457",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3,
            "rootEmpty": false
          },
          {
            "title": "ACTION: REMOVE_TEACHING_PERIOD",
            "suites": [],
            "tests": [
              {
                "title": "Should remove a teaching period at the given index",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the given index",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "939c7d61-dd4a-4701-be3c-e5533dfd6bd9",
                "parentUUID": "05a2b9c0-3ba9-4382-9607-a0f2f809a4e5",
                "skipped": false
              },
              {
                "title": "Should remove a teaching period at the start of the array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the start of the array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a3c2a61f-0e57-427f-b853-1f7fe615c869",
                "parentUUID": "05a2b9c0-3ba9-4382-9607-a0f2f809a4e5",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "05a2b9c0-3ba9-4382-9607-a0f2f809a4e5",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should remove a teaching period at the given index",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the given index",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "939c7d61-dd4a-4701-be3c-e5533dfd6bd9",
                "parentUUID": "05a2b9c0-3ba9-4382-9607-a0f2f809a4e5",
                "skipped": false
              },
              {
                "title": "Should remove a teaching period at the start of the array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the start of the array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a3c2a61f-0e57-427f-b853-1f7fe615c869",
                "parentUUID": "05a2b9c0-3ba9-4382-9607-a0f2f809a4e5",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: APPEND_TEACHING_PERIOD",
            "suites": [],
            "tests": [
              {
                "title": "Should add the given teaching period to the end of the array",
                "fullTitle": "REDUCER: CourseStructure ACTION: APPEND_TEACHING_PERIOD Should add the given teaching period to the end of the array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"APPEND_TEACHING_PERIOD\",\n    year: 2020,\n    code: \"S2-01\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2020, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "90f7b3d6-c944-40d9-b3c4-c77be490c44e",
                "parentUUID": "f2646a68-f855-46f0-9f07-f054a7cfa85a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "f2646a68-f855-46f0-9f07-f054a7cfa85a",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should add the given teaching period to the end of the array",
                "fullTitle": "REDUCER: CourseStructure ACTION: APPEND_TEACHING_PERIOD Should add the given teaching period to the end of the array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"APPEND_TEACHING_PERIOD\",\n    year: 2020,\n    code: \"S2-01\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2020, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "90f7b3d6-c944-40d9-b3c4-c77be490c44e",
                "parentUUID": "f2646a68-f855-46f0-9f07-f054a7cfa85a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "ACTION: INCREASE_STUDY_LOAD",
            "suites": [],
            "tests": [
              {
                "title": "Should increase the study load if the study load is less than 4",
                "fullTitle": "REDUCER: CourseStructure ACTION: INCREASE_STUDY_LOAD Should increase the study load if the study load is less than 4",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ae9d62e1-2b14-4ad8-b3da-5216c907fd5e",
                "parentUUID": "99c366c7-98e6-4f07-a332-e68a19d6ad8f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "99c366c7-98e6-4f07-a332-e68a19d6ad8f",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should increase the study load if the study load is less than 4",
                "fullTitle": "REDUCER: CourseStructure ACTION: INCREASE_STUDY_LOAD Should increase the study load if the study load is less than 4",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ae9d62e1-2b14-4ad8-b3da-5216c907fd5e",
                "parentUUID": "99c366c7-98e6-4f07-a332-e68a19d6ad8f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: DECREASE_STUDY_LOAD",
            "suites": [],
            "tests": [
              {
                "title": "Should decrease the study load if the study load is greater than 4",
                "fullTitle": "REDUCER: CourseStructure ACTION: DECREASE_STUDY_LOAD Should decrease the study load if the study load is greater than 4",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "8317f013-a9b9-481a-89e1-416159e2b66a",
                "parentUUID": "8b951c67-f658-4aa9-9bbc-178b80b2cbb4",
                "skipped": false
              },
              {
                "title": "Should not decrease the study load if the study load is 4 or less",
                "fullTitle": "REDUCER: CourseStructure ACTION: DECREASE_STUDY_LOAD Should not decrease the study load if the study load is 4 or less",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0e742a79-a36b-4cb7-adc8-39f826d190b9",
                "parentUUID": "8b951c67-f658-4aa9-9bbc-178b80b2cbb4",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "8b951c67-f658-4aa9-9bbc-178b80b2cbb4",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should decrease the study load if the study load is greater than 4",
                "fullTitle": "REDUCER: CourseStructure ACTION: DECREASE_STUDY_LOAD Should decrease the study load if the study load is greater than 4",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "8317f013-a9b9-481a-89e1-416159e2b66a",
                "parentUUID": "8b951c67-f658-4aa9-9bbc-178b80b2cbb4",
                "skipped": false
              },
              {
                "title": "Should not decrease the study load if the study load is 4 or less",
                "fullTitle": "REDUCER: CourseStructure ACTION: DECREASE_STUDY_LOAD Should not decrease the study load if the study load is 4 or less",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0e742a79-a36b-4cb7-adc8-39f826d190b9",
                "parentUUID": "8b951c67-f658-4aa9-9bbc-178b80b2cbb4",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2,
            "rootEmpty": false
          },
          {
            "title": "ACTION: CLEAR_COURSE",
            "suites": [],
            "tests": [
              {
                "title": "Should remove all teaching periods and set the amount of units to 4",
                "fullTitle": "REDUCER: CourseStructure ACTION: CLEAR_COURSE Should remove all teaching periods and set the amount of units to 4",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5,\n    courseInfoLoadError: false,\n    courseInfoLoading: false\n};\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = {\n    courseInfoLoadError: false,\n    courseInfoLoading: false,\n    courseInfo: {\n        courseName: \"\",\n        faculty: \"\",\n        creditPoints: 0,\n        courseDescription: \"\",\n        durationStr: \"\",\n        modeAndLocation: \"\",\n        awards: \"\",\n        abrTitle: \"\"\n    },\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "24cf571a-10ee-4790-a295-cf83875595aa",
                "parentUUID": "1d0821f7-3044-48cd-b211-f1fb58e3214a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "1d0821f7-3044-48cd-b211-f1fb58e3214a",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should remove all teaching periods and set the amount of units to 4",
                "fullTitle": "REDUCER: CourseStructure ACTION: CLEAR_COURSE Should remove all teaching periods and set the amount of units to 4",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5,\n    courseInfoLoadError: false,\n    courseInfoLoading: false\n};\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = {\n    courseInfoLoadError: false,\n    courseInfoLoading: false,\n    courseInfo: {\n        courseName: \"\",\n        faculty: \"\",\n        creditPoints: 0,\n        courseDescription: \"\",\n        durationStr: \"\",\n        modeAndLocation: \"\",\n        awards: \"\",\n        abrTitle: \"\"\n    },\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "24cf571a-10ee-4790-a295-cf83875595aa",
                "parentUUID": "1d0821f7-3044-48cd-b211-f1fb58e3214a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "ACTION: ADD_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should add a unit correctly to the start of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: ADD_UNIT Should add a unit correctly to the start of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", totalCreditpoints: 6, units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }, null, null, null] }, { year: 2018, code: \"S2-01\", totalCreditpoints: 0, units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", totalCreditpoints: 0, units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a8137e42-48a5-47b9-aafd-907a99cb7ca7",
                "parentUUID": "f6680f07-1fa3-437b-850d-8a1069f9f226",
                "skipped": false
              },
              {
                "title": "Should add a unit correctly to the middle of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: ADD_UNIT Should add a unit correctly to the middle of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d7909126-ef27-4dd1-8d46-c56095c0f946",
                "parentUUID": "f6680f07-1fa3-437b-850d-8a1069f9f226",
                "skipped": false
              },
              {
                "title": "Should add a unit correctly to the end of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: ADD_UNIT Should add a unit correctly to the end of an array",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c9b43ef3-82ba-4c82-a79a-51f25fd6d4de",
                "parentUUID": "f6680f07-1fa3-437b-850d-8a1069f9f226",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "f6680f07-1fa3-437b-850d-8a1069f9f226",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should add a unit correctly to the start of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: ADD_UNIT Should add a unit correctly to the start of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", totalCreditpoints: 6, units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }, null, null, null] }, { year: 2018, code: \"S2-01\", totalCreditpoints: 0, units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", totalCreditpoints: 0, units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a8137e42-48a5-47b9-aafd-907a99cb7ca7",
                "parentUUID": "f6680f07-1fa3-437b-850d-8a1069f9f226",
                "skipped": false
              },
              {
                "title": "Should add a unit correctly to the middle of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: ADD_UNIT Should add a unit correctly to the middle of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d7909126-ef27-4dd1-8d46-c56095c0f946",
                "parentUUID": "f6680f07-1fa3-437b-850d-8a1069f9f226",
                "skipped": false
              },
              {
                "title": "Should add a unit correctly to the end of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: ADD_UNIT Should add a unit correctly to the end of an array",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c9b43ef3-82ba-4c82-a79a-51f25fd6d4de",
                "parentUUID": "f6680f07-1fa3-437b-850d-8a1069f9f226",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 7,
            "rootEmpty": false
          },
          {
            "title": "ACTION: REMOVE_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should remove a unit correctly frpm the start of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_UNIT Should remove a unit correctly frpm the start of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0,\n    creditPoints: 6\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5d567e36-2b18-485a-b87b-8ec2202d796d",
                "parentUUID": "34c597f8-3532-477e-a592-5a0791436ade",
                "skipped": false
              },
              {
                "title": "Should remove a unit correctly from the middle of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_UNIT Should remove a unit correctly from the middle of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1,\n    creditPoints: 6\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0f8aae63-a886-4066-a796-42adbb6dc658",
                "parentUUID": "34c597f8-3532-477e-a592-5a0791436ade",
                "skipped": false
              },
              {
                "title": "Should remove a unit correctly from the end of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_UNIT Should remove a unit correctly from the end of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3,\n    creditPoints: 6\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "6eb2223c-5af2-49d0-9b12-c31b078053f2",
                "parentUUID": "34c597f8-3532-477e-a592-5a0791436ade",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "34c597f8-3532-477e-a592-5a0791436ade",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should remove a unit correctly frpm the start of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_UNIT Should remove a unit correctly frpm the start of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0,\n    creditPoints: 6\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5d567e36-2b18-485a-b87b-8ec2202d796d",
                "parentUUID": "34c597f8-3532-477e-a592-5a0791436ade",
                "skipped": false
              },
              {
                "title": "Should remove a unit correctly from the middle of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_UNIT Should remove a unit correctly from the middle of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1,\n    creditPoints: 6\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0f8aae63-a886-4066-a796-42adbb6dc658",
                "parentUUID": "34c597f8-3532-477e-a592-5a0791436ade",
                "skipped": false
              },
              {
                "title": "Should remove a unit correctly from the end of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_UNIT Should remove a unit correctly from the end of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3,\n    creditPoints: 6\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "6eb2223c-5af2-49d0-9b12-c31b078053f2",
                "parentUUID": "34c597f8-3532-477e-a592-5a0791436ade",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3,
            "rootEmpty": false
          },
          {
            "title": "ACTION: GENERATE_COURSE",
            "suites": [],
            "tests": [
              {
                "title": "Should generate a course structure with valid start and end years",
                "fullTitle": "REDUCER: CourseStructure ACTION: GENERATE_COURSE Should generate a course structure with valid start and end years",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2014,\n    endYear: 2016\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5884cbb1-3b14-4293-a5c6-faa22fc5ec93",
                "parentUUID": "65c8f27b-636e-4dfb-a4ce-28d51cece14d",
                "skipped": false
              },
              {
                "title": "Should return an empty course structure with invalid start and end years.",
                "fullTitle": "REDUCER: CourseStructure ACTION: GENERATE_COURSE Should return an empty course structure with invalid start and end years.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2017,\n    endYear: 2013\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7ab73cad-29d9-4816-8609-264418ac5aed",
                "parentUUID": "65c8f27b-636e-4dfb-a4ce-28d51cece14d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "65c8f27b-636e-4dfb-a4ce-28d51cece14d",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should generate a course structure with valid start and end years",
                "fullTitle": "REDUCER: CourseStructure ACTION: GENERATE_COURSE Should generate a course structure with valid start and end years",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2014,\n    endYear: 2016\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5884cbb1-3b14-4293-a5c6-faa22fc5ec93",
                "parentUUID": "65c8f27b-636e-4dfb-a4ce-28d51cece14d",
                "skipped": false
              },
              {
                "title": "Should return an empty course structure with invalid start and end years.",
                "fullTitle": "REDUCER: CourseStructure ACTION: GENERATE_COURSE Should return an empty course structure with invalid start and end years.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2017,\n    endYear: 2013\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7ab73cad-29d9-4816-8609-264418ac5aed",
                "parentUUID": "65c8f27b-636e-4dfb-a4ce-28d51cece14d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2,
            "rootEmpty": false
          },
          {
            "title": "ACTION: FETCH_COURSE_INFO_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show that the course info is loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_INFO_PENDING Should correctly show that the course info is loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7fdc9583-2836-417f-8291-70ac2e0aa861",
                "parentUUID": "3edff107-09c2-4313-8121-22dca26fdc7e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "3edff107-09c2-4313-8121-22dca26fdc7e",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly show that the course info is loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_INFO_PENDING Should correctly show that the course info is loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7fdc9583-2836-417f-8291-70ac2e0aa861",
                "parentUUID": "3edff107-09c2-4313-8121-22dca26fdc7e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: FETCH_COURSE_INFO_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly return the payload and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    focusedCourse: null,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_FULFILLED\",\n    payload: { data: {\n            \"propertyMap\": {\n                courseCode: \"Test Code\",\n                courseName: \"Test Course\",\n                mangFac: \"Test Faculty\",\n                creditPoints: 100,\n                courseDescrip: {\n                    \"value\": \"Test Description\"\n                },\n                courseDuration: \"Test Duration\",\n                modeLoc: {\n                    \"value\": \"Test mode and location\"\n                },\n                courseAward: \"Test awards\",\n                abrevTitle: \"Test abreviated title\"\n            }\n        } },\n    courseCode: \"COURSE101\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: {\n        courseCode: \"Test Code\",\n        courseName: \"Test Course\",\n        faculty: \"Test Faculty\",\n        creditPoints: 100,\n        courseDescription: \"Test Description\",\n        durationStr: \"Test Duration\",\n        modeAndLocation: \"Test mode and location\",\n        awards: \"Test awards\",\n        abrTitle: \"Test abreviated title\"\n    },\n    focusedCourse: \"COURSE101\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1debd5e7-4d5a-4fa0-9709-001e31d17a77",
                "parentUUID": "7909e36b-5c48-4d5f-b613-cb16c604cf23",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "7909e36b-5c48-4d5f-b613-cb16c604cf23",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly return the payload and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    focusedCourse: null,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_FULFILLED\",\n    payload: { data: {\n            \"propertyMap\": {\n                courseCode: \"Test Code\",\n                courseName: \"Test Course\",\n                mangFac: \"Test Faculty\",\n                creditPoints: 100,\n                courseDescrip: {\n                    \"value\": \"Test Description\"\n                },\n                courseDuration: \"Test Duration\",\n                modeLoc: {\n                    \"value\": \"Test mode and location\"\n                },\n                courseAward: \"Test awards\",\n                abrevTitle: \"Test abreviated title\"\n            }\n        } },\n    courseCode: \"COURSE101\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: {\n        courseCode: \"Test Code\",\n        courseName: \"Test Course\",\n        faculty: \"Test Faculty\",\n        creditPoints: 100,\n        courseDescription: \"Test Description\",\n        durationStr: \"Test Duration\",\n        modeAndLocation: \"Test mode and location\",\n        awards: \"Test awards\",\n        abrTitle: \"Test abreviated title\"\n    },\n    focusedCourse: \"COURSE101\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1debd5e7-4d5a-4fa0-9709-001e31d17a77",
                "parentUUID": "7909e36b-5c48-4d5f-b613-cb16c604cf23",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "ACTION: FETCH_COURSE_INFO_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show that the course info fetch failed and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_INFO_REJECTED Should correctly show that the course info fetch failed and show that it is no longer loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: true,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "deb223f2-7478-4232-91b8-d7975e58f94a",
                "parentUUID": "979559b0-93b9-43b7-965e-7e5fc745b4b6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "979559b0-93b9-43b7-965e-7e5fc745b4b6",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly show that the course info fetch failed and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_INFO_REJECTED Should correctly show that the course info fetch failed and show that it is no longer loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: true,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "deb223f2-7478-4232-91b8-d7975e58f94a",
                "parentUUID": "979559b0-93b9-43b7-965e-7e5fc745b4b6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "ACTION: FETCH_COURSE_TEMPLATE_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show that the course template is loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_TEMPLATE_PENDING Should correctly show that the course template is loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5512e2d4-6353-436e-94ca-01236366bdb8",
                "parentUUID": "79a18708-b06e-4767-8853-47e36b31a12d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "79a18708-b06e-4767-8853-47e36b31a12d",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly show that the course template is loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_TEMPLATE_PENDING Should correctly show that the course template is loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5512e2d4-6353-436e-94ca-01236366bdb8",
                "parentUUID": "79a18708-b06e-4767-8853-47e36b31a12d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: FETCH_COURSE_TEMPLATE_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly return the payload and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_TEMPLATE_FULFILLED Should correctly return the payload and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_FULFILLED\",\n    payload: {\n        data: {\n            propertyMap: \"Fake Course Template\"\n        }\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: \"Fake Course Template\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "bce05132-9998-44b2-b307-334ae858fa4f",
                "parentUUID": "6b2c98ad-cfd6-4e93-8e96-01794ff02c47",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "6b2c98ad-cfd6-4e93-8e96-01794ff02c47",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly return the payload and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_TEMPLATE_FULFILLED Should correctly return the payload and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_FULFILLED\",\n    payload: {\n        data: {\n            propertyMap: \"Fake Course Template\"\n        }\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: \"Fake Course Template\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "bce05132-9998-44b2-b307-334ae858fa4f",
                "parentUUID": "6b2c98ad-cfd6-4e93-8e96-01794ff02c47",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: FETCH_COURSE_TEMPLATE_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show that the course template fetch failed and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_TEMPLATE_REJECTED Should correctly show that the course template fetch failed and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: true,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "89d7a0de-e1a1-4bc8-bac7-2e1de743bf23",
                "parentUUID": "f46728e8-f9c0-4fcd-948f-437202c3ac7e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "f46728e8-f9c0-4fcd-948f-437202c3ac7e",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly show that the course template fetch failed and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_TEMPLATE_REJECTED Should correctly show that the course template fetch failed and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: true,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "89d7a0de-e1a1-4bc8-bac7-2e1de743bf23",
                "parentUUID": "f46728e8-f9c0-4fcd-948f-437202c3ac7e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: FETCH_UNIT_INFO_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show that the unit info is loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_UNIT_INFO_PENDING Should correctly show that the unit info is loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: {\n        preqs: \"\",\n        creditPoints: 0,\n        rules: [],\n        locationAndTime: \"\",\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"\",\n        eftsl: 0,\n        descriptions: \"\"\n    },\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: {\n        preqs: \"\",\n        creditPoints: 0,\n        rules: [],\n        locationAndTime: \"\",\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"\",\n        eftsl: 0,\n        descriptions: \"\"\n    },\n    focusedUnitCode: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "3653a724-66fa-470e-a331-c8b940fd86e3",
                "parentUUID": "02be4ca5-4439-4130-8300-32276caf02af",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "02be4ca5-4439-4130-8300-32276caf02af",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly show that the unit info is loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_UNIT_INFO_PENDING Should correctly show that the unit info is loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: {\n        preqs: \"\",\n        creditPoints: 0,\n        rules: [],\n        locationAndTime: \"\",\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"\",\n        eftsl: 0,\n        descriptions: \"\"\n    },\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: {\n        preqs: \"\",\n        creditPoints: 0,\n        rules: [],\n        locationAndTime: \"\",\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"\",\n        eftsl: 0,\n        descriptions: \"\"\n    },\n    focusedUnitCode: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "3653a724-66fa-470e-a331-c8b940fd86e3",
                "parentUUID": "02be4ca5-4439-4130-8300-32276caf02af",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "ACTION: FETCH_UNIT_INFO_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly return the payload and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_UNIT_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_FULFILLED\",\n    payload: { data: \"Fake Unit Info\" },\n    unitCode: \"FAKE1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: \"Fake Unit Info\",\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c94307c9-6567-4540-9266-29fdc5290ce9",
                "parentUUID": "88715d27-f36b-4af9-b810-b0325b3b2f70",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "88715d27-f36b-4af9-b810-b0325b3b2f70",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly return the payload and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_UNIT_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_FULFILLED\",\n    payload: { data: \"Fake Unit Info\" },\n    unitCode: \"FAKE1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: \"Fake Unit Info\",\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c94307c9-6567-4540-9266-29fdc5290ce9",
                "parentUUID": "88715d27-f36b-4af9-b810-b0325b3b2f70",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: FETCH_UNIT_INFO_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show that the unit info fetch failed and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_UNIT_INFO_REJECTED Should correctly show that the unit info fetch failed and show that it is no longer loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_REJECTED\",\n    payload: {\n        response: {\n            status: 404\n        }\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: {\n        response: {\n            status: 404\n        }\n    },\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "68d3dc1f-9c87-4492-acac-ac86c15c3268",
                "parentUUID": "bf04e57a-f982-4c66-8911-3d136a581bb8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "bf04e57a-f982-4c66-8911-3d136a581bb8",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly show that the unit info fetch failed and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_UNIT_INFO_REJECTED Should correctly show that the unit info fetch failed and show that it is no longer loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_REJECTED\",\n    payload: {\n        response: {\n            status: 404\n        }\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: {\n        response: {\n            status: 404\n        }\n    },\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "68d3dc1f-9c87-4492-acac-ac86c15c3268",
                "parentUUID": "bf04e57a-f982-4c66-8911-3d136a581bb8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "ACTION: SUBMIT_COURSE_FORM",
            "suites": [],
            "tests": [
              {
                "title": "Should accurately set the start year and the focused course on submission",
                "fullTitle": "REDUCER: CourseStructure ACTION: SUBMIT_COURSE_FORM Should accurately set the start year and the focused course on submission",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_COURSE_FORM\",\n    startYear: 2020,\n    courseCode: \"TEST1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: \"TEST1001\",\n    startYear: 2020,\n    endYear: 2020\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "85e441ef-2cb7-48f0-b313-569e852d21f6",
                "parentUUID": "cfcfa878-b3fb-4991-94e5-d49850157757",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "cfcfa878-b3fb-4991-94e5-d49850157757",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should accurately set the start year and the focused course on submission",
                "fullTitle": "REDUCER: CourseStructure ACTION: SUBMIT_COURSE_FORM Should accurately set the start year and the focused course on submission",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_COURSE_FORM\",\n    startYear: 2020,\n    courseCode: \"TEST1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: \"TEST1001\",\n    startYear: 2020,\n    endYear: 2020\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "85e441ef-2cb7-48f0-b313-569e852d21f6",
                "parentUUID": "cfcfa878-b3fb-4991-94e5-d49850157757",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: SUBMIT_YEAR_FORM",
            "suites": [],
            "tests": [
              {
                "title": "Should accurately set the start year and end year on submission",
                "fullTitle": "REDUCER: CourseStructure ACTION: SUBMIT_YEAR_FORM Should accurately set the start year and end year on submission",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_YEAR_FORM\",\n    startYear: 2020,\n    endYear: 2025\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2020,\n    endYear: 2025\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "69cb2c84-b4df-4984-a081-a1ef26f6e0ea",
                "parentUUID": "7f298e5d-3fb1-4b88-b2bf-9e3b870c3a61",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "7f298e5d-3fb1-4b88-b2bf-9e3b870c3a61",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should accurately set the start year and end year on submission",
                "fullTitle": "REDUCER: CourseStructure ACTION: SUBMIT_YEAR_FORM Should accurately set the start year and end year on submission",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_YEAR_FORM\",\n    startYear: 2020,\n    endYear: 2025\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2020,\n    endYear: 2025\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "69cb2c84-b4df-4984-a081-a1ef26f6e0ea",
                "parentUUID": "7f298e5d-3fb1-4b88-b2bf-9e3b870c3a61",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: FETCH_TEACHING_PERIODS_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly handle  of teaching periods data",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_TEACHING_PERIODS_PENDING Should correctly handle  of teaching periods data",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "345738c9-08dc-45dc-92b7-0c06f0f6557b",
                "parentUUID": "4e78d1af-2445-4ab9-8b0b-8998c500a8a7",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "4e78d1af-2445-4ab9-8b0b-8998c500a8a7",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly handle  of teaching periods data",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_TEACHING_PERIODS_PENDING Should correctly handle  of teaching periods data",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "345738c9-08dc-45dc-92b7-0c06f0f6557b",
                "parentUUID": "4e78d1af-2445-4ab9-8b0b-8998c500a8a7",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "ACTION: FETCH_TEACHING_PERIODS_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly handle  of teaching periods data",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_TEACHING_PERIODS_FULFILLED Should correctly handle  of teaching periods data",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_FULFILLED\",\n    payload: \"Teaching period strings\"\n};\nvar stateAfter = {\n    teachingPeriodData: \"Teaching period strings\",\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c18bbc12-a4f4-4a39-8d83-6ed3fc049f3e",
                "parentUUID": "c6d344e8-0ad4-4d44-9136-1807496aa332",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "c6d344e8-0ad4-4d44-9136-1807496aa332",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly handle  of teaching periods data",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_TEACHING_PERIODS_FULFILLED Should correctly handle  of teaching periods data",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_FULFILLED\",\n    payload: \"Teaching period strings\"\n};\nvar stateAfter = {\n    teachingPeriodData: \"Teaching period strings\",\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c18bbc12-a4f4-4a39-8d83-6ed3fc049f3e",
                "parentUUID": "c6d344e8-0ad4-4d44-9136-1807496aa332",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: FETCH_TEACHING_PERIODS_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly handle  of teaching periods data",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_TEACHING_PERIODS_REJECTED Should correctly handle  of teaching periods data",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "346f8d9b-50ac-464b-a8f2-645d010b9792",
                "parentUUID": "13e9792b-773b-498d-951f-2d0996d2a460",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "13e9792b-773b-498d-951f-2d0996d2a460",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly handle  of teaching periods data",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_TEACHING_PERIODS_REJECTED Should correctly handle  of teaching periods data",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "346f8d9b-50ac-464b-a8f2-645d010b9792",
                "parentUUID": "13e9792b-773b-498d-951f-2d0996d2a460",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: SHOW_INSERT_TEACHING_PERIOD_UI",
            "suites": [],
            "tests": [
              {
                "title": "Should set the teaching period code to insert value correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should set the teaching period code to insert value correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodCodeToInsert: null,\n    testParam1: 1,\n    testParam2: \"test\"\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"S1-02\"\n};\nvar stateAfter = {\n    teachingPeriodCodeToInsert: \"S1-02\",\n    testParam1: 1,\n    testParam2: \"test\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "fb0fe230-92ba-4b80-a9e4-772c1cc89f77",
                "parentUUID": "a6439ab4-5036-4a49-98ef-f05e9d1696d6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "a6439ab4-5036-4a49-98ef-f05e9d1696d6",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should set the teaching period code to insert value correctly",
                "fullTitle": "REDUCER: CourseStructure ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should set the teaching period code to insert value correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriodCodeToInsert: null,\n    testParam1: 1,\n    testParam2: \"test\"\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"S1-02\"\n};\nvar stateAfter = {\n    teachingPeriodCodeToInsert: \"S1-02\",\n    testParam1: 1,\n    testParam2: \"test\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "fb0fe230-92ba-4b80-a9e4-772c1cc89f77",
                "parentUUID": "a6439ab4-5036-4a49-98ef-f05e9d1696d6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: UPDATE_AFFECTED_UNITS",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly update the affected units value to the given array",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_AFFECTED_UNITS Should correctly update the affected units value to the given array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: []\n};\nvar action = {\n    type: \"UPDATE_AFFECTED_UNITS\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0d16b5d0-50d6-4632-8217-42ee60bfcfd1",
                "parentUUID": "fa8cc639-997d-4af7-9a3b-edb0094f2a2f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "fa8cc639-997d-4af7-9a3b-edb0094f2a2f",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly update the affected units value to the given array",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_AFFECTED_UNITS Should correctly update the affected units value to the given array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: []\n};\nvar action = {\n    type: \"UPDATE_AFFECTED_UNITS\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0d16b5d0-50d6-4632-8217-42ee60bfcfd1",
                "parentUUID": "fa8cc639-997d-4af7-9a3b-edb0094f2a2f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: UPDATE_INDEX_OF_TP_TO_REMOVE",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly update the index of tp to remove value to the given value",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_INDEX_OF_TP_TO_REMOVE Should correctly update the index of tp to remove value to the given value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 0\n};\nvar action = {\n    type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\",\n    index: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 1\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "de55ef0e-3d7f-47cc-9777-ea4ceb544bd3",
                "parentUUID": "bafe5208-2108-4e39-a566-c36c979704ac",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "bafe5208-2108-4e39-a566-c36c979704ac",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly update the index of tp to remove value to the given value",
                "fullTitle": "REDUCER: CourseStructure ACTION: UPDATE_INDEX_OF_TP_TO_REMOVE Should correctly update the index of tp to remove value to the given value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 0\n};\nvar action = {\n    type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\",\n    index: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 1\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "de55ef0e-3d7f-47cc-9777-ea4ceb544bd3",
                "parentUUID": "bafe5208-2108-4e39-a566-c36c979704ac",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: MOVING_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly begin moving a unit",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVING_UNIT Should correctly begin moving a unit",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0\n};\nvar action = {\n    type: \"MOVING_UNIT\",\n    unit: \"TEST-UNIT\",\n    unitIndex: 3,\n    tpIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TEST-UNIT\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 3\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "72a2b298-5fbd-4a85-9caf-321ad0bf7e2a",
                "parentUUID": "b1ee37d8-b00b-4233-9db7-9e4a576ca88c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "b1ee37d8-b00b-4233-9db7-9e4a576ca88c",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly begin moving a unit",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVING_UNIT Should correctly begin moving a unit",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0\n};\nvar action = {\n    type: \"MOVING_UNIT\",\n    unit: \"TEST-UNIT\",\n    unitIndex: 3,\n    tpIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TEST-UNIT\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 3\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "72a2b298-5fbd-4a85-9caf-321ad0bf7e2a",
                "parentUUID": "b1ee37d8-b00b-4233-9db7-9e4a576ca88c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: MOVE_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly handle moving a unit to a teaching period earlier than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period earlier than it",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitName: \"TestUnit\", creditPoints: 6 }, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "17a4dc09-667d-497e-9ab5-3d4cf4255f4f",
                "parentUUID": "2cc799b1-f2f9-4c5b-bab1-f23db957ed1f",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to a teaching period later than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period later than it",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitName: \"TestUnit\", creditPoints: 6 }, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "4606a01b-6b8a-4638-ac01-dd77712671c0",
                "parentUUID": "2cc799b1-f2f9-4c5b-bab1-f23db957ed1f",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to the same teaching period but earlier position",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but earlier position",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [\"PlaceToMoveTo\", { unitName: \"TestUnit\", creditPoints: 6 }, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [{ unitName: \"TestUnit\", creditPoints: 6 }, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "3433303f-089f-4c7f-b9f7-8697d31a96cf",
                "parentUUID": "2cc799b1-f2f9-4c5b-bab1-f23db957ed1f",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to the same teaching period but later position",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but later position",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [{ unitName: \"TestUnit\", creditPoints: 6 }, null, \"PlaceToMoveTo\", null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a64004d4-7cdf-4406-b6a2-94861bcefa70",
                "parentUUID": "2cc799b1-f2f9-4c5b-bab1-f23db957ed1f",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to the same teaching period and exact same position",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period and exact same position",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "2339d58e-b4da-43a1-abb6-db99e24e272f",
                "parentUUID": "2cc799b1-f2f9-4c5b-bab1-f23db957ed1f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "2cc799b1-f2f9-4c5b-bab1-f23db957ed1f",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly handle moving a unit to a teaching period earlier than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period earlier than it",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitName: \"TestUnit\", creditPoints: 6 }, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "17a4dc09-667d-497e-9ab5-3d4cf4255f4f",
                "parentUUID": "2cc799b1-f2f9-4c5b-bab1-f23db957ed1f",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to a teaching period later than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period later than it",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitName: \"TestUnit\", creditPoints: 6 }, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "4606a01b-6b8a-4638-ac01-dd77712671c0",
                "parentUUID": "2cc799b1-f2f9-4c5b-bab1-f23db957ed1f",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to the same teaching period but earlier position",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but earlier position",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [\"PlaceToMoveTo\", { unitName: \"TestUnit\", creditPoints: 6 }, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [{ unitName: \"TestUnit\", creditPoints: 6 }, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "3433303f-089f-4c7f-b9f7-8697d31a96cf",
                "parentUUID": "2cc799b1-f2f9-4c5b-bab1-f23db957ed1f",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to the same teaching period but later position",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but later position",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [{ unitName: \"TestUnit\", creditPoints: 6 }, null, \"PlaceToMoveTo\", null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a64004d4-7cdf-4406-b6a2-94861bcefa70",
                "parentUUID": "2cc799b1-f2f9-4c5b-bab1-f23db957ed1f",
                "skipped": false
              },
              {
                "title": "Should correctly handle moving a unit to the same teaching period and exact same position",
                "fullTitle": "REDUCER: CourseStructure ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period and exact same position",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "2339d58e-b4da-43a1-abb6-db99e24e272f",
                "parentUUID": "2cc799b1-f2f9-4c5b-bab1-f23db957ed1f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 4,
            "rootEmpty": false
          },
          {
            "title": "ACTION: CANCEL_MOVING_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "should cancel moving unit",
                "fullTitle": "REDUCER: CourseStructure ACTION: CANCEL_MOVING_UNIT should cancel moving unit",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: \"TestUnit2\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: undefined,\n    unitsIndexOfUnitToBeMoved: undefined\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "89a9c755-68bc-44e0-95aa-3819e3e93e6c",
                "parentUUID": "d42ff29f-56a4-48a0-bec4-dfce13d81ef0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "d42ff29f-56a4-48a0-bec4-dfce13d81ef0",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "should cancel moving unit",
                "fullTitle": "REDUCER: CourseStructure ACTION: CANCEL_MOVING_UNIT should cancel moving unit",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: \"TestUnit2\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: undefined,\n    unitsIndexOfUnitToBeMoved: undefined\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "89a9c755-68bc-44e0-95aa-3819e3e93e6c",
                "parentUUID": "d42ff29f-56a4-48a0-bec4-dfce13d81ef0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "ACTION: SWAP_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly handle swaping a unit to a teaching period earlier than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period earlier than it",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "07cb27f5-5f3f-4d2e-b223-fc816e21029f",
                "parentUUID": "07c0c935-7e8b-4f51-8610-16734902cd1b",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to a teaching period later than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period later than it",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c1dfddeb-531c-400b-90bf-ce30cc02eb6d",
                "parentUUID": "07c0c935-7e8b-4f51-8610-16734902cd1b",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to the same teaching period but earlier position",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but earlier position",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "4a05feaf-1622-479e-ab68-2d8df315bcdd",
                "parentUUID": "07c0c935-7e8b-4f51-8610-16734902cd1b",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to the same teaching period but later position",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but later position",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, \"PlaceToMoveTo\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", null, \"TestUnit\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "79d6cba5-93fc-4979-8187-ea5bc6e0ce52",
                "parentUUID": "07c0c935-7e8b-4f51-8610-16734902cd1b",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to the same teaching period and exact same position",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period and exact same position",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "fe25962a-95eb-4864-a786-ef093c94c260",
                "parentUUID": "07c0c935-7e8b-4f51-8610-16734902cd1b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "07c0c935-7e8b-4f51-8610-16734902cd1b",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly handle swaping a unit to a teaching period earlier than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period earlier than it",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "07cb27f5-5f3f-4d2e-b223-fc816e21029f",
                "parentUUID": "07c0c935-7e8b-4f51-8610-16734902cd1b",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to a teaching period later than it",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period later than it",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c1dfddeb-531c-400b-90bf-ce30cc02eb6d",
                "parentUUID": "07c0c935-7e8b-4f51-8610-16734902cd1b",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to the same teaching period but earlier position",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but earlier position",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "4a05feaf-1622-479e-ab68-2d8df315bcdd",
                "parentUUID": "07c0c935-7e8b-4f51-8610-16734902cd1b",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to the same teaching period but later position",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but later position",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, \"PlaceToMoveTo\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", null, \"TestUnit\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "79d6cba5-93fc-4979-8187-ea5bc6e0ce52",
                "parentUUID": "07c0c935-7e8b-4f51-8610-16734902cd1b",
                "skipped": false
              },
              {
                "title": "Should correctly handle swaping a unit to the same teaching period and exact same position",
                "fullTitle": "REDUCER: CourseStructure ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period and exact same position",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "fe25962a-95eb-4864-a786-ef093c94c260",
                "parentUUID": "07c0c935-7e8b-4f51-8610-16734902cd1b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3,
            "rootEmpty": false
          },
          {
            "title": "ACTION: VALIDATE_COURSE",
            "suites": [
              {
                "title": "duplicates:",
                "suites": [],
                "tests": [
                  {
                    "title": "Should not give duplicate unit errors if the first attempt is in the past, and the second attempt is not two or more years into the future.",
                    "fullTitle": "ACTION: VALIDATE_COURSE duplicates: Should not give duplicate unit errors if the first attempt is in the past, and the second attempt is not two or more years into the future.",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: new Date().getFullYear() - 1,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, null]\n    }, {\n        code: \"S1-01\",\n        year: new Date().getFullYear() + 1,\n        units: [null, null, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "acac92d2-d0fc-41f5-bdf7-e85256d2e103",
                    "parentUUID": "365bd452-f502-42bc-b46f-24f93fc1cf7d",
                    "skipped": false
                  },
                  {
                    "title": "Should give a duplicate unit error if there are two same units in the same teaching period",
                    "fullTitle": "ACTION: VALIDATE_COURSE duplicates: Should give a duplicate unit error if there are two same units in the same teaching period",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2015,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }, {\n        code: \"S2-01\",\n        year: 2015,\n        units: [null, null, null, {\n            unitCode: \"GJQ2039\"\n        }]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2015,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }, {\n        code: \"S2-01\",\n        year: 2015,\n        units: [null, null, null, {\n            unitCode: \"GJQ2039\"\n        }]\n    }],\n    courseErrors: [{\n        message: \"ABCD1234 already exists in the same teaching period. Please remove this unit.\",\n        coordinates: [[0, 3]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0bc2f100-ad8a-4eb1-a8ff-b93ddc5d3995",
                    "parentUUID": "365bd452-f502-42bc-b46f-24f93fc1cf7d",
                    "skipped": false
                  },
                  {
                    "title": "Should give a duplicate error if a duplicate unit is placed in a teaching period two years from now",
                    "fullTitle": "ACTION: VALIDATE_COURSE duplicates: Should give a duplicate error if a duplicate unit is placed in a teaching period two years from now",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var currentYear = new Date().getFullYear();\nvar stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: currentYear,\n        units: [{\n            unitCode: \"ABC1234\"\n        }, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 2,\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 2,\n        units: [null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: currentYear,\n        units: [{\n            unitCode: \"ABC1234\"\n        }, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 2,\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 2,\n        units: [null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan. Please plan as if you will pass all units.\",\n        coordinates: [[4, 1]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e0d8d3c0-ed1b-4d07-a2b3-a9b04a7e3c47",
                    "parentUUID": "365bd452-f502-42bc-b46f-24f93fc1cf7d",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/reducers/CourseStructure.spec.js",
                "uuid": "365bd452-f502-42bc-b46f-24f93fc1cf7d",
                "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseStructure.spec.js",
                "passes": [
                  {
                    "title": "Should not give duplicate unit errors if the first attempt is in the past, and the second attempt is not two or more years into the future.",
                    "fullTitle": "ACTION: VALIDATE_COURSE duplicates: Should not give duplicate unit errors if the first attempt is in the past, and the second attempt is not two or more years into the future.",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: new Date().getFullYear() - 1,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, null]\n    }, {\n        code: \"S1-01\",\n        year: new Date().getFullYear() + 1,\n        units: [null, null, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "acac92d2-d0fc-41f5-bdf7-e85256d2e103",
                    "parentUUID": "365bd452-f502-42bc-b46f-24f93fc1cf7d",
                    "skipped": false
                  },
                  {
                    "title": "Should give a duplicate unit error if there are two same units in the same teaching period",
                    "fullTitle": "ACTION: VALIDATE_COURSE duplicates: Should give a duplicate unit error if there are two same units in the same teaching period",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2015,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }, {\n        code: \"S2-01\",\n        year: 2015,\n        units: [null, null, null, {\n            unitCode: \"GJQ2039\"\n        }]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2015,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }, {\n        code: \"S2-01\",\n        year: 2015,\n        units: [null, null, null, {\n            unitCode: \"GJQ2039\"\n        }]\n    }],\n    courseErrors: [{\n        message: \"ABCD1234 already exists in the same teaching period. Please remove this unit.\",\n        coordinates: [[0, 3]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "0bc2f100-ad8a-4eb1-a8ff-b93ddc5d3995",
                    "parentUUID": "365bd452-f502-42bc-b46f-24f93fc1cf7d",
                    "skipped": false
                  },
                  {
                    "title": "Should give a duplicate error if a duplicate unit is placed in a teaching period two years from now",
                    "fullTitle": "ACTION: VALIDATE_COURSE duplicates: Should give a duplicate error if a duplicate unit is placed in a teaching period two years from now",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var currentYear = new Date().getFullYear();\nvar stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: currentYear,\n        units: [{\n            unitCode: \"ABC1234\"\n        }, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 2,\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 2,\n        units: [null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: currentYear,\n        units: [{\n            unitCode: \"ABC1234\"\n        }, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 2,\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 2,\n        units: [null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan. Please plan as if you will pass all units.\",\n        coordinates: [[4, 1]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e0d8d3c0-ed1b-4d07-a2b3-a9b04a7e3c47",
                    "parentUUID": "365bd452-f502-42bc-b46f-24f93fc1cf7d",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 3,
                "rootEmpty": false
              },
              {
                "title": "offerings:",
                "suites": [],
                "tests": [
                  {
                    "title": "Should give a course error for a unit not being offered in the teaching period it is in",
                    "fullTitle": "ACTION: VALIDATE_COURSE offerings: Should give a course error for a unit not being offered in the teaching period it is in",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2019,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: 2019,\n        units: [null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"First semester 2019 (Day)\"]\n            }]\n        }, null]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2019,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: 2019,\n        units: [null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"First semester 2019 (Day)\"]\n            }]\n        }, null]\n    }],\n    courseErrors: [{\n        message: \"ABC1234 is not offered in second semester, 2019.\",\n        coordinates: [[1, 2]]\n    }],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "de4819e8-c531-4e62-9fca-7af0d9db90f8",
                    "parentUUID": "217b9164-6ddb-471a-a419-3d51f7d74859",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/reducers/CourseStructure.spec.js",
                "uuid": "217b9164-6ddb-471a-a419-3d51f7d74859",
                "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseStructure.spec.js",
                "passes": [
                  {
                    "title": "Should give a course error for a unit not being offered in the teaching period it is in",
                    "fullTitle": "ACTION: VALIDATE_COURSE offerings: Should give a course error for a unit not being offered in the teaching period it is in",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2019,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: 2019,\n        units: [null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"First semester 2019 (Day)\"]\n            }]\n        }, null]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2019,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: 2019,\n        units: [null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"First semester 2019 (Day)\"]\n            }]\n        }, null]\n    }],\n    courseErrors: [{\n        message: \"ABC1234 is not offered in second semester, 2019.\",\n        coordinates: [[1, 2]]\n    }],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "de4819e8-c531-4e62-9fca-7af0d9db90f8",
                    "parentUUID": "217b9164-6ddb-471a-a419-3d51f7d74859",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "rules:",
                "suites": [],
                "tests": [
                  {
                    "title": "Should give a course error for a missing prereq",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should give a course error for a missing prereq",
                    "timedOut": false,
                    "duration": 22,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"Must have passed an (I/W) unit in {DEF2345, QLS2029}\",\n                endDate: \"\"\n            }]\n        }]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"Must have passed an (I/W) unit in {DEF2345, QLS2029}\",\n                endDate: \"\"\n            }]\n        }]\n    }],\n    courseErrors: [{\n        message: \"You must complete DEF2345 or QLS2029 before you can do ABC1234.\",\n        coordinates: [[0, 3]]\n    }],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5102bdd3-1811-4bb0-8049-b2817accefe7",
                    "parentUUID": "ea956b7e-eb47-4fd0-8db9-03452c5a94bc",
                    "skipped": false
                  },
                  {
                    "title": "Should give an error for credit points being lower than the minimum required for the unit",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should give an error for credit points being lower than the minimum required for the unit",
                    "timedOut": false,
                    "duration": 4,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2016,\n        code: \"S2-01\",\n        units: [{\n            unitCode: \"TEST1011\",\n            creditPoints: 6\n        }, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"TEST3031\",\n            creditPoints: 6,\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"Must have passed 24 credit points\"\n            }]\n        }, null, null, null]\n    }, {\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2016,\n        code: \"S2-01\",\n        units: [{\n            unitCode: \"TEST1011\",\n            creditPoints: 6\n        }, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"TEST3031\",\n            creditPoints: 6,\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"Must have passed 24 credit points\"\n            }]\n        }, null, null, null]\n    }, {\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"You need 18 more credit points before you can do TEST3031.\",\n        coordinates: [[2, 1]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "34419281-9efb-401d-9b1b-8a6084c1aa39",
                    "parentUUID": "ea956b7e-eb47-4fd0-8db9-03452c5a94bc",
                    "skipped": false
                  },
                  {
                    "title": "Should correctly handle prohibitions",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should correctly handle prohibitions",
                    "timedOut": false,
                    "duration": 4,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2013,\n        code: \"S1-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\"\n        }]\n    }, {\n        year: 2013,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"BCD1234\",\n            rules: [{\n                ruleSummary: \"INCOMP\",\n                ruleString: \"Incompatible with achievement in {ABC1234}\"\n            }]\n        }, null, null]\n    }],\n    courseErrors: [{\n        message: \"Please remove BCD1234, as completing ABC1234 prohibits you from doing this unit.\",\n        coordinates: [[1, 1]]\n    }]\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3a2d48bb-f67b-46f4-b5b1-9f88838b37d1",
                    "parentUUID": "ea956b7e-eb47-4fd0-8db9-03452c5a94bc",
                    "skipped": false
                  },
                  {
                    "title": "Should correctly handle the Do branch of For COURSE_CODE syntax",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should correctly handle the Do branch of For COURSE_CODE syntax",
                    "timedOut": false,
                    "duration": 4,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2014,\n        code: \"S1-01\",\n        units: [{\n            unitCode: \"DEF2345\",\n            unitName: \"Test unit\",\n            rules: [{\n                ruleSummary: \"COREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {S2029, S3019} Do Any passed co-req (I/W) unit in {ABC2022} Otherwise true\",\n                endDate: \"\"\n            }]\n        }, null, null, null]\n    }],\n    courseInfo: {\n        courseCode: \"S2029\"\n    },\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2014,\n        code: \"S1-01\",\n        units: [{\n            unitCode: \"DEF2345\",\n            unitName: \"Test unit\",\n            rules: [{\n                ruleSummary: \"COREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {S2029, S3019} Do Any passed co-req (I/W) unit in {ABC2022} Otherwise true\",\n                endDate: \"\"\n            }]\n        }, null, null, null]\n    }],\n    courseInfo: {\n        courseCode: \"S2029\"\n    },\n    courseErrors: [{\n        message: \"You must complete ABC2022 before or whilst doing DEF2345.\",\n        coordinates: [[0, 0]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ae1031d2-795e-4087-b1f7-76fc9e053cf6",
                    "parentUUID": "ea956b7e-eb47-4fd0-8db9-03452c5a94bc",
                    "skipped": false
                  },
                  {
                    "title": "Should correctly handle the Otherwise branch of For COURSE_CODE syntax",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should correctly handle the Otherwise branch of For COURSE_CODE syntax",
                    "timedOut": false,
                    "duration": 5,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }, {\n        year: 2018,\n        code: \"WS-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"Winter semester 2018 (Day)\"]\n            }],\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {Q2001, Q2003} Do true Otherwise Must have passed 1 (I/W) units in {TEST1001}\",\n                endDate: \"\"\n            }]\n        }]\n    }, {\n        year: 2018,\n        code: \"S2-01\",\n        units: [null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }, {\n        year: 2018,\n        code: \"WS-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"Winter semester 2018 (Day)\"]\n            }],\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {Q2001, Q2003} Do true Otherwise Must have passed 1 (I/W) units in {TEST1001}\",\n                endDate: \"\"\n            }]\n        }]\n    }, {\n        year: 2018,\n        code: \"S2-01\",\n        units: [null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"You must complete TEST1001 before you can do ABC1234.\",\n        coordinates: [[1, 3]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4ea000bd-7522-4032-9cab-9f5571504a34",
                    "parentUUID": "ea956b7e-eb47-4fd0-8db9-03452c5a94bc",
                    "skipped": false
                  },
                  {
                    "title": "Should handle a complicated For expression",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should handle a complicated For expression",
                    "timedOut": false,
                    "duration": 4,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2019,\n        code: \"S1-01\",\n        units: [null, {\n            unitCode: \"ABC1234\",\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"For ((SCA_LOCATION IN {CLAYTON} AND COURSE_CODE IN {1039, 2393}) OR (SCA_LOCATION IN {CLAYTON} AND COURSE_CODE NOT IN {A4921})) Do true Otherwise Permission required\"\n            }]\n        }, null, null]\n    }],\n    courseErrors: [],\n    courseInfo: {\n        courseCode: \"A4921\"\n    }\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2019,\n        code: \"S1-01\",\n        units: [null, {\n            unitCode: \"ABC1234\",\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"For ((SCA_LOCATION IN {CLAYTON} AND COURSE_CODE IN {1039, 2393}) OR (SCA_LOCATION IN {CLAYTON} AND COURSE_CODE NOT IN {A4921})) Do true Otherwise Permission required\"\n            }]\n        }, null, null]\n    }],\n    courseErrors: [{\n        message: \"You need permission to do ABC1234.\",\n        coordinates: [[0, 1]]\n    }],\n    courseInfo: {\n        courseCode: \"A4921\"\n    }\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9119e054-4c28-4882-8069-ec134700fbc2",
                    "parentUUID": "ea956b7e-eb47-4fd0-8db9-03452c5a94bc",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/test/reducers/CourseStructure.spec.js",
                "uuid": "ea956b7e-eb47-4fd0-8db9-03452c5a94bc",
                "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseStructure.spec.js",
                "passes": [
                  {
                    "title": "Should give a course error for a missing prereq",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should give a course error for a missing prereq",
                    "timedOut": false,
                    "duration": 22,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"Must have passed an (I/W) unit in {DEF2345, QLS2029}\",\n                endDate: \"\"\n            }]\n        }]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"Must have passed an (I/W) unit in {DEF2345, QLS2029}\",\n                endDate: \"\"\n            }]\n        }]\n    }],\n    courseErrors: [{\n        message: \"You must complete DEF2345 or QLS2029 before you can do ABC1234.\",\n        coordinates: [[0, 3]]\n    }],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5102bdd3-1811-4bb0-8049-b2817accefe7",
                    "parentUUID": "ea956b7e-eb47-4fd0-8db9-03452c5a94bc",
                    "skipped": false
                  },
                  {
                    "title": "Should give an error for credit points being lower than the minimum required for the unit",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should give an error for credit points being lower than the minimum required for the unit",
                    "timedOut": false,
                    "duration": 4,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2016,\n        code: \"S2-01\",\n        units: [{\n            unitCode: \"TEST1011\",\n            creditPoints: 6\n        }, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"TEST3031\",\n            creditPoints: 6,\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"Must have passed 24 credit points\"\n            }]\n        }, null, null, null]\n    }, {\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2016,\n        code: \"S2-01\",\n        units: [{\n            unitCode: \"TEST1011\",\n            creditPoints: 6\n        }, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"TEST3031\",\n            creditPoints: 6,\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"Must have passed 24 credit points\"\n            }]\n        }, null, null, null]\n    }, {\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"You need 18 more credit points before you can do TEST3031.\",\n        coordinates: [[2, 1]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "34419281-9efb-401d-9b1b-8a6084c1aa39",
                    "parentUUID": "ea956b7e-eb47-4fd0-8db9-03452c5a94bc",
                    "skipped": false
                  },
                  {
                    "title": "Should correctly handle prohibitions",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should correctly handle prohibitions",
                    "timedOut": false,
                    "duration": 4,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2013,\n        code: \"S1-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\"\n        }]\n    }, {\n        year: 2013,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"BCD1234\",\n            rules: [{\n                ruleSummary: \"INCOMP\",\n                ruleString: \"Incompatible with achievement in {ABC1234}\"\n            }]\n        }, null, null]\n    }],\n    courseErrors: [{\n        message: \"Please remove BCD1234, as completing ABC1234 prohibits you from doing this unit.\",\n        coordinates: [[1, 1]]\n    }]\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "3a2d48bb-f67b-46f4-b5b1-9f88838b37d1",
                    "parentUUID": "ea956b7e-eb47-4fd0-8db9-03452c5a94bc",
                    "skipped": false
                  },
                  {
                    "title": "Should correctly handle the Do branch of For COURSE_CODE syntax",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should correctly handle the Do branch of For COURSE_CODE syntax",
                    "timedOut": false,
                    "duration": 4,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2014,\n        code: \"S1-01\",\n        units: [{\n            unitCode: \"DEF2345\",\n            unitName: \"Test unit\",\n            rules: [{\n                ruleSummary: \"COREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {S2029, S3019} Do Any passed co-req (I/W) unit in {ABC2022} Otherwise true\",\n                endDate: \"\"\n            }]\n        }, null, null, null]\n    }],\n    courseInfo: {\n        courseCode: \"S2029\"\n    },\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2014,\n        code: \"S1-01\",\n        units: [{\n            unitCode: \"DEF2345\",\n            unitName: \"Test unit\",\n            rules: [{\n                ruleSummary: \"COREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {S2029, S3019} Do Any passed co-req (I/W) unit in {ABC2022} Otherwise true\",\n                endDate: \"\"\n            }]\n        }, null, null, null]\n    }],\n    courseInfo: {\n        courseCode: \"S2029\"\n    },\n    courseErrors: [{\n        message: \"You must complete ABC2022 before or whilst doing DEF2345.\",\n        coordinates: [[0, 0]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ae1031d2-795e-4087-b1f7-76fc9e053cf6",
                    "parentUUID": "ea956b7e-eb47-4fd0-8db9-03452c5a94bc",
                    "skipped": false
                  },
                  {
                    "title": "Should correctly handle the Otherwise branch of For COURSE_CODE syntax",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should correctly handle the Otherwise branch of For COURSE_CODE syntax",
                    "timedOut": false,
                    "duration": 5,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }, {\n        year: 2018,\n        code: \"WS-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"Winter semester 2018 (Day)\"]\n            }],\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {Q2001, Q2003} Do true Otherwise Must have passed 1 (I/W) units in {TEST1001}\",\n                endDate: \"\"\n            }]\n        }]\n    }, {\n        year: 2018,\n        code: \"S2-01\",\n        units: [null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }, {\n        year: 2018,\n        code: \"WS-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"Winter semester 2018 (Day)\"]\n            }],\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {Q2001, Q2003} Do true Otherwise Must have passed 1 (I/W) units in {TEST1001}\",\n                endDate: \"\"\n            }]\n        }]\n    }, {\n        year: 2018,\n        code: \"S2-01\",\n        units: [null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"You must complete TEST1001 before you can do ABC1234.\",\n        coordinates: [[1, 3]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4ea000bd-7522-4032-9cab-9f5571504a34",
                    "parentUUID": "ea956b7e-eb47-4fd0-8db9-03452c5a94bc",
                    "skipped": false
                  },
                  {
                    "title": "Should handle a complicated For expression",
                    "fullTitle": "ACTION: VALIDATE_COURSE rules: Should handle a complicated For expression",
                    "timedOut": false,
                    "duration": 4,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2019,\n        code: \"S1-01\",\n        units: [null, {\n            unitCode: \"ABC1234\",\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"For ((SCA_LOCATION IN {CLAYTON} AND COURSE_CODE IN {1039, 2393}) OR (SCA_LOCATION IN {CLAYTON} AND COURSE_CODE NOT IN {A4921})) Do true Otherwise Permission required\"\n            }]\n        }, null, null]\n    }],\n    courseErrors: [],\n    courseInfo: {\n        courseCode: \"A4921\"\n    }\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2019,\n        code: \"S1-01\",\n        units: [null, {\n            unitCode: \"ABC1234\",\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"For ((SCA_LOCATION IN {CLAYTON} AND COURSE_CODE IN {1039, 2393}) OR (SCA_LOCATION IN {CLAYTON} AND COURSE_CODE NOT IN {A4921})) Do true Otherwise Permission required\"\n            }]\n        }, null, null]\n    }],\n    courseErrors: [{\n        message: \"You need permission to do ABC1234.\",\n        coordinates: [[0, 1]]\n    }],\n    courseInfo: {\n        courseCode: \"A4921\"\n    }\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9119e054-4c28-4882-8069-ec134700fbc2",
                    "parentUUID": "ea956b7e-eb47-4fd0-8db9-03452c5a94bc",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 6,
                "totalPasses": 6,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 43,
                "rootEmpty": false
              }
            ],
            "tests": [
              {
                "title": "should give no errors for an empty course plan.",
                "fullTitle": "REDUCER: CourseStructure ACTION: VALIDATE_COURSE should give no errors for an empty course plan.",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan.\"\n    }],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    courseErrors: [],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "dd8f2cba-6a19-4586-a54a-189e6aa880d1",
                "parentUUID": "a9ac22c5-9edb-482d-832f-63a1865848c7",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "a9ac22c5-9edb-482d-832f-63a1865848c7",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "should give no errors for an empty course plan.",
                "fullTitle": "REDUCER: CourseStructure ACTION: VALIDATE_COURSE should give no errors for an empty course plan.",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan.\"\n    }],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    courseErrors: [],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "dd8f2cba-6a19-4586-a54a-189e6aa880d1",
                "parentUUID": "a9ac22c5-9edb-482d-832f-63a1865848c7",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": true,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS",
            "suites": [],
            "tests": [
              {
                "title": "Should leave invalidUnitSlotCoordinates empty if there are no invalid unit slots",
                "fullTitle": "REDUCER: CourseStructure ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS Should leave invalidUnitSlotCoordinates empty if there are no invalid unit slots",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2015,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: false\n};\nvar action = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: {\n        unitCode: \"TEST1001\",\n        unitName: \"Test unit\",\n        locationAndTime: [{\n            location: \"Caulfield\",\n            time: [\"First semester 2017 (Day)\"]\n        }]\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2015,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1f73cc64-d596-4a4f-874c-a4c3327853aa",
                "parentUUID": "d96c5cda-a8d5-46c2-af21-21e8b46b7b14",
                "skipped": false
              },
              {
                "title": "Should highlight teaching periods that contains the same unit",
                "fullTitle": "REDUCER: CourseStructure ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS Should highlight teaching periods that contains the same unit",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var currentYear = new Date().getFullYear();\nvar stateBefore = {\n    teachingPeriods: [{\n        year: currentYear - 2,\n        code: \"FY-01\",\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        year: currentYear - 1,\n        code: \"FY-01\",\n        units: [null, null, {\n            unitCode: \"DEF2345\"\n        }, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: false\n};\nvar action = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: {\n        unitCode: \"ABC1234\",\n        locationAndTime: [{\n            location: \"Parkville\",\n            time: [\"Full year 2018 (Day)\"]\n        }]\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: currentYear - 2,\n        code: \"FY-01\",\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        year: currentYear - 1,\n        code: \"FY-01\",\n        units: [null, null, {\n            unitCode: \"DEF2345\"\n        }, null]\n    }],\n    invalidUnitSlotCoordinates: [[0, null]],\n    highlightingInvalidUnitSlots: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "bd6bf337-4ce0-416b-b960-ffa159d40435",
                "parentUUID": "d96c5cda-a8d5-46c2-af21-21e8b46b7b14",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "d96c5cda-a8d5-46c2-af21-21e8b46b7b14",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should leave invalidUnitSlotCoordinates empty if there are no invalid unit slots",
                "fullTitle": "REDUCER: CourseStructure ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS Should leave invalidUnitSlotCoordinates empty if there are no invalid unit slots",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2015,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: false\n};\nvar action = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: {\n        unitCode: \"TEST1001\",\n        unitName: \"Test unit\",\n        locationAndTime: [{\n            location: \"Caulfield\",\n            time: [\"First semester 2017 (Day)\"]\n        }]\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2015,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1f73cc64-d596-4a4f-874c-a4c3327853aa",
                "parentUUID": "d96c5cda-a8d5-46c2-af21-21e8b46b7b14",
                "skipped": false
              },
              {
                "title": "Should highlight teaching periods that contains the same unit",
                "fullTitle": "REDUCER: CourseStructure ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS Should highlight teaching periods that contains the same unit",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var currentYear = new Date().getFullYear();\nvar stateBefore = {\n    teachingPeriods: [{\n        year: currentYear - 2,\n        code: \"FY-01\",\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        year: currentYear - 1,\n        code: \"FY-01\",\n        units: [null, null, {\n            unitCode: \"DEF2345\"\n        }, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: false\n};\nvar action = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: {\n        unitCode: \"ABC1234\",\n        locationAndTime: [{\n            location: \"Parkville\",\n            time: [\"Full year 2018 (Day)\"]\n        }]\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: currentYear - 2,\n        code: \"FY-01\",\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        year: currentYear - 1,\n        code: \"FY-01\",\n        units: [null, null, {\n            unitCode: \"DEF2345\"\n        }, null]\n    }],\n    invalidUnitSlotCoordinates: [[0, null]],\n    highlightingInvalidUnitSlots: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "bd6bf337-4ce0-416b-b960-ffa159d40435",
                "parentUUID": "d96c5cda-a8d5-46c2-af21-21e8b46b7b14",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3,
            "rootEmpty": false
          },
          {
            "title": "DEFAULT",
            "suites": [],
            "tests": [
              {
                "title": "should not change the state if it receives an unknown action",
                "fullTitle": "REDUCER: CourseStructure DEFAULT should not change the state if it receives an unknown action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "289ca6be-d35a-48f2-8a9d-64dd2d64fe1e",
                "parentUUID": "936cd769-5468-4fe5-8750-7cd038fc7431",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "936cd769-5468-4fe5-8750-7cd038fc7431",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "should not change the state if it receives an unknown action",
                "fullTitle": "REDUCER: CourseStructure DEFAULT should not change the state if it receives an unknown action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "289ca6be-d35a-48f2-8a9d-64dd2d64fe1e",
                "parentUUID": "936cd769-5468-4fe5-8750-7cd038fc7431",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/reducers/CourseStructure.spec.js",
        "uuid": "e00d7262-3423-4ee7-96a4-51908015b898",
        "fullFile": "/home/xav/dev/monPlanR/test/reducers/CourseStructure.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "REDUCER: ImportantDates",
        "suites": [
          {
            "title": "ACTION: FETCH_IMPORTANT_DATES_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "should begin fetching important dates correctly ",
                "fullTitle": "REDUCER: ImportantDates ACTION: FETCH_IMPORTANT_DATES_PENDING should begin fetching important dates correctly ",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\nvar action = {\n    type: \"FETCH_IMPORTANT_DATES_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: true,\n    importantDatesError: false\n};\ntest(_ImportantDatesReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "3a27639b-2da3-4db5-b109-6871482f582a",
                "parentUUID": "04824ed8-f3b0-474d-b08a-a1e78a1588c5",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/ImportantDatesReducer.spec.js",
            "uuid": "04824ed8-f3b0-474d-b08a-a1e78a1588c5",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/ImportantDatesReducer.spec.js",
            "passes": [
              {
                "title": "should begin fetching important dates correctly ",
                "fullTitle": "REDUCER: ImportantDates ACTION: FETCH_IMPORTANT_DATES_PENDING should begin fetching important dates correctly ",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\nvar action = {\n    type: \"FETCH_IMPORTANT_DATES_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: true,\n    importantDatesError: false\n};\ntest(_ImportantDatesReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "3a27639b-2da3-4db5-b109-6871482f582a",
                "parentUUID": "04824ed8-f3b0-474d-b08a-a1e78a1588c5",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: FETCH_IMPORTANT_DATES_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "should handled failed fetch of important dates correctly ",
                "fullTitle": "REDUCER: ImportantDates ACTION: FETCH_IMPORTANT_DATES_REJECTED should handled failed fetch of important dates correctly ",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\nvar action = {\n    type: \"FETCH_IMPORTANT_DATES_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: true\n};\ntest(_ImportantDatesReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "99187651-81b5-4d08-a34b-e30a220057b5",
                "parentUUID": "72cf74f0-64cb-47e0-8fe5-6f22e155729e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/ImportantDatesReducer.spec.js",
            "uuid": "72cf74f0-64cb-47e0-8fe5-6f22e155729e",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/ImportantDatesReducer.spec.js",
            "passes": [
              {
                "title": "should handled failed fetch of important dates correctly ",
                "fullTitle": "REDUCER: ImportantDates ACTION: FETCH_IMPORTANT_DATES_REJECTED should handled failed fetch of important dates correctly ",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\nvar action = {\n    type: \"FETCH_IMPORTANT_DATES_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: true\n};\ntest(_ImportantDatesReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "99187651-81b5-4d08-a34b-e30a220057b5",
                "parentUUID": "72cf74f0-64cb-47e0-8fe5-6f22e155729e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: FETCH_IMPORTANT_DATES_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "should handled failed fetch of important dates correctly ",
                "fullTitle": "REDUCER: ImportantDates ACTION: FETCH_IMPORTANT_DATES_FULFILLED should handled failed fetch of important dates correctly ",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\nvar action = {\n    type: \"FETCH_IMPORTANT_DATES_FULFILLED\",\n    payload: [{\n        \"value\": \"HE IS A SAURABH\"\n    }]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [{ \"value\": \"HE IS A SAURABH\" }],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\ntest(_ImportantDatesReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f04aeb07-3251-4c2d-9ad6-41875f798c86",
                "parentUUID": "f2b69c6d-c3b1-4071-9fde-25e4730569fe",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/ImportantDatesReducer.spec.js",
            "uuid": "f2b69c6d-c3b1-4071-9fde-25e4730569fe",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/ImportantDatesReducer.spec.js",
            "passes": [
              {
                "title": "should handled failed fetch of important dates correctly ",
                "fullTitle": "REDUCER: ImportantDates ACTION: FETCH_IMPORTANT_DATES_FULFILLED should handled failed fetch of important dates correctly ",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\nvar action = {\n    type: \"FETCH_IMPORTANT_DATES_FULFILLED\",\n    payload: [{\n        \"value\": \"HE IS A SAURABH\"\n    }]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [{ \"value\": \"HE IS A SAURABH\" }],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\ntest(_ImportantDatesReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f04aeb07-3251-4c2d-9ad6-41875f798c86",
                "parentUUID": "f2b69c6d-c3b1-4071-9fde-25e4730569fe",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/reducers/ImportantDatesReducer.spec.js",
        "uuid": "402677ab-44b6-4ab0-ac4b-40a65ac3e1fc",
        "fullFile": "/home/xav/dev/monPlanR/test/reducers/ImportantDatesReducer.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "REDUCER: Notifications",
        "suites": [
          {
            "title": "ACTION: ADD_NOTIFICATION",
            "suites": [],
            "tests": [
              {
                "title": "should insert a notification from an empty list",
                "fullTitle": "REDUCER: Notifications ACTION: ADD_NOTIFICATION should insert a notification from an empty list",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: []\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "801e8a50-9a97-4745-b38f-f31150612903",
                "parentUUID": "a9484abd-ee4e-494a-ae69-e0195bc2da3c",
                "skipped": false
              },
              {
                "title": "should prepend a notification into an list of a few existing notifications.",
                "fullTitle": "REDUCER: Notifications ACTION: ADD_NOTIFICATION should prepend a notification into an list of a few existing notifications.",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "17259477-4e56-49ed-a86f-666df2eed5c9",
                "parentUUID": "a9484abd-ee4e-494a-ae69-e0195bc2da3c",
                "skipped": false
              },
              {
                "title": "should replace a notification if it already exists with a specified ID",
                "fullTitle": "REDUCER: Notifications ACTION: ADD_NOTIFICATION should replace a notification if it already exists with a specified ID",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    message: \"New message goes over here\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"New message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ec642753-5ad9-4e4e-9e7c-5e68ee3caeb0",
                "parentUUID": "a9484abd-ee4e-494a-ae69-e0195bc2da3c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Notifications.spec.js",
            "uuid": "a9484abd-ee4e-494a-ae69-e0195bc2da3c",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/Notifications.spec.js",
            "passes": [
              {
                "title": "should insert a notification from an empty list",
                "fullTitle": "REDUCER: Notifications ACTION: ADD_NOTIFICATION should insert a notification from an empty list",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: []\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "801e8a50-9a97-4745-b38f-f31150612903",
                "parentUUID": "a9484abd-ee4e-494a-ae69-e0195bc2da3c",
                "skipped": false
              },
              {
                "title": "should prepend a notification into an list of a few existing notifications.",
                "fullTitle": "REDUCER: Notifications ACTION: ADD_NOTIFICATION should prepend a notification into an list of a few existing notifications.",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "17259477-4e56-49ed-a86f-666df2eed5c9",
                "parentUUID": "a9484abd-ee4e-494a-ae69-e0195bc2da3c",
                "skipped": false
              },
              {
                "title": "should replace a notification if it already exists with a specified ID",
                "fullTitle": "REDUCER: Notifications ACTION: ADD_NOTIFICATION should replace a notification if it already exists with a specified ID",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    message: \"New message goes over here\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"New message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ec642753-5ad9-4e4e-9e7c-5e68ee3caeb0",
                "parentUUID": "a9484abd-ee4e-494a-ae69-e0195bc2da3c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2,
            "rootEmpty": false
          },
          {
            "title": "ACTION: REMOVE_NOTIFICATION",
            "suites": [],
            "tests": [
              {
                "title": "Should remove a notification given its ID",
                "fullTitle": "REDUCER: Notifications ACTION: REMOVE_NOTIFICATION Should remove a notification given its ID",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    id: \"CONNECTION_LOST\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "572c5c60-33f7-4937-bf3b-f69e4524a15e",
                "parentUUID": "2b70dcd5-5d84-4a8c-b306-25b4a56640cf",
                "skipped": false
              },
              {
                "title": "Should remove a notification given its index",
                "fullTitle": "REDUCER: Notifications ACTION: REMOVE_NOTIFICATION Should remove a notification given its index",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    index: 1\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b7d64756-849c-491f-9a83-e123c56a2bca",
                "parentUUID": "2b70dcd5-5d84-4a8c-b306-25b4a56640cf",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Notifications.spec.js",
            "uuid": "2b70dcd5-5d84-4a8c-b306-25b4a56640cf",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/Notifications.spec.js",
            "passes": [
              {
                "title": "Should remove a notification given its ID",
                "fullTitle": "REDUCER: Notifications ACTION: REMOVE_NOTIFICATION Should remove a notification given its ID",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    id: \"CONNECTION_LOST\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "572c5c60-33f7-4937-bf3b-f69e4524a15e",
                "parentUUID": "2b70dcd5-5d84-4a8c-b306-25b4a56640cf",
                "skipped": false
              },
              {
                "title": "Should remove a notification given its index",
                "fullTitle": "REDUCER: Notifications ACTION: REMOVE_NOTIFICATION Should remove a notification given its index",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    index: 1\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b7d64756-849c-491f-9a83-e123c56a2bca",
                "parentUUID": "2b70dcd5-5d84-4a8c-b306-25b4a56640cf",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "DEFAULT",
            "suites": [],
            "tests": [
              {
                "title": "Should not change state if it does not recognise an action",
                "fullTitle": "REDUCER: Notifications DEFAULT Should not change state if it does not recognise an action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Notifications2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "9fcd2449-4784-4a46-b9b9-23869798a9f4",
                "parentUUID": "e73edd1c-4104-44cc-8e02-efb5b68377f7",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Notifications.spec.js",
            "uuid": "e73edd1c-4104-44cc-8e02-efb5b68377f7",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/Notifications.spec.js",
            "passes": [
              {
                "title": "Should not change state if it does not recognise an action",
                "fullTitle": "REDUCER: Notifications DEFAULT Should not change state if it does not recognise an action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Notifications2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "9fcd2449-4784-4a46-b9b9-23869798a9f4",
                "parentUUID": "e73edd1c-4104-44cc-8e02-efb5b68377f7",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/reducers/Notifications.spec.js",
        "uuid": "384b0cfb-d30b-4313-af86-a34d4fcb5359",
        "fullFile": "/home/xav/dev/monPlanR/test/reducers/Notifications.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "REDUCER: UI",
        "suites": [
          {
            "title": "ACTION: SHOW_INSERT_TEACHING_PERIOD_UI",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly toggle the insert teaching period UI boolean",
                "fullTitle": "REDUCER: UI ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: true,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "10eb9329-29d4-4fa5-b3c1-14dfff911bbc",
                "parentUUID": "60704bfc-7685-480d-9663-22728aa11d65",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "60704bfc-7685-480d-9663-22728aa11d65",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly toggle the insert teaching period UI boolean",
                "fullTitle": "REDUCER: UI ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: true,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "10eb9329-29d4-4fa5-b3c1-14dfff911bbc",
                "parentUUID": "60704bfc-7685-480d-9663-22728aa11d65",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "ACTION: HIDE_INSERT_TEACHING_PERIOD_UI",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly toggle the insert teaching period UI boolean",
                "fullTitle": "REDUCER: UI ACTION: HIDE_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: true,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "950e93b8-9b5d-48ce-93e1-d800b63c2278",
                "parentUUID": "67d15777-8871-4e36-a8e4-189c11d2a121",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "67d15777-8871-4e36-a8e4-189c11d2a121",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly toggle the insert teaching period UI boolean",
                "fullTitle": "REDUCER: UI ACTION: HIDE_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: true,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "950e93b8-9b5d-48ce-93e1-d800b63c2278",
                "parentUUID": "67d15777-8871-4e36-a8e4-189c11d2a121",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "ACTION: ADDING_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set the add unit UI boolean to true and correctly hide the sidebar when a unit is being added",
                "fullTitle": "REDUCER: UI ACTION: ADDING_UNIT Should correctly set the add unit UI boolean to true and correctly hide the sidebar when a unit is being added",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "daa006f0-4745-4f44-a47f-c126d1d6bda7",
                "parentUUID": "657f8daf-0e38-4fd9-b697-5d037bd8541f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "657f8daf-0e38-4fd9-b697-5d037bd8541f",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly set the add unit UI boolean to true and correctly hide the sidebar when a unit is being added",
                "fullTitle": "REDUCER: UI ACTION: ADDING_UNIT Should correctly set the add unit UI boolean to true and correctly hide the sidebar when a unit is being added",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "daa006f0-4745-4f44-a47f-c126d1d6bda7",
                "parentUUID": "657f8daf-0e38-4fd9-b697-5d037bd8541f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: ADD_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set the add unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: ADD_UNIT Should correctly set the add unit UI boolean to false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true\n};\nvar action = {\n    type: \"ADD_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e8b948ac-686d-4218-8663-823a2add0a0a",
                "parentUUID": "9fac209b-a2f1-43df-a40b-b6ef389b677c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "9fac209b-a2f1-43df-a40b-b6ef389b677c",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly set the add unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: ADD_UNIT Should correctly set the add unit UI boolean to false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true\n};\nvar action = {\n    type: \"ADD_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e8b948ac-686d-4218-8663-823a2add0a0a",
                "parentUUID": "9fac209b-a2f1-43df-a40b-b6ef389b677c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: CANCEL_ADDING_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set the add unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: CANCEL_ADDING_UNIT Should correctly set the add unit UI boolean to false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true\n};\nvar action = {\n    type: \"CANCEL_ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b0a33ed3-a465-431f-85b2-b7281df0d1e9",
                "parentUUID": "f832607b-4661-4bd8-8c4d-e748c1e4bab6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "f832607b-4661-4bd8-8c4d-e748c1e4bab6",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly set the add unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: CANCEL_ADDING_UNIT Should correctly set the add unit UI boolean to false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true\n};\nvar action = {\n    type: \"CANCEL_ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "b0a33ed3-a465-431f-85b2-b7281df0d1e9",
                "parentUUID": "f832607b-4661-4bd8-8c4d-e748c1e4bab6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: MOVING_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set the move unit UI boolean to true",
                "fullTitle": "REDUCER: UI ACTION: MOVING_UNIT Should correctly set the move unit UI boolean to true",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"MOVING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "8687eee5-4326-4511-965f-5ae3d65f9c76",
                "parentUUID": "1b4ab396-e834-4f82-b215-2261ddc89ccd",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "1b4ab396-e834-4f82-b215-2261ddc89ccd",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly set the move unit UI boolean to true",
                "fullTitle": "REDUCER: UI ACTION: MOVING_UNIT Should correctly set the move unit UI boolean to true",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"MOVING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "8687eee5-4326-4511-965f-5ae3d65f9c76",
                "parentUUID": "1b4ab396-e834-4f82-b215-2261ddc89ccd",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: MOVE_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set the move unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: MOVE_UNIT Should correctly set the move unit UI boolean to false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"MOVE_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "560f604e-65a4-42e5-add7-29fdd8122afd",
                "parentUUID": "061b1d0c-59ec-400d-999f-fc409d29590c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "061b1d0c-59ec-400d-999f-fc409d29590c",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly set the move unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: MOVE_UNIT Should correctly set the move unit UI boolean to false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"MOVE_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "560f604e-65a4-42e5-add7-29fdd8122afd",
                "parentUUID": "061b1d0c-59ec-400d-999f-fc409d29590c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: SWAP_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set the move unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: SWAP_UNIT Should correctly set the move unit UI boolean to false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"SWAP_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "20c22ad6-cd3d-40cb-b0ec-34b044d0d387",
                "parentUUID": "80f8b026-f4fa-4524-819c-0b1f10a830fd",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "80f8b026-f4fa-4524-819c-0b1f10a830fd",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly set the move unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: SWAP_UNIT Should correctly set the move unit UI boolean to false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"SWAP_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "20c22ad6-cd3d-40cb-b0ec-34b044d0d387",
                "parentUUID": "80f8b026-f4fa-4524-819c-0b1f10a830fd",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: CANCEL_MOVING_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly set the move unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: CANCEL_MOVING_UNIT Should correctly set the move unit UI boolean to false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9af00d0c-bf15-493c-9f0f-61727f36bdbe",
                "parentUUID": "ec69ad0d-6c90-4092-bd76-aa41cc89b0d9",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "ec69ad0d-6c90-4092-bd76-aa41cc89b0d9",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly set the move unit UI boolean to false",
                "fullTitle": "REDUCER: UI ACTION: CANCEL_MOVING_UNIT Should correctly set the move unit UI boolean to false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9af00d0c-bf15-493c-9f0f-61727f36bdbe",
                "parentUUID": "ec69ad0d-6c90-4092-bd76-aa41cc89b0d9",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: SET_COURSE_READ_ONLY",
            "suites": [],
            "tests": [
              {
                "title": "Should set the course to read only correctly",
                "fullTitle": "REDUCER: UI ACTION: SET_COURSE_READ_ONLY Should set the course to read only correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: false\n};\nvar action = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "2f6fcbc4-88ce-4a25-bf96-12e8d207408a",
                "parentUUID": "1c43288c-18bb-4fa1-94b6-64b86b2eccc6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "1c43288c-18bb-4fa1-94b6-64b86b2eccc6",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should set the course to read only correctly",
                "fullTitle": "REDUCER: UI ACTION: SET_COURSE_READ_ONLY Should set the course to read only correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: false\n};\nvar action = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "2f6fcbc4-88ce-4a25-bf96-12e8d207408a",
                "parentUUID": "1c43288c-18bb-4fa1-94b6-64b86b2eccc6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: SET_COURSE_READ_AND_WRITE",
            "suites": [],
            "tests": [
              {
                "title": "Should set the course to allow edits correctly",
                "fullTitle": "REDUCER: UI ACTION: SET_COURSE_READ_AND_WRITE Should set the course to allow edits correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: true\n};\nvar action = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a3d90aab-a253-4d55-9d32-fd139a799ff1",
                "parentUUID": "3b83189e-6f3b-468d-8d7f-3ab98d763235",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "3b83189e-6f3b-468d-8d7f-3ab98d763235",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should set the course to allow edits correctly",
                "fullTitle": "REDUCER: UI ACTION: SET_COURSE_READ_AND_WRITE Should set the course to allow edits correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: true\n};\nvar action = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a3d90aab-a253-4d55-9d32-fd139a799ff1",
                "parentUUID": "3b83189e-6f3b-468d-8d7f-3ab98d763235",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly toggle the confirm delete teaching period modal UI to show",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to show",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "43363951-f33e-49de-b685-037fc001d828",
                "parentUUID": "b1663173-9e7a-446f-810a-9d76c1888326",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "b1663173-9e7a-446f-810a-9d76c1888326",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly toggle the confirm delete teaching period modal UI to show",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to show",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "43363951-f33e-49de-b685-037fc001d828",
                "parentUUID": "b1663173-9e7a-446f-810a-9d76c1888326",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly toggle the confirm delete teaching period modal UI to hide",
                "fullTitle": "REDUCER: UI ACTION: HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to hide",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1ae4a9d7-b565-496b-ad0f-bd220ffc4b39",
                "parentUUID": "ec2c6486-99ff-4cc5-a17d-098734dbfb3f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "ec2c6486-99ff-4cc5-a17d-098734dbfb3f",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly toggle the confirm delete teaching period modal UI to hide",
                "fullTitle": "REDUCER: UI ACTION: HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to hide",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1ae4a9d7-b565-496b-ad0f-bd220ffc4b39",
                "parentUUID": "ec2c6486-99ff-4cc5-a17d-098734dbfb3f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly toggle the confirm decrease study load modal UI to show",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to show",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "093dc0dd-0f8f-49e8-99ee-d8d9b6946fc3",
                "parentUUID": "98d74a0c-12f4-4bce-a894-a2f625b388f0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "98d74a0c-12f4-4bce-a894-a2f625b388f0",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly toggle the confirm decrease study load modal UI to show",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to show",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "093dc0dd-0f8f-49e8-99ee-d8d9b6946fc3",
                "parentUUID": "98d74a0c-12f4-4bce-a894-a2f625b388f0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly toggle the confirm decrease study load modal UI to hide",
                "fullTitle": "REDUCER: UI ACTION: HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to hide",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "8e6b98d4-3093-4b87-b543-a4cf7a5776f3",
                "parentUUID": "6a445b72-40bd-4330-a146-e5ead68deaab",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "6a445b72-40bd-4330-a146-e5ead68deaab",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly toggle the confirm decrease study load modal UI to hide",
                "fullTitle": "REDUCER: UI ACTION: HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to hide",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "8e6b98d4-3093-4b87-b543-a4cf7a5776f3",
                "parentUUID": "6a445b72-40bd-4330-a146-e5ead68deaab",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: SHOW_CUSTOM_UNIT_MODAL",
            "suites": [],
            "tests": [
              {
                "title": "Should set show flag for custom unit modal to be true",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be true",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "35e9b20c-3800-4727-bd8a-de31bed06eac",
                "parentUUID": "b8b07ef5-771e-47d4-8a7c-669260a9e901",
                "skipped": false
              },
              {
                "title": "Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CUSTOM_UNIT_MODAL Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"ABC1234\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: \"ABC1234\",\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5b4860fa-e0a1-4eb5-81cd-7e78999bb698",
                "parentUUID": "b8b07ef5-771e-47d4-8a7c-669260a9e901",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "b8b07ef5-771e-47d4-8a7c-669260a9e901",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should set show flag for custom unit modal to be true",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be true",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "35e9b20c-3800-4727-bd8a-de31bed06eac",
                "parentUUID": "b8b07ef5-771e-47d4-8a7c-669260a9e901",
                "skipped": false
              },
              {
                "title": "Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
                "fullTitle": "REDUCER: UI ACTION: SHOW_CUSTOM_UNIT_MODAL Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"ABC1234\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: \"ABC1234\",\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5b4860fa-e0a1-4eb5-81cd-7e78999bb698",
                "parentUUID": "b8b07ef5-771e-47d4-8a7c-669260a9e901",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: HIDE_CUSTOM_UNIT_MODAL",
            "suites": [],
            "tests": [
              {
                "title": "Should set show flag for custom unit modal to be false",
                "fullTitle": "REDUCER: UI ACTION: HIDE_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: true\n};\nvar action = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "3b03565d-7111-4a46-8fc3-4cdbe36ef072",
                "parentUUID": "15580cb0-15d2-4e09-b4ad-042808f36db4",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "15580cb0-15d2-4e09-b4ad-042808f36db4",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should set show flag for custom unit modal to be false",
                "fullTitle": "REDUCER: UI ACTION: HIDE_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be false",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingCustomUnitModal: true\n};\nvar action = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "3b03565d-7111-4a46-8fc3-4cdbe36ef072",
                "parentUUID": "15580cb0-15d2-4e09-b4ad-042808f36db4",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: SHOW_SIDEBAR",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show the sidebar when called",
                "fullTitle": "REDUCER: UI ACTION: SHOW_SIDEBAR Should correctly show the sidebar when called",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: false\n};\nvar action = {\n    type: \"SHOW_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1cc0fa7b-5abd-4d5c-ac97-23a05e1afa36",
                "parentUUID": "c492f339-21ff-4ca8-a070-5785df15b2ca",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "c492f339-21ff-4ca8-a070-5785df15b2ca",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly show the sidebar when called",
                "fullTitle": "REDUCER: UI ACTION: SHOW_SIDEBAR Should correctly show the sidebar when called",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: false\n};\nvar action = {\n    type: \"SHOW_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1cc0fa7b-5abd-4d5c-ac97-23a05e1afa36",
                "parentUUID": "c492f339-21ff-4ca8-a070-5785df15b2ca",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: HIDE_SIDEBAR",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly hide the sidebar when called",
                "fullTitle": "REDUCER: UI ACTION: HIDE_SIDEBAR Should correctly hide the sidebar when called",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"HIDE_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "6a8cf231-4e75-4ff5-9ab4-3c0357b74588",
                "parentUUID": "1676eada-49db-4259-956d-8f9d417d6329",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "1676eada-49db-4259-956d-8f9d417d6329",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should correctly hide the sidebar when called",
                "fullTitle": "REDUCER: UI ACTION: HIDE_SIDEBAR Should correctly hide the sidebar when called",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"HIDE_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "6a8cf231-4e75-4ff5-9ab4-3c0357b74588",
                "parentUUID": "1676eada-49db-4259-956d-8f9d417d6329",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "DEFAULT",
            "suites": [],
            "tests": [
              {
                "title": "Should not change state if it does not recognise the action",
                "fullTitle": "REDUCER: UI DEFAULT Should not change state if it does not recognise the action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_UI2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "db7aba4e-310a-4295-888b-6d1d2738bfdc",
                "parentUUID": "362b9882-1561-44cb-a1bd-04ccbe57fa3c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UI.spec.js",
            "uuid": "362b9882-1561-44cb-a1bd-04ccbe57fa3c",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/UI.spec.js",
            "passes": [
              {
                "title": "Should not change state if it does not recognise the action",
                "fullTitle": "REDUCER: UI DEFAULT Should not change state if it does not recognise the action",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_UI2.default, stateBefore, action, stateBefore);",
                "err": {},
                "isRoot": false,
                "uuid": "db7aba4e-310a-4295-888b-6d1d2738bfdc",
                "parentUUID": "362b9882-1561-44cb-a1bd-04ccbe57fa3c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/reducers/UI.spec.js",
        "uuid": "aec70184-d897-43fc-935e-b6593308f715",
        "fullFile": "/home/xav/dev/monPlanR/test/reducers/UI.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "REDUCER: UnitCache",
        "suites": [
          {
            "title": "ACTION: INITIALISE_NEW_CACHE",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly create a new cache instance if there is no local storage value saved, or it is too old",
                "fullTitle": "REDUCER: UnitCache ACTION: INITIALISE_NEW_CACHE Should correctly create a new cache instance if there is no local storage value saved, or it is too old",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {\n        \"TEST1001\": {\n            timeOfLastAccess: \"Tue Mar 07 2017 12:07:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TEST1001\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        },\n        \"TES1002\": {\n            timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TES1002\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        }\n    },\n    cacheSize: 2,\n    MAX_CACHE_SIZE: 20\n};\nvar action = {\n    type: \"INITIALISE_NEW_CACHE\",\n    timeOfAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\"\n};\nvar stateAfter = {\n    timeOfLastAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {},\n    cacheSize: 0,\n    MAX_CACHE_SIZE: 20\n};\ntest(_UnitCacheReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7a1d2a04-bc31-47f4-a3b0-b3a448aff001",
                "parentUUID": "a12fb629-3b46-4f70-892e-82f87b557ff1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UnitCacheReducer.spec.js",
            "uuid": "a12fb629-3b46-4f70-892e-82f87b557ff1",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/UnitCacheReducer.spec.js",
            "passes": [
              {
                "title": "Should correctly create a new cache instance if there is no local storage value saved, or it is too old",
                "fullTitle": "REDUCER: UnitCache ACTION: INITIALISE_NEW_CACHE Should correctly create a new cache instance if there is no local storage value saved, or it is too old",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {\n        \"TEST1001\": {\n            timeOfLastAccess: \"Tue Mar 07 2017 12:07:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TEST1001\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        },\n        \"TES1002\": {\n            timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TES1002\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        }\n    },\n    cacheSize: 2,\n    MAX_CACHE_SIZE: 20\n};\nvar action = {\n    type: \"INITIALISE_NEW_CACHE\",\n    timeOfAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\"\n};\nvar stateAfter = {\n    timeOfLastAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {},\n    cacheSize: 0,\n    MAX_CACHE_SIZE: 20\n};\ntest(_UnitCacheReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7a1d2a04-bc31-47f4-a3b0-b3a448aff001",
                "parentUUID": "a12fb629-3b46-4f70-892e-82f87b557ff1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: REMOVE_ITEM_FROM_CACHE",
            "suites": [],
            "tests": [
              {
                "title": "should correctly remove an item with the given key from the cache ",
                "fullTitle": "REDUCER: UnitCache ACTION: REMOVE_ITEM_FROM_CACHE should correctly remove an item with the given key from the cache ",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {\n        \"TEST1001\": {\n            timeOfLastAccess: \"Tue Mar 07 2017 12:07:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TEST1001\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        },\n        \"TES1002\": {\n            timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TES1002\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        }\n    },\n    cacheSize: 2,\n    MAX_CACHE_SIZE: 20\n};\nvar action = {\n    type: \"REMOVE_ITEM_FROM_CACHE\",\n    keyValueToDelete: \"TEST1001\",\n    timeOfAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\"\n};\nvar stateAfter = {\n    timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {\n        \"TES1002\": {\n            timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TES1002\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        }\n    },\n    cacheSize: 1,\n    MAX_CACHE_SIZE: 20\n};\ntest(_UnitCacheReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "73aa1c4d-7753-4520-b7f7-f0fdbc1b1f72",
                "parentUUID": "1c2c4c60-45a2-44c7-aedd-0a401c7e00d9",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UnitCacheReducer.spec.js",
            "uuid": "1c2c4c60-45a2-44c7-aedd-0a401c7e00d9",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/UnitCacheReducer.spec.js",
            "passes": [
              {
                "title": "should correctly remove an item with the given key from the cache ",
                "fullTitle": "REDUCER: UnitCache ACTION: REMOVE_ITEM_FROM_CACHE should correctly remove an item with the given key from the cache ",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {\n        \"TEST1001\": {\n            timeOfLastAccess: \"Tue Mar 07 2017 12:07:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TEST1001\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        },\n        \"TES1002\": {\n            timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TES1002\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        }\n    },\n    cacheSize: 2,\n    MAX_CACHE_SIZE: 20\n};\nvar action = {\n    type: \"REMOVE_ITEM_FROM_CACHE\",\n    keyValueToDelete: \"TEST1001\",\n    timeOfAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\"\n};\nvar stateAfter = {\n    timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {\n        \"TES1002\": {\n            timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TES1002\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        }\n    },\n    cacheSize: 1,\n    MAX_CACHE_SIZE: 20\n};\ntest(_UnitCacheReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "73aa1c4d-7753-4520-b7f7-f0fdbc1b1f72",
                "parentUUID": "1c2c4c60-45a2-44c7-aedd-0a401c7e00d9",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "ACTION: ADD_ITEM_TO_CACHE",
            "suites": [],
            "tests": [
              {
                "title": "should correctly add an item to the cache ",
                "fullTitle": "REDUCER: UnitCache ACTION: ADD_ITEM_TO_CACHE should correctly add an item to the cache ",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {},\n    cacheSize: 0,\n    MAX_CACHE_SIZE: 20\n};\nvar action = {\n    type: \"ADD_ITEM_TO_CACHE\",\n    timeOfAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCode: \"TEST1001\",\n    unitInfo: {\n        preqs: \"None\",\n        creditPoints: 6,\n        rules: [],\n        locationAndTime: [],\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"TES1002\",\n        eftsl: 0,\n        descriptions: \"\"\n    }\n};\nvar stateAfter = {\n    timeOfLastAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {\n        \"TEST1001\": {\n            timeOfLastAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TES1002\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        }\n    },\n    cacheSize: 1,\n    MAX_CACHE_SIZE: 20\n};\ntest(_UnitCacheReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "29b6b308-0b64-4af9-a93d-0c0eb916beed",
                "parentUUID": "4c38f99d-6e06-481a-9b17-48222d52a7c5",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UnitCacheReducer.spec.js",
            "uuid": "4c38f99d-6e06-481a-9b17-48222d52a7c5",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/UnitCacheReducer.spec.js",
            "passes": [
              {
                "title": "should correctly add an item to the cache ",
                "fullTitle": "REDUCER: UnitCache ACTION: ADD_ITEM_TO_CACHE should correctly add an item to the cache ",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {},\n    cacheSize: 0,\n    MAX_CACHE_SIZE: 20\n};\nvar action = {\n    type: \"ADD_ITEM_TO_CACHE\",\n    timeOfAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCode: \"TEST1001\",\n    unitInfo: {\n        preqs: \"None\",\n        creditPoints: 6,\n        rules: [],\n        locationAndTime: [],\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"TES1002\",\n        eftsl: 0,\n        descriptions: \"\"\n    }\n};\nvar stateAfter = {\n    timeOfLastAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {\n        \"TEST1001\": {\n            timeOfLastAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TES1002\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        }\n    },\n    cacheSize: 1,\n    MAX_CACHE_SIZE: 20\n};\ntest(_UnitCacheReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "29b6b308-0b64-4af9-a93d-0c0eb916beed",
                "parentUUID": "4c38f99d-6e06-481a-9b17-48222d52a7c5",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/reducers/UnitCacheReducer.spec.js",
        "uuid": "6d3bc45c-7a20-4b4e-9377-f30839bb37fa",
        "fullFile": "/home/xav/dev/monPlanR/test/reducers/UnitCacheReducer.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "REDUCER: UnitSearch",
        "suites": [
          {
            "title": "ACTION: FETCH_UNITS_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "should begin fetching important dates correctly ",
                "fullTitle": "REDUCER: UnitSearch ACTION: FETCH_UNITS_PENDING should begin fetching important dates correctly ",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [],\n    unitSearchIsLoading: false,\n    unitSearchError: true\n};\nvar action = {\n    type: \"FETCH_UNITS_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [],\n    unitSearchIsLoading: true,\n    unitSearchError: false\n};\ntest(_UnitSearchReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7e5bdd54-42d5-4279-b6e0-835f857bdab6",
                "parentUUID": "41240bb1-dc06-4052-a331-a6d6cc9f3f61",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UnitSearchReducer.spec.js",
            "uuid": "41240bb1-dc06-4052-a331-a6d6cc9f3f61",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/UnitSearchReducer.spec.js",
            "passes": [
              {
                "title": "should begin fetching important dates correctly ",
                "fullTitle": "REDUCER: UnitSearch ACTION: FETCH_UNITS_PENDING should begin fetching important dates correctly ",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [],\n    unitSearchIsLoading: false,\n    unitSearchError: true\n};\nvar action = {\n    type: \"FETCH_UNITS_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [],\n    unitSearchIsLoading: true,\n    unitSearchError: false\n};\ntest(_UnitSearchReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "7e5bdd54-42d5-4279-b6e0-835f857bdab6",
                "parentUUID": "41240bb1-dc06-4052-a331-a6d6cc9f3f61",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1,
            "rootEmpty": false
          },
          {
            "title": "ACTION: FETCH_UNITS_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "should handled failed fetch of important dates correctly ",
                "fullTitle": "REDUCER: UnitSearch ACTION: FETCH_UNITS_REJECTED should handled failed fetch of important dates correctly ",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [],\n    unitSearchIsLoading: true,\n    unitSearchError: false\n};\nvar action = {\n    type: \"FETCH_UNITS_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [],\n    unitSearchIsLoading: false,\n    unitSearchError: true\n};\ntest(_UnitSearchReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c0c7aed5-9028-4ffa-a62a-bf298e969c52",
                "parentUUID": "c75f9b1e-7e5e-4b4c-9028-305a4212748a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UnitSearchReducer.spec.js",
            "uuid": "c75f9b1e-7e5e-4b4c-9028-305a4212748a",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/UnitSearchReducer.spec.js",
            "passes": [
              {
                "title": "should handled failed fetch of important dates correctly ",
                "fullTitle": "REDUCER: UnitSearch ACTION: FETCH_UNITS_REJECTED should handled failed fetch of important dates correctly ",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [],\n    unitSearchIsLoading: true,\n    unitSearchError: false\n};\nvar action = {\n    type: \"FETCH_UNITS_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [],\n    unitSearchIsLoading: false,\n    unitSearchError: true\n};\ntest(_UnitSearchReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c0c7aed5-9028-4ffa-a62a-bf298e969c52",
                "parentUUID": "c75f9b1e-7e5e-4b4c-9028-305a4212748a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "ACTION: FETCH_UNITS_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "should handled failed fetch of important dates correctly ",
                "fullTitle": "REDUCER: UnitSearch ACTION: FETCH_UNITS_FULFILLED should handled failed fetch of important dates correctly ",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [],\n    unitSearchIsLoading: true,\n    unitSearchError: false\n};\nvar action = {\n    type: \"FETCH_UNITS_FULFILLED\",\n    payload: [\"unit1\", \"unit2\", \"unit3\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [\"unit1\", \"unit2\", \"unit3\"],\n    unitSearchIsLoading: false,\n    unitSearchError: false\n};\ntest(_UnitSearchReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5b6f02c8-07b6-47a7-b654-eeaae2c27978",
                "parentUUID": "ff3e3f69-3bb2-4550-b60d-cf98f2807b98",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/UnitSearchReducer.spec.js",
            "uuid": "ff3e3f69-3bb2-4550-b60d-cf98f2807b98",
            "fullFile": "/home/xav/dev/monPlanR/test/reducers/UnitSearchReducer.spec.js",
            "passes": [
              {
                "title": "should handled failed fetch of important dates correctly ",
                "fullTitle": "REDUCER: UnitSearch ACTION: FETCH_UNITS_FULFILLED should handled failed fetch of important dates correctly ",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [],\n    unitSearchIsLoading: true,\n    unitSearchError: false\n};\nvar action = {\n    type: \"FETCH_UNITS_FULFILLED\",\n    payload: [\"unit1\", \"unit2\", \"unit3\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [\"unit1\", \"unit2\", \"unit3\"],\n    unitSearchIsLoading: false,\n    unitSearchError: false\n};\ntest(_UnitSearchReducer2.default, stateBefore, action, stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5b6f02c8-07b6-47a7-b654-eeaae2c27978",
                "parentUUID": "ff3e3f69-3bb2-4550-b60d-cf98f2807b98",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/reducers/UnitSearchReducer.spec.js",
        "uuid": "78aecc99-940a-4aec-8046-9d5c092186f6",
        "fullFile": "/home/xav/dev/monPlanR/test/reducers/UnitSearchReducer.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "UTILS: CostCalc",
        "suites": [],
        "tests": [
          {
            "title": "Should return a non-negative number",
            "fullTitle": "UTILS: CostCalc Should return a non-negative number",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_CostCalc2.default.calculateCost(0, 0)).to.be.gte(0);\nexpect(_CostCalc2.default.calculateCost(2, 6)).to.be.gte(0);",
            "err": {},
            "isRoot": false,
            "uuid": "5f604b87-2905-48cb-a7d0-fa60cde719c4",
            "parentUUID": "e1cfdbaa-c9ba-4327-b0d9-f3a0eca1fb6c",
            "skipped": false
          },
          {
            "title": "Should multiply SCA band cost with credit points",
            "fullTitle": "UTILS: CostCalc Should multiply SCA band cost with credit points",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var scaBand = 3;\nvar creditPoints = 6;\nvar scaBandCost = _CostCalc2.default.calculateCost(scaBand, 1);\nexpect(_CostCalc2.default.calculateCost(scaBand, creditPoints)).to.equal(scaBandCost * creditPoints);",
            "err": {},
            "isRoot": false,
            "uuid": "2ef420c4-d25c-413d-86cf-31681892e39c",
            "parentUUID": "e1cfdbaa-c9ba-4327-b0d9-f3a0eca1fb6c",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/utils/CostCalc.spec.js",
        "uuid": "e1cfdbaa-c9ba-4327-b0d9-f3a0eca1fb6c",
        "fullFile": "/home/xav/dev/monPlanR/test/utils/CostCalc.spec.js",
        "passes": [
          {
            "title": "Should return a non-negative number",
            "fullTitle": "UTILS: CostCalc Should return a non-negative number",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_CostCalc2.default.calculateCost(0, 0)).to.be.gte(0);\nexpect(_CostCalc2.default.calculateCost(2, 6)).to.be.gte(0);",
            "err": {},
            "isRoot": false,
            "uuid": "5f604b87-2905-48cb-a7d0-fa60cde719c4",
            "parentUUID": "e1cfdbaa-c9ba-4327-b0d9-f3a0eca1fb6c",
            "skipped": false
          },
          {
            "title": "Should multiply SCA band cost with credit points",
            "fullTitle": "UTILS: CostCalc Should multiply SCA band cost with credit points",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var scaBand = 3;\nvar creditPoints = 6;\nvar scaBandCost = _CostCalc2.default.calculateCost(scaBand, 1);\nexpect(_CostCalc2.default.calculateCost(scaBand, creditPoints)).to.equal(scaBandCost * creditPoints);",
            "err": {},
            "isRoot": false,
            "uuid": "2ef420c4-d25c-413d-86cf-31681892e39c",
            "parentUUID": "e1cfdbaa-c9ba-4327-b0d9-f3a0eca1fb6c",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 2,
        "totalPasses": 2,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 1,
        "rootEmpty": false
      },
      {
        "title": "UTILS: NextSemesterString",
        "suites": [
          {
            "title": "nextSemester",
            "suites": [],
            "tests": [
              {
                "title": "Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([], 2011, [])).to.deep.equal({\n    index: 0,\n    year: 2011,\n    code: \"S1-01\",\n    teachingPeriodData: []\n});",
                "err": {},
                "isRoot": false,
                "uuid": "3dc40980-41bf-485a-8a84-e0f96e9ab1b8",
                "parentUUID": "158a1d44-be5d-4614-abf3-77bc20a5f12d",
                "skipped": false
              },
              {
                "title": "Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([], 2029, sortedTeachingPeriodData)).to.deep.equal({\n    index: 0,\n    year: 2029,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
                "err": {},
                "isRoot": false,
                "uuid": "8cc0d65e-90fb-4288-a05f-275906975d90",
                "parentUUID": "158a1d44-be5d-4614-abf3-77bc20a5f12d",
                "skipped": false
              },
              {
                "title": "Should return semester two if the last teaching period is in semester one, with the same year",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should return semester two if the last teaching period is in semester one, with the same year",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2025,\n    code: \"S1-01\"\n}, {\n    year: 2025,\n    code: \"S2-01\"\n}, {\n    year: 2026,\n    code: \"S1-01\"\n}, {\n    year: 2026,\n    code: \"S2-01\"\n}, {\n    year: 2027,\n    code: \"S1-01\"\n}], 2023, sortedTeachingPeriodData)).to.deep.equal({\n    index: 5,\n    year: 2027,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
                "err": {},
                "isRoot": false,
                "uuid": "5fc493ff-0003-47bb-9055-4d3becee71d5",
                "parentUUID": "158a1d44-be5d-4614-abf3-77bc20a5f12d",
                "skipped": false
              },
              {
                "title": "Should return semester one next year if the last teaching period is in semester two",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should return semester one next year if the last teaching period is in semester two",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2015,\n    code: \"FY-01\"\n}, {\n    year: 2017,\n    code: \"S2-01\"\n}], 2015, sortedTeachingPeriodData)).to.deep.equal({\n    index: 2,\n    year: 2018,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
                "err": {},
                "isRoot": false,
                "uuid": "695008e0-8e2a-4879-a2f9-d9c0925ed8f2",
                "parentUUID": "158a1d44-be5d-4614-abf3-77bc20a5f12d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/utils/NextSemesterString.spec.js",
            "uuid": "158a1d44-be5d-4614-abf3-77bc20a5f12d",
            "fullFile": "/home/xav/dev/monPlanR/test/utils/NextSemesterString.spec.js",
            "passes": [
              {
                "title": "Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([], 2011, [])).to.deep.equal({\n    index: 0,\n    year: 2011,\n    code: \"S1-01\",\n    teachingPeriodData: []\n});",
                "err": {},
                "isRoot": false,
                "uuid": "3dc40980-41bf-485a-8a84-e0f96e9ab1b8",
                "parentUUID": "158a1d44-be5d-4614-abf3-77bc20a5f12d",
                "skipped": false
              },
              {
                "title": "Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([], 2029, sortedTeachingPeriodData)).to.deep.equal({\n    index: 0,\n    year: 2029,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
                "err": {},
                "isRoot": false,
                "uuid": "8cc0d65e-90fb-4288-a05f-275906975d90",
                "parentUUID": "158a1d44-be5d-4614-abf3-77bc20a5f12d",
                "skipped": false
              },
              {
                "title": "Should return semester two if the last teaching period is in semester one, with the same year",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should return semester two if the last teaching period is in semester one, with the same year",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2025,\n    code: \"S1-01\"\n}, {\n    year: 2025,\n    code: \"S2-01\"\n}, {\n    year: 2026,\n    code: \"S1-01\"\n}, {\n    year: 2026,\n    code: \"S2-01\"\n}, {\n    year: 2027,\n    code: \"S1-01\"\n}], 2023, sortedTeachingPeriodData)).to.deep.equal({\n    index: 5,\n    year: 2027,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
                "err": {},
                "isRoot": false,
                "uuid": "5fc493ff-0003-47bb-9055-4d3becee71d5",
                "parentUUID": "158a1d44-be5d-4614-abf3-77bc20a5f12d",
                "skipped": false
              },
              {
                "title": "Should return semester one next year if the last teaching period is in semester two",
                "fullTitle": "UTILS: NextSemesterString nextSemester Should return semester one next year if the last teaching period is in semester two",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2015,\n    code: \"FY-01\"\n}, {\n    year: 2017,\n    code: \"S2-01\"\n}], 2015, sortedTeachingPeriodData)).to.deep.equal({\n    index: 2,\n    year: 2018,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
                "err": {},
                "isRoot": false,
                "uuid": "695008e0-8e2a-4879-a2f9-d9c0925ed8f2",
                "parentUUID": "158a1d44-be5d-4614-abf3-77bc20a5f12d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "getSemesterString",
            "suites": [],
            "tests": [
              {
                "title": "Should render a semester string",
                "fullTitle": "UTILS: NextSemesterString getSemesterString Should render a semester string",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2019,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n})).to.equal(\"Semester 2, 2019\");",
                "err": {},
                "isRoot": false,
                "uuid": "ed2b5536-3042-4823-bfcc-8ab4536f0479",
                "parentUUID": "a6fb4764-7d7b-4d91-a01c-7bf5d49ed135",
                "skipped": false
              },
              {
                "title": "Should revert back to semester codes if teachingPeriodData is not available",
                "fullTitle": "UTILS: NextSemesterString getSemesterString Should revert back to semester codes if teachingPeriodData is not available",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2015,\n    code: \"S1-01\"\n})).to.equal(\"S1-01, 2015\");",
                "err": {},
                "isRoot": false,
                "uuid": "92aa6ce4-0874-4012-83fb-5e471ffc3fd6",
                "parentUUID": "a6fb4764-7d7b-4d91-a01c-7bf5d49ed135",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/utils/NextSemesterString.spec.js",
            "uuid": "a6fb4764-7d7b-4d91-a01c-7bf5d49ed135",
            "fullFile": "/home/xav/dev/monPlanR/test/utils/NextSemesterString.spec.js",
            "passes": [
              {
                "title": "Should render a semester string",
                "fullTitle": "UTILS: NextSemesterString getSemesterString Should render a semester string",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2019,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n})).to.equal(\"Semester 2, 2019\");",
                "err": {},
                "isRoot": false,
                "uuid": "ed2b5536-3042-4823-bfcc-8ab4536f0479",
                "parentUUID": "a6fb4764-7d7b-4d91-a01c-7bf5d49ed135",
                "skipped": false
              },
              {
                "title": "Should revert back to semester codes if teachingPeriodData is not available",
                "fullTitle": "UTILS: NextSemesterString getSemesterString Should revert back to semester codes if teachingPeriodData is not available",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2015,\n    code: \"S1-01\"\n})).to.equal(\"S1-01, 2015\");",
                "err": {},
                "isRoot": false,
                "uuid": "92aa6ce4-0874-4012-83fb-5e471ffc3fd6",
                "parentUUID": "a6fb4764-7d7b-4d91-a01c-7bf5d49ed135",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/utils/NextSemesterString.spec.js",
        "uuid": "2381f468-7ec6-493a-855b-650c12cb6918",
        "fullFile": "/home/xav/dev/monPlanR/test/utils/NextSemesterString.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "UTILS: ShowYear",
        "suites": [],
        "tests": [
          {
            "title": "Should return the right year based off current month",
            "fullTitle": "UTILS: ShowYear Should return the right year based off current month",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "if (new Date().getMonth() + 1 >= 11) {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear() + 1);\n} else {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear());\n}",
            "err": {},
            "isRoot": false,
            "uuid": "d89bad3a-5572-49b1-988a-b9c9699c91e8",
            "parentUUID": "0a9ae08a-0e2b-467f-8659-1e672fd25e63",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/utils/ShowYear.spec.js",
        "uuid": "0a9ae08a-0e2b-467f-8659-1e672fd25e63",
        "fullFile": "/home/xav/dev/monPlanR/test/utils/ShowYear.spec.js",
        "passes": [
          {
            "title": "Should return the right year based off current month",
            "fullTitle": "UTILS: ShowYear Should return the right year based off current month",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "if (new Date().getMonth() + 1 >= 11) {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear() + 1);\n} else {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear());\n}",
            "err": {},
            "isRoot": false,
            "uuid": "d89bad3a-5572-49b1-988a-b9c9699c91e8",
            "parentUUID": "0a9ae08a-0e2b-467f-8659-1e672fd25e63",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "UTILS: YearCalc",
        "suites": [],
        "tests": [
          {
            "title": "Should contain the same year as it was specified",
            "fullTitle": "UTILS: YearCalc Should contain the same year as it was specified",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getStartYearVals(2016).find(function (year) {\n    return year.value === 2016;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2017).find(function (year) {\n    return year.value === 2017;\n})).to.be.ok;",
            "err": {},
            "isRoot": false,
            "uuid": "645990e4-6d4f-458f-a34e-21d57b270233",
            "parentUUID": "361fb401-e654-4eac-bfee-41797e0c04aa",
            "skipped": false
          },
          {
            "title": "Should contain a year that is ten years from now",
            "fullTitle": "UTILS: YearCalc Should contain a year that is ten years from now",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getStartYearVals(2019).find(function (year) {\n    return year.value === 2029;\n})).to.be.ok;\nexpect(_YearCalc2.default.getStartYearVals(2012).find(function (year) {\n    return year.value === 2002;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2028;\n})).to.be.ok;",
            "err": {},
            "isRoot": false,
            "uuid": "98a1a337-1ecc-4b4d-9b5e-895fc610589b",
            "parentUUID": "361fb401-e654-4eac-bfee-41797e0c04aa",
            "skipped": false
          },
          {
            "title": "Should not contain any past year when computing end years",
            "fullTitle": "UTILS: YearCalc Should not contain any past year when computing end years",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2017;\n})).to.be.not.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2008;\n})).to.be.not.ok;",
            "err": {},
            "isRoot": false,
            "uuid": "4f2d14cf-f691-4bd7-abd2-c15c19085b78",
            "parentUUID": "361fb401-e654-4eac-bfee-41797e0c04aa",
            "skipped": false
          },
          {
            "title": "Should have starting years go in decreasing order from one year ahead to the minimum",
            "fullTitle": "UTILS: YearCalc Should have starting years go in decreasing order from one year ahead to the minimum",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getStartYearVals(2019).slice(0, 12)).to.deep.equal([{\n    text: \"2020\",\n    value: 2020\n}, {\n    text: \"2019\",\n    value: 2019\n}, {\n    text: \"2018\",\n    value: 2018\n}, {\n    text: \"2017\",\n    value: 2017\n}, {\n    text: \"2016\",\n    value: 2016\n}, {\n    text: \"2015\",\n    value: 2015\n}, {\n    text: \"2014\",\n    value: 2014\n}, {\n    text: \"2013\",\n    value: 2013\n}, {\n    text: \"2012\",\n    value: 2012\n}, {\n    text: \"2011\",\n    value: 2011\n}, {\n    text: \"2010\",\n    value: 2010\n}, {\n    text: \"2009\",\n    value: 2009\n}]);",
            "err": {},
            "isRoot": false,
            "uuid": "2df848e2-dc1d-4862-b520-9fa1cfeeebd7",
            "parentUUID": "361fb401-e654-4eac-bfee-41797e0c04aa",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/utils/YearCalc.spec.js",
        "uuid": "361fb401-e654-4eac-bfee-41797e0c04aa",
        "fullFile": "/home/xav/dev/monPlanR/test/utils/YearCalc.spec.js",
        "passes": [
          {
            "title": "Should contain the same year as it was specified",
            "fullTitle": "UTILS: YearCalc Should contain the same year as it was specified",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getStartYearVals(2016).find(function (year) {\n    return year.value === 2016;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2017).find(function (year) {\n    return year.value === 2017;\n})).to.be.ok;",
            "err": {},
            "isRoot": false,
            "uuid": "645990e4-6d4f-458f-a34e-21d57b270233",
            "parentUUID": "361fb401-e654-4eac-bfee-41797e0c04aa",
            "skipped": false
          },
          {
            "title": "Should contain a year that is ten years from now",
            "fullTitle": "UTILS: YearCalc Should contain a year that is ten years from now",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getStartYearVals(2019).find(function (year) {\n    return year.value === 2029;\n})).to.be.ok;\nexpect(_YearCalc2.default.getStartYearVals(2012).find(function (year) {\n    return year.value === 2002;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2028;\n})).to.be.ok;",
            "err": {},
            "isRoot": false,
            "uuid": "98a1a337-1ecc-4b4d-9b5e-895fc610589b",
            "parentUUID": "361fb401-e654-4eac-bfee-41797e0c04aa",
            "skipped": false
          },
          {
            "title": "Should not contain any past year when computing end years",
            "fullTitle": "UTILS: YearCalc Should not contain any past year when computing end years",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2017;\n})).to.be.not.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2008;\n})).to.be.not.ok;",
            "err": {},
            "isRoot": false,
            "uuid": "4f2d14cf-f691-4bd7-abd2-c15c19085b78",
            "parentUUID": "361fb401-e654-4eac-bfee-41797e0c04aa",
            "skipped": false
          },
          {
            "title": "Should have starting years go in decreasing order from one year ahead to the minimum",
            "fullTitle": "UTILS: YearCalc Should have starting years go in decreasing order from one year ahead to the minimum",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(_YearCalc2.default.getStartYearVals(2019).slice(0, 12)).to.deep.equal([{\n    text: \"2020\",\n    value: 2020\n}, {\n    text: \"2019\",\n    value: 2019\n}, {\n    text: \"2018\",\n    value: 2018\n}, {\n    text: \"2017\",\n    value: 2017\n}, {\n    text: \"2016\",\n    value: 2016\n}, {\n    text: \"2015\",\n    value: 2015\n}, {\n    text: \"2014\",\n    value: 2014\n}, {\n    text: \"2013\",\n    value: 2013\n}, {\n    text: \"2012\",\n    value: 2012\n}, {\n    text: \"2011\",\n    value: 2011\n}, {\n    text: \"2010\",\n    value: 2010\n}, {\n    text: \"2009\",\n    value: 2009\n}]);",
            "err": {},
            "isRoot": false,
            "uuid": "2df848e2-dc1d-4862-b520-9fa1cfeeebd7",
            "parentUUID": "361fb401-e654-4eac-bfee-41797e0c04aa",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 4,
        "totalPasses": 4,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 2,
        "rootEmpty": false
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "8353ba2e-c12e-47d9-bb57-22fdc756240e",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "Should create an action to increment credit points counter",
      "fullTitle": "AC: incrementCreditPoints Should create an action to increment credit points counter",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 5\n};\n(0, _expect2.default)(actions.incrementCreditPoints(5)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "9a365398-0920-4ac3-93e6-f038b4df350d",
      "parentUUID": "837a9421-002c-49ae-9c3d-34ce805ec5d2",
      "skipped": false
    },
    {
      "title": "Should create an action to decrement credit points counter",
      "fullTitle": "AC: decrementCreditPoints Should create an action to decrement credit points counter",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 5\n};\n(0, _expect2.default)(actions.decrementCreditPoints(5)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "7bbaf56c-15cd-4439-91d2-b97eed2604df",
      "parentUUID": "d5fcbd85-b88d-47a8-8e30-74fc97fa7a93",
      "skipped": false
    },
    {
      "title": "Should create an action to increment cost counter",
      "fullTitle": "AC: incrementCost Should create an action to increment cost counter",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"INCREMENT_COST\",\n    value: 5\n};\n(0, _expect2.default)(actions.incrementCost(5)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "d468deb2-4e07-4fc6-9f3f-b44f925992d2",
      "parentUUID": "782338b4-278d-4585-887d-4b689b048164",
      "skipped": false
    },
    {
      "title": "Should create an action to decrement cost counter",
      "fullTitle": "AC: decrementCosts Should create an action to decrement cost counter",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"DECREMENT_COST\",\n    value: 5\n};\n(0, _expect2.default)(actions.decrementCost(5)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "0cc451ee-f903-4d5a-8f87-c960b087c1cb",
      "parentUUID": "e57e469a-e7e4-49ed-a831-a596d7042919",
      "skipped": false
    },
    {
      "title": "Should create an action to insert a teaching period",
      "fullTitle": "AC: insertTeachingPeriod Should create an action to insert a teaching period",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{\n    type: \"INSERT_TEACHING_PERIOD\",\n    index: 1,\n    year: 2016,\n    code: \"tpCode\"\n}, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n}];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.insertTeachingPeriod(1, 2016, \"tpCode\"));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "cf53c603-58aa-4095-b67e-a20b8cbcefd6",
      "parentUUID": "b76f8771-46ed-482e-89c3-539800f8f1c0",
      "skipped": false
    },
    {
      "title": "Should create an action to remove a teaching period",
      "fullTitle": "AC: removeTeachingPeriod Should create an action to remove a teaching period",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1,\n    units: [\"unit1\", \"unit2\", \"unit3\", null]\n}, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n}];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.removeTeachingPeriod(1, [\"unit1\", \"unit2\", \"unit3\", null]));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "64862fb9-b782-4bab-b761-20216d91764f",
      "parentUUID": "b6c36f98-82e0-4212-bb1a-96d127422d3f",
      "skipped": false
    },
    {
      "title": "Should create an action to increase the study load",
      "fullTitle": "AC: increaseStudyLoad Should create an action to increase the study load",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\n(0, _expect2.default)(actions.increaseStudyLoad()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "adc26fa7-8832-4c23-9376-5ff23756a59c",
      "parentUUID": "3c4ff35e-0424-4010-984b-1d540e687b9e",
      "skipped": false
    },
    {
      "title": "Should create an action to increase the study load with units affected",
      "fullTitle": "AC: decreaseStudyLoad Should create an action to increase the study load with units affected",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockTeachingPeriods = [{ year: 2018, code: \"S1-01\", units: [null, null, null, null, { unitName: \"unit1\", creditPoints: 6 }] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }, { year: 2019, code: \"S1-01\", units: [null, null, null, null, { unitName: \"unit2\", creditPoints: 6 }] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null, null] }];\nvar expectedActions = [{ type: \"PREP_FOR_DELETION\", unitCoords: [[0, 4], [2, 4]] }, { type: \"DECREASE_STUDY_LOAD\", units: [{ unitName: \"unit1\", creditPoints: 6 }, { unitName: \"unit2\", creditPoints: 6 }] }];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.decreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "933533f4-77db-4b49-a6bd-eec667df9e8a",
      "parentUUID": "b973e418-4b8d-41f2-8ad6-6af883dbf763",
      "skipped": false
    },
    {
      "title": "Should create an action to increase the study load with no units affected",
      "fullTitle": "AC: decreaseStudyLoad Should create an action to increase the study load with no units affected",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockTeachingPeriods = [{ year: 2018, code: \"S1-01\", units: [null, null, null, \"unit1\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }, { year: 2019, code: \"S1-01\", units: [null, null, null, \"unit2\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null, null] }];\nvar expectedActions = [{ type: \"PREP_FOR_DELETION\", unitCoords: [] }, { type: \"DECREASE_STUDY_LOAD\", units: [] }];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.decreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "3f3f36c3-4538-4d56-83af-8a9181dd46e6",
      "parentUUID": "b973e418-4b8d-41f2-8ad6-6af883dbf763",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for the addition of a unit that is not a custom unit being dragged",
      "fullTitle": "AC: addUnit Should correctly create the actions required for the addition of a unit that is not a custom unit being dragged",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockUnit = {\n                customUnitDragging: false,\n                cost: 200,\n                creditPoints: 6,\n                unitCode: \"TEST1001\"\n            };\n            var expectedActions = [{ type: \"ADD_UNIT\", tpIndex: 1, unitIndex: 1, unit: mockUnit, cost: 200, creditPoints: 6 }, { type: \"CLEAR_HIGHLIGHTING_INVALID_UNIT_SLOTS\" }, { type: \"VALIDATE_COURSE\" }, { type: \"MODIFIED_COURSE_PLAN\" }];\n            var store = mockStore({});\n            store.dispatch(actions.addUnit(1, 1, mockUnit));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "798471b5-36a6-4a82-a2da-1ce042cb60c4",
      "parentUUID": "a3b1275c-1788-4fae-945d-b171594a92aa",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for removal of a unit",
      "fullTitle": "AC: removeUnit Should correctly create the actions required for removal of a unit",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{ type: \"REMOVE_UNIT\", tpIndex: 1, unitIndex: 1, cost: 200, creditPoints: 6 }, { type: \"VALIDATE_COURSE\" }, { type: \"MODIFIED_COURSE_PLAN\" }];\n            var store = mockStore({});\n            store.dispatch(actions.removeUnit(1, 1, 6, 200));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "867d0036-97a7-4b16-93f9-286307d489e4",
      "parentUUID": "79feeb05-e086-4984-9db5-9d59daaf47bf",
      "skipped": false
    },
    {
      "title": "Should create the actions for clearing the course",
      "fullTitle": "AC: clearCourse Should create the actions for clearing the course",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{ type: \"CLEAR_COURSE\" }, { type: \"GET_NEXT_SEMESTER_STRING\" }, { type: \"VALIDATE_COURSE\" }];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.clearCourse());\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "0406dea3-60bb-4bb3-965b-2e3fdf85a767",
      "parentUUID": "e0f242c0-10a5-44d5-ba95-226fc57497d7",
      "skipped": false
    },
    {
      "title": "Should create the action for generating the course",
      "fullTitle": "AC: generateCourse Should create the action for generating the course",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2016,\n    endYear: 2019\n};\n(0, _expect2.default)(actions.generateCourse(2016, 2019)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "e2f245c8-8b65-4642-b161-93a038709fd4",
      "parentUUID": "dc0877d5-d278-47cb-b18f-3ab229cc1a5c",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for submission of a year form",
      "fullTitle": "AC: submitYearForm Should correctly create the actions required for submission of a year form",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{ type: \"SUBMIT_YEAR_FORM\", startYear: 2016, endYear: 2019 }, { type: \"GENERATE_COURSE\", startYear: 2016, endYear: 2019 }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\n            var store = mockStore({});\n            store.dispatch(actions.submitYearForm(2016, 2019));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "835aeedc-5740-49b0-9f95-6ee2e4833e60",
      "parentUUID": "33a8a998-628e-4550-8a4a-0a32b1f6f5a9",
      "skipped": false
    },
    {
      "title": "Should correctly create actions required to change the start year",
      "fullTitle": "AC: changeStartYear Should correctly create actions required to change the start year",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{ type: \"CHANGE_START_YEAR\", year: 2020 }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\nvar store = mockStore({});\nstore.dispatch(actions.changeStartYear(2020));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "33118a89-3bd9-43a0-9153-227095e78231",
      "parentUUID": "9e15aa65-960c-48ee-b5e3-72542323d53d",
      "skipped": false
    },
    {
      "title": "Should create the action for generating the course",
      "fullTitle": "AC: getNextSemesterString Should create the action for generating the course",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n};\n(0, _expect2.default)(actions.getNextSemesterString()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "422f8503-7bac-45c6-a132-df15fccedca4",
      "parentUUID": "8b21b377-a6d7-444e-9839-6e6c7c312e1e",
      "skipped": false
    },
    {
      "title": "Should create the action for getting affected units in an overload column",
      "fullTitle": "AC: getAffectedUnitsInColumn Should create the action for getting affected units in an overload column",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"GET_AFFECTED_UNITS_IN_OVERLOAD_COLUMN\",\n    index: 4\n};\n(0, _expect2.default)(actions.getAffectedUnitsInColumn(4)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "53006f6c-6f5f-475d-bc40-c45acb220813",
      "parentUUID": "dc463f13-6e44-47eb-81f0-f07c2793d775",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for deletion of a teaching period with units affected",
      "fullTitle": "AC: attemptToDeleteTeachingPeriod Should correctly create the actions required for deletion of a teaching period with units affected",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockUnits = [{ unitCode: \"TEST101\", unitName: \"unit1\" }, null, { unitCode: \"TEST102\", unitName: \"unit2\" }, null, null];\nvar expectedActions = [{ type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\" }, { type: \"UPDATE_AFFECTED_UNITS\", affectedUnits: [\"TEST101 - unit1\", \"TEST102 - unit2\"] }, { type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\", index: 1 }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDeleteTeachingPeriod(1, mockUnits));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "5c18fab0-8a55-421f-92aa-55fdbcf197d7",
      "parentUUID": "dc8370ca-875e-4291-8a45-1c9ae7010fa2",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for deletion of a teaching period with no units affected",
      "fullTitle": "AC: attemptToDeleteTeachingPeriod Should correctly create the actions required for deletion of a teaching period with no units affected",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockUnits = [null, null, null, null, null];\nvar expectedActions = [{ type: \"REMOVE_TEACHING_PERIOD\", index: 1, units: [null, null, null, null, null] }, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, { type: \"GET_NEXT_SEMESTER_STRING\" }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDeleteTeachingPeriod(1, mockUnits));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "5c0c8679-cc85-48a7-bcbe-1c51f9cb50e4",
      "parentUUID": "dc8370ca-875e-4291-8a45-1c9ae7010fa2",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for decrease of a study load with units affected",
      "fullTitle": "AC: attemptToDecreaseStudyLoad Should correctly create the actions required for decrease of a study load with units affected",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockTeachingPeriods = [{ units: [null, null, { unitCode: \"TEST10A\", unitName: \"unitA\" }, null, { unitCode: \"TEST101\", unitName: \"unit1\", creditPoints: 6 }] }, { units: [null, null, { unitCode: \"TEST10B\", unitName: \"unitB\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10C\", unitName: \"unitC\" }, null, { unitCode: \"TEST102\", unitName: \"unit2\", creditPoints: 6 }] }, { units: [null, null, { unitCode: \"TEST10D\", unitName: \"unitD\" }, null, null] }];\nvar expectedActions = [{ type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\" }, { type: \"UPDATE_AFFECTED_UNITS\", affectedUnits: [\"TEST101 - unit1\", \"TEST102 - unit2\"] }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDecreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "cc58e662-75c1-41e2-b24a-9fd523af88d6",
      "parentUUID": "d4c4cef4-9ce5-4afd-8bf0-63909752cc17",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for decrease of a study load with no units affected",
      "fullTitle": "AC: attemptToDecreaseStudyLoad Should correctly create the actions required for decrease of a study load with no units affected",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockTeachingPeriods = [{ units: [null, null, { unitCode: \"TEST10A\", unitName: \"unitA\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10B\", unitName: \"unitB\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10C\", unitName: \"unitC\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10D\", unitName: \"unitD\" }, null, null] }];\nvar expectedActions = [{ type: \"PREP_FOR_DELETION\", unitCoords: [] }, { type: \"DECREASE_STUDY_LOAD\", units: [] }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDecreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "46afd084-8975-4fc3-a522-b8981d33fd4f",
      "parentUUID": "d4c4cef4-9ce5-4afd-8bf0-63909752cc17",
      "skipped": false
    },
    {
      "title": "Should create the action for getting affected units in an teaching period row",
      "fullTitle": "AC: getAffectedUnitsInRow Should create the action for getting affected units in an teaching period row",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"GET_AFFECTED_UNITS_IN_TEACHING_PERIOD_ROW\",\n    index: 4\n};\n(0, _expect2.default)(actions.getAffectedUnitsInRow(4)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "e02cc80e-3dae-407c-863b-1a2c7b4e7f50",
      "parentUUID": "fa11876f-7c90-47dd-a79a-1fe283ca0e51",
      "skipped": false
    },
    {
      "title": "Should create the action for validating the course",
      "fullTitle": "AC: validateCourse Should create the action for validating the course",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"VALIDATE_COURSE\"\n};\n(0, _expect2.default)(actions.validateCourse()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "9a4225ab-d964-48c3-9d99-96e17032a438",
      "parentUUID": "afa78aa5-5f0a-4860-9999-0de1d1f9a0bc",
      "skipped": false
    },
    {
      "title": "Should create the action for highlighting the invalid unit slots",
      "fullTitle": "AC: highlightInvalidUnitSlots Should create the action for highlighting the invalid unit slots",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: \"UnitTest\",\n    ignoreCoordinate: false\n};\n(0, _expect2.default)(actions.highlightInvalidUnitSlots(\"UnitTest\", false)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "97e7db97-5f13-4e1a-92f1-f80400d1f355",
      "parentUUID": "02d6b517-ca16-4429-b6e9-66cdef43dd2d",
      "skipped": false
    },
    {
      "title": "Should create the action for clearing the highlighting for invalid unit slots",
      "fullTitle": "AC: clearHighlightingInvalidUnitSlots Should create the action for clearing the highlighting for invalid unit slots",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"CLEAR_HIGHLIGHTING_INVALID_UNIT_SLOTS\"\n};\n(0, _expect2.default)(actions.clearHighlightingInvalidUnitSlots()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "0507c93f-3edf-4b8d-88dc-046eeb22cf89",
      "parentUUID": "5bef1b96-1c71-42d5-af48-6bd51bc596c1",
      "skipped": false
    },
    {
      "title": "Should create an action to show the insert teaching period UI",
      "fullTitle": "AC: showInsertTeachingPeriodUI Should create an action to show the insert teaching period UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"testTPCode\"\n};\n(0, _expect2.default)(actions.showInsertTeachingPeriodUI(\"testTPCode\")).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "9e035380-28c3-4781-a908-dabe1ccc7e96",
      "parentUUID": "4c1d6a41-30fb-4730-b410-526fbea809b3",
      "skipped": false
    },
    {
      "title": "Should create an action to hide the insert teaching period UI",
      "fullTitle": "AC: hideInsertTeachingPeriodUI Should create an action to hide the insert teaching period UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\n(0, _expect2.default)(actions.hideInsertTeachingPeriodUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "e76c8b86-f9fe-49b8-b390-ea5443ac69c6",
      "parentUUID": "7ed137a5-26a6-4e31-bfff-bf4cf2722095",
      "skipped": false
    },
    {
      "title": "Should create an action to show the add unit UI",
      "fullTitle": "AC: showAddingUnitUI Should create an action to show the add unit UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_ADD_UNIT_UI\"\n};\n(0, _expect2.default)(actions.showAddingUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "9ae6eaf6-1227-4c0b-989c-aa47241fe70a",
      "parentUUID": "daa9600b-0320-4ee0-b6cc-0b8986cc62fd",
      "skipped": false
    },
    {
      "title": "Should create an action to hide the add unit UI",
      "fullTitle": "AC: hideAddingUnitUI Should create an action to hide the add unit UI",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_ADD_UNIT_UI\"\n};\n(0, _expect2.default)(actions.hideAddingUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "695685b5-0e57-4b72-bdfa-ce5cf85c2cbd",
      "parentUUID": "cd20a3a2-832d-4c75-bd95-04892ae50d3a",
      "skipped": false
    },
    {
      "title": "Should create an action to show the move unit UI",
      "fullTitle": "AC: showMoveUnitUI Should create an action to show the move unit UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_MOVE_UNIT_UI\"\n};\n(0, _expect2.default)(actions.showMoveUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "9b4dab74-4d28-44b7-bddd-9ccf73f68cce",
      "parentUUID": "d11c364d-a3a8-4238-aee1-1e0e449f4b7b",
      "skipped": false
    },
    {
      "title": "Should create an action to hide move unit UI",
      "fullTitle": "AC: hideMoveUnitUI Should create an action to hide move unit UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_MOVE_UNIT_UI\"\n};\n(0, _expect2.default)(actions.hideMoveUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "79271b8c-8038-4ac8-b8d0-3bb0992cf909",
      "parentUUID": "002a94c1-11ed-4240-881c-a7ab86b721db",
      "skipped": false
    },
    {
      "title": "Should create an action to show confirm delete teaching period UI",
      "fullTitle": "AC: showConfirmDeleteTeachingPeriodUI Should create an action to show confirm delete teaching period UI",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\n(0, _expect2.default)(actions.showConfirmDeleteTeachingPeriodUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "af41c925-c6d1-4b99-b84b-b9036c6a8652",
      "parentUUID": "b8727103-aa6c-4740-861d-3bdb35100232",
      "skipped": false
    },
    {
      "title": "Should create an action to hide confirm delete teaching period UI",
      "fullTitle": "AC: hideConfirmDeleteTeachingPeriodUI Should create an action to hide confirm delete teaching period UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\n(0, _expect2.default)(actions.hideConfirmDeleteTeachingPeriodUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "0a91bdce-4199-4a2b-9004-bb74ace1cd66",
      "parentUUID": "64b5d9fa-50e8-4827-833d-aeb9771b0a70",
      "skipped": false
    },
    {
      "title": "Should create an action to show confirm decrease study load UI",
      "fullTitle": "AC: showConfirmDecreaseStudyLoadUI Should create an action to show confirm decrease study load UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\n(0, _expect2.default)(actions.showConfirmDecreaseStudyLoadUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "9e5b8fd8-3983-4efb-835e-410ac0be1e7d",
      "parentUUID": "546f8bfa-f15c-4c1e-a811-f568c3bfc5d9",
      "skipped": false
    },
    {
      "title": "Should create an action to hide confirm decrease study load UI",
      "fullTitle": "AC: hideConfirmDecreaseStudyLoadUI Should create an action to hide confirm decrease study load UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\n(0, _expect2.default)(actions.hideConfirmDecreaseStudyLoadUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "f5e4d0f8-9293-4e9f-9266-f2edb9abd579",
      "parentUUID": "49347b73-4c35-4c71-9772-b0fba834659c",
      "skipped": false
    },
    {
      "title": "Should create an action to show custum unit UI",
      "fullTitle": "AC: showCustomUnitUI Should create an action to show custum unit UI",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"TEST1001\"\n};\n(0, _expect2.default)(actions.showCustomUnitUI(\"TEST1001\")).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "111f792e-e4e7-4055-baf0-8d4ced85e3ee",
      "parentUUID": "3febcc15-a7a7-4ea7-b06e-bd071272aa73",
      "skipped": false
    },
    {
      "title": "Should create an action to hide custom unit UI",
      "fullTitle": "AC: hideCustomUnitUI Should create an action to hide custom unit UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\n(0, _expect2.default)(actions.hideCustomUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "96b88d77-5032-423a-9c54-b50979b55e87",
      "parentUUID": "14edf7e7-9c31-4b93-a584-bfb5afd17bd3",
      "skipped": false
    },
    {
      "title": "Should create an action to show sidebar",
      "fullTitle": "AC: showSidebar Should create an action to show sidebar",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_SIDEBAR\"\n};\n(0, _expect2.default)(actions.showSidebar()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "3487c80b-18a4-45c7-8d9c-d663b7f1d0b2",
      "parentUUID": "c80ccd05-936d-415c-950b-7bd1fad4898e",
      "skipped": false
    },
    {
      "title": "Should create an action to hide sidebar",
      "fullTitle": "AC: hideSidebar Should create an action to hide sidebar",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_SIDEBAR\"\n};\n(0, _expect2.default)(actions.hideSidebar()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "f3fbbfe0-bc26-445e-80a9-b8470b6386c9",
      "parentUUID": "740a0b10-a6f8-40b5-9750-950e6d7a6ac9",
      "skipped": false
    },
    {
      "title": "Should create an action to set the course to read only",
      "fullTitle": "AC: setCourseReadOnly Should create an action to set the course to read only",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\n(0, _expect2.default)(actions.setCourseReadOnly()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "08266100-7a70-4a09-83d3-f08f7aab889e",
      "parentUUID": "9c5d6f11-e99d-4c05-abba-6eb9509d6c5c",
      "skipped": false
    },
    {
      "title": "Should create an action to set the course to read and write",
      "fullTitle": "AC: setCourseReadAndWrite Should create an action to set the course to read and write",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\n(0, _expect2.default)(actions.setCourseReadAndWrite()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "93a3a172-d4af-4d7c-961f-c9b562151f54",
      "parentUUID": "490816d5-534f-4f1e-9944-5fe7a3a830ff",
      "skipped": false
    },
    {
      "title": "Should render a notification title and a message",
      "fullTitle": "COMPONENT: Notification Should render a notification title and a message",
      "timedOut": false,
      "duration": 30,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, {\n    title: \"This is a test\",\n    message: \"Some message goes over here\"\n}));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(\"This is a test\");\nexpect(wrapper.text().replace(\"This is a test\", \"\").trim()).to.equal(\"Some message goes over here\");",
      "err": {},
      "isRoot": false,
      "uuid": "5840b127-0f97-4a40-aac2-d9bb691b0119",
      "parentUUID": "b07bf38c-cff6-41a9-9c6d-3f0abd01d742",
      "skipped": false
    },
    {
      "title": "Should have a default level to be info if it is not specified",
      "fullTitle": "COMPONENT: Notification Should have a default level to be info if it is not specified",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, null)).find(\".info.message\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "0a1a9fb5-c775-4dce-b631-aa645b7f7748",
      "parentUUID": "b07bf38c-cff6-41a9-9c6d-3f0abd01d742",
      "skipped": false
    },
    {
      "title": "Should follow a specified level",
      "fullTitle": "COMPONENT: Notification Should follow a specified level",
      "timedOut": false,
      "duration": 46,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"info\" })).find(\".info.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"warning\" })).find(\".warning.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"error\" })).find(\".negative.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"success\" })).find(\".positive.message\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "e75253e1-4d92-4b40-9b2e-6c2d6a1cb48a",
      "parentUUID": "b07bf38c-cff6-41a9-9c6d-3f0abd01d742",
      "skipped": false
    },
    {
      "title": "should be called exactly once when main button has been clicked",
      "fullTitle": "#addSemester() should be called exactly once when main button has been clicked",
      "timedOut": false,
      "duration": 18,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var addSemester = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: identity,\n    addSemester: addSemester }));\nwrapper.find(\"Button\").forEach(function (button) {\n    button.simulate(\"click\");\n});\nexpect(addSemester).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "e1746248-ed9a-45f0-90fb-1ad9061a9bfa",
      "parentUUID": "53be1ecb-8029-4c58-9611-f49546854e20",
      "skipped": false
    },
    {
      "title": "should be called as many times as the number of insert teaching periods options upon click",
      "fullTitle": "#insert() should be called as many times as the number of insert teaching periods options upon click",
      "timedOut": false,
      "duration": 30,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var insert = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: insert,\n    addSemester: identity }));\nvar dropdownItems = wrapper.find(\".item\");\ndropdownItems.forEach(function (node) {\n    return node.simulate(\"click\");\n});\nexpect(insert).to.have.callCount(dropdownItems.length);",
      "err": {},
      "isRoot": false,
      "uuid": "2a4d8127-2371-4445-82f4-36634c3b15cd",
      "parentUUID": "21fe4322-06b7-45f3-957f-cf8c8a2e525a",
      "skipped": false
    },
    {
      "title": "should render two ratings",
      "fullTitle": "COMPONENT: SetuRating should render two ratings",
      "timedOut": false,
      "duration": 35,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, null)).find(\".rating\")).to.have.length(2);",
      "err": {},
      "isRoot": false,
      "uuid": "5b933d71-db4f-4489-9209-98c3e62d39e7",
      "parentUUID": "ff22c4b5-e133-44a2-8b44-49cfe68f01af",
      "skipped": false
    },
    {
      "title": "should render a book if learning ratings is >=2.5",
      "fullTitle": "COMPONENT: SetuRating should render a book if learning ratings is >=2.5",
      "timedOut": false,
      "duration": 36,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 4.13 })).find(\".book\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.50 })).find(\".book\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "b166aa03-a181-486c-aa97-fce8bb3bfcea",
      "parentUUID": "ff22c4b5-e133-44a2-8b44-49cfe68f01af",
      "skipped": false
    },
    {
      "title": "should render a remove circle if learning ratings is <2.5",
      "fullTitle": "COMPONENT: SetuRating should render a remove circle if learning ratings is <2.5",
      "timedOut": false,
      "duration": 29,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 1.51 })).find(\".remove.circle\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.49 })).find(\".remove.circle\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "ccb899b3-66f4-4f23-a630-2f86c0991fe9",
      "parentUUID": "ff22c4b5-e133-44a2-8b44-49cfe68f01af",
      "skipped": false
    },
    {
      "title": "should render a thumbs up if enjoyment ratings is >=2.5",
      "fullTitle": "COMPONENT: SetuRating should render a thumbs up if enjoyment ratings is >=2.5",
      "timedOut": false,
      "duration": 24,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 4.13 })).find(\".thumbs.up\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.50 })).find(\".thumbs.up\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "7f1c14f7-33f5-4320-a7a0-5dff81f8eb33",
      "parentUUID": "ff22c4b5-e133-44a2-8b44-49cfe68f01af",
      "skipped": false
    },
    {
      "title": "should render a thumbs down if enjoyment ratings is <2.5",
      "fullTitle": "COMPONENT: SetuRating should render a thumbs down if enjoyment ratings is <2.5",
      "timedOut": false,
      "duration": 31,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 1.51 })).find(\".thumbs.down\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.49 })).find(\".thumbs.down\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "0273b59c-38b9-4b08-a958-addf553379f6",
      "parentUUID": "ff22c4b5-e133-44a2-8b44-49cfe68f01af",
      "skipped": false
    },
    {
      "title": "should only render a unit code and a unit name",
      "fullTitle": "#presentational should only render a unit code and a unit name",
      "timedOut": false,
      "duration": 29,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var unitCode = \"ABC1234\";\nvar unitName = \"Example unit\";\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: unitCode,\n    name: unitName }));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(unitCode);\nexpect(wrapper.find(\".message\").text().replace(unitCode, \"\").trim()).to.equal(unitName);",
      "err": {},
      "isRoot": false,
      "uuid": "9aca6994-f2da-4b03-a74c-797ed808dd82",
      "parentUUID": "bdf8f1b1-238d-488d-a88e-a6eeb6c60253",
      "skipped": false
    },
    {
      "title": "should render a close button only when mouse is over the unit",
      "fullTitle": "#presentational should render a close button only when mouse is over the unit",
      "timedOut": false,
      "duration": 51,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    hovering: false }));\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");\nwrapper.setProps({\n    hovering: true\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"visible\");\nwrapper.setProps({\n    hovering: false\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");",
      "err": {},
      "isRoot": false,
      "uuid": "f9dcf4e7-c86b-415c-b126-60297840297f",
      "parentUUID": "bdf8f1b1-238d-488d-a88e-a6eeb6c60253",
      "skipped": false
    },
    {
      "title": "Should call willAddUnit if unit is a newUnit and it has been clicked",
      "fullTitle": "#events Should call willAddUnit if unit is a newUnit and it has been clicked",
      "timedOut": false,
      "duration": 34,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    newUnit: true,\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    willAddUnit: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"click\");\nexpect(eventFunc).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "dfef33f3-98ed-4406-b4e7-0b790448d9a5",
      "parentUUID": "05914997-c97e-4d14-bd8c-d2a05fcb2647",
      "skipped": false
    },
    {
      "title": "Should call handleUnitMouseOver when mouse is over the unit",
      "fullTitle": "#events Should call handleUnitMouseOver when mouse is over the unit",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseOver: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseOver\");\nexpect(eventFunc).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "e0d67d8c-ab6d-4055-8478-f745972d9a83",
      "parentUUID": "05914997-c97e-4d14-bd8c-d2a05fcb2647",
      "skipped": false
    },
    {
      "title": "Should call handleUnitMouseMove when mouse moves over the unit",
      "fullTitle": "#events Should call handleUnitMouseMove when mouse moves over the unit",
      "timedOut": false,
      "duration": 13,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseMove: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseMove\");\nexpect(eventFunc).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "500d6cee-2af5-477a-aad3-3f470ae9afea",
      "parentUUID": "05914997-c97e-4d14-bd8c-d2a05fcb2647",
      "skipped": false
    },
    {
      "title": "Should call handleUnitMouseOut when mouse is over the unit",
      "fullTitle": "#events Should call handleUnitMouseOut when mouse is over the unit",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseOut: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseOut\");\nexpect(eventFunc).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "a324f9fa-a68c-45bc-9dcb-a867e352a917",
      "parentUUID": "05914997-c97e-4d14-bd8c-d2a05fcb2647",
      "skipped": false
    },
    {
      "title": "Should correctly call movingUnit when it is being dragged",
      "fullTitle": "#DnD Should correctly call movingUnit when it is being dragged",
      "timedOut": false,
      "duration": 10,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "testingBeginDrag = true;\ntestingEndDrag = false;\nbackend.simulateBeginDrag([sourceId]);\nexpect(movingUnitSpy).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "f17b1b77-17c5-4553-bae7-3c4f90d25f84",
      "parentUUID": "91641afd-9ed0-46ab-8fed-22717b104d90",
      "skipped": false
    },
    {
      "title": "Should correctylc call cancelMovingUnit ",
      "fullTitle": "#DnD Should correctylc call cancelMovingUnit ",
      "timedOut": false,
      "duration": 11,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "testingBeginDrag = false;\ntestingEndDrag = true;\nbackend.simulateBeginDrag([sourceId]);\nbackend.simulateEndDrag(sourceId);\nexpect(cancelMovingUnitSpy).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "e78d4e38-3cdc-492f-94cb-50125c166a7e",
      "parentUUID": "91641afd-9ed0-46ab-8fed-22717b104d90",
      "skipped": false
    },
    {
      "title": "Should correctly begin fetching a career",
      "fullTitle": "ACTION: FETCH_CAREER_PENDING Should correctly begin fetching a career",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    career: {},\n    careerIsLoading: false,\n    careerLoadError: true, // this should reset error so we start it as true to test\n    relatedDegrees: [],\n    relatedDegreesAreLoading: false,\n    relatedDegreesError: false\n};\nvar action = {\n    type: \"FETCH_CAREER_PENDING\"\n};\nvar stateAfter = {\n    career: {},\n    careerIsLoading: true,\n    careerLoadError: false,\n    relatedDegrees: [],\n    relatedDegreesAreLoading: false,\n    relatedDegreesError: false\n};\ntest(_CareerReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ec1d06d6-2b07-4726-93c0-f6c1bd302ed0",
      "parentUUID": "3a21ee23-09da-4137-a8c9-8cb930e5a444",
      "skipped": false
    },
    {
      "title": "Should correctly handle a successful fetch of a career",
      "fullTitle": "ACTION: FETCH_CAREER_FULFILLED Should correctly handle a successful fetch of a career",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    career: {},\n    careerIsLoading: true,\n    careerLoadError: false,\n    relatedDegrees: [],\n    relatedDegreesAreLoading: false,\n    relatedDegreesError: false\n};\nvar action = {\n    type: \"FETCH_CAREER_FULFILLED\",\n    payload: {\n        title: \"Unit tester\",\n        description: \"Someone who tests\",\n        relatedDegrees: [\"A\", \"B\", \"C\"]\n    }\n};\nvar stateAfter = {\n    career: {\n        title: \"Unit tester\",\n        description: \"Someone who tests\",\n        relatedDegrees: [\"A\", \"B\", \"C\"]\n    },\n    careerIsLoading: false,\n    careerLoadError: false,\n    relatedDegrees: [],\n    relatedDegreesAreLoading: false,\n    relatedDegreesError: false\n};\ntest(_CareerReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a5124a36-d6b4-4f35-9e51-283341fc711d",
      "parentUUID": "c087aec2-ef3e-40cb-a2bf-e1d010c813a8",
      "skipped": false
    },
    {
      "title": "Should correctly handle an unsuccessful fetch of a career",
      "fullTitle": "ACTION: FETCH_CAREER_REJECTED Should correctly handle an unsuccessful fetch of a career",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    career: { testVar: \"some data the should be reset\" },\n    careerIsLoading: true,\n    careerLoadError: false,\n    relatedDegrees: [],\n    relatedDegreesAreLoading: false,\n    relatedDegreesError: false\n};\nvar action = {\n    type: \"FETCH_CAREER_REJECTED\"\n};\nvar stateAfter = {\n    career: {},\n    careerIsLoading: false,\n    careerLoadError: true,\n    relatedDegrees: [],\n    relatedDegreesAreLoading: false,\n    relatedDegreesError: false\n};\ntest(_CareerReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "60d6d488-9aa2-4b02-8c50-64d4bf73f78b",
      "parentUUID": "65135dfd-1415-439f-9b65-9035cc7fb6ce",
      "skipped": false
    },
    {
      "title": "Should correctly begin fetching the related degrees to a career",
      "fullTitle": "ACTION: FETCH_RELATED_DEGREES_PENDING Should correctly begin fetching the related degrees to a career",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    career: {\n        id: \"3\",\n        title: \"Criminologist\",\n        description: \"Why did they do it? Crimes can be puzzling to most...\",\n        videoCode: \"XGer682MdJE\",\n        videoThumbnail: \"\",\n        promoPhoto: \"\",\n        relatedDegrees: [\"A2000-0-2\"]\n    },\n    careerIsLoading: false,\n    careerLoadError: false,\n    relatedDegrees: [],\n    relatedDegreesAreLoading: false,\n    relatedDegreesError: true // should reset here\n};\nvar action = {\n    type: \"FETCH_RELATED_DEGREES_PENDING\"\n};\nvar stateAfter = {\n    career: {\n        id: \"3\",\n        title: \"Criminologist\",\n        description: \"Why did they do it? Crimes can be puzzling to most...\",\n        videoCode: \"XGer682MdJE\",\n        videoThumbnail: \"\",\n        promoPhoto: \"\",\n        relatedDegrees: [\"A2000-0-2\"]\n    },\n    careerIsLoading: false,\n    careerLoadError: false,\n    relatedDegrees: [],\n    relatedDegreesAreLoading: true,\n    relatedDegreesError: false\n};\ntest(_CareerReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c02b900b-fa23-4c57-849e-e16a679fcf21",
      "parentUUID": "f3b81594-fbd7-4ba0-a1e3-528091f9b8e8",
      "skipped": false
    },
    {
      "title": "Should correctly handle the successful fetch of related degrees to a career",
      "fullTitle": "ACTION: FETCH_RELATED_DEGREES_FULFILLED Should correctly handle the successful fetch of related degrees to a career",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    career: {\n        id: \"3\",\n        title: \"Criminologist\",\n        description: \"Why did they do it? Crimes can be puzzling to most...\",\n        videoCode: \"XGer682MdJE\",\n        videoThumbnail: \"\",\n        promoPhoto: \"\",\n        relatedDegrees: [\"A2000-0-2\"]\n    },\n    careerIsLoading: false,\n    careerLoadError: false,\n    relatedDegrees: [],\n    relatedDegreesAreLoading: true,\n    relatedDegreesError: false // should reset here\n};\nvar action = {\n    type: \"FETCH_RELATED_DEGREES_FULFILLED\",\n    payload: [{\n        code: \"A2000\",\n        title: \"Bachelor of Arts\",\n        description: \"Arts at Monash is your comprehensive gateway to a wide range of fascinating and rewarding areas of study across the arts, humanities, and social sciences. Taking an innovative approach in tackling world issues and fostering a global perspective, you will develop the research skills, advanced discipline knowledge and self reliance to acquire information, assess evidence and convey complex ideas in speech and writing in order to answer complicated questions. And with the scope to choose from almost 40 different major and minor areas of study, including languages, social studies, communications, politics, human rights, and international relations, you will develop an informed, critical awareness of the fields you're most passionate about, laying the groundwork for a wealth of exciting careers.\",\n        videoCode: \"\",\n        videoThumbnail: \"\",\n        promoPhoto: \"\",\n        specialisations: [],\n        majors: \"History\"\n    }, {\n        code: \"A2000\",\n        title: \"Bachelor of Arts\",\n        description: \"Arts at Monash is your comprehensive gateway to a wide range of fascinating and rewarding areas of study across the arts, humanities, and social sciences. Taking an innovative approach in tackling world issues and fostering a global perspective, you will develop the research skills, advanced discipline knowledge and self reliance to acquire information, assess evidence and convey complex ideas in speech and writing in order to answer complicated questions. And with the scope to choose from almost 40 different major and minor areas of study, including languages, social studies, communications, politics, human rights, and international relations, you will develop an informed, critical awareness of the fields you're most passionate about, laying the groundwork for a wealth of exciting careers.\",\n        videoCode: \"\",\n        videoThumbnail: \"\",\n        promoPhoto: \"\",\n        specialisations: [],\n        majors: \"Journalism\"\n    }]\n};\nvar stateAfter = {\n    career: {\n        id: \"3\",\n        title: \"Criminologist\",\n        description: \"Why did they do it? Crimes can be puzzling to most...\",\n        videoCode: \"XGer682MdJE\",\n        videoThumbnail: \"\",\n        promoPhoto: \"\",\n        relatedDegrees: [\"A2000-0-2\"]\n    },\n    careerIsLoading: false,\n    careerLoadError: false,\n    relatedDegrees: [{\n        code: \"A2000\",\n        title: \"Bachelor of Arts\",\n        description: \"Arts at Monash is your comprehensive gateway to a wide range of fascinating and rewarding areas of study across the arts, humanities, and social sciences. Taking an innovative approach in tackling world issues and fostering a global perspective, you will develop the research skills, advanced discipline knowledge and self reliance to acquire information, assess evidence and convey complex ideas in speech and writing in order to answer complicated questions. And with the scope to choose from almost 40 different major and minor areas of study, including languages, social studies, communications, politics, human rights, and international relations, you will develop an informed, critical awareness of the fields you're most passionate about, laying the groundwork for a wealth of exciting careers.\",\n        videoCode: \"\",\n        videoThumbnail: \"\",\n        promoPhoto: \"\",\n        specialisations: [],\n        majors: \"History\"\n    }, {\n        code: \"A2000\",\n        title: \"Bachelor of Arts\",\n        description: \"Arts at Monash is your comprehensive gateway to a wide range of fascinating and rewarding areas of study across the arts, humanities, and social sciences. Taking an innovative approach in tackling world issues and fostering a global perspective, you will develop the research skills, advanced discipline knowledge and self reliance to acquire information, assess evidence and convey complex ideas in speech and writing in order to answer complicated questions. And with the scope to choose from almost 40 different major and minor areas of study, including languages, social studies, communications, politics, human rights, and international relations, you will develop an informed, critical awareness of the fields you're most passionate about, laying the groundwork for a wealth of exciting careers.\",\n        videoCode: \"\",\n        videoThumbnail: \"\",\n        promoPhoto: \"\",\n        specialisations: [],\n        majors: \"Journalism\"\n    }],\n    relatedDegreesAreLoading: false,\n    relatedDegreesError: false\n};\ntest(_CareerReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "32100156-4d0c-464c-b911-07633809837a",
      "parentUUID": "13a047d8-1a47-407d-bf32-b29fe6c53514",
      "skipped": false
    },
    {
      "title": "Should correctly handle the unsuccessful fetch of the related degrees to a career",
      "fullTitle": "ACTION: FETCH_RELATED_DEGREES_REJECTED Should correctly handle the unsuccessful fetch of the related degrees to a career",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    career: {\n        id: \"3\",\n        title: \"Criminologist\",\n        description: \"Why did they do it? Crimes can be puzzling to most...\",\n        videoCode: \"XGer682MdJE\",\n        videoThumbnail: \"\",\n        promoPhoto: \"\",\n        relatedDegrees: [\"A2000-0-2\"]\n    },\n    careerIsLoading: false,\n    careerLoadError: false,\n    relatedDegrees: [{ these: \"values should be gone when error hits\" }],\n    relatedDegreesAreLoading: true,\n    relatedDegreesError: false\n};\nvar action = {\n    type: \"FETCH_RELATED_DEGREES_REJECTED\"\n};\nvar stateAfter = {\n    career: {\n        id: \"3\",\n        title: \"Criminologist\",\n        description: \"Why did they do it? Crimes can be puzzling to most...\",\n        videoCode: \"XGer682MdJE\",\n        videoThumbnail: \"\",\n        promoPhoto: \"\",\n        relatedDegrees: [\"A2000-0-2\"]\n    },\n    careerIsLoading: false,\n    careerLoadError: false,\n    relatedDegrees: [],\n    relatedDegreesAreLoading: false,\n    relatedDegreesError: true\n};\ntest(_CareerReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "25c0a26d-3f73-403e-bc4b-4116c71f2d3e",
      "parentUUID": "f5065dcb-1526-4ebe-9f89-75f4d41be1c7",
      "skipped": false
    },
    {
      "title": "Should correctly begin fetching the careers array",
      "fullTitle": "ACTION: FETCH_CAREERS_PENDING Should correctly begin fetching the careers array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    careers: [],\n    careersAreLoading: false,\n    careersLoadError: true // test that reset works\n};\nvar action = {\n    type: \"FETCH_CAREERS_PENDING\"\n};\nvar stateAfter = {\n    careers: [],\n    careersAreLoading: true,\n    careersLoadError: false\n};\ntest(_CareersReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b73d1ff8-d2dd-4534-aea4-c3e5815c964d",
      "parentUUID": "a13e7332-8b9a-4571-bd71-064283afb41a",
      "skipped": false
    },
    {
      "title": "Should correctly handle a successful fetch of a career",
      "fullTitle": "ACTION: FETCH_CAREERS_FULFILLED Should correctly handle a successful fetch of a career",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    careers: [],\n    careersAreLoading: true,\n    careersLoadError: false // test that reset works\n};\nvar action = {\n    type: \"FETCH_CAREERS_FULFILLED\",\n    payload: [{ careerOb1: \"hello\" }, { careerOb2: \"world!\" }]\n};\nvar stateAfter = {\n    careers: [{ careerOb1: \"hello\" }, { careerOb2: \"world!\" }],\n    careersAreLoading: false,\n    careersLoadError: false\n};\ntest(_CareersReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "39b3a0ce-f9f9-4e77-8846-583291ce341b",
      "parentUUID": "c530ba17-caa2-466d-a245-c8aeac4a19ab",
      "skipped": false
    },
    {
      "title": "Should correctly handle an unsuccessful fetch of a career",
      "fullTitle": "ACTION: FETCH_CAREERS_REJECTED Should correctly handle an unsuccessful fetch of a career",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    careers: [{ careerOb1: \"hello\" }, { careerOb2: \"world!\" }], // test reset works\n    careersAreLoading: true,\n    careersLoadError: false\n};\nvar action = {\n    type: \"FETCH_CAREERS_REJECTED\"\n};\nvar stateAfter = {\n    careers: [],\n    careersAreLoading: false,\n    careersLoadError: true\n};\ntest(_CareersReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "44d06024-7384-4994-8d1a-411a7fad4d6a",
      "parentUUID": "e3a21a31-e73a-48ce-8b4d-2c58c4d58c1c",
      "skipped": false
    },
    {
      "title": "Should increment the credit point state by a given value",
      "fullTitle": "ACTION: INCREMENT_CREDIT_POINTS Should increment the credit point state by a given value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 2, creditPoints: 0 };\nvar action = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 2,\n    creditPoints: 1\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "72653da2-eaf5-45d9-ad85-4e9b7f7bb5a7",
      "parentUUID": "d05c1d22-3088-46b3-9ea6-00ffa712de5e",
      "skipped": false
    },
    {
      "title": "Should decrement the credit point state by a given value",
      "fullTitle": "ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state by a given value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d30a0fda-17bf-468e-b26b-669c85e92e97",
      "parentUUID": "2fde71da-3272-4557-9903-3c89303e91f6",
      "skipped": false
    },
    {
      "title": "Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
      "fullTitle": "ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 0\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f1f4407b-633d-447b-b560-7ae3f5890302",
      "parentUUID": "2fde71da-3272-4557-9903-3c89303e91f6",
      "skipped": false
    },
    {
      "title": "Should increment the cost state by a given value",
      "fullTitle": "ACTION: INCREMENT_COST Should increment the cost state by a given value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 20, creditPoints: 13 };\nvar action = {\n    type: \"INCREMENT_COST\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 21,\n    creditPoints: 13\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "85e5a7ef-e5d8-4bee-ac03-08a2d6ca2b1e",
      "parentUUID": "2a87abdd-19fd-4e60-b0b8-05dec488cc41",
      "skipped": false
    },
    {
      "title": "Should decrement the cost state by a given value",
      "fullTitle": "ACTION: DECREMENT_COST Should decrement the cost state by a given value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "24bce0fe-67f1-4a36-bdff-5ae9eb584551",
      "parentUUID": "d5ea99a1-ebd2-41ca-b597-6f6607c69b90",
      "skipped": false
    },
    {
      "title": "Should decrement the cost state to 0 if a value given is larger than the current credit point value",
      "fullTitle": "ACTION: DECREMENT_COST Should decrement the cost state to 0 if a value given is larger than the current credit point value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 0,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ea8bda44-91d5-4642-8898-c680719da9bc",
      "parentUUID": "d5ea99a1-ebd2-41ca-b597-6f6607c69b90",
      "skipped": false
    },
    {
      "title": "Should reset the cost and credit point counters to 0",
      "fullTitle": "ACTION: CLEAR_COURSE Should reset the cost and credit point counters to 0",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "2302f2e2-aca6-44f8-b228-ca8e4c126871",
      "parentUUID": "8f92cb40-74f6-4f06-a984-e797a3bccf3c",
      "skipped": false
    },
    {
      "title": "Should correctly go through and decrement the counters for each value ",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should correctly go through and decrement the counters for each value ",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { cost: 2, creditPoints: 20 }, { cost: 5, creditPoints: 10 }, null]\n};\nvar stateAfter = { cost: 43, creditPoints: 10 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f398a351-a9ea-4519-be26-52bd26623431",
      "parentUUID": "94d27432-536d-45a8-abd6-f582ff61ff8f",
      "skipped": false
    },
    {
      "title": "Should not decrement the counters below 0 ",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should not decrement the counters below 0 ",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { cost: 25, creditPoints: 20 }, { cost: 30, creditPoints: 30 }, { cost: 0, creditPoints: 10 }]\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b95fe169-1b7e-411c-b27a-c8de39072710",
      "parentUUID": "94d27432-536d-45a8-abd6-f582ff61ff8f",
      "skipped": false
    },
    {
      "title": "Should correctly decrement the counters based on the given units creditpoints and cost",
      "fullTitle": "ACTION: REMOVE_UNIT Should correctly decrement the counters based on the given units creditpoints and cost",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 20 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7d6b456f-deb8-4ae2-a9a6-f9cf3efabfef",
      "parentUUID": "2a219f6c-a124-4edf-a169-4879a951ea9a",
      "skipped": false
    },
    {
      "title": "Should not decrement the counters below 0",
      "fullTitle": "ACTION: REMOVE_UNIT Should not decrement the counters below 0",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1cf2a543-2c86-4150-874b-c9b3d926a5e2",
      "parentUUID": "2a219f6c-a124-4edf-a169-4879a951ea9a",
      "skipped": false
    },
    {
      "title": "Should correctly increment the counters when a unit is added to the plan",
      "fullTitle": "ACTION: ADD_UNIT Should correctly increment the counters when a unit is added to the plan",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"ADD_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 30 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "8628309c-8f58-4e3c-9e05-06497919dd9f",
      "parentUUID": "556c6b0b-e866-4ab3-ba47-197a8f30891d",
      "skipped": false
    },
    {
      "title": "Should not decrease counters if there are no units in the overload column",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units in the overload column",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: []\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "49b046e5-5d92-4b6b-b3b0-e33753ec05ce",
      "parentUUID": "ffb251f5-60b9-4243-a399-ce3b6406b348",
      "skipped": false
    },
    {
      "title": "Should not decrease counters if there are no units which have values in the overload column",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units which have values in the overload column",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [null, {}]\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "17405124-adaa-4aed-a9eb-1b5341ca9235",
      "parentUUID": "ffb251f5-60b9-4243-a399-ce3b6406b348",
      "skipped": false
    },
    {
      "title": "Should decrease counters correctly for units in the overload column",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should decrease counters correctly for units in the overload column",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [{\n        CreditPoints: 6,\n        Cost: 1134\n    }, {\n        CreditPoints: 12,\n        Cost: 2256\n    }]\n};\nvar stateAfter = { cost: 36610, creditPoints: 126 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "300c3978-6e6e-48e7-aec8-579fb43a4b81",
      "parentUUID": "ffb251f5-60b9-4243-a399-ce3b6406b348",
      "skipped": false
    },
    {
      "title": "Should not change state if it does not recognise an action",
      "fullTitle": "DEFAULT Should not change state if it does not recognise an action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "fe5ac410-03f6-4977-b0f1-bd0270343155",
      "parentUUID": "87756b48-994b-4c57-9f35-9441f19fd94b",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_COURSES_PENDING Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: false,\n    courseSearchError: true //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: true,\n    courseSearchError: false\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b8a0ec7a-3dfb-4957-bcd1-5bf8f0430b29",
      "parentUUID": "36a736af-688b-4866-929f-086f07d32536",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_COURSES_FULFILLED Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: true,\n    courseSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_FULFILLED\",\n    payload: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    courseSearchIsLoading: false,\n    courseSearchError: false\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a12e3042-fa63-4a37-9690-95d865945116",
      "parentUUID": "d823c5d7-3240-46cd-ab47-f73095f34d70",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_COURSES_REJECTED Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    courseSearchIsLoading: true,\n    courseSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: false,\n    courseSearchError: true\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "769741de-7532-4dd7-8317-118a88a133d3",
      "parentUUID": "706d90db-6c3b-4c46-bc1d-0dc57af6cbbf",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_AOS_PENDING Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: false,\n    aosSearchError: true //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: true,\n    aosSearchError: false\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ce397d36-38e1-4518-a63b-63dc0c99a079",
      "parentUUID": "e588f6e9-7c11-46d3-abe7-412faf1c5321",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_AOS_FULFILLED Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: true,\n    aosSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_FULFILLED\",\n    payload: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    aosSearchIsLoading: false,\n    aosSearchError: false\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1a3ad2ab-4e79-49c3-ab43-80345962fec8",
      "parentUUID": "9c773dfa-653a-4660-9ecf-fd822d0fc853",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_AOS_REJECTED Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    aosSearchIsLoading: true,\n    aosSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: false,\n    aosSearchError: true\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "873c7a16-7192-4bba-a53c-c937967a67ed",
      "parentUUID": "c098de3d-2880-4d8c-ba2a-325d0d23e12b",
      "skipped": false
    },
    {
      "title": "Should handle the initiation of a course snapshot upload correctly",
      "fullTitle": "ACTION: UPLOAD_COURSE_SNAPSHOT_PENDING Should handle the initiation of a course snapshot upload correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: true\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7d538132-cf68-44fb-8c0d-9ca04a60ede9",
      "parentUUID": "6b03e224-b798-4693-be8c-7630fda5f8cd",
      "skipped": false
    },
    {
      "title": "Should handle the successful upload of a course snapshot correctly",
      "fullTitle": "ACTION: UPLOAD_COURSE_SNAPSHOT_FULFILLED Should handle the successful upload of a course snapshot correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"upload string\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: \"upload string\",\n    courseSnapshotUploadSucessful: true\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "83216e48-427a-4102-8263-7eb90af407bf",
      "parentUUID": "e3c6b069-1f0c-4aaf-a229-f6d0d3a02179",
      "skipped": false
    },
    {
      "title": "Should do handle the rejected upload of a course snapshot correctly",
      "fullTitle": "ACTION: UPLOAD_COURSE_SNAPSHOT_REJECTED Should do handle the rejected upload of a course snapshot correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "517d0c25-d4ed-418d-b6da-a3027477c392",
      "parentUUID": "7be102ea-ec4b-47c4-a096-f883215c2239",
      "skipped": false
    },
    {
      "title": "Should begin fetching a course snapshot correctly",
      "fullTitle": "ACTION: FETCH_COURSE_SNAPSHOT_PENDING Should begin fetching a course snapshot correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "82a36990-4d71-480e-9234-1e742eb63541",
      "parentUUID": "d7aec2c0-5c85-417a-997f-3b6c6d81056e",
      "skipped": false
    },
    {
      "title": "Should handle a successful course snapshot fetch correctly",
      "fullTitle": "ACTION: FETCH_COURSE_SNAPSHOT_FULFILLED Should handle a successful course snapshot fetch correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"Snap data\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: \"Snap data\"\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "821cb264-c356-40ee-93e5-1d5de76c3c19",
      "parentUUID": "cd09f7a8-db32-4255-82c6-f323fc2ade0a",
      "skipped": false
    },
    {
      "title": "Should handle a rejected course snapshot fetch correctly",
      "fullTitle": "ACTION: FETCH_COURSE_SNAPSHOT_REJECTED Should handle a rejected course snapshot fetch correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9f2b4550-e500-432e-b5b8-649035f36c9d",
      "parentUUID": "2545a88f-a99c-4f85-85a7-d21692b4c112",
      "skipped": false
    },
    {
      "title": "Should insert a teaching period with the given info correctly into middle of array",
      "fullTitle": "ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into middle of array",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2018,\n    code: \"S2-01\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "79c1d8a0-b48c-4b31-a38f-b6863500110c",
      "parentUUID": "fa4261b3-78ad-417a-847a-65933fd85457",
      "skipped": false
    },
    {
      "title": "Should insert a teaching period with the given info correctly into start of array",
      "fullTitle": "ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into start of array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2016,\n    code: \"S2-01\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2016, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4dac658b-cffc-47e8-9570-00ec157a5e8e",
      "parentUUID": "fa4261b3-78ad-417a-847a-65933fd85457",
      "skipped": false
    },
    {
      "title": "Should remove a teaching period at the given index",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the given index",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "939c7d61-dd4a-4701-be3c-e5533dfd6bd9",
      "parentUUID": "05a2b9c0-3ba9-4382-9607-a0f2f809a4e5",
      "skipped": false
    },
    {
      "title": "Should remove a teaching period at the start of the array",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the start of the array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a3c2a61f-0e57-427f-b853-1f7fe615c869",
      "parentUUID": "05a2b9c0-3ba9-4382-9607-a0f2f809a4e5",
      "skipped": false
    },
    {
      "title": "Should add the given teaching period to the end of the array",
      "fullTitle": "ACTION: APPEND_TEACHING_PERIOD Should add the given teaching period to the end of the array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"APPEND_TEACHING_PERIOD\",\n    year: 2020,\n    code: \"S2-01\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2020, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "90f7b3d6-c944-40d9-b3c4-c77be490c44e",
      "parentUUID": "f2646a68-f855-46f0-9f07-f054a7cfa85a",
      "skipped": false
    },
    {
      "title": "Should increase the study load if the study load is less than 4",
      "fullTitle": "ACTION: INCREASE_STUDY_LOAD Should increase the study load if the study load is less than 4",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ae9d62e1-2b14-4ad8-b3da-5216c907fd5e",
      "parentUUID": "99c366c7-98e6-4f07-a332-e68a19d6ad8f",
      "skipped": false
    },
    {
      "title": "Should decrease the study load if the study load is greater than 4",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should decrease the study load if the study load is greater than 4",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "8317f013-a9b9-481a-89e1-416159e2b66a",
      "parentUUID": "8b951c67-f658-4aa9-9bbc-178b80b2cbb4",
      "skipped": false
    },
    {
      "title": "Should not decrease the study load if the study load is 4 or less",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should not decrease the study load if the study load is 4 or less",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0e742a79-a36b-4cb7-adc8-39f826d190b9",
      "parentUUID": "8b951c67-f658-4aa9-9bbc-178b80b2cbb4",
      "skipped": false
    },
    {
      "title": "Should remove all teaching periods and set the amount of units to 4",
      "fullTitle": "ACTION: CLEAR_COURSE Should remove all teaching periods and set the amount of units to 4",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5,\n    courseInfoLoadError: false,\n    courseInfoLoading: false\n};\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = {\n    courseInfoLoadError: false,\n    courseInfoLoading: false,\n    courseInfo: {\n        courseName: \"\",\n        faculty: \"\",\n        creditPoints: 0,\n        courseDescription: \"\",\n        durationStr: \"\",\n        modeAndLocation: \"\",\n        awards: \"\",\n        abrTitle: \"\"\n    },\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "24cf571a-10ee-4790-a295-cf83875595aa",
      "parentUUID": "1d0821f7-3044-48cd-b211-f1fb58e3214a",
      "skipped": false
    },
    {
      "title": "Should add a unit correctly to the start of an array",
      "fullTitle": "ACTION: ADD_UNIT Should add a unit correctly to the start of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", totalCreditpoints: 6, units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }, null, null, null] }, { year: 2018, code: \"S2-01\", totalCreditpoints: 0, units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", totalCreditpoints: 0, units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a8137e42-48a5-47b9-aafd-907a99cb7ca7",
      "parentUUID": "f6680f07-1fa3-437b-850d-8a1069f9f226",
      "skipped": false
    },
    {
      "title": "Should add a unit correctly to the middle of an array",
      "fullTitle": "ACTION: ADD_UNIT Should add a unit correctly to the middle of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d7909126-ef27-4dd1-8d46-c56095c0f946",
      "parentUUID": "f6680f07-1fa3-437b-850d-8a1069f9f226",
      "skipped": false
    },
    {
      "title": "Should add a unit correctly to the end of an array",
      "fullTitle": "ACTION: ADD_UNIT Should add a unit correctly to the end of an array",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c9b43ef3-82ba-4c82-a79a-51f25fd6d4de",
      "parentUUID": "f6680f07-1fa3-437b-850d-8a1069f9f226",
      "skipped": false
    },
    {
      "title": "Should remove a unit correctly frpm the start of an array",
      "fullTitle": "ACTION: REMOVE_UNIT Should remove a unit correctly frpm the start of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0,\n    creditPoints: 6\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5d567e36-2b18-485a-b87b-8ec2202d796d",
      "parentUUID": "34c597f8-3532-477e-a592-5a0791436ade",
      "skipped": false
    },
    {
      "title": "Should remove a unit correctly from the middle of an array",
      "fullTitle": "ACTION: REMOVE_UNIT Should remove a unit correctly from the middle of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1,\n    creditPoints: 6\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0f8aae63-a886-4066-a796-42adbb6dc658",
      "parentUUID": "34c597f8-3532-477e-a592-5a0791436ade",
      "skipped": false
    },
    {
      "title": "Should remove a unit correctly from the end of an array",
      "fullTitle": "ACTION: REMOVE_UNIT Should remove a unit correctly from the end of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3,\n    creditPoints: 6\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "6eb2223c-5af2-49d0-9b12-c31b078053f2",
      "parentUUID": "34c597f8-3532-477e-a592-5a0791436ade",
      "skipped": false
    },
    {
      "title": "Should generate a course structure with valid start and end years",
      "fullTitle": "ACTION: GENERATE_COURSE Should generate a course structure with valid start and end years",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2014,\n    endYear: 2016\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5884cbb1-3b14-4293-a5c6-faa22fc5ec93",
      "parentUUID": "65c8f27b-636e-4dfb-a4ce-28d51cece14d",
      "skipped": false
    },
    {
      "title": "Should return an empty course structure with invalid start and end years.",
      "fullTitle": "ACTION: GENERATE_COURSE Should return an empty course structure with invalid start and end years.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2017,\n    endYear: 2013\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7ab73cad-29d9-4816-8609-264418ac5aed",
      "parentUUID": "65c8f27b-636e-4dfb-a4ce-28d51cece14d",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course info is loading",
      "fullTitle": "ACTION: FETCH_COURSE_INFO_PENDING Should correctly show that the course info is loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7fdc9583-2836-417f-8291-70ac2e0aa861",
      "parentUUID": "3edff107-09c2-4313-8121-22dca26fdc7e",
      "skipped": false
    },
    {
      "title": "Should correctly return the payload and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    focusedCourse: null,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_FULFILLED\",\n    payload: { data: {\n            \"propertyMap\": {\n                courseCode: \"Test Code\",\n                courseName: \"Test Course\",\n                mangFac: \"Test Faculty\",\n                creditPoints: 100,\n                courseDescrip: {\n                    \"value\": \"Test Description\"\n                },\n                courseDuration: \"Test Duration\",\n                modeLoc: {\n                    \"value\": \"Test mode and location\"\n                },\n                courseAward: \"Test awards\",\n                abrevTitle: \"Test abreviated title\"\n            }\n        } },\n    courseCode: \"COURSE101\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: {\n        courseCode: \"Test Code\",\n        courseName: \"Test Course\",\n        faculty: \"Test Faculty\",\n        creditPoints: 100,\n        courseDescription: \"Test Description\",\n        durationStr: \"Test Duration\",\n        modeAndLocation: \"Test mode and location\",\n        awards: \"Test awards\",\n        abrTitle: \"Test abreviated title\"\n    },\n    focusedCourse: \"COURSE101\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1debd5e7-4d5a-4fa0-9709-001e31d17a77",
      "parentUUID": "7909e36b-5c48-4d5f-b613-cb16c604cf23",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course info fetch failed and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_INFO_REJECTED Should correctly show that the course info fetch failed and show that it is no longer loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: true,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "deb223f2-7478-4232-91b8-d7975e58f94a",
      "parentUUID": "979559b0-93b9-43b7-965e-7e5fc745b4b6",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course template is loading",
      "fullTitle": "ACTION: FETCH_COURSE_TEMPLATE_PENDING Should correctly show that the course template is loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5512e2d4-6353-436e-94ca-01236366bdb8",
      "parentUUID": "79a18708-b06e-4767-8853-47e36b31a12d",
      "skipped": false
    },
    {
      "title": "Should correctly return the payload and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_TEMPLATE_FULFILLED Should correctly return the payload and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_FULFILLED\",\n    payload: {\n        data: {\n            propertyMap: \"Fake Course Template\"\n        }\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: \"Fake Course Template\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "bce05132-9998-44b2-b307-334ae858fa4f",
      "parentUUID": "6b2c98ad-cfd6-4e93-8e96-01794ff02c47",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course template fetch failed and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_TEMPLATE_REJECTED Should correctly show that the course template fetch failed and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: true,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "89d7a0de-e1a1-4bc8-bac7-2e1de743bf23",
      "parentUUID": "f46728e8-f9c0-4fcd-948f-437202c3ac7e",
      "skipped": false
    },
    {
      "title": "Should correctly show that the unit info is loading",
      "fullTitle": "ACTION: FETCH_UNIT_INFO_PENDING Should correctly show that the unit info is loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: {\n        preqs: \"\",\n        creditPoints: 0,\n        rules: [],\n        locationAndTime: \"\",\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"\",\n        eftsl: 0,\n        descriptions: \"\"\n    },\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: {\n        preqs: \"\",\n        creditPoints: 0,\n        rules: [],\n        locationAndTime: \"\",\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"\",\n        eftsl: 0,\n        descriptions: \"\"\n    },\n    focusedUnitCode: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "3653a724-66fa-470e-a331-c8b940fd86e3",
      "parentUUID": "02be4ca5-4439-4130-8300-32276caf02af",
      "skipped": false
    },
    {
      "title": "Should correctly return the payload and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_UNIT_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_FULFILLED\",\n    payload: { data: \"Fake Unit Info\" },\n    unitCode: \"FAKE1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: \"Fake Unit Info\",\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c94307c9-6567-4540-9266-29fdc5290ce9",
      "parentUUID": "88715d27-f36b-4af9-b810-b0325b3b2f70",
      "skipped": false
    },
    {
      "title": "Should correctly show that the unit info fetch failed and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_UNIT_INFO_REJECTED Should correctly show that the unit info fetch failed and show that it is no longer loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_REJECTED\",\n    payload: {\n        response: {\n            status: 404\n        }\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: {\n        response: {\n            status: 404\n        }\n    },\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "68d3dc1f-9c87-4492-acac-ac86c15c3268",
      "parentUUID": "bf04e57a-f982-4c66-8911-3d136a581bb8",
      "skipped": false
    },
    {
      "title": "Should accurately set the start year and the focused course on submission",
      "fullTitle": "ACTION: SUBMIT_COURSE_FORM Should accurately set the start year and the focused course on submission",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_COURSE_FORM\",\n    startYear: 2020,\n    courseCode: \"TEST1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: \"TEST1001\",\n    startYear: 2020,\n    endYear: 2020\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "85e441ef-2cb7-48f0-b313-569e852d21f6",
      "parentUUID": "cfcfa878-b3fb-4991-94e5-d49850157757",
      "skipped": false
    },
    {
      "title": "Should accurately set the start year and end year on submission",
      "fullTitle": "ACTION: SUBMIT_YEAR_FORM Should accurately set the start year and end year on submission",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_YEAR_FORM\",\n    startYear: 2020,\n    endYear: 2025\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2020,\n    endYear: 2025\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "69cb2c84-b4df-4984-a081-a1ef26f6e0ea",
      "parentUUID": "7f298e5d-3fb1-4b88-b2bf-9e3b870c3a61",
      "skipped": false
    },
    {
      "title": "Should correctly handle  of teaching periods data",
      "fullTitle": "ACTION: FETCH_TEACHING_PERIODS_PENDING Should correctly handle  of teaching periods data",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "345738c9-08dc-45dc-92b7-0c06f0f6557b",
      "parentUUID": "4e78d1af-2445-4ab9-8b0b-8998c500a8a7",
      "skipped": false
    },
    {
      "title": "Should correctly handle  of teaching periods data",
      "fullTitle": "ACTION: FETCH_TEACHING_PERIODS_FULFILLED Should correctly handle  of teaching periods data",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_FULFILLED\",\n    payload: \"Teaching period strings\"\n};\nvar stateAfter = {\n    teachingPeriodData: \"Teaching period strings\",\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c18bbc12-a4f4-4a39-8d83-6ed3fc049f3e",
      "parentUUID": "c6d344e8-0ad4-4d44-9136-1807496aa332",
      "skipped": false
    },
    {
      "title": "Should correctly handle  of teaching periods data",
      "fullTitle": "ACTION: FETCH_TEACHING_PERIODS_REJECTED Should correctly handle  of teaching periods data",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "346f8d9b-50ac-464b-a8f2-645d010b9792",
      "parentUUID": "13e9792b-773b-498d-951f-2d0996d2a460",
      "skipped": false
    },
    {
      "title": "Should set the teaching period code to insert value correctly",
      "fullTitle": "ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should set the teaching period code to insert value correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodCodeToInsert: null,\n    testParam1: 1,\n    testParam2: \"test\"\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"S1-02\"\n};\nvar stateAfter = {\n    teachingPeriodCodeToInsert: \"S1-02\",\n    testParam1: 1,\n    testParam2: \"test\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "fb0fe230-92ba-4b80-a9e4-772c1cc89f77",
      "parentUUID": "a6439ab4-5036-4a49-98ef-f05e9d1696d6",
      "skipped": false
    },
    {
      "title": "Should correctly update the affected units value to the given array",
      "fullTitle": "ACTION: UPDATE_AFFECTED_UNITS Should correctly update the affected units value to the given array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: []\n};\nvar action = {\n    type: \"UPDATE_AFFECTED_UNITS\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0d16b5d0-50d6-4632-8217-42ee60bfcfd1",
      "parentUUID": "fa8cc639-997d-4af7-9a3b-edb0094f2a2f",
      "skipped": false
    },
    {
      "title": "Should correctly update the index of tp to remove value to the given value",
      "fullTitle": "ACTION: UPDATE_INDEX_OF_TP_TO_REMOVE Should correctly update the index of tp to remove value to the given value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 0\n};\nvar action = {\n    type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\",\n    index: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 1\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "de55ef0e-3d7f-47cc-9777-ea4ceb544bd3",
      "parentUUID": "bafe5208-2108-4e39-a566-c36c979704ac",
      "skipped": false
    },
    {
      "title": "Should correctly begin moving a unit",
      "fullTitle": "ACTION: MOVING_UNIT Should correctly begin moving a unit",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0\n};\nvar action = {\n    type: \"MOVING_UNIT\",\n    unit: \"TEST-UNIT\",\n    unitIndex: 3,\n    tpIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TEST-UNIT\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 3\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "72a2b298-5fbd-4a85-9caf-321ad0bf7e2a",
      "parentUUID": "b1ee37d8-b00b-4233-9db7-9e4a576ca88c",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to a teaching period earlier than it",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period earlier than it",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitName: \"TestUnit\", creditPoints: 6 }, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "17a4dc09-667d-497e-9ab5-3d4cf4255f4f",
      "parentUUID": "2cc799b1-f2f9-4c5b-bab1-f23db957ed1f",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to a teaching period later than it",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period later than it",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitName: \"TestUnit\", creditPoints: 6 }, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4606a01b-6b8a-4638-ac01-dd77712671c0",
      "parentUUID": "2cc799b1-f2f9-4c5b-bab1-f23db957ed1f",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to the same teaching period but earlier position",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but earlier position",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [\"PlaceToMoveTo\", { unitName: \"TestUnit\", creditPoints: 6 }, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [{ unitName: \"TestUnit\", creditPoints: 6 }, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "3433303f-089f-4c7f-b9f7-8697d31a96cf",
      "parentUUID": "2cc799b1-f2f9-4c5b-bab1-f23db957ed1f",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to the same teaching period but later position",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but later position",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [{ unitName: \"TestUnit\", creditPoints: 6 }, null, \"PlaceToMoveTo\", null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a64004d4-7cdf-4406-b6a2-94861bcefa70",
      "parentUUID": "2cc799b1-f2f9-4c5b-bab1-f23db957ed1f",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to the same teaching period and exact same position",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period and exact same position",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "2339d58e-b4da-43a1-abb6-db99e24e272f",
      "parentUUID": "2cc799b1-f2f9-4c5b-bab1-f23db957ed1f",
      "skipped": false
    },
    {
      "title": "should cancel moving unit",
      "fullTitle": "ACTION: CANCEL_MOVING_UNIT should cancel moving unit",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: \"TestUnit2\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: undefined,\n    unitsIndexOfUnitToBeMoved: undefined\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "89a9c755-68bc-44e0-95aa-3819e3e93e6c",
      "parentUUID": "d42ff29f-56a4-48a0-bec4-dfce13d81ef0",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to a teaching period earlier than it",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period earlier than it",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "07cb27f5-5f3f-4d2e-b223-fc816e21029f",
      "parentUUID": "07c0c935-7e8b-4f51-8610-16734902cd1b",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to a teaching period later than it",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period later than it",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c1dfddeb-531c-400b-90bf-ce30cc02eb6d",
      "parentUUID": "07c0c935-7e8b-4f51-8610-16734902cd1b",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to the same teaching period but earlier position",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but earlier position",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4a05feaf-1622-479e-ab68-2d8df315bcdd",
      "parentUUID": "07c0c935-7e8b-4f51-8610-16734902cd1b",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to the same teaching period but later position",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but later position",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, \"PlaceToMoveTo\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", null, \"TestUnit\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "79d6cba5-93fc-4979-8187-ea5bc6e0ce52",
      "parentUUID": "07c0c935-7e8b-4f51-8610-16734902cd1b",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to the same teaching period and exact same position",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period and exact same position",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "fe25962a-95eb-4864-a786-ef093c94c260",
      "parentUUID": "07c0c935-7e8b-4f51-8610-16734902cd1b",
      "skipped": false
    },
    {
      "title": "should give no errors for an empty course plan.",
      "fullTitle": "ACTION: VALIDATE_COURSE should give no errors for an empty course plan.",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan.\"\n    }],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    courseErrors: [],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "dd8f2cba-6a19-4586-a54a-189e6aa880d1",
      "parentUUID": "a9ac22c5-9edb-482d-832f-63a1865848c7",
      "skipped": false
    },
    {
      "title": "Should not give duplicate unit errors if the first attempt is in the past, and the second attempt is not two or more years into the future.",
      "fullTitle": "duplicates: Should not give duplicate unit errors if the first attempt is in the past, and the second attempt is not two or more years into the future.",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: new Date().getFullYear() - 1,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, null]\n    }, {\n        code: \"S1-01\",\n        year: new Date().getFullYear() + 1,\n        units: [null, null, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "acac92d2-d0fc-41f5-bdf7-e85256d2e103",
      "parentUUID": "365bd452-f502-42bc-b46f-24f93fc1cf7d",
      "skipped": false
    },
    {
      "title": "Should give a duplicate unit error if there are two same units in the same teaching period",
      "fullTitle": "duplicates: Should give a duplicate unit error if there are two same units in the same teaching period",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2015,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }, {\n        code: \"S2-01\",\n        year: 2015,\n        units: [null, null, null, {\n            unitCode: \"GJQ2039\"\n        }]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2015,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }, {\n        code: \"S2-01\",\n        year: 2015,\n        units: [null, null, null, {\n            unitCode: \"GJQ2039\"\n        }]\n    }],\n    courseErrors: [{\n        message: \"ABCD1234 already exists in the same teaching period. Please remove this unit.\",\n        coordinates: [[0, 3]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0bc2f100-ad8a-4eb1-a8ff-b93ddc5d3995",
      "parentUUID": "365bd452-f502-42bc-b46f-24f93fc1cf7d",
      "skipped": false
    },
    {
      "title": "Should give a duplicate error if a duplicate unit is placed in a teaching period two years from now",
      "fullTitle": "duplicates: Should give a duplicate error if a duplicate unit is placed in a teaching period two years from now",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var currentYear = new Date().getFullYear();\nvar stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: currentYear,\n        units: [{\n            unitCode: \"ABC1234\"\n        }, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 2,\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 2,\n        units: [null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: currentYear,\n        units: [{\n            unitCode: \"ABC1234\"\n        }, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 2,\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 2,\n        units: [null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan. Please plan as if you will pass all units.\",\n        coordinates: [[4, 1]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e0d8d3c0-ed1b-4d07-a2b3-a9b04a7e3c47",
      "parentUUID": "365bd452-f502-42bc-b46f-24f93fc1cf7d",
      "skipped": false
    },
    {
      "title": "Should give a course error for a unit not being offered in the teaching period it is in",
      "fullTitle": "offerings: Should give a course error for a unit not being offered in the teaching period it is in",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2019,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: 2019,\n        units: [null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"First semester 2019 (Day)\"]\n            }]\n        }, null]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2019,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: 2019,\n        units: [null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"First semester 2019 (Day)\"]\n            }]\n        }, null]\n    }],\n    courseErrors: [{\n        message: \"ABC1234 is not offered in second semester, 2019.\",\n        coordinates: [[1, 2]]\n    }],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "de4819e8-c531-4e62-9fca-7af0d9db90f8",
      "parentUUID": "217b9164-6ddb-471a-a419-3d51f7d74859",
      "skipped": false
    },
    {
      "title": "Should give a course error for a missing prereq",
      "fullTitle": "rules: Should give a course error for a missing prereq",
      "timedOut": false,
      "duration": 22,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"Must have passed an (I/W) unit in {DEF2345, QLS2029}\",\n                endDate: \"\"\n            }]\n        }]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"Must have passed an (I/W) unit in {DEF2345, QLS2029}\",\n                endDate: \"\"\n            }]\n        }]\n    }],\n    courseErrors: [{\n        message: \"You must complete DEF2345 or QLS2029 before you can do ABC1234.\",\n        coordinates: [[0, 3]]\n    }],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5102bdd3-1811-4bb0-8049-b2817accefe7",
      "parentUUID": "ea956b7e-eb47-4fd0-8db9-03452c5a94bc",
      "skipped": false
    },
    {
      "title": "Should give an error for credit points being lower than the minimum required for the unit",
      "fullTitle": "rules: Should give an error for credit points being lower than the minimum required for the unit",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2016,\n        code: \"S2-01\",\n        units: [{\n            unitCode: \"TEST1011\",\n            creditPoints: 6\n        }, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"TEST3031\",\n            creditPoints: 6,\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"Must have passed 24 credit points\"\n            }]\n        }, null, null, null]\n    }, {\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2016,\n        code: \"S2-01\",\n        units: [{\n            unitCode: \"TEST1011\",\n            creditPoints: 6\n        }, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"TEST3031\",\n            creditPoints: 6,\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"Must have passed 24 credit points\"\n            }]\n        }, null, null, null]\n    }, {\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"You need 18 more credit points before you can do TEST3031.\",\n        coordinates: [[2, 1]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "34419281-9efb-401d-9b1b-8a6084c1aa39",
      "parentUUID": "ea956b7e-eb47-4fd0-8db9-03452c5a94bc",
      "skipped": false
    },
    {
      "title": "Should correctly handle prohibitions",
      "fullTitle": "rules: Should correctly handle prohibitions",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2013,\n        code: \"S1-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\"\n        }]\n    }, {\n        year: 2013,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"BCD1234\",\n            rules: [{\n                ruleSummary: \"INCOMP\",\n                ruleString: \"Incompatible with achievement in {ABC1234}\"\n            }]\n        }, null, null]\n    }],\n    courseErrors: [{\n        message: \"Please remove BCD1234, as completing ABC1234 prohibits you from doing this unit.\",\n        coordinates: [[1, 1]]\n    }]\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "3a2d48bb-f67b-46f4-b5b1-9f88838b37d1",
      "parentUUID": "ea956b7e-eb47-4fd0-8db9-03452c5a94bc",
      "skipped": false
    },
    {
      "title": "Should correctly handle the Do branch of For COURSE_CODE syntax",
      "fullTitle": "rules: Should correctly handle the Do branch of For COURSE_CODE syntax",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2014,\n        code: \"S1-01\",\n        units: [{\n            unitCode: \"DEF2345\",\n            unitName: \"Test unit\",\n            rules: [{\n                ruleSummary: \"COREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {S2029, S3019} Do Any passed co-req (I/W) unit in {ABC2022} Otherwise true\",\n                endDate: \"\"\n            }]\n        }, null, null, null]\n    }],\n    courseInfo: {\n        courseCode: \"S2029\"\n    },\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2014,\n        code: \"S1-01\",\n        units: [{\n            unitCode: \"DEF2345\",\n            unitName: \"Test unit\",\n            rules: [{\n                ruleSummary: \"COREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {S2029, S3019} Do Any passed co-req (I/W) unit in {ABC2022} Otherwise true\",\n                endDate: \"\"\n            }]\n        }, null, null, null]\n    }],\n    courseInfo: {\n        courseCode: \"S2029\"\n    },\n    courseErrors: [{\n        message: \"You must complete ABC2022 before or whilst doing DEF2345.\",\n        coordinates: [[0, 0]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ae1031d2-795e-4087-b1f7-76fc9e053cf6",
      "parentUUID": "ea956b7e-eb47-4fd0-8db9-03452c5a94bc",
      "skipped": false
    },
    {
      "title": "Should correctly handle the Otherwise branch of For COURSE_CODE syntax",
      "fullTitle": "rules: Should correctly handle the Otherwise branch of For COURSE_CODE syntax",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }, {\n        year: 2018,\n        code: \"WS-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"Winter semester 2018 (Day)\"]\n            }],\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {Q2001, Q2003} Do true Otherwise Must have passed 1 (I/W) units in {TEST1001}\",\n                endDate: \"\"\n            }]\n        }]\n    }, {\n        year: 2018,\n        code: \"S2-01\",\n        units: [null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }, {\n        year: 2018,\n        code: \"WS-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"Winter semester 2018 (Day)\"]\n            }],\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {Q2001, Q2003} Do true Otherwise Must have passed 1 (I/W) units in {TEST1001}\",\n                endDate: \"\"\n            }]\n        }]\n    }, {\n        year: 2018,\n        code: \"S2-01\",\n        units: [null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"You must complete TEST1001 before you can do ABC1234.\",\n        coordinates: [[1, 3]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4ea000bd-7522-4032-9cab-9f5571504a34",
      "parentUUID": "ea956b7e-eb47-4fd0-8db9-03452c5a94bc",
      "skipped": false
    },
    {
      "title": "Should handle a complicated For expression",
      "fullTitle": "rules: Should handle a complicated For expression",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2019,\n        code: \"S1-01\",\n        units: [null, {\n            unitCode: \"ABC1234\",\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"For ((SCA_LOCATION IN {CLAYTON} AND COURSE_CODE IN {1039, 2393}) OR (SCA_LOCATION IN {CLAYTON} AND COURSE_CODE NOT IN {A4921})) Do true Otherwise Permission required\"\n            }]\n        }, null, null]\n    }],\n    courseErrors: [],\n    courseInfo: {\n        courseCode: \"A4921\"\n    }\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2019,\n        code: \"S1-01\",\n        units: [null, {\n            unitCode: \"ABC1234\",\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"For ((SCA_LOCATION IN {CLAYTON} AND COURSE_CODE IN {1039, 2393}) OR (SCA_LOCATION IN {CLAYTON} AND COURSE_CODE NOT IN {A4921})) Do true Otherwise Permission required\"\n            }]\n        }, null, null]\n    }],\n    courseErrors: [{\n        message: \"You need permission to do ABC1234.\",\n        coordinates: [[0, 1]]\n    }],\n    courseInfo: {\n        courseCode: \"A4921\"\n    }\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9119e054-4c28-4882-8069-ec134700fbc2",
      "parentUUID": "ea956b7e-eb47-4fd0-8db9-03452c5a94bc",
      "skipped": false
    },
    {
      "title": "Should leave invalidUnitSlotCoordinates empty if there are no invalid unit slots",
      "fullTitle": "ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS Should leave invalidUnitSlotCoordinates empty if there are no invalid unit slots",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2015,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: false\n};\nvar action = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: {\n        unitCode: \"TEST1001\",\n        unitName: \"Test unit\",\n        locationAndTime: [{\n            location: \"Caulfield\",\n            time: [\"First semester 2017 (Day)\"]\n        }]\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2015,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1f73cc64-d596-4a4f-874c-a4c3327853aa",
      "parentUUID": "d96c5cda-a8d5-46c2-af21-21e8b46b7b14",
      "skipped": false
    },
    {
      "title": "Should highlight teaching periods that contains the same unit",
      "fullTitle": "ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS Should highlight teaching periods that contains the same unit",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var currentYear = new Date().getFullYear();\nvar stateBefore = {\n    teachingPeriods: [{\n        year: currentYear - 2,\n        code: \"FY-01\",\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        year: currentYear - 1,\n        code: \"FY-01\",\n        units: [null, null, {\n            unitCode: \"DEF2345\"\n        }, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: false\n};\nvar action = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: {\n        unitCode: \"ABC1234\",\n        locationAndTime: [{\n            location: \"Parkville\",\n            time: [\"Full year 2018 (Day)\"]\n        }]\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: currentYear - 2,\n        code: \"FY-01\",\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        year: currentYear - 1,\n        code: \"FY-01\",\n        units: [null, null, {\n            unitCode: \"DEF2345\"\n        }, null]\n    }],\n    invalidUnitSlotCoordinates: [[0, null]],\n    highlightingInvalidUnitSlots: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "bd6bf337-4ce0-416b-b960-ffa159d40435",
      "parentUUID": "d96c5cda-a8d5-46c2-af21-21e8b46b7b14",
      "skipped": false
    },
    {
      "title": "should not change the state if it receives an unknown action",
      "fullTitle": "DEFAULT should not change the state if it receives an unknown action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "289ca6be-d35a-48f2-8a9d-64dd2d64fe1e",
      "parentUUID": "936cd769-5468-4fe5-8750-7cd038fc7431",
      "skipped": false
    },
    {
      "title": "should begin fetching important dates correctly ",
      "fullTitle": "ACTION: FETCH_IMPORTANT_DATES_PENDING should begin fetching important dates correctly ",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\nvar action = {\n    type: \"FETCH_IMPORTANT_DATES_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: true,\n    importantDatesError: false\n};\ntest(_ImportantDatesReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "3a27639b-2da3-4db5-b109-6871482f582a",
      "parentUUID": "04824ed8-f3b0-474d-b08a-a1e78a1588c5",
      "skipped": false
    },
    {
      "title": "should handled failed fetch of important dates correctly ",
      "fullTitle": "ACTION: FETCH_IMPORTANT_DATES_REJECTED should handled failed fetch of important dates correctly ",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\nvar action = {\n    type: \"FETCH_IMPORTANT_DATES_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: true\n};\ntest(_ImportantDatesReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "99187651-81b5-4d08-a34b-e30a220057b5",
      "parentUUID": "72cf74f0-64cb-47e0-8fe5-6f22e155729e",
      "skipped": false
    },
    {
      "title": "should handled failed fetch of important dates correctly ",
      "fullTitle": "ACTION: FETCH_IMPORTANT_DATES_FULFILLED should handled failed fetch of important dates correctly ",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\nvar action = {\n    type: \"FETCH_IMPORTANT_DATES_FULFILLED\",\n    payload: [{\n        \"value\": \"HE IS A SAURABH\"\n    }]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [{ \"value\": \"HE IS A SAURABH\" }],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\ntest(_ImportantDatesReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f04aeb07-3251-4c2d-9ad6-41875f798c86",
      "parentUUID": "f2b69c6d-c3b1-4071-9fde-25e4730569fe",
      "skipped": false
    },
    {
      "title": "should insert a notification from an empty list",
      "fullTitle": "ACTION: ADD_NOTIFICATION should insert a notification from an empty list",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: []\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "801e8a50-9a97-4745-b38f-f31150612903",
      "parentUUID": "a9484abd-ee4e-494a-ae69-e0195bc2da3c",
      "skipped": false
    },
    {
      "title": "should prepend a notification into an list of a few existing notifications.",
      "fullTitle": "ACTION: ADD_NOTIFICATION should prepend a notification into an list of a few existing notifications.",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "17259477-4e56-49ed-a86f-666df2eed5c9",
      "parentUUID": "a9484abd-ee4e-494a-ae69-e0195bc2da3c",
      "skipped": false
    },
    {
      "title": "should replace a notification if it already exists with a specified ID",
      "fullTitle": "ACTION: ADD_NOTIFICATION should replace a notification if it already exists with a specified ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    message: \"New message goes over here\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"New message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ec642753-5ad9-4e4e-9e7c-5e68ee3caeb0",
      "parentUUID": "a9484abd-ee4e-494a-ae69-e0195bc2da3c",
      "skipped": false
    },
    {
      "title": "Should remove a notification given its ID",
      "fullTitle": "ACTION: REMOVE_NOTIFICATION Should remove a notification given its ID",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    id: \"CONNECTION_LOST\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "572c5c60-33f7-4937-bf3b-f69e4524a15e",
      "parentUUID": "2b70dcd5-5d84-4a8c-b306-25b4a56640cf",
      "skipped": false
    },
    {
      "title": "Should remove a notification given its index",
      "fullTitle": "ACTION: REMOVE_NOTIFICATION Should remove a notification given its index",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    index: 1\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b7d64756-849c-491f-9a83-e123c56a2bca",
      "parentUUID": "2b70dcd5-5d84-4a8c-b306-25b4a56640cf",
      "skipped": false
    },
    {
      "title": "Should not change state if it does not recognise an action",
      "fullTitle": "DEFAULT Should not change state if it does not recognise an action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Notifications2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "9fcd2449-4784-4a46-b9b9-23869798a9f4",
      "parentUUID": "e73edd1c-4104-44cc-8e02-efb5b68377f7",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the insert teaching period UI boolean",
      "fullTitle": "ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: true,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "10eb9329-29d4-4fa5-b3c1-14dfff911bbc",
      "parentUUID": "60704bfc-7685-480d-9663-22728aa11d65",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the insert teaching period UI boolean",
      "fullTitle": "ACTION: HIDE_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: true,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "950e93b8-9b5d-48ce-93e1-d800b63c2278",
      "parentUUID": "67d15777-8871-4e36-a8e4-189c11d2a121",
      "skipped": false
    },
    {
      "title": "Should correctly set the add unit UI boolean to true and correctly hide the sidebar when a unit is being added",
      "fullTitle": "ACTION: ADDING_UNIT Should correctly set the add unit UI boolean to true and correctly hide the sidebar when a unit is being added",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "daa006f0-4745-4f44-a47f-c126d1d6bda7",
      "parentUUID": "657f8daf-0e38-4fd9-b697-5d037bd8541f",
      "skipped": false
    },
    {
      "title": "Should correctly set the add unit UI boolean to false",
      "fullTitle": "ACTION: ADD_UNIT Should correctly set the add unit UI boolean to false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true\n};\nvar action = {\n    type: \"ADD_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e8b948ac-686d-4218-8663-823a2add0a0a",
      "parentUUID": "9fac209b-a2f1-43df-a40b-b6ef389b677c",
      "skipped": false
    },
    {
      "title": "Should correctly set the add unit UI boolean to false",
      "fullTitle": "ACTION: CANCEL_ADDING_UNIT Should correctly set the add unit UI boolean to false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true\n};\nvar action = {\n    type: \"CANCEL_ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b0a33ed3-a465-431f-85b2-b7281df0d1e9",
      "parentUUID": "f832607b-4661-4bd8-8c4d-e748c1e4bab6",
      "skipped": false
    },
    {
      "title": "Should correctly set the move unit UI boolean to true",
      "fullTitle": "ACTION: MOVING_UNIT Should correctly set the move unit UI boolean to true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"MOVING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "8687eee5-4326-4511-965f-5ae3d65f9c76",
      "parentUUID": "1b4ab396-e834-4f82-b215-2261ddc89ccd",
      "skipped": false
    },
    {
      "title": "Should correctly set the move unit UI boolean to false",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly set the move unit UI boolean to false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"MOVE_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "560f604e-65a4-42e5-add7-29fdd8122afd",
      "parentUUID": "061b1d0c-59ec-400d-999f-fc409d29590c",
      "skipped": false
    },
    {
      "title": "Should correctly set the move unit UI boolean to false",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly set the move unit UI boolean to false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"SWAP_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "20c22ad6-cd3d-40cb-b0ec-34b044d0d387",
      "parentUUID": "80f8b026-f4fa-4524-819c-0b1f10a830fd",
      "skipped": false
    },
    {
      "title": "Should correctly set the move unit UI boolean to false",
      "fullTitle": "ACTION: CANCEL_MOVING_UNIT Should correctly set the move unit UI boolean to false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9af00d0c-bf15-493c-9f0f-61727f36bdbe",
      "parentUUID": "ec69ad0d-6c90-4092-bd76-aa41cc89b0d9",
      "skipped": false
    },
    {
      "title": "Should set the course to read only correctly",
      "fullTitle": "ACTION: SET_COURSE_READ_ONLY Should set the course to read only correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: false\n};\nvar action = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "2f6fcbc4-88ce-4a25-bf96-12e8d207408a",
      "parentUUID": "1c43288c-18bb-4fa1-94b6-64b86b2eccc6",
      "skipped": false
    },
    {
      "title": "Should set the course to allow edits correctly",
      "fullTitle": "ACTION: SET_COURSE_READ_AND_WRITE Should set the course to allow edits correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: true\n};\nvar action = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a3d90aab-a253-4d55-9d32-fd139a799ff1",
      "parentUUID": "3b83189e-6f3b-468d-8d7f-3ab98d763235",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm delete teaching period modal UI to show",
      "fullTitle": "ACTION: SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to show",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "43363951-f33e-49de-b685-037fc001d828",
      "parentUUID": "b1663173-9e7a-446f-810a-9d76c1888326",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm delete teaching period modal UI to hide",
      "fullTitle": "ACTION: HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to hide",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1ae4a9d7-b565-496b-ad0f-bd220ffc4b39",
      "parentUUID": "ec2c6486-99ff-4cc5-a17d-098734dbfb3f",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm decrease study load modal UI to show",
      "fullTitle": "ACTION: SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to show",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "093dc0dd-0f8f-49e8-99ee-d8d9b6946fc3",
      "parentUUID": "98d74a0c-12f4-4bce-a894-a2f625b388f0",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm decrease study load modal UI to hide",
      "fullTitle": "ACTION: HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to hide",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "8e6b98d4-3093-4b87-b543-a4cf7a5776f3",
      "parentUUID": "6a445b72-40bd-4330-a146-e5ead68deaab",
      "skipped": false
    },
    {
      "title": "Should set show flag for custom unit modal to be true",
      "fullTitle": "ACTION: SHOW_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "35e9b20c-3800-4727-bd8a-de31bed06eac",
      "parentUUID": "b8b07ef5-771e-47d4-8a7c-669260a9e901",
      "skipped": false
    },
    {
      "title": "Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
      "fullTitle": "ACTION: SHOW_CUSTOM_UNIT_MODAL Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"ABC1234\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: \"ABC1234\",\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5b4860fa-e0a1-4eb5-81cd-7e78999bb698",
      "parentUUID": "b8b07ef5-771e-47d4-8a7c-669260a9e901",
      "skipped": false
    },
    {
      "title": "Should set show flag for custom unit modal to be false",
      "fullTitle": "ACTION: HIDE_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: true\n};\nvar action = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "3b03565d-7111-4a46-8fc3-4cdbe36ef072",
      "parentUUID": "15580cb0-15d2-4e09-b4ad-042808f36db4",
      "skipped": false
    },
    {
      "title": "Should correctly show the sidebar when called",
      "fullTitle": "ACTION: SHOW_SIDEBAR Should correctly show the sidebar when called",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: false\n};\nvar action = {\n    type: \"SHOW_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1cc0fa7b-5abd-4d5c-ac97-23a05e1afa36",
      "parentUUID": "c492f339-21ff-4ca8-a070-5785df15b2ca",
      "skipped": false
    },
    {
      "title": "Should correctly hide the sidebar when called",
      "fullTitle": "ACTION: HIDE_SIDEBAR Should correctly hide the sidebar when called",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"HIDE_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "6a8cf231-4e75-4ff5-9ab4-3c0357b74588",
      "parentUUID": "1676eada-49db-4259-956d-8f9d417d6329",
      "skipped": false
    },
    {
      "title": "Should not change state if it does not recognise the action",
      "fullTitle": "DEFAULT Should not change state if it does not recognise the action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_UI2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "db7aba4e-310a-4295-888b-6d1d2738bfdc",
      "parentUUID": "362b9882-1561-44cb-a1bd-04ccbe57fa3c",
      "skipped": false
    },
    {
      "title": "Should correctly create a new cache instance if there is no local storage value saved, or it is too old",
      "fullTitle": "ACTION: INITIALISE_NEW_CACHE Should correctly create a new cache instance if there is no local storage value saved, or it is too old",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {\n        \"TEST1001\": {\n            timeOfLastAccess: \"Tue Mar 07 2017 12:07:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TEST1001\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        },\n        \"TES1002\": {\n            timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TES1002\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        }\n    },\n    cacheSize: 2,\n    MAX_CACHE_SIZE: 20\n};\nvar action = {\n    type: \"INITIALISE_NEW_CACHE\",\n    timeOfAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\"\n};\nvar stateAfter = {\n    timeOfLastAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {},\n    cacheSize: 0,\n    MAX_CACHE_SIZE: 20\n};\ntest(_UnitCacheReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7a1d2a04-bc31-47f4-a3b0-b3a448aff001",
      "parentUUID": "a12fb629-3b46-4f70-892e-82f87b557ff1",
      "skipped": false
    },
    {
      "title": "should correctly remove an item with the given key from the cache ",
      "fullTitle": "ACTION: REMOVE_ITEM_FROM_CACHE should correctly remove an item with the given key from the cache ",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {\n        \"TEST1001\": {\n            timeOfLastAccess: \"Tue Mar 07 2017 12:07:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TEST1001\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        },\n        \"TES1002\": {\n            timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TES1002\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        }\n    },\n    cacheSize: 2,\n    MAX_CACHE_SIZE: 20\n};\nvar action = {\n    type: \"REMOVE_ITEM_FROM_CACHE\",\n    keyValueToDelete: \"TEST1001\",\n    timeOfAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\"\n};\nvar stateAfter = {\n    timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {\n        \"TES1002\": {\n            timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TES1002\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        }\n    },\n    cacheSize: 1,\n    MAX_CACHE_SIZE: 20\n};\ntest(_UnitCacheReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "73aa1c4d-7753-4520-b7f7-f0fdbc1b1f72",
      "parentUUID": "1c2c4c60-45a2-44c7-aedd-0a401c7e00d9",
      "skipped": false
    },
    {
      "title": "should correctly add an item to the cache ",
      "fullTitle": "ACTION: ADD_ITEM_TO_CACHE should correctly add an item to the cache ",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {},\n    cacheSize: 0,\n    MAX_CACHE_SIZE: 20\n};\nvar action = {\n    type: \"ADD_ITEM_TO_CACHE\",\n    timeOfAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCode: \"TEST1001\",\n    unitInfo: {\n        preqs: \"None\",\n        creditPoints: 6,\n        rules: [],\n        locationAndTime: [],\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"TES1002\",\n        eftsl: 0,\n        descriptions: \"\"\n    }\n};\nvar stateAfter = {\n    timeOfLastAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {\n        \"TEST1001\": {\n            timeOfLastAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TES1002\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        }\n    },\n    cacheSize: 1,\n    MAX_CACHE_SIZE: 20\n};\ntest(_UnitCacheReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "29b6b308-0b64-4af9-a93d-0c0eb916beed",
      "parentUUID": "4c38f99d-6e06-481a-9b17-48222d52a7c5",
      "skipped": false
    },
    {
      "title": "should begin fetching important dates correctly ",
      "fullTitle": "ACTION: FETCH_UNITS_PENDING should begin fetching important dates correctly ",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [],\n    unitSearchIsLoading: false,\n    unitSearchError: true\n};\nvar action = {\n    type: \"FETCH_UNITS_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [],\n    unitSearchIsLoading: true,\n    unitSearchError: false\n};\ntest(_UnitSearchReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7e5bdd54-42d5-4279-b6e0-835f857bdab6",
      "parentUUID": "41240bb1-dc06-4052-a331-a6d6cc9f3f61",
      "skipped": false
    },
    {
      "title": "should handled failed fetch of important dates correctly ",
      "fullTitle": "ACTION: FETCH_UNITS_REJECTED should handled failed fetch of important dates correctly ",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [],\n    unitSearchIsLoading: true,\n    unitSearchError: false\n};\nvar action = {\n    type: \"FETCH_UNITS_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [],\n    unitSearchIsLoading: false,\n    unitSearchError: true\n};\ntest(_UnitSearchReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c0c7aed5-9028-4ffa-a62a-bf298e969c52",
      "parentUUID": "c75f9b1e-7e5e-4b4c-9028-305a4212748a",
      "skipped": false
    },
    {
      "title": "should handled failed fetch of important dates correctly ",
      "fullTitle": "ACTION: FETCH_UNITS_FULFILLED should handled failed fetch of important dates correctly ",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [],\n    unitSearchIsLoading: true,\n    unitSearchError: false\n};\nvar action = {\n    type: \"FETCH_UNITS_FULFILLED\",\n    payload: [\"unit1\", \"unit2\", \"unit3\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [\"unit1\", \"unit2\", \"unit3\"],\n    unitSearchIsLoading: false,\n    unitSearchError: false\n};\ntest(_UnitSearchReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5b6f02c8-07b6-47a7-b654-eeaae2c27978",
      "parentUUID": "ff3e3f69-3bb2-4550-b60d-cf98f2807b98",
      "skipped": false
    },
    {
      "title": "Should return a non-negative number",
      "fullTitle": "UTILS: CostCalc Should return a non-negative number",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_CostCalc2.default.calculateCost(0, 0)).to.be.gte(0);\nexpect(_CostCalc2.default.calculateCost(2, 6)).to.be.gte(0);",
      "err": {},
      "isRoot": false,
      "uuid": "5f604b87-2905-48cb-a7d0-fa60cde719c4",
      "parentUUID": "e1cfdbaa-c9ba-4327-b0d9-f3a0eca1fb6c",
      "skipped": false
    },
    {
      "title": "Should multiply SCA band cost with credit points",
      "fullTitle": "UTILS: CostCalc Should multiply SCA band cost with credit points",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var scaBand = 3;\nvar creditPoints = 6;\nvar scaBandCost = _CostCalc2.default.calculateCost(scaBand, 1);\nexpect(_CostCalc2.default.calculateCost(scaBand, creditPoints)).to.equal(scaBandCost * creditPoints);",
      "err": {},
      "isRoot": false,
      "uuid": "2ef420c4-d25c-413d-86cf-31681892e39c",
      "parentUUID": "e1cfdbaa-c9ba-4327-b0d9-f3a0eca1fb6c",
      "skipped": false
    },
    {
      "title": "Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
      "fullTitle": "nextSemester Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([], 2011, [])).to.deep.equal({\n    index: 0,\n    year: 2011,\n    code: \"S1-01\",\n    teachingPeriodData: []\n});",
      "err": {},
      "isRoot": false,
      "uuid": "3dc40980-41bf-485a-8a84-e0f96e9ab1b8",
      "parentUUID": "158a1d44-be5d-4614-abf3-77bc20a5f12d",
      "skipped": false
    },
    {
      "title": "Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
      "fullTitle": "nextSemester Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([], 2029, sortedTeachingPeriodData)).to.deep.equal({\n    index: 0,\n    year: 2029,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
      "err": {},
      "isRoot": false,
      "uuid": "8cc0d65e-90fb-4288-a05f-275906975d90",
      "parentUUID": "158a1d44-be5d-4614-abf3-77bc20a5f12d",
      "skipped": false
    },
    {
      "title": "Should return semester two if the last teaching period is in semester one, with the same year",
      "fullTitle": "nextSemester Should return semester two if the last teaching period is in semester one, with the same year",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2025,\n    code: \"S1-01\"\n}, {\n    year: 2025,\n    code: \"S2-01\"\n}, {\n    year: 2026,\n    code: \"S1-01\"\n}, {\n    year: 2026,\n    code: \"S2-01\"\n}, {\n    year: 2027,\n    code: \"S1-01\"\n}], 2023, sortedTeachingPeriodData)).to.deep.equal({\n    index: 5,\n    year: 2027,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
      "err": {},
      "isRoot": false,
      "uuid": "5fc493ff-0003-47bb-9055-4d3becee71d5",
      "parentUUID": "158a1d44-be5d-4614-abf3-77bc20a5f12d",
      "skipped": false
    },
    {
      "title": "Should return semester one next year if the last teaching period is in semester two",
      "fullTitle": "nextSemester Should return semester one next year if the last teaching period is in semester two",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2015,\n    code: \"FY-01\"\n}, {\n    year: 2017,\n    code: \"S2-01\"\n}], 2015, sortedTeachingPeriodData)).to.deep.equal({\n    index: 2,\n    year: 2018,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
      "err": {},
      "isRoot": false,
      "uuid": "695008e0-8e2a-4879-a2f9-d9c0925ed8f2",
      "parentUUID": "158a1d44-be5d-4614-abf3-77bc20a5f12d",
      "skipped": false
    },
    {
      "title": "Should render a semester string",
      "fullTitle": "getSemesterString Should render a semester string",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2019,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n})).to.equal(\"Semester 2, 2019\");",
      "err": {},
      "isRoot": false,
      "uuid": "ed2b5536-3042-4823-bfcc-8ab4536f0479",
      "parentUUID": "a6fb4764-7d7b-4d91-a01c-7bf5d49ed135",
      "skipped": false
    },
    {
      "title": "Should revert back to semester codes if teachingPeriodData is not available",
      "fullTitle": "getSemesterString Should revert back to semester codes if teachingPeriodData is not available",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2015,\n    code: \"S1-01\"\n})).to.equal(\"S1-01, 2015\");",
      "err": {},
      "isRoot": false,
      "uuid": "92aa6ce4-0874-4012-83fb-5e471ffc3fd6",
      "parentUUID": "a6fb4764-7d7b-4d91-a01c-7bf5d49ed135",
      "skipped": false
    },
    {
      "title": "Should return the right year based off current month",
      "fullTitle": "UTILS: ShowYear Should return the right year based off current month",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "if (new Date().getMonth() + 1 >= 11) {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear() + 1);\n} else {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear());\n}",
      "err": {},
      "isRoot": false,
      "uuid": "d89bad3a-5572-49b1-988a-b9c9699c91e8",
      "parentUUID": "0a9ae08a-0e2b-467f-8659-1e672fd25e63",
      "skipped": false
    },
    {
      "title": "Should contain the same year as it was specified",
      "fullTitle": "UTILS: YearCalc Should contain the same year as it was specified",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getStartYearVals(2016).find(function (year) {\n    return year.value === 2016;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2017).find(function (year) {\n    return year.value === 2017;\n})).to.be.ok;",
      "err": {},
      "isRoot": false,
      "uuid": "645990e4-6d4f-458f-a34e-21d57b270233",
      "parentUUID": "361fb401-e654-4eac-bfee-41797e0c04aa",
      "skipped": false
    },
    {
      "title": "Should contain a year that is ten years from now",
      "fullTitle": "UTILS: YearCalc Should contain a year that is ten years from now",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getStartYearVals(2019).find(function (year) {\n    return year.value === 2029;\n})).to.be.ok;\nexpect(_YearCalc2.default.getStartYearVals(2012).find(function (year) {\n    return year.value === 2002;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2028;\n})).to.be.ok;",
      "err": {},
      "isRoot": false,
      "uuid": "98a1a337-1ecc-4b4d-9b5e-895fc610589b",
      "parentUUID": "361fb401-e654-4eac-bfee-41797e0c04aa",
      "skipped": false
    },
    {
      "title": "Should not contain any past year when computing end years",
      "fullTitle": "UTILS: YearCalc Should not contain any past year when computing end years",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2017;\n})).to.be.not.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2008;\n})).to.be.not.ok;",
      "err": {},
      "isRoot": false,
      "uuid": "4f2d14cf-f691-4bd7-abd2-c15c19085b78",
      "parentUUID": "361fb401-e654-4eac-bfee-41797e0c04aa",
      "skipped": false
    },
    {
      "title": "Should have starting years go in decreasing order from one year ahead to the minimum",
      "fullTitle": "UTILS: YearCalc Should have starting years go in decreasing order from one year ahead to the minimum",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getStartYearVals(2019).slice(0, 12)).to.deep.equal([{\n    text: \"2020\",\n    value: 2020\n}, {\n    text: \"2019\",\n    value: 2019\n}, {\n    text: \"2018\",\n    value: 2018\n}, {\n    text: \"2017\",\n    value: 2017\n}, {\n    text: \"2016\",\n    value: 2016\n}, {\n    text: \"2015\",\n    value: 2015\n}, {\n    text: \"2014\",\n    value: 2014\n}, {\n    text: \"2013\",\n    value: 2013\n}, {\n    text: \"2012\",\n    value: 2012\n}, {\n    text: \"2011\",\n    value: 2011\n}, {\n    text: \"2010\",\n    value: 2010\n}, {\n    text: \"2009\",\n    value: 2009\n}]);",
      "err": {},
      "isRoot": false,
      "uuid": "2df848e2-dc1d-4862-b520-9fa1cfeeebd7",
      "parentUUID": "361fb401-e654-4eac-bfee-41797e0c04aa",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "Should create an action to increment credit points counter",
      "fullTitle": "AC: incrementCreditPoints Should create an action to increment credit points counter",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 5\n};\n(0, _expect2.default)(actions.incrementCreditPoints(5)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "9a365398-0920-4ac3-93e6-f038b4df350d",
      "parentUUID": "837a9421-002c-49ae-9c3d-34ce805ec5d2",
      "skipped": false
    },
    {
      "title": "Should create an action to decrement credit points counter",
      "fullTitle": "AC: decrementCreditPoints Should create an action to decrement credit points counter",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 5\n};\n(0, _expect2.default)(actions.decrementCreditPoints(5)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "7bbaf56c-15cd-4439-91d2-b97eed2604df",
      "parentUUID": "d5fcbd85-b88d-47a8-8e30-74fc97fa7a93",
      "skipped": false
    },
    {
      "title": "Should create an action to increment cost counter",
      "fullTitle": "AC: incrementCost Should create an action to increment cost counter",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"INCREMENT_COST\",\n    value: 5\n};\n(0, _expect2.default)(actions.incrementCost(5)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "d468deb2-4e07-4fc6-9f3f-b44f925992d2",
      "parentUUID": "782338b4-278d-4585-887d-4b689b048164",
      "skipped": false
    },
    {
      "title": "Should create an action to decrement cost counter",
      "fullTitle": "AC: decrementCosts Should create an action to decrement cost counter",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"DECREMENT_COST\",\n    value: 5\n};\n(0, _expect2.default)(actions.decrementCost(5)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "0cc451ee-f903-4d5a-8f87-c960b087c1cb",
      "parentUUID": "e57e469a-e7e4-49ed-a831-a596d7042919",
      "skipped": false
    },
    {
      "title": "Should create an action to insert a teaching period",
      "fullTitle": "AC: insertTeachingPeriod Should create an action to insert a teaching period",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{\n    type: \"INSERT_TEACHING_PERIOD\",\n    index: 1,\n    year: 2016,\n    code: \"tpCode\"\n}, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n}];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.insertTeachingPeriod(1, 2016, \"tpCode\"));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "cf53c603-58aa-4095-b67e-a20b8cbcefd6",
      "parentUUID": "b76f8771-46ed-482e-89c3-539800f8f1c0",
      "skipped": false
    },
    {
      "title": "Should create an action to remove a teaching period",
      "fullTitle": "AC: removeTeachingPeriod Should create an action to remove a teaching period",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1,\n    units: [\"unit1\", \"unit2\", \"unit3\", null]\n}, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n}];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.removeTeachingPeriod(1, [\"unit1\", \"unit2\", \"unit3\", null]));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "64862fb9-b782-4bab-b761-20216d91764f",
      "parentUUID": "b6c36f98-82e0-4212-bb1a-96d127422d3f",
      "skipped": false
    },
    {
      "title": "Should create an action to increase the study load",
      "fullTitle": "AC: increaseStudyLoad Should create an action to increase the study load",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\n(0, _expect2.default)(actions.increaseStudyLoad()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "adc26fa7-8832-4c23-9376-5ff23756a59c",
      "parentUUID": "3c4ff35e-0424-4010-984b-1d540e687b9e",
      "skipped": false
    },
    {
      "title": "Should create an action to increase the study load with units affected",
      "fullTitle": "AC: decreaseStudyLoad Should create an action to increase the study load with units affected",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockTeachingPeriods = [{ year: 2018, code: \"S1-01\", units: [null, null, null, null, { unitName: \"unit1\", creditPoints: 6 }] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }, { year: 2019, code: \"S1-01\", units: [null, null, null, null, { unitName: \"unit2\", creditPoints: 6 }] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null, null] }];\nvar expectedActions = [{ type: \"PREP_FOR_DELETION\", unitCoords: [[0, 4], [2, 4]] }, { type: \"DECREASE_STUDY_LOAD\", units: [{ unitName: \"unit1\", creditPoints: 6 }, { unitName: \"unit2\", creditPoints: 6 }] }];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.decreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "933533f4-77db-4b49-a6bd-eec667df9e8a",
      "parentUUID": "b973e418-4b8d-41f2-8ad6-6af883dbf763",
      "skipped": false
    },
    {
      "title": "Should create an action to increase the study load with no units affected",
      "fullTitle": "AC: decreaseStudyLoad Should create an action to increase the study load with no units affected",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockTeachingPeriods = [{ year: 2018, code: \"S1-01\", units: [null, null, null, \"unit1\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }, { year: 2019, code: \"S1-01\", units: [null, null, null, \"unit2\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null, null] }];\nvar expectedActions = [{ type: \"PREP_FOR_DELETION\", unitCoords: [] }, { type: \"DECREASE_STUDY_LOAD\", units: [] }];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.decreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "3f3f36c3-4538-4d56-83af-8a9181dd46e6",
      "parentUUID": "b973e418-4b8d-41f2-8ad6-6af883dbf763",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for the addition of a unit that is not a custom unit being dragged",
      "fullTitle": "AC: addUnit Should correctly create the actions required for the addition of a unit that is not a custom unit being dragged",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockUnit = {\n                customUnitDragging: false,\n                cost: 200,\n                creditPoints: 6,\n                unitCode: \"TEST1001\"\n            };\n            var expectedActions = [{ type: \"ADD_UNIT\", tpIndex: 1, unitIndex: 1, unit: mockUnit, cost: 200, creditPoints: 6 }, { type: \"CLEAR_HIGHLIGHTING_INVALID_UNIT_SLOTS\" }, { type: \"VALIDATE_COURSE\" }, { type: \"MODIFIED_COURSE_PLAN\" }];\n            var store = mockStore({});\n            store.dispatch(actions.addUnit(1, 1, mockUnit));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "798471b5-36a6-4a82-a2da-1ce042cb60c4",
      "parentUUID": "a3b1275c-1788-4fae-945d-b171594a92aa",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for removal of a unit",
      "fullTitle": "AC: removeUnit Should correctly create the actions required for removal of a unit",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{ type: \"REMOVE_UNIT\", tpIndex: 1, unitIndex: 1, cost: 200, creditPoints: 6 }, { type: \"VALIDATE_COURSE\" }, { type: \"MODIFIED_COURSE_PLAN\" }];\n            var store = mockStore({});\n            store.dispatch(actions.removeUnit(1, 1, 6, 200));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "867d0036-97a7-4b16-93f9-286307d489e4",
      "parentUUID": "79feeb05-e086-4984-9db5-9d59daaf47bf",
      "skipped": false
    },
    {
      "title": "Should create the actions for clearing the course",
      "fullTitle": "AC: clearCourse Should create the actions for clearing the course",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{ type: \"CLEAR_COURSE\" }, { type: \"GET_NEXT_SEMESTER_STRING\" }, { type: \"VALIDATE_COURSE\" }];\nvar store = mockStore({ teachingPeriods: [] });\nstore.dispatch(actions.clearCourse());\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "0406dea3-60bb-4bb3-965b-2e3fdf85a767",
      "parentUUID": "e0f242c0-10a5-44d5-ba95-226fc57497d7",
      "skipped": false
    },
    {
      "title": "Should create the action for generating the course",
      "fullTitle": "AC: generateCourse Should create the action for generating the course",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2016,\n    endYear: 2019\n};\n(0, _expect2.default)(actions.generateCourse(2016, 2019)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "e2f245c8-8b65-4642-b161-93a038709fd4",
      "parentUUID": "dc0877d5-d278-47cb-b18f-3ab229cc1a5c",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for submission of a year form",
      "fullTitle": "AC: submitYearForm Should correctly create the actions required for submission of a year form",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{ type: \"SUBMIT_YEAR_FORM\", startYear: 2016, endYear: 2019 }, { type: \"GENERATE_COURSE\", startYear: 2016, endYear: 2019 }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\n            var store = mockStore({});\n            store.dispatch(actions.submitYearForm(2016, 2019));\n            (0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "835aeedc-5740-49b0-9f95-6ee2e4833e60",
      "parentUUID": "33a8a998-628e-4550-8a4a-0a32b1f6f5a9",
      "skipped": false
    },
    {
      "title": "Should correctly create actions required to change the start year",
      "fullTitle": "AC: changeStartYear Should correctly create actions required to change the start year",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedActions = [{ type: \"CHANGE_START_YEAR\", year: 2020 }, { type: \"GET_NEXT_SEMESTER_STRING\" }];\nvar store = mockStore({});\nstore.dispatch(actions.changeStartYear(2020));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "33118a89-3bd9-43a0-9153-227095e78231",
      "parentUUID": "9e15aa65-960c-48ee-b5e3-72542323d53d",
      "skipped": false
    },
    {
      "title": "Should create the action for generating the course",
      "fullTitle": "AC: getNextSemesterString Should create the action for generating the course",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"GET_NEXT_SEMESTER_STRING\"\n};\n(0, _expect2.default)(actions.getNextSemesterString()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "422f8503-7bac-45c6-a132-df15fccedca4",
      "parentUUID": "8b21b377-a6d7-444e-9839-6e6c7c312e1e",
      "skipped": false
    },
    {
      "title": "Should create the action for getting affected units in an overload column",
      "fullTitle": "AC: getAffectedUnitsInColumn Should create the action for getting affected units in an overload column",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"GET_AFFECTED_UNITS_IN_OVERLOAD_COLUMN\",\n    index: 4\n};\n(0, _expect2.default)(actions.getAffectedUnitsInColumn(4)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "53006f6c-6f5f-475d-bc40-c45acb220813",
      "parentUUID": "dc463f13-6e44-47eb-81f0-f07c2793d775",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for deletion of a teaching period with units affected",
      "fullTitle": "AC: attemptToDeleteTeachingPeriod Should correctly create the actions required for deletion of a teaching period with units affected",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockUnits = [{ unitCode: \"TEST101\", unitName: \"unit1\" }, null, { unitCode: \"TEST102\", unitName: \"unit2\" }, null, null];\nvar expectedActions = [{ type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\" }, { type: \"UPDATE_AFFECTED_UNITS\", affectedUnits: [\"TEST101 - unit1\", \"TEST102 - unit2\"] }, { type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\", index: 1 }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDeleteTeachingPeriod(1, mockUnits));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "5c18fab0-8a55-421f-92aa-55fdbcf197d7",
      "parentUUID": "dc8370ca-875e-4291-8a45-1c9ae7010fa2",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for deletion of a teaching period with no units affected",
      "fullTitle": "AC: attemptToDeleteTeachingPeriod Should correctly create the actions required for deletion of a teaching period with no units affected",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockUnits = [null, null, null, null, null];\nvar expectedActions = [{ type: \"REMOVE_TEACHING_PERIOD\", index: 1, units: [null, null, null, null, null] }, {\n    type: \"VALIDATE_COURSE\"\n}, {\n    type: \"MODIFIED_COURSE_PLAN\"\n}, { type: \"GET_NEXT_SEMESTER_STRING\" }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDeleteTeachingPeriod(1, mockUnits));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "5c0c8679-cc85-48a7-bcbe-1c51f9cb50e4",
      "parentUUID": "dc8370ca-875e-4291-8a45-1c9ae7010fa2",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for decrease of a study load with units affected",
      "fullTitle": "AC: attemptToDecreaseStudyLoad Should correctly create the actions required for decrease of a study load with units affected",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockTeachingPeriods = [{ units: [null, null, { unitCode: \"TEST10A\", unitName: \"unitA\" }, null, { unitCode: \"TEST101\", unitName: \"unit1\", creditPoints: 6 }] }, { units: [null, null, { unitCode: \"TEST10B\", unitName: \"unitB\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10C\", unitName: \"unitC\" }, null, { unitCode: \"TEST102\", unitName: \"unit2\", creditPoints: 6 }] }, { units: [null, null, { unitCode: \"TEST10D\", unitName: \"unitD\" }, null, null] }];\nvar expectedActions = [{ type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\" }, { type: \"UPDATE_AFFECTED_UNITS\", affectedUnits: [\"TEST101 - unit1\", \"TEST102 - unit2\"] }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDecreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "cc58e662-75c1-41e2-b24a-9fd523af88d6",
      "parentUUID": "d4c4cef4-9ce5-4afd-8bf0-63909752cc17",
      "skipped": false
    },
    {
      "title": "Should correctly create the actions required for decrease of a study load with no units affected",
      "fullTitle": "AC: attemptToDecreaseStudyLoad Should correctly create the actions required for decrease of a study load with no units affected",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var mockTeachingPeriods = [{ units: [null, null, { unitCode: \"TEST10A\", unitName: \"unitA\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10B\", unitName: \"unitB\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10C\", unitName: \"unitC\" }, null, null] }, { units: [null, null, { unitCode: \"TEST10D\", unitName: \"unitD\" }, null, null] }];\nvar expectedActions = [{ type: \"PREP_FOR_DELETION\", unitCoords: [] }, { type: \"DECREASE_STUDY_LOAD\", units: [] }];\nvar store = mockStore({});\nstore.dispatch(actions.attemptToDecreaseStudyLoad(mockTeachingPeriods, 4));\n(0, _expect2.default)(store.getActions()).toEqual(expectedActions);",
      "err": {},
      "isRoot": false,
      "uuid": "46afd084-8975-4fc3-a522-b8981d33fd4f",
      "parentUUID": "d4c4cef4-9ce5-4afd-8bf0-63909752cc17",
      "skipped": false
    },
    {
      "title": "Should create the action for getting affected units in an teaching period row",
      "fullTitle": "AC: getAffectedUnitsInRow Should create the action for getting affected units in an teaching period row",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"GET_AFFECTED_UNITS_IN_TEACHING_PERIOD_ROW\",\n    index: 4\n};\n(0, _expect2.default)(actions.getAffectedUnitsInRow(4)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "e02cc80e-3dae-407c-863b-1a2c7b4e7f50",
      "parentUUID": "fa11876f-7c90-47dd-a79a-1fe283ca0e51",
      "skipped": false
    },
    {
      "title": "Should create the action for validating the course",
      "fullTitle": "AC: validateCourse Should create the action for validating the course",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"VALIDATE_COURSE\"\n};\n(0, _expect2.default)(actions.validateCourse()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "9a4225ab-d964-48c3-9d99-96e17032a438",
      "parentUUID": "afa78aa5-5f0a-4860-9999-0de1d1f9a0bc",
      "skipped": false
    },
    {
      "title": "Should create the action for highlighting the invalid unit slots",
      "fullTitle": "AC: highlightInvalidUnitSlots Should create the action for highlighting the invalid unit slots",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: \"UnitTest\",\n    ignoreCoordinate: false\n};\n(0, _expect2.default)(actions.highlightInvalidUnitSlots(\"UnitTest\", false)).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "97e7db97-5f13-4e1a-92f1-f80400d1f355",
      "parentUUID": "02d6b517-ca16-4429-b6e9-66cdef43dd2d",
      "skipped": false
    },
    {
      "title": "Should create the action for clearing the highlighting for invalid unit slots",
      "fullTitle": "AC: clearHighlightingInvalidUnitSlots Should create the action for clearing the highlighting for invalid unit slots",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"CLEAR_HIGHLIGHTING_INVALID_UNIT_SLOTS\"\n};\n(0, _expect2.default)(actions.clearHighlightingInvalidUnitSlots()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "0507c93f-3edf-4b8d-88dc-046eeb22cf89",
      "parentUUID": "5bef1b96-1c71-42d5-af48-6bd51bc596c1",
      "skipped": false
    },
    {
      "title": "Should create an action to show the insert teaching period UI",
      "fullTitle": "AC: showInsertTeachingPeriodUI Should create an action to show the insert teaching period UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"testTPCode\"\n};\n(0, _expect2.default)(actions.showInsertTeachingPeriodUI(\"testTPCode\")).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "9e035380-28c3-4781-a908-dabe1ccc7e96",
      "parentUUID": "4c1d6a41-30fb-4730-b410-526fbea809b3",
      "skipped": false
    },
    {
      "title": "Should create an action to hide the insert teaching period UI",
      "fullTitle": "AC: hideInsertTeachingPeriodUI Should create an action to hide the insert teaching period UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\n(0, _expect2.default)(actions.hideInsertTeachingPeriodUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "e76c8b86-f9fe-49b8-b390-ea5443ac69c6",
      "parentUUID": "7ed137a5-26a6-4e31-bfff-bf4cf2722095",
      "skipped": false
    },
    {
      "title": "Should create an action to show the add unit UI",
      "fullTitle": "AC: showAddingUnitUI Should create an action to show the add unit UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_ADD_UNIT_UI\"\n};\n(0, _expect2.default)(actions.showAddingUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "9ae6eaf6-1227-4c0b-989c-aa47241fe70a",
      "parentUUID": "daa9600b-0320-4ee0-b6cc-0b8986cc62fd",
      "skipped": false
    },
    {
      "title": "Should create an action to hide the add unit UI",
      "fullTitle": "AC: hideAddingUnitUI Should create an action to hide the add unit UI",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_ADD_UNIT_UI\"\n};\n(0, _expect2.default)(actions.hideAddingUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "695685b5-0e57-4b72-bdfa-ce5cf85c2cbd",
      "parentUUID": "cd20a3a2-832d-4c75-bd95-04892ae50d3a",
      "skipped": false
    },
    {
      "title": "Should create an action to show the move unit UI",
      "fullTitle": "AC: showMoveUnitUI Should create an action to show the move unit UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_MOVE_UNIT_UI\"\n};\n(0, _expect2.default)(actions.showMoveUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "9b4dab74-4d28-44b7-bddd-9ccf73f68cce",
      "parentUUID": "d11c364d-a3a8-4238-aee1-1e0e449f4b7b",
      "skipped": false
    },
    {
      "title": "Should create an action to hide move unit UI",
      "fullTitle": "AC: hideMoveUnitUI Should create an action to hide move unit UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_MOVE_UNIT_UI\"\n};\n(0, _expect2.default)(actions.hideMoveUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "79271b8c-8038-4ac8-b8d0-3bb0992cf909",
      "parentUUID": "002a94c1-11ed-4240-881c-a7ab86b721db",
      "skipped": false
    },
    {
      "title": "Should create an action to show confirm delete teaching period UI",
      "fullTitle": "AC: showConfirmDeleteTeachingPeriodUI Should create an action to show confirm delete teaching period UI",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\n(0, _expect2.default)(actions.showConfirmDeleteTeachingPeriodUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "af41c925-c6d1-4b99-b84b-b9036c6a8652",
      "parentUUID": "b8727103-aa6c-4740-861d-3bdb35100232",
      "skipped": false
    },
    {
      "title": "Should create an action to hide confirm delete teaching period UI",
      "fullTitle": "AC: hideConfirmDeleteTeachingPeriodUI Should create an action to hide confirm delete teaching period UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\n(0, _expect2.default)(actions.hideConfirmDeleteTeachingPeriodUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "0a91bdce-4199-4a2b-9004-bb74ace1cd66",
      "parentUUID": "64b5d9fa-50e8-4827-833d-aeb9771b0a70",
      "skipped": false
    },
    {
      "title": "Should create an action to show confirm decrease study load UI",
      "fullTitle": "AC: showConfirmDecreaseStudyLoadUI Should create an action to show confirm decrease study load UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\n(0, _expect2.default)(actions.showConfirmDecreaseStudyLoadUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "9e5b8fd8-3983-4efb-835e-410ac0be1e7d",
      "parentUUID": "546f8bfa-f15c-4c1e-a811-f568c3bfc5d9",
      "skipped": false
    },
    {
      "title": "Should create an action to hide confirm decrease study load UI",
      "fullTitle": "AC: hideConfirmDecreaseStudyLoadUI Should create an action to hide confirm decrease study load UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\n(0, _expect2.default)(actions.hideConfirmDecreaseStudyLoadUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "f5e4d0f8-9293-4e9f-9266-f2edb9abd579",
      "parentUUID": "49347b73-4c35-4c71-9772-b0fba834659c",
      "skipped": false
    },
    {
      "title": "Should create an action to show custum unit UI",
      "fullTitle": "AC: showCustomUnitUI Should create an action to show custum unit UI",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"TEST1001\"\n};\n(0, _expect2.default)(actions.showCustomUnitUI(\"TEST1001\")).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "111f792e-e4e7-4055-baf0-8d4ced85e3ee",
      "parentUUID": "3febcc15-a7a7-4ea7-b06e-bd071272aa73",
      "skipped": false
    },
    {
      "title": "Should create an action to hide custom unit UI",
      "fullTitle": "AC: hideCustomUnitUI Should create an action to hide custom unit UI",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\n(0, _expect2.default)(actions.hideCustomUnitUI()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "96b88d77-5032-423a-9c54-b50979b55e87",
      "parentUUID": "14edf7e7-9c31-4b93-a584-bfb5afd17bd3",
      "skipped": false
    },
    {
      "title": "Should create an action to show sidebar",
      "fullTitle": "AC: showSidebar Should create an action to show sidebar",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SHOW_SIDEBAR\"\n};\n(0, _expect2.default)(actions.showSidebar()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "3487c80b-18a4-45c7-8d9c-d663b7f1d0b2",
      "parentUUID": "c80ccd05-936d-415c-950b-7bd1fad4898e",
      "skipped": false
    },
    {
      "title": "Should create an action to hide sidebar",
      "fullTitle": "AC: hideSidebar Should create an action to hide sidebar",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"HIDE_SIDEBAR\"\n};\n(0, _expect2.default)(actions.hideSidebar()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "f3fbbfe0-bc26-445e-80a9-b8470b6386c9",
      "parentUUID": "740a0b10-a6f8-40b5-9750-950e6d7a6ac9",
      "skipped": false
    },
    {
      "title": "Should create an action to set the course to read only",
      "fullTitle": "AC: setCourseReadOnly Should create an action to set the course to read only",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\n(0, _expect2.default)(actions.setCourseReadOnly()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "08266100-7a70-4a09-83d3-f08f7aab889e",
      "parentUUID": "9c5d6f11-e99d-4c05-abba-6eb9509d6c5c",
      "skipped": false
    },
    {
      "title": "Should create an action to set the course to read and write",
      "fullTitle": "AC: setCourseReadAndWrite Should create an action to set the course to read and write",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var expectedAction = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\n(0, _expect2.default)(actions.setCourseReadAndWrite()).toEqual(expectedAction);",
      "err": {},
      "isRoot": false,
      "uuid": "93a3a172-d4af-4d7c-961f-c9b562151f54",
      "parentUUID": "490816d5-534f-4f1e-9944-5fe7a3a830ff",
      "skipped": false
    },
    {
      "title": "Should render a notification title and a message",
      "fullTitle": "COMPONENT: Notification Should render a notification title and a message",
      "timedOut": false,
      "duration": 30,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, {\n    title: \"This is a test\",\n    message: \"Some message goes over here\"\n}));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(\"This is a test\");\nexpect(wrapper.text().replace(\"This is a test\", \"\").trim()).to.equal(\"Some message goes over here\");",
      "err": {},
      "isRoot": false,
      "uuid": "5840b127-0f97-4a40-aac2-d9bb691b0119",
      "parentUUID": "b07bf38c-cff6-41a9-9c6d-3f0abd01d742",
      "skipped": false
    },
    {
      "title": "Should have a default level to be info if it is not specified",
      "fullTitle": "COMPONENT: Notification Should have a default level to be info if it is not specified",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, null)).find(\".info.message\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "0a1a9fb5-c775-4dce-b631-aa645b7f7748",
      "parentUUID": "b07bf38c-cff6-41a9-9c6d-3f0abd01d742",
      "skipped": false
    },
    {
      "title": "Should follow a specified level",
      "fullTitle": "COMPONENT: Notification Should follow a specified level",
      "timedOut": false,
      "duration": 46,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"info\" })).find(\".info.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"warning\" })).find(\".warning.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"error\" })).find(\".negative.message\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_Notification2.default, { level: \"success\" })).find(\".positive.message\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "e75253e1-4d92-4b40-9b2e-6c2d6a1cb48a",
      "parentUUID": "b07bf38c-cff6-41a9-9c6d-3f0abd01d742",
      "skipped": false
    },
    {
      "title": "should be called exactly once when main button has been clicked",
      "fullTitle": "#addSemester() should be called exactly once when main button has been clicked",
      "timedOut": false,
      "duration": 18,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var addSemester = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: identity,\n    addSemester: addSemester }));\nwrapper.find(\"Button\").forEach(function (button) {\n    button.simulate(\"click\");\n});\nexpect(addSemester).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "e1746248-ed9a-45f0-90fb-1ad9061a9bfa",
      "parentUUID": "53be1ecb-8029-4c58-9611-f49546854e20",
      "skipped": false
    },
    {
      "title": "should be called as many times as the number of insert teaching periods options upon click",
      "fullTitle": "#insert() should be called as many times as the number of insert teaching periods options upon click",
      "timedOut": false,
      "duration": 30,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var insert = _sinon2.default.spy();\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_InsertTeachingPeriodButton2.default, {\n    insert: insert,\n    addSemester: identity }));\nvar dropdownItems = wrapper.find(\".item\");\ndropdownItems.forEach(function (node) {\n    return node.simulate(\"click\");\n});\nexpect(insert).to.have.callCount(dropdownItems.length);",
      "err": {},
      "isRoot": false,
      "uuid": "2a4d8127-2371-4445-82f4-36634c3b15cd",
      "parentUUID": "21fe4322-06b7-45f3-957f-cf8c8a2e525a",
      "skipped": false
    },
    {
      "title": "should render two ratings",
      "fullTitle": "COMPONENT: SetuRating should render two ratings",
      "timedOut": false,
      "duration": 35,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, null)).find(\".rating\")).to.have.length(2);",
      "err": {},
      "isRoot": false,
      "uuid": "5b933d71-db4f-4489-9209-98c3e62d39e7",
      "parentUUID": "ff22c4b5-e133-44a2-8b44-49cfe68f01af",
      "skipped": false
    },
    {
      "title": "should render a book if learning ratings is >=2.5",
      "fullTitle": "COMPONENT: SetuRating should render a book if learning ratings is >=2.5",
      "timedOut": false,
      "duration": 36,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 4.13 })).find(\".book\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.50 })).find(\".book\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "b166aa03-a181-486c-aa97-fce8bb3bfcea",
      "parentUUID": "ff22c4b5-e133-44a2-8b44-49cfe68f01af",
      "skipped": false
    },
    {
      "title": "should render a remove circle if learning ratings is <2.5",
      "fullTitle": "COMPONENT: SetuRating should render a remove circle if learning ratings is <2.5",
      "timedOut": false,
      "duration": 29,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 1.51 })).find(\".remove.circle\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { starRating: 2.49 })).find(\".remove.circle\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "ccb899b3-66f4-4f23-a630-2f86c0991fe9",
      "parentUUID": "ff22c4b5-e133-44a2-8b44-49cfe68f01af",
      "skipped": false
    },
    {
      "title": "should render a thumbs up if enjoyment ratings is >=2.5",
      "fullTitle": "COMPONENT: SetuRating should render a thumbs up if enjoyment ratings is >=2.5",
      "timedOut": false,
      "duration": 24,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 4.13 })).find(\".thumbs.up\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.50 })).find(\".thumbs.up\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "7f1c14f7-33f5-4320-a7a0-5dff81f8eb33",
      "parentUUID": "ff22c4b5-e133-44a2-8b44-49cfe68f01af",
      "skipped": false
    },
    {
      "title": "should render a thumbs down if enjoyment ratings is <2.5",
      "fullTitle": "COMPONENT: SetuRating should render a thumbs down if enjoyment ratings is <2.5",
      "timedOut": false,
      "duration": 31,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 1.51 })).find(\".thumbs.down\")).to.have.length(1);\nexpect((0, _enzyme.mount)(_react2.default.createElement(_SetuRating2.default, { heartRating: 2.49 })).find(\".thumbs.down\")).to.have.length(1);",
      "err": {},
      "isRoot": false,
      "uuid": "0273b59c-38b9-4b08-a958-addf553379f6",
      "parentUUID": "ff22c4b5-e133-44a2-8b44-49cfe68f01af",
      "skipped": false
    },
    {
      "title": "should only render a unit code and a unit name",
      "fullTitle": "#presentational should only render a unit code and a unit name",
      "timedOut": false,
      "duration": 29,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var unitCode = \"ABC1234\";\nvar unitName = \"Example unit\";\nvar wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: unitCode,\n    name: unitName }));\nexpect(wrapper.find(\".header\").text().trim()).to.equal(unitCode);\nexpect(wrapper.find(\".message\").text().replace(unitCode, \"\").trim()).to.equal(unitName);",
      "err": {},
      "isRoot": false,
      "uuid": "9aca6994-f2da-4b03-a74c-797ed808dd82",
      "parentUUID": "bdf8f1b1-238d-488d-a88e-a6eeb6c60253",
      "skipped": false
    },
    {
      "title": "should render a close button only when mouse is over the unit",
      "fullTitle": "#presentational should render a close button only when mouse is over the unit",
      "timedOut": false,
      "duration": 51,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    hovering: false }));\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");\nwrapper.setProps({\n    hovering: true\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"visible\");\nwrapper.setProps({\n    hovering: false\n});\nexpect(wrapper.find(\".buttons\")).to.have.length(1);\nexpect(wrapper.find(\".buttons\")).to.have.style(\"visibility\", \"hidden\");",
      "err": {},
      "isRoot": false,
      "uuid": "f9dcf4e7-c86b-415c-b126-60297840297f",
      "parentUUID": "bdf8f1b1-238d-488d-a88e-a6eeb6c60253",
      "skipped": false
    },
    {
      "title": "Should call willAddUnit if unit is a newUnit and it has been clicked",
      "fullTitle": "#events Should call willAddUnit if unit is a newUnit and it has been clicked",
      "timedOut": false,
      "duration": 34,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    newUnit: true,\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    willAddUnit: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"click\");\nexpect(eventFunc).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "dfef33f3-98ed-4406-b4e7-0b790448d9a5",
      "parentUUID": "05914997-c97e-4d14-bd8c-d2a05fcb2647",
      "skipped": false
    },
    {
      "title": "Should call handleUnitMouseOver when mouse is over the unit",
      "fullTitle": "#events Should call handleUnitMouseOver when mouse is over the unit",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseOver: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseOver\");\nexpect(eventFunc).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "e0d67d8c-ab6d-4055-8478-f745972d9a83",
      "parentUUID": "05914997-c97e-4d14-bd8c-d2a05fcb2647",
      "skipped": false
    },
    {
      "title": "Should call handleUnitMouseMove when mouse moves over the unit",
      "fullTitle": "#events Should call handleUnitMouseMove when mouse moves over the unit",
      "timedOut": false,
      "duration": 13,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseMove: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseMove\");\nexpect(eventFunc).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "500d6cee-2af5-477a-aad3-3f470ae9afea",
      "parentUUID": "05914997-c97e-4d14-bd8c-d2a05fcb2647",
      "skipped": false
    },
    {
      "title": "Should call handleUnitMouseOut when mouse is over the unit",
      "fullTitle": "#events Should call handleUnitMouseOut when mouse is over the unit",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_UnitMessage.UnitMessage, {\n    code: \"ABC1234\",\n    name: \"Example unit\",\n    handleUnitMouseOut: eventFunc,\n    hovering: false }));\nwrapper.find(\".message\").simulate(\"mouseOut\");\nexpect(eventFunc).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "a324f9fa-a68c-45bc-9dcb-a867e352a917",
      "parentUUID": "05914997-c97e-4d14-bd8c-d2a05fcb2647",
      "skipped": false
    },
    {
      "title": "Should correctly call movingUnit when it is being dragged",
      "fullTitle": "#DnD Should correctly call movingUnit when it is being dragged",
      "timedOut": false,
      "duration": 10,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "testingBeginDrag = true;\ntestingEndDrag = false;\nbackend.simulateBeginDrag([sourceId]);\nexpect(movingUnitSpy).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "f17b1b77-17c5-4553-bae7-3c4f90d25f84",
      "parentUUID": "91641afd-9ed0-46ab-8fed-22717b104d90",
      "skipped": false
    },
    {
      "title": "Should correctylc call cancelMovingUnit ",
      "fullTitle": "#DnD Should correctylc call cancelMovingUnit ",
      "timedOut": false,
      "duration": 11,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "testingBeginDrag = false;\ntestingEndDrag = true;\nbackend.simulateBeginDrag([sourceId]);\nbackend.simulateEndDrag(sourceId);\nexpect(cancelMovingUnitSpy).to.have.been.calledOnce;",
      "err": {},
      "isRoot": false,
      "uuid": "e78d4e38-3cdc-492f-94cb-50125c166a7e",
      "parentUUID": "91641afd-9ed0-46ab-8fed-22717b104d90",
      "skipped": false
    },
    {
      "title": "Should correctly begin fetching a career",
      "fullTitle": "ACTION: FETCH_CAREER_PENDING Should correctly begin fetching a career",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    career: {},\n    careerIsLoading: false,\n    careerLoadError: true, // this should reset error so we start it as true to test\n    relatedDegrees: [],\n    relatedDegreesAreLoading: false,\n    relatedDegreesError: false\n};\nvar action = {\n    type: \"FETCH_CAREER_PENDING\"\n};\nvar stateAfter = {\n    career: {},\n    careerIsLoading: true,\n    careerLoadError: false,\n    relatedDegrees: [],\n    relatedDegreesAreLoading: false,\n    relatedDegreesError: false\n};\ntest(_CareerReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ec1d06d6-2b07-4726-93c0-f6c1bd302ed0",
      "parentUUID": "3a21ee23-09da-4137-a8c9-8cb930e5a444",
      "skipped": false
    },
    {
      "title": "Should correctly handle a successful fetch of a career",
      "fullTitle": "ACTION: FETCH_CAREER_FULFILLED Should correctly handle a successful fetch of a career",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    career: {},\n    careerIsLoading: true,\n    careerLoadError: false,\n    relatedDegrees: [],\n    relatedDegreesAreLoading: false,\n    relatedDegreesError: false\n};\nvar action = {\n    type: \"FETCH_CAREER_FULFILLED\",\n    payload: {\n        title: \"Unit tester\",\n        description: \"Someone who tests\",\n        relatedDegrees: [\"A\", \"B\", \"C\"]\n    }\n};\nvar stateAfter = {\n    career: {\n        title: \"Unit tester\",\n        description: \"Someone who tests\",\n        relatedDegrees: [\"A\", \"B\", \"C\"]\n    },\n    careerIsLoading: false,\n    careerLoadError: false,\n    relatedDegrees: [],\n    relatedDegreesAreLoading: false,\n    relatedDegreesError: false\n};\ntest(_CareerReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a5124a36-d6b4-4f35-9e51-283341fc711d",
      "parentUUID": "c087aec2-ef3e-40cb-a2bf-e1d010c813a8",
      "skipped": false
    },
    {
      "title": "Should correctly handle an unsuccessful fetch of a career",
      "fullTitle": "ACTION: FETCH_CAREER_REJECTED Should correctly handle an unsuccessful fetch of a career",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    career: { testVar: \"some data the should be reset\" },\n    careerIsLoading: true,\n    careerLoadError: false,\n    relatedDegrees: [],\n    relatedDegreesAreLoading: false,\n    relatedDegreesError: false\n};\nvar action = {\n    type: \"FETCH_CAREER_REJECTED\"\n};\nvar stateAfter = {\n    career: {},\n    careerIsLoading: false,\n    careerLoadError: true,\n    relatedDegrees: [],\n    relatedDegreesAreLoading: false,\n    relatedDegreesError: false\n};\ntest(_CareerReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "60d6d488-9aa2-4b02-8c50-64d4bf73f78b",
      "parentUUID": "65135dfd-1415-439f-9b65-9035cc7fb6ce",
      "skipped": false
    },
    {
      "title": "Should correctly begin fetching the related degrees to a career",
      "fullTitle": "ACTION: FETCH_RELATED_DEGREES_PENDING Should correctly begin fetching the related degrees to a career",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    career: {\n        id: \"3\",\n        title: \"Criminologist\",\n        description: \"Why did they do it? Crimes can be puzzling to most...\",\n        videoCode: \"XGer682MdJE\",\n        videoThumbnail: \"\",\n        promoPhoto: \"\",\n        relatedDegrees: [\"A2000-0-2\"]\n    },\n    careerIsLoading: false,\n    careerLoadError: false,\n    relatedDegrees: [],\n    relatedDegreesAreLoading: false,\n    relatedDegreesError: true // should reset here\n};\nvar action = {\n    type: \"FETCH_RELATED_DEGREES_PENDING\"\n};\nvar stateAfter = {\n    career: {\n        id: \"3\",\n        title: \"Criminologist\",\n        description: \"Why did they do it? Crimes can be puzzling to most...\",\n        videoCode: \"XGer682MdJE\",\n        videoThumbnail: \"\",\n        promoPhoto: \"\",\n        relatedDegrees: [\"A2000-0-2\"]\n    },\n    careerIsLoading: false,\n    careerLoadError: false,\n    relatedDegrees: [],\n    relatedDegreesAreLoading: true,\n    relatedDegreesError: false\n};\ntest(_CareerReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c02b900b-fa23-4c57-849e-e16a679fcf21",
      "parentUUID": "f3b81594-fbd7-4ba0-a1e3-528091f9b8e8",
      "skipped": false
    },
    {
      "title": "Should correctly handle the successful fetch of related degrees to a career",
      "fullTitle": "ACTION: FETCH_RELATED_DEGREES_FULFILLED Should correctly handle the successful fetch of related degrees to a career",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    career: {\n        id: \"3\",\n        title: \"Criminologist\",\n        description: \"Why did they do it? Crimes can be puzzling to most...\",\n        videoCode: \"XGer682MdJE\",\n        videoThumbnail: \"\",\n        promoPhoto: \"\",\n        relatedDegrees: [\"A2000-0-2\"]\n    },\n    careerIsLoading: false,\n    careerLoadError: false,\n    relatedDegrees: [],\n    relatedDegreesAreLoading: true,\n    relatedDegreesError: false // should reset here\n};\nvar action = {\n    type: \"FETCH_RELATED_DEGREES_FULFILLED\",\n    payload: [{\n        code: \"A2000\",\n        title: \"Bachelor of Arts\",\n        description: \"Arts at Monash is your comprehensive gateway to a wide range of fascinating and rewarding areas of study across the arts, humanities, and social sciences. Taking an innovative approach in tackling world issues and fostering a global perspective, you will develop the research skills, advanced discipline knowledge and self reliance to acquire information, assess evidence and convey complex ideas in speech and writing in order to answer complicated questions. And with the scope to choose from almost 40 different major and minor areas of study, including languages, social studies, communications, politics, human rights, and international relations, you will develop an informed, critical awareness of the fields you're most passionate about, laying the groundwork for a wealth of exciting careers.\",\n        videoCode: \"\",\n        videoThumbnail: \"\",\n        promoPhoto: \"\",\n        specialisations: [],\n        majors: \"History\"\n    }, {\n        code: \"A2000\",\n        title: \"Bachelor of Arts\",\n        description: \"Arts at Monash is your comprehensive gateway to a wide range of fascinating and rewarding areas of study across the arts, humanities, and social sciences. Taking an innovative approach in tackling world issues and fostering a global perspective, you will develop the research skills, advanced discipline knowledge and self reliance to acquire information, assess evidence and convey complex ideas in speech and writing in order to answer complicated questions. And with the scope to choose from almost 40 different major and minor areas of study, including languages, social studies, communications, politics, human rights, and international relations, you will develop an informed, critical awareness of the fields you're most passionate about, laying the groundwork for a wealth of exciting careers.\",\n        videoCode: \"\",\n        videoThumbnail: \"\",\n        promoPhoto: \"\",\n        specialisations: [],\n        majors: \"Journalism\"\n    }]\n};\nvar stateAfter = {\n    career: {\n        id: \"3\",\n        title: \"Criminologist\",\n        description: \"Why did they do it? Crimes can be puzzling to most...\",\n        videoCode: \"XGer682MdJE\",\n        videoThumbnail: \"\",\n        promoPhoto: \"\",\n        relatedDegrees: [\"A2000-0-2\"]\n    },\n    careerIsLoading: false,\n    careerLoadError: false,\n    relatedDegrees: [{\n        code: \"A2000\",\n        title: \"Bachelor of Arts\",\n        description: \"Arts at Monash is your comprehensive gateway to a wide range of fascinating and rewarding areas of study across the arts, humanities, and social sciences. Taking an innovative approach in tackling world issues and fostering a global perspective, you will develop the research skills, advanced discipline knowledge and self reliance to acquire information, assess evidence and convey complex ideas in speech and writing in order to answer complicated questions. And with the scope to choose from almost 40 different major and minor areas of study, including languages, social studies, communications, politics, human rights, and international relations, you will develop an informed, critical awareness of the fields you're most passionate about, laying the groundwork for a wealth of exciting careers.\",\n        videoCode: \"\",\n        videoThumbnail: \"\",\n        promoPhoto: \"\",\n        specialisations: [],\n        majors: \"History\"\n    }, {\n        code: \"A2000\",\n        title: \"Bachelor of Arts\",\n        description: \"Arts at Monash is your comprehensive gateway to a wide range of fascinating and rewarding areas of study across the arts, humanities, and social sciences. Taking an innovative approach in tackling world issues and fostering a global perspective, you will develop the research skills, advanced discipline knowledge and self reliance to acquire information, assess evidence and convey complex ideas in speech and writing in order to answer complicated questions. And with the scope to choose from almost 40 different major and minor areas of study, including languages, social studies, communications, politics, human rights, and international relations, you will develop an informed, critical awareness of the fields you're most passionate about, laying the groundwork for a wealth of exciting careers.\",\n        videoCode: \"\",\n        videoThumbnail: \"\",\n        promoPhoto: \"\",\n        specialisations: [],\n        majors: \"Journalism\"\n    }],\n    relatedDegreesAreLoading: false,\n    relatedDegreesError: false\n};\ntest(_CareerReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "32100156-4d0c-464c-b911-07633809837a",
      "parentUUID": "13a047d8-1a47-407d-bf32-b29fe6c53514",
      "skipped": false
    },
    {
      "title": "Should correctly handle the unsuccessful fetch of the related degrees to a career",
      "fullTitle": "ACTION: FETCH_RELATED_DEGREES_REJECTED Should correctly handle the unsuccessful fetch of the related degrees to a career",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    career: {\n        id: \"3\",\n        title: \"Criminologist\",\n        description: \"Why did they do it? Crimes can be puzzling to most...\",\n        videoCode: \"XGer682MdJE\",\n        videoThumbnail: \"\",\n        promoPhoto: \"\",\n        relatedDegrees: [\"A2000-0-2\"]\n    },\n    careerIsLoading: false,\n    careerLoadError: false,\n    relatedDegrees: [{ these: \"values should be gone when error hits\" }],\n    relatedDegreesAreLoading: true,\n    relatedDegreesError: false\n};\nvar action = {\n    type: \"FETCH_RELATED_DEGREES_REJECTED\"\n};\nvar stateAfter = {\n    career: {\n        id: \"3\",\n        title: \"Criminologist\",\n        description: \"Why did they do it? Crimes can be puzzling to most...\",\n        videoCode: \"XGer682MdJE\",\n        videoThumbnail: \"\",\n        promoPhoto: \"\",\n        relatedDegrees: [\"A2000-0-2\"]\n    },\n    careerIsLoading: false,\n    careerLoadError: false,\n    relatedDegrees: [],\n    relatedDegreesAreLoading: false,\n    relatedDegreesError: true\n};\ntest(_CareerReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "25c0a26d-3f73-403e-bc4b-4116c71f2d3e",
      "parentUUID": "f5065dcb-1526-4ebe-9f89-75f4d41be1c7",
      "skipped": false
    },
    {
      "title": "Should correctly begin fetching the careers array",
      "fullTitle": "ACTION: FETCH_CAREERS_PENDING Should correctly begin fetching the careers array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    careers: [],\n    careersAreLoading: false,\n    careersLoadError: true // test that reset works\n};\nvar action = {\n    type: \"FETCH_CAREERS_PENDING\"\n};\nvar stateAfter = {\n    careers: [],\n    careersAreLoading: true,\n    careersLoadError: false\n};\ntest(_CareersReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b73d1ff8-d2dd-4534-aea4-c3e5815c964d",
      "parentUUID": "a13e7332-8b9a-4571-bd71-064283afb41a",
      "skipped": false
    },
    {
      "title": "Should correctly handle a successful fetch of a career",
      "fullTitle": "ACTION: FETCH_CAREERS_FULFILLED Should correctly handle a successful fetch of a career",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    careers: [],\n    careersAreLoading: true,\n    careersLoadError: false // test that reset works\n};\nvar action = {\n    type: \"FETCH_CAREERS_FULFILLED\",\n    payload: [{ careerOb1: \"hello\" }, { careerOb2: \"world!\" }]\n};\nvar stateAfter = {\n    careers: [{ careerOb1: \"hello\" }, { careerOb2: \"world!\" }],\n    careersAreLoading: false,\n    careersLoadError: false\n};\ntest(_CareersReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "39b3a0ce-f9f9-4e77-8846-583291ce341b",
      "parentUUID": "c530ba17-caa2-466d-a245-c8aeac4a19ab",
      "skipped": false
    },
    {
      "title": "Should correctly handle an unsuccessful fetch of a career",
      "fullTitle": "ACTION: FETCH_CAREERS_REJECTED Should correctly handle an unsuccessful fetch of a career",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    careers: [{ careerOb1: \"hello\" }, { careerOb2: \"world!\" }], // test reset works\n    careersAreLoading: true,\n    careersLoadError: false\n};\nvar action = {\n    type: \"FETCH_CAREERS_REJECTED\"\n};\nvar stateAfter = {\n    careers: [],\n    careersAreLoading: false,\n    careersLoadError: true\n};\ntest(_CareersReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "44d06024-7384-4994-8d1a-411a7fad4d6a",
      "parentUUID": "e3a21a31-e73a-48ce-8b4d-2c58c4d58c1c",
      "skipped": false
    },
    {
      "title": "Should increment the credit point state by a given value",
      "fullTitle": "ACTION: INCREMENT_CREDIT_POINTS Should increment the credit point state by a given value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 2, creditPoints: 0 };\nvar action = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 2,\n    creditPoints: 1\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "72653da2-eaf5-45d9-ad85-4e9b7f7bb5a7",
      "parentUUID": "d05c1d22-3088-46b3-9ea6-00ffa712de5e",
      "skipped": false
    },
    {
      "title": "Should decrement the credit point state by a given value",
      "fullTitle": "ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state by a given value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d30a0fda-17bf-468e-b26b-669c85e92e97",
      "parentUUID": "2fde71da-3272-4557-9903-3c89303e91f6",
      "skipped": false
    },
    {
      "title": "Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
      "fullTitle": "ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 0\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f1f4407b-633d-447b-b560-7ae3f5890302",
      "parentUUID": "2fde71da-3272-4557-9903-3c89303e91f6",
      "skipped": false
    },
    {
      "title": "Should increment the cost state by a given value",
      "fullTitle": "ACTION: INCREMENT_COST Should increment the cost state by a given value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 20, creditPoints: 13 };\nvar action = {\n    type: \"INCREMENT_COST\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 21,\n    creditPoints: 13\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "85e5a7ef-e5d8-4bee-ac03-08a2d6ca2b1e",
      "parentUUID": "2a87abdd-19fd-4e60-b0b8-05dec488cc41",
      "skipped": false
    },
    {
      "title": "Should decrement the cost state by a given value",
      "fullTitle": "ACTION: DECREMENT_COST Should decrement the cost state by a given value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "24bce0fe-67f1-4a36-bdff-5ae9eb584551",
      "parentUUID": "d5ea99a1-ebd2-41ca-b597-6f6607c69b90",
      "skipped": false
    },
    {
      "title": "Should decrement the cost state to 0 if a value given is larger than the current credit point value",
      "fullTitle": "ACTION: DECREMENT_COST Should decrement the cost state to 0 if a value given is larger than the current credit point value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 0,\n    creditPoints: 40\n};\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ea8bda44-91d5-4642-8898-c680719da9bc",
      "parentUUID": "d5ea99a1-ebd2-41ca-b597-6f6607c69b90",
      "skipped": false
    },
    {
      "title": "Should reset the cost and credit point counters to 0",
      "fullTitle": "ACTION: CLEAR_COURSE Should reset the cost and credit point counters to 0",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "2302f2e2-aca6-44f8-b228-ca8e4c126871",
      "parentUUID": "8f92cb40-74f6-4f06-a984-e797a3bccf3c",
      "skipped": false
    },
    {
      "title": "Should correctly go through and decrement the counters for each value ",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should correctly go through and decrement the counters for each value ",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { cost: 2, creditPoints: 20 }, { cost: 5, creditPoints: 10 }, null]\n};\nvar stateAfter = { cost: 43, creditPoints: 10 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f398a351-a9ea-4519-be26-52bd26623431",
      "parentUUID": "94d27432-536d-45a8-abd6-f582ff61ff8f",
      "skipped": false
    },
    {
      "title": "Should not decrement the counters below 0 ",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should not decrement the counters below 0 ",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    units: [null, { cost: 25, creditPoints: 20 }, { cost: 30, creditPoints: 30 }, { cost: 0, creditPoints: 10 }]\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b95fe169-1b7e-411c-b27a-c8de39072710",
      "parentUUID": "94d27432-536d-45a8-abd6-f582ff61ff8f",
      "skipped": false
    },
    {
      "title": "Should correctly decrement the counters based on the given units creditpoints and cost",
      "fullTitle": "ACTION: REMOVE_UNIT Should correctly decrement the counters based on the given units creditpoints and cost",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 20 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7d6b456f-deb8-4ae2-a9a6-f9cf3efabfef",
      "parentUUID": "2a219f6c-a124-4edf-a169-4879a951ea9a",
      "skipped": false
    },
    {
      "title": "Should not decrement the counters below 0",
      "fullTitle": "ACTION: REMOVE_UNIT Should not decrement the counters below 0",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"REMOVE_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1cf2a543-2c86-4150-874b-c9b3d926a5e2",
      "parentUUID": "2a219f6c-a124-4edf-a169-4879a951ea9a",
      "skipped": false
    },
    {
      "title": "Should correctly increment the counters when a unit is added to the plan",
      "fullTitle": "ACTION: ADD_UNIT Should correctly increment the counters when a unit is added to the plan",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 10, creditPoints: 10 };\nvar action = {\n    type: \"ADD_UNIT\",\n    cost: 20,\n    creditPoints: 20\n};\nvar stateAfter = { cost: 30, creditPoints: 30 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "8628309c-8f58-4e3c-9e05-06497919dd9f",
      "parentUUID": "556c6b0b-e866-4ab3-ba47-197a8f30891d",
      "skipped": false
    },
    {
      "title": "Should not decrease counters if there are no units in the overload column",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units in the overload column",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: []\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "49b046e5-5d92-4b6b-b3b0-e33753ec05ce",
      "parentUUID": "ffb251f5-60b9-4243-a399-ce3b6406b348",
      "skipped": false
    },
    {
      "title": "Should not decrease counters if there are no units which have values in the overload column",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should not decrease counters if there are no units which have values in the overload column",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 16400, creditPoints: 48 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [null, {}]\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "17405124-adaa-4aed-a9eb-1b5341ca9235",
      "parentUUID": "ffb251f5-60b9-4243-a399-ce3b6406b348",
      "skipped": false
    },
    {
      "title": "Should decrease counters correctly for units in the overload column",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should decrease counters correctly for units in the overload column",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\",\n    units: [{\n        CreditPoints: 6,\n        Cost: 1134\n    }, {\n        CreditPoints: 12,\n        Cost: 2256\n    }]\n};\nvar stateAfter = { cost: 36610, creditPoints: 126 };\ntest(_Counter2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "300c3978-6e6e-48e7-aec8-579fb43a4b81",
      "parentUUID": "ffb251f5-60b9-4243-a399-ce3b6406b348",
      "skipped": false
    },
    {
      "title": "Should not change state if it does not recognise an action",
      "fullTitle": "DEFAULT Should not change state if it does not recognise an action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40000, creditPoints: 144 };\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Counter2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "fe5ac410-03f6-4977-b0f1-bd0270343155",
      "parentUUID": "87756b48-994b-4c57-9f35-9441f19fd94b",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_COURSES_PENDING Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: false,\n    courseSearchError: true //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: true,\n    courseSearchError: false\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b8a0ec7a-3dfb-4957-bcd1-5bf8f0430b29",
      "parentUUID": "36a736af-688b-4866-929f-086f07d32536",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_COURSES_FULFILLED Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: true,\n    courseSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_FULFILLED\",\n    payload: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    courseSearchIsLoading: false,\n    courseSearchError: false\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a12e3042-fa63-4a37-9690-95d865945116",
      "parentUUID": "d823c5d7-3240-46cd-ab47-f73095f34d70",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_COURSES_REJECTED Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    courseSearchIsLoading: true,\n    courseSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_COURSES_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicCourses: [],\n    courseSearchIsLoading: false,\n    courseSearchError: true\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "769741de-7532-4dd7-8317-118a88a133d3",
      "parentUUID": "706d90db-6c3b-4c46-bc1d-0dc57af6cbbf",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_AOS_PENDING Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: false,\n    aosSearchError: true //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: true,\n    aosSearchError: false\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ce397d36-38e1-4518-a63b-63dc0c99a079",
      "parentUUID": "e588f6e9-7c11-46d3-abe7-412faf1c5321",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_AOS_FULFILLED Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: true,\n    aosSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_FULFILLED\",\n    payload: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    aosSearchIsLoading: false,\n    aosSearchError: false\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1a3ad2ab-4e79-49c3-ab43-80345962fec8",
      "parentUUID": "9c773dfa-653a-4660-9ecf-fd822d0fc853",
      "skipped": false
    },
    {
      "title": "Should begin fetching the basic courses list correctly",
      "fullTitle": "ACTION: FETCH_AOS_REJECTED Should begin fetching the basic courses list correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [\"Hello\", \"Darkness\", \"My\", \"Old\", \"Friend\"],\n    aosSearchIsLoading: true,\n    aosSearchError: false //start with true to test if pending switches error state correctly\n};\nvar action = {\n    type: \"FETCH_AOS_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    areasOfStudy: [],\n    aosSearchIsLoading: false,\n    aosSearchError: true\n};\ntest(_CourseSearchReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "873c7a16-7192-4bba-a53c-c937967a67ed",
      "parentUUID": "c098de3d-2880-4d8c-ba2a-325d0d23e12b",
      "skipped": false
    },
    {
      "title": "Should handle the initiation of a course snapshot upload correctly",
      "fullTitle": "ACTION: UPLOAD_COURSE_SNAPSHOT_PENDING Should handle the initiation of a course snapshot upload correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: true\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7d538132-cf68-44fb-8c0d-9ca04a60ede9",
      "parentUUID": "6b03e224-b798-4693-be8c-7630fda5f8cd",
      "skipped": false
    },
    {
      "title": "Should handle the successful upload of a course snapshot correctly",
      "fullTitle": "ACTION: UPLOAD_COURSE_SNAPSHOT_FULFILLED Should handle the successful upload of a course snapshot correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"upload string\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: \"upload string\",\n    courseSnapshotUploadSucessful: true\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "83216e48-427a-4102-8263-7eb90af407bf",
      "parentUUID": "e3c6b069-1f0c-4aaf-a229-f6d0d3a02179",
      "skipped": false
    },
    {
      "title": "Should do handle the rejected upload of a course snapshot correctly",
      "fullTitle": "ACTION: UPLOAD_COURSE_SNAPSHOT_REJECTED Should do handle the rejected upload of a course snapshot correctly",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: true,\n    courseSnapshotUploadError: false,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\nvar action = {\n    type: \"UPLOAD_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotUploading: false,\n    courseSnapshotUploadError: true,\n    courseSnapshotUploadData: null,\n    courseSnapshotUploadSucessful: false\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "517d0c25-d4ed-418d-b6da-a3027477c392",
      "parentUUID": "7be102ea-ec4b-47c4-a096-f883215c2239",
      "skipped": false
    },
    {
      "title": "Should begin fetching a course snapshot correctly",
      "fullTitle": "ACTION: FETCH_COURSE_SNAPSHOT_PENDING Should begin fetching a course snapshot correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "82a36990-4d71-480e-9234-1e742eb63541",
      "parentUUID": "d7aec2c0-5c85-417a-997f-3b6c6d81056e",
      "skipped": false
    },
    {
      "title": "Should handle a successful course snapshot fetch correctly",
      "fullTitle": "ACTION: FETCH_COURSE_SNAPSHOT_FULFILLED Should handle a successful course snapshot fetch correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_FULFILLED\",\n    payload: { data: \"Snap data\" }\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: \"Snap data\"\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "821cb264-c356-40ee-93e5-1d5de76c3c19",
      "parentUUID": "cd09f7a8-db32-4255-82c6-f323fc2ade0a",
      "skipped": false
    },
    {
      "title": "Should handle a rejected course snapshot fetch correctly",
      "fullTitle": "ACTION: FETCH_COURSE_SNAPSHOT_REJECTED Should handle a rejected course snapshot fetch correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: true,\n    courseSnapshotLoadError: false,\n    courseSnapshotData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_SNAPSHOT_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    courseSnapshotLoading: false,\n    courseSnapshotLoadError: true,\n    courseSnapshotData: null\n};\ntest(_CourseSnapshotReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9f2b4550-e500-432e-b5b8-649035f36c9d",
      "parentUUID": "2545a88f-a99c-4f85-85a7-d21692b4c112",
      "skipped": false
    },
    {
      "title": "Should insert a teaching period with the given info correctly into middle of array",
      "fullTitle": "ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into middle of array",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2018,\n    code: \"S2-01\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "79c1d8a0-b48c-4b31-a38f-b6863500110c",
      "parentUUID": "fa4261b3-78ad-417a-847a-65933fd85457",
      "skipped": false
    },
    {
      "title": "Should insert a teaching period with the given info correctly into start of array",
      "fullTitle": "ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into start of array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2016,\n    code: \"S2-01\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2016, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4dac658b-cffc-47e8-9570-00ec157a5e8e",
      "parentUUID": "fa4261b3-78ad-417a-847a-65933fd85457",
      "skipped": false
    },
    {
      "title": "Should remove a teaching period at the given index",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the given index",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "939c7d61-dd4a-4701-be3c-e5533dfd6bd9",
      "parentUUID": "05a2b9c0-3ba9-4382-9607-a0f2f809a4e5",
      "skipped": false
    },
    {
      "title": "Should remove a teaching period at the start of the array",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the start of the array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a3c2a61f-0e57-427f-b853-1f7fe615c869",
      "parentUUID": "05a2b9c0-3ba9-4382-9607-a0f2f809a4e5",
      "skipped": false
    },
    {
      "title": "Should add the given teaching period to the end of the array",
      "fullTitle": "ACTION: APPEND_TEACHING_PERIOD Should add the given teaching period to the end of the array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"APPEND_TEACHING_PERIOD\",\n    year: 2020,\n    code: \"S2-01\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2020, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "90f7b3d6-c944-40d9-b3c4-c77be490c44e",
      "parentUUID": "f2646a68-f855-46f0-9f07-f054a7cfa85a",
      "skipped": false
    },
    {
      "title": "Should increase the study load if the study load is less than 4",
      "fullTitle": "ACTION: INCREASE_STUDY_LOAD Should increase the study load if the study load is less than 4",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ae9d62e1-2b14-4ad8-b3da-5216c907fd5e",
      "parentUUID": "99c366c7-98e6-4f07-a332-e68a19d6ad8f",
      "skipped": false
    },
    {
      "title": "Should decrease the study load if the study load is greater than 4",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should decrease the study load if the study load is greater than 4",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "8317f013-a9b9-481a-89e1-416159e2b66a",
      "parentUUID": "8b951c67-f658-4aa9-9bbc-178b80b2cbb4",
      "skipped": false
    },
    {
      "title": "Should not decrease the study load if the study load is 4 or less",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should not decrease the study load if the study load is 4 or less",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0e742a79-a36b-4cb7-adc8-39f826d190b9",
      "parentUUID": "8b951c67-f658-4aa9-9bbc-178b80b2cbb4",
      "skipped": false
    },
    {
      "title": "Should remove all teaching periods and set the amount of units to 4",
      "fullTitle": "ACTION: CLEAR_COURSE Should remove all teaching periods and set the amount of units to 4",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5,\n    courseInfoLoadError: false,\n    courseInfoLoading: false\n};\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = {\n    courseInfoLoadError: false,\n    courseInfoLoading: false,\n    courseInfo: {\n        courseName: \"\",\n        faculty: \"\",\n        creditPoints: 0,\n        courseDescription: \"\",\n        durationStr: \"\",\n        modeAndLocation: \"\",\n        awards: \"\",\n        abrTitle: \"\"\n    },\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "24cf571a-10ee-4790-a295-cf83875595aa",
      "parentUUID": "1d0821f7-3044-48cd-b211-f1fb58e3214a",
      "skipped": false
    },
    {
      "title": "Should add a unit correctly to the start of an array",
      "fullTitle": "ACTION: ADD_UNIT Should add a unit correctly to the start of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", totalCreditpoints: 6, units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }, null, null, null] }, { year: 2018, code: \"S2-01\", totalCreditpoints: 0, units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", totalCreditpoints: 0, units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a8137e42-48a5-47b9-aafd-907a99cb7ca7",
      "parentUUID": "f6680f07-1fa3-437b-850d-8a1069f9f226",
      "skipped": false
    },
    {
      "title": "Should add a unit correctly to the middle of an array",
      "fullTitle": "ACTION: ADD_UNIT Should add a unit correctly to the middle of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d7909126-ef27-4dd1-8d46-c56095c0f946",
      "parentUUID": "f6680f07-1fa3-437b-850d-8a1069f9f226",
      "skipped": false
    },
    {
      "title": "Should add a unit correctly to the end of an array",
      "fullTitle": "ACTION: ADD_UNIT Should add a unit correctly to the end of an array",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    unitToAdd: \"FIT1002\",\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\", creditPoints: 6 }] }],\n    numberOfUnits: 4,\n    unitToAdd: undefined,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c9b43ef3-82ba-4c82-a79a-51f25fd6d4de",
      "parentUUID": "f6680f07-1fa3-437b-850d-8a1069f9f226",
      "skipped": false
    },
    {
      "title": "Should remove a unit correctly frpm the start of an array",
      "fullTitle": "ACTION: REMOVE_UNIT Should remove a unit correctly frpm the start of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0,\n    creditPoints: 6\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5d567e36-2b18-485a-b87b-8ec2202d796d",
      "parentUUID": "34c597f8-3532-477e-a592-5a0791436ade",
      "skipped": false
    },
    {
      "title": "Should remove a unit correctly from the middle of an array",
      "fullTitle": "ACTION: REMOVE_UNIT Should remove a unit correctly from the middle of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1,\n    creditPoints: 6\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0f8aae63-a886-4066-a796-42adbb6dc658",
      "parentUUID": "34c597f8-3532-477e-a592-5a0791436ade",
      "skipped": false
    },
    {
      "title": "Should remove a unit correctly from the end of an array",
      "fullTitle": "ACTION: REMOVE_UNIT Should remove a unit correctly from the end of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3,\n    creditPoints: 6\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4,\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "6eb2223c-5af2-49d0-9b12-c31b078053f2",
      "parentUUID": "34c597f8-3532-477e-a592-5a0791436ade",
      "skipped": false
    },
    {
      "title": "Should generate a course structure with valid start and end years",
      "fullTitle": "ACTION: GENERATE_COURSE Should generate a course structure with valid start and end years",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2014,\n    endYear: 2016\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5884cbb1-3b14-4293-a5c6-faa22fc5ec93",
      "parentUUID": "65c8f27b-636e-4dfb-a4ce-28d51cece14d",
      "skipped": false
    },
    {
      "title": "Should return an empty course structure with invalid start and end years.",
      "fullTitle": "ACTION: GENERATE_COURSE Should return an empty course structure with invalid start and end years.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2017,\n    endYear: 2013\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7ab73cad-29d9-4816-8609-264418ac5aed",
      "parentUUID": "65c8f27b-636e-4dfb-a4ce-28d51cece14d",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course info is loading",
      "fullTitle": "ACTION: FETCH_COURSE_INFO_PENDING Should correctly show that the course info is loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7fdc9583-2836-417f-8291-70ac2e0aa861",
      "parentUUID": "3edff107-09c2-4313-8121-22dca26fdc7e",
      "skipped": false
    },
    {
      "title": "Should correctly return the payload and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    focusedCourse: null,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_FULFILLED\",\n    payload: { data: {\n            \"propertyMap\": {\n                courseCode: \"Test Code\",\n                courseName: \"Test Course\",\n                mangFac: \"Test Faculty\",\n                creditPoints: 100,\n                courseDescrip: {\n                    \"value\": \"Test Description\"\n                },\n                courseDuration: \"Test Duration\",\n                modeLoc: {\n                    \"value\": \"Test mode and location\"\n                },\n                courseAward: \"Test awards\",\n                abrevTitle: \"Test abreviated title\"\n            }\n        } },\n    courseCode: \"COURSE101\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: {\n        courseCode: \"Test Code\",\n        courseName: \"Test Course\",\n        faculty: \"Test Faculty\",\n        creditPoints: 100,\n        courseDescription: \"Test Description\",\n        durationStr: \"Test Duration\",\n        modeAndLocation: \"Test mode and location\",\n        awards: \"Test awards\",\n        abrTitle: \"Test abreviated title\"\n    },\n    focusedCourse: \"COURSE101\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1debd5e7-4d5a-4fa0-9709-001e31d17a77",
      "parentUUID": "7909e36b-5c48-4d5f-b613-cb16c604cf23",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course info fetch failed and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_INFO_REJECTED Should correctly show that the course info fetch failed and show that it is no longer loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: true,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "deb223f2-7478-4232-91b8-d7975e58f94a",
      "parentUUID": "979559b0-93b9-43b7-965e-7e5fc745b4b6",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course template is loading",
      "fullTitle": "ACTION: FETCH_COURSE_TEMPLATE_PENDING Should correctly show that the course template is loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5512e2d4-6353-436e-94ca-01236366bdb8",
      "parentUUID": "79a18708-b06e-4767-8853-47e36b31a12d",
      "skipped": false
    },
    {
      "title": "Should correctly return the payload and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_TEMPLATE_FULFILLED Should correctly return the payload and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_FULFILLED\",\n    payload: {\n        data: {\n            propertyMap: \"Fake Course Template\"\n        }\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: \"Fake Course Template\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "bce05132-9998-44b2-b307-334ae858fa4f",
      "parentUUID": "6b2c98ad-cfd6-4e93-8e96-01794ff02c47",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course template fetch failed and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_TEMPLATE_REJECTED Should correctly show that the course template fetch failed and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: true,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "89d7a0de-e1a1-4bc8-bac7-2e1de743bf23",
      "parentUUID": "f46728e8-f9c0-4fcd-948f-437202c3ac7e",
      "skipped": false
    },
    {
      "title": "Should correctly show that the unit info is loading",
      "fullTitle": "ACTION: FETCH_UNIT_INFO_PENDING Should correctly show that the unit info is loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: {\n        preqs: \"\",\n        creditPoints: 0,\n        rules: [],\n        locationAndTime: \"\",\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"\",\n        eftsl: 0,\n        descriptions: \"\"\n    },\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: {\n        preqs: \"\",\n        creditPoints: 0,\n        rules: [],\n        locationAndTime: \"\",\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"\",\n        eftsl: 0,\n        descriptions: \"\"\n    },\n    focusedUnitCode: null\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "3653a724-66fa-470e-a331-c8b940fd86e3",
      "parentUUID": "02be4ca5-4439-4130-8300-32276caf02af",
      "skipped": false
    },
    {
      "title": "Should correctly return the payload and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_UNIT_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_FULFILLED\",\n    payload: { data: \"Fake Unit Info\" },\n    unitCode: \"FAKE1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: \"Fake Unit Info\",\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c94307c9-6567-4540-9266-29fdc5290ce9",
      "parentUUID": "88715d27-f36b-4af9-b810-b0325b3b2f70",
      "skipped": false
    },
    {
      "title": "Should correctly show that the unit info fetch failed and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_UNIT_INFO_REJECTED Should correctly show that the unit info fetch failed and show that it is no longer loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_REJECTED\",\n    payload: {\n        response: {\n            status: 404\n        }\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: {\n        response: {\n            status: 404\n        }\n    },\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "68d3dc1f-9c87-4492-acac-ac86c15c3268",
      "parentUUID": "bf04e57a-f982-4c66-8911-3d136a581bb8",
      "skipped": false
    },
    {
      "title": "Should accurately set the start year and the focused course on submission",
      "fullTitle": "ACTION: SUBMIT_COURSE_FORM Should accurately set the start year and the focused course on submission",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_COURSE_FORM\",\n    startYear: 2020,\n    courseCode: \"TEST1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: \"TEST1001\",\n    startYear: 2020,\n    endYear: 2020\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "85e441ef-2cb7-48f0-b313-569e852d21f6",
      "parentUUID": "cfcfa878-b3fb-4991-94e5-d49850157757",
      "skipped": false
    },
    {
      "title": "Should accurately set the start year and end year on submission",
      "fullTitle": "ACTION: SUBMIT_YEAR_FORM Should accurately set the start year and end year on submission",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_YEAR_FORM\",\n    startYear: 2020,\n    endYear: 2025\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2020,\n    endYear: 2025\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "69cb2c84-b4df-4984-a081-a1ef26f6e0ea",
      "parentUUID": "7f298e5d-3fb1-4b88-b2bf-9e3b870c3a61",
      "skipped": false
    },
    {
      "title": "Should correctly handle  of teaching periods data",
      "fullTitle": "ACTION: FETCH_TEACHING_PERIODS_PENDING Should correctly handle  of teaching periods data",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "345738c9-08dc-45dc-92b7-0c06f0f6557b",
      "parentUUID": "4e78d1af-2445-4ab9-8b0b-8998c500a8a7",
      "skipped": false
    },
    {
      "title": "Should correctly handle  of teaching periods data",
      "fullTitle": "ACTION: FETCH_TEACHING_PERIODS_FULFILLED Should correctly handle  of teaching periods data",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_FULFILLED\",\n    payload: \"Teaching period strings\"\n};\nvar stateAfter = {\n    teachingPeriodData: \"Teaching period strings\",\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: false\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c18bbc12-a4f4-4a39-8d83-6ed3fc049f3e",
      "parentUUID": "c6d344e8-0ad4-4d44-9136-1807496aa332",
      "skipped": false
    },
    {
      "title": "Should correctly handle  of teaching periods data",
      "fullTitle": "ACTION: FETCH_TEACHING_PERIODS_REJECTED Should correctly handle  of teaching periods data",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: true,\n    teachingPeriodsDataError: false\n};\nvar action = {\n    type: \"FETCH_TEACHING_PERIODS_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriodData: null,\n    teachingPeriodsDataLoading: false,\n    teachingPeriodsDataError: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "346f8d9b-50ac-464b-a8f2-645d010b9792",
      "parentUUID": "13e9792b-773b-498d-951f-2d0996d2a460",
      "skipped": false
    },
    {
      "title": "Should set the teaching period code to insert value correctly",
      "fullTitle": "ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should set the teaching period code to insert value correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriodCodeToInsert: null,\n    testParam1: 1,\n    testParam2: \"test\"\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\",\n    tpCode: \"S1-02\"\n};\nvar stateAfter = {\n    teachingPeriodCodeToInsert: \"S1-02\",\n    testParam1: 1,\n    testParam2: \"test\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "fb0fe230-92ba-4b80-a9e4-772c1cc89f77",
      "parentUUID": "a6439ab4-5036-4a49-98ef-f05e9d1696d6",
      "skipped": false
    },
    {
      "title": "Should correctly update the affected units value to the given array",
      "fullTitle": "ACTION: UPDATE_AFFECTED_UNITS Should correctly update the affected units value to the given array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: []\n};\nvar action = {\n    type: \"UPDATE_AFFECTED_UNITS\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    affectedUnits: [\"TestUnit\", \"OtherTestUnit\"]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0d16b5d0-50d6-4632-8217-42ee60bfcfd1",
      "parentUUID": "fa8cc639-997d-4af7-9a3b-edb0094f2a2f",
      "skipped": false
    },
    {
      "title": "Should correctly update the index of tp to remove value to the given value",
      "fullTitle": "ACTION: UPDATE_INDEX_OF_TP_TO_REMOVE Should correctly update the index of tp to remove value to the given value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 0\n};\nvar action = {\n    type: \"UPDATE_INDEX_OF_TP_TO_REMOVE\",\n    index: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    indexOfTPtoRemove: 1\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "de55ef0e-3d7f-47cc-9777-ea4ceb544bd3",
      "parentUUID": "bafe5208-2108-4e39-a566-c36c979704ac",
      "skipped": false
    },
    {
      "title": "Should correctly begin moving a unit",
      "fullTitle": "ACTION: MOVING_UNIT Should correctly begin moving a unit",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0\n};\nvar action = {\n    type: \"MOVING_UNIT\",\n    unit: \"TEST-UNIT\",\n    unitIndex: 3,\n    tpIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TEST-UNIT\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 3\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "72a2b298-5fbd-4a85-9caf-321ad0bf7e2a",
      "parentUUID": "b1ee37d8-b00b-4233-9db7-9e4a576ca88c",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to a teaching period earlier than it",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period earlier than it",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitName: \"TestUnit\", creditPoints: 6 }, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "17a4dc09-667d-497e-9ab5-3d4cf4255f4f",
      "parentUUID": "2cc799b1-f2f9-4c5b-bab1-f23db957ed1f",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to a teaching period later than it",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to a teaching period later than it",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [null, { unitName: \"TestUnit\", creditPoints: 6 }, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4606a01b-6b8a-4638-ac01-dd77712671c0",
      "parentUUID": "2cc799b1-f2f9-4c5b-bab1-f23db957ed1f",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to the same teaching period but earlier position",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but earlier position",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [\"PlaceToMoveTo\", { unitName: \"TestUnit\", creditPoints: 6 }, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [{ unitName: \"TestUnit\", creditPoints: 6 }, null, null, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "3433303f-089f-4c7f-b9f7-8697d31a96cf",
      "parentUUID": "2cc799b1-f2f9-4c5b-bab1-f23db957ed1f",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to the same teaching period but later position",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period but later position",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: { unitName: \"TestUnit\", creditPoints: 6 },\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [{ unitName: \"TestUnit\", creditPoints: 6 }, null, \"PlaceToMoveTo\", null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2018, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a64004d4-7cdf-4406-b6a2-94861bcefa70",
      "parentUUID": "2cc799b1-f2f9-4c5b-bab1-f23db957ed1f",
      "skipped": false
    },
    {
      "title": "Should correctly handle moving a unit to the same teaching period and exact same position",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly handle moving a unit to the same teaching period and exact same position",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\nvar action = {\n    type: \"MOVE_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, totalCreditpoints: 6, code: \"S2-01\", units: [null, null, { unitName: \"TestUnit\", creditPoints: 6 }, null] }, { year: 2019, totalCreditpoints: 0, code: \"S2-01\", units: [null, null, null, null] }],\n    hidingPlaceholders: []\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "2339d58e-b4da-43a1-abb6-db99e24e272f",
      "parentUUID": "2cc799b1-f2f9-4c5b-bab1-f23db957ed1f",
      "skipped": false
    },
    {
      "title": "should cancel moving unit",
      "fullTitle": "ACTION: CANCEL_MOVING_UNIT should cancel moving unit",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: \"TestUnit2\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2015, code: \"S1-01\", units: [null, null, null, \"TestUnit\"] }, { year: 2015, code: \"S2-01\", units: [null, \"TestUnit2\", null, null] }, { year: 2016, code: \"S1-01\", units: [\"TestUnit3\", null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, \"TestUnit4\", null] }],\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: undefined,\n    unitsIndexOfUnitToBeMoved: undefined\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "89a9c755-68bc-44e0-95aa-3819e3e93e6c",
      "parentUUID": "d42ff29f-56a4-48a0-bec4-dfce13d81ef0",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to a teaching period earlier than it",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period earlier than it",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//oldtp > newtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 1,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "07cb27f5-5f3f-4d2e-b223-fc816e21029f",
      "parentUUID": "07c0c935-7e8b-4f51-8610-16734902cd1b",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to a teaching period later than it",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to a teaching period later than it",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp > oldtp\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"PlaceToMoveTo\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c1dfddeb-531c-400b-90bf-ce30cc02eb6d",
      "parentUUID": "07c0c935-7e8b-4f51-8610-16734902cd1b",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to the same teaching period but earlier position",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but earlier position",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && oldUnitPosition > newUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 1,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", \"TestUnit\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 0,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", \"PlaceToMoveTo\", null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4a05feaf-1622-479e-ab68-2d8df315bcdd",
      "parentUUID": "07c0c935-7e8b-4f51-8610-16734902cd1b",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to the same teaching period but later position",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period but later position",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition > oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"TestUnit\", null, \"PlaceToMoveTo\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 0,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [\"PlaceToMoveTo\", null, \"TestUnit\", null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "79d6cba5-93fc-4979-8187-ea5bc6e0ce52",
      "parentUUID": "07c0c935-7e8b-4f51-8610-16734902cd1b",
      "skipped": false
    },
    {
      "title": "Should correctly handle swaping a unit to the same teaching period and exact same position",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly handle swaping a unit to the same teaching period and exact same position",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "//newtp = oldtp && newUnitPosition = oldUnitPosition\nvar stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"SWAP_UNIT\",\n    newTPIndex: 1,\n    newUnitIndex: 2,\n    unitToSwap: \"PlaceToMoveTo\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: undefined,\n    tpIndexOfUnitToBeMoved: 0,\n    unitsIndexOfUnitToBeMoved: 0,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "fe25962a-95eb-4864-a786-ef093c94c260",
      "parentUUID": "07c0c935-7e8b-4f51-8610-16734902cd1b",
      "skipped": false
    },
    {
      "title": "should give no errors for an empty course plan.",
      "fullTitle": "ACTION: VALIDATE_COURSE should give no errors for an empty course plan.",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan.\"\n    }],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    courseErrors: [],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "dd8f2cba-6a19-4586-a54a-189e6aa880d1",
      "parentUUID": "a9ac22c5-9edb-482d-832f-63a1865848c7",
      "skipped": false
    },
    {
      "title": "Should not give duplicate unit errors if the first attempt is in the past, and the second attempt is not two or more years into the future.",
      "fullTitle": "duplicates: Should not give duplicate unit errors if the first attempt is in the past, and the second attempt is not two or more years into the future.",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: new Date().getFullYear() - 1,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, null]\n    }, {\n        code: \"S1-01\",\n        year: new Date().getFullYear() + 1,\n        units: [null, null, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "acac92d2-d0fc-41f5-bdf7-e85256d2e103",
      "parentUUID": "365bd452-f502-42bc-b46f-24f93fc1cf7d",
      "skipped": false
    },
    {
      "title": "Should give a duplicate unit error if there are two same units in the same teaching period",
      "fullTitle": "duplicates: Should give a duplicate unit error if there are two same units in the same teaching period",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2015,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }, {\n        code: \"S2-01\",\n        year: 2015,\n        units: [null, null, null, {\n            unitCode: \"GJQ2039\"\n        }]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2015,\n        units: [null, {\n            unitCode: \"ABCD1234\"\n        }, null, {\n            unitCode: \"ABCD1234\"\n        }]\n    }, {\n        code: \"S2-01\",\n        year: 2015,\n        units: [null, null, null, {\n            unitCode: \"GJQ2039\"\n        }]\n    }],\n    courseErrors: [{\n        message: \"ABCD1234 already exists in the same teaching period. Please remove this unit.\",\n        coordinates: [[0, 3]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0bc2f100-ad8a-4eb1-a8ff-b93ddc5d3995",
      "parentUUID": "365bd452-f502-42bc-b46f-24f93fc1cf7d",
      "skipped": false
    },
    {
      "title": "Should give a duplicate error if a duplicate unit is placed in a teaching period two years from now",
      "fullTitle": "duplicates: Should give a duplicate error if a duplicate unit is placed in a teaching period two years from now",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var currentYear = new Date().getFullYear();\nvar stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: currentYear,\n        units: [{\n            unitCode: \"ABC1234\"\n        }, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 2,\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 2,\n        units: [null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: currentYear,\n        units: [{\n            unitCode: \"ABC1234\"\n        }, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 1,\n        units: [null, null, null, null]\n    }, {\n        code: \"S1-01\",\n        year: currentYear + 2,\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        code: \"S2-01\",\n        year: currentYear + 2,\n        units: [null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"ABC1234 already exists in your course plan. Please plan as if you will pass all units.\",\n        coordinates: [[4, 1]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e0d8d3c0-ed1b-4d07-a2b3-a9b04a7e3c47",
      "parentUUID": "365bd452-f502-42bc-b46f-24f93fc1cf7d",
      "skipped": false
    },
    {
      "title": "Should give a course error for a unit not being offered in the teaching period it is in",
      "fullTitle": "offerings: Should give a course error for a unit not being offered in the teaching period it is in",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2019,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: 2019,\n        units: [null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"First semester 2019 (Day)\"]\n            }]\n        }, null]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2019,\n        units: [null, null, null, null]\n    }, {\n        code: \"S2-01\",\n        year: 2019,\n        units: [null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"First semester 2019 (Day)\"]\n            }]\n        }, null]\n    }],\n    courseErrors: [{\n        message: \"ABC1234 is not offered in second semester, 2019.\",\n        coordinates: [[1, 2]]\n    }],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "de4819e8-c531-4e62-9fca-7af0d9db90f8",
      "parentUUID": "217b9164-6ddb-471a-a419-3d51f7d74859",
      "skipped": false
    },
    {
      "title": "Should give a course error for a missing prereq",
      "fullTitle": "rules: Should give a course error for a missing prereq",
      "timedOut": false,
      "duration": 22,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"Must have passed an (I/W) unit in {DEF2345, QLS2029}\",\n                endDate: \"\"\n            }]\n        }]\n    }],\n    courseErrors: [],\n    courseInfo: {}\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        code: \"S1-01\",\n        year: 2017,\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            unitName: \"Example unit\",\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"Must have passed an (I/W) unit in {DEF2345, QLS2029}\",\n                endDate: \"\"\n            }]\n        }]\n    }],\n    courseErrors: [{\n        message: \"You must complete DEF2345 or QLS2029 before you can do ABC1234.\",\n        coordinates: [[0, 3]]\n    }],\n    courseInfo: {}\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5102bdd3-1811-4bb0-8049-b2817accefe7",
      "parentUUID": "ea956b7e-eb47-4fd0-8db9-03452c5a94bc",
      "skipped": false
    },
    {
      "title": "Should give an error for credit points being lower than the minimum required for the unit",
      "fullTitle": "rules: Should give an error for credit points being lower than the minimum required for the unit",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2016,\n        code: \"S2-01\",\n        units: [{\n            unitCode: \"TEST1011\",\n            creditPoints: 6\n        }, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"TEST3031\",\n            creditPoints: 6,\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"Must have passed 24 credit points\"\n            }]\n        }, null, null, null]\n    }, {\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2016,\n        code: \"S2-01\",\n        units: [{\n            unitCode: \"TEST1011\",\n            creditPoints: 6\n        }, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }, {\n        year: 2017,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"TEST3031\",\n            creditPoints: 6,\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"Must have passed 24 credit points\"\n            }]\n        }, null, null, null]\n    }, {\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"You need 18 more credit points before you can do TEST3031.\",\n        coordinates: [[2, 1]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "34419281-9efb-401d-9b1b-8a6084c1aa39",
      "parentUUID": "ea956b7e-eb47-4fd0-8db9-03452c5a94bc",
      "skipped": false
    },
    {
      "title": "Should correctly handle prohibitions",
      "fullTitle": "rules: Should correctly handle prohibitions",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2013,\n        code: \"S1-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\"\n        }]\n    }, {\n        year: 2013,\n        code: \"S2-01\",\n        units: [null, {\n            unitCode: \"BCD1234\",\n            rules: [{\n                ruleSummary: \"INCOMP\",\n                ruleString: \"Incompatible with achievement in {ABC1234}\"\n            }]\n        }, null, null]\n    }],\n    courseErrors: [{\n        message: \"Please remove BCD1234, as completing ABC1234 prohibits you from doing this unit.\",\n        coordinates: [[1, 1]]\n    }]\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "3a2d48bb-f67b-46f4-b5b1-9f88838b37d1",
      "parentUUID": "ea956b7e-eb47-4fd0-8db9-03452c5a94bc",
      "skipped": false
    },
    {
      "title": "Should correctly handle the Do branch of For COURSE_CODE syntax",
      "fullTitle": "rules: Should correctly handle the Do branch of For COURSE_CODE syntax",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2014,\n        code: \"S1-01\",\n        units: [{\n            unitCode: \"DEF2345\",\n            unitName: \"Test unit\",\n            rules: [{\n                ruleSummary: \"COREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {S2029, S3019} Do Any passed co-req (I/W) unit in {ABC2022} Otherwise true\",\n                endDate: \"\"\n            }]\n        }, null, null, null]\n    }],\n    courseInfo: {\n        courseCode: \"S2029\"\n    },\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2014,\n        code: \"S1-01\",\n        units: [{\n            unitCode: \"DEF2345\",\n            unitName: \"Test unit\",\n            rules: [{\n                ruleSummary: \"COREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {S2029, S3019} Do Any passed co-req (I/W) unit in {ABC2022} Otherwise true\",\n                endDate: \"\"\n            }]\n        }, null, null, null]\n    }],\n    courseInfo: {\n        courseCode: \"S2029\"\n    },\n    courseErrors: [{\n        message: \"You must complete ABC2022 before or whilst doing DEF2345.\",\n        coordinates: [[0, 0]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ae1031d2-795e-4087-b1f7-76fc9e053cf6",
      "parentUUID": "ea956b7e-eb47-4fd0-8db9-03452c5a94bc",
      "skipped": false
    },
    {
      "title": "Should correctly handle the Otherwise branch of For COURSE_CODE syntax",
      "fullTitle": "rules: Should correctly handle the Otherwise branch of For COURSE_CODE syntax",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }, {\n        year: 2018,\n        code: \"WS-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"Winter semester 2018 (Day)\"]\n            }],\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {Q2001, Q2003} Do true Otherwise Must have passed 1 (I/W) units in {TEST1001}\",\n                endDate: \"\"\n            }]\n        }]\n    }, {\n        year: 2018,\n        code: \"S2-01\",\n        units: [null, null, null, null]\n    }],\n    courseErrors: []\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2018,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }, {\n        year: 2018,\n        code: \"WS-01\",\n        units: [null, null, null, {\n            unitCode: \"ABC1234\",\n            locationAndTime: [{\n                location: \"Clayton\",\n                time: [\"Winter semester 2018 (Day)\"]\n            }],\n            rules: [{\n                ruleSummary: \"PREREQ-IW\",\n                ruleString: \"For COURSE_CODE IN {Q2001, Q2003} Do true Otherwise Must have passed 1 (I/W) units in {TEST1001}\",\n                endDate: \"\"\n            }]\n        }]\n    }, {\n        year: 2018,\n        code: \"S2-01\",\n        units: [null, null, null, null]\n    }],\n    courseErrors: [{\n        message: \"You must complete TEST1001 before you can do ABC1234.\",\n        coordinates: [[1, 3]]\n    }]\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4ea000bd-7522-4032-9cab-9f5571504a34",
      "parentUUID": "ea956b7e-eb47-4fd0-8db9-03452c5a94bc",
      "skipped": false
    },
    {
      "title": "Should handle a complicated For expression",
      "fullTitle": "rules: Should handle a complicated For expression",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2019,\n        code: \"S1-01\",\n        units: [null, {\n            unitCode: \"ABC1234\",\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"For ((SCA_LOCATION IN {CLAYTON} AND COURSE_CODE IN {1039, 2393}) OR (SCA_LOCATION IN {CLAYTON} AND COURSE_CODE NOT IN {A4921})) Do true Otherwise Permission required\"\n            }]\n        }, null, null]\n    }],\n    courseErrors: [],\n    courseInfo: {\n        courseCode: \"A4921\"\n    }\n};\nvar action = {\n    type: \"VALIDATE_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2019,\n        code: \"S1-01\",\n        units: [null, {\n            unitCode: \"ABC1234\",\n            rules: [{\n                ruleSummary: \"PREREQ\",\n                ruleString: \"For ((SCA_LOCATION IN {CLAYTON} AND COURSE_CODE IN {1039, 2393}) OR (SCA_LOCATION IN {CLAYTON} AND COURSE_CODE NOT IN {A4921})) Do true Otherwise Permission required\"\n            }]\n        }, null, null]\n    }],\n    courseErrors: [{\n        message: \"You need permission to do ABC1234.\",\n        coordinates: [[0, 1]]\n    }],\n    courseInfo: {\n        courseCode: \"A4921\"\n    }\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9119e054-4c28-4882-8069-ec134700fbc2",
      "parentUUID": "ea956b7e-eb47-4fd0-8db9-03452c5a94bc",
      "skipped": false
    },
    {
      "title": "Should leave invalidUnitSlotCoordinates empty if there are no invalid unit slots",
      "fullTitle": "ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS Should leave invalidUnitSlotCoordinates empty if there are no invalid unit slots",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{\n        year: 2015,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: false\n};\nvar action = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: {\n        unitCode: \"TEST1001\",\n        unitName: \"Test unit\",\n        locationAndTime: [{\n            location: \"Caulfield\",\n            time: [\"First semester 2017 (Day)\"]\n        }]\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: 2015,\n        code: \"S1-01\",\n        units: [null, null, null, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1f73cc64-d596-4a4f-874c-a4c3327853aa",
      "parentUUID": "d96c5cda-a8d5-46c2-af21-21e8b46b7b14",
      "skipped": false
    },
    {
      "title": "Should highlight teaching periods that contains the same unit",
      "fullTitle": "ACTION: HIGHLIGHT_INVALID_UNIT_SLOTS Should highlight teaching periods that contains the same unit",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var currentYear = new Date().getFullYear();\nvar stateBefore = {\n    teachingPeriods: [{\n        year: currentYear - 2,\n        code: \"FY-01\",\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        year: currentYear - 1,\n        code: \"FY-01\",\n        units: [null, null, {\n            unitCode: \"DEF2345\"\n        }, null]\n    }],\n    invalidUnitSlotCoordinates: [],\n    highlightingInvalidUnitSlots: false\n};\nvar action = {\n    type: \"HIGHLIGHT_INVALID_UNIT_SLOTS\",\n    tempUnit: {\n        unitCode: \"ABC1234\",\n        locationAndTime: [{\n            location: \"Parkville\",\n            time: [\"Full year 2018 (Day)\"]\n        }]\n    }\n};\nvar stateAfter = {\n    teachingPeriods: [{\n        year: currentYear - 2,\n        code: \"FY-01\",\n        units: [null, {\n            unitCode: \"ABC1234\"\n        }, null, null]\n    }, {\n        year: currentYear - 1,\n        code: \"FY-01\",\n        units: [null, null, {\n            unitCode: \"DEF2345\"\n        }, null]\n    }],\n    invalidUnitSlotCoordinates: [[0, null]],\n    highlightingInvalidUnitSlots: true\n};\ntest(_CourseStructure2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "bd6bf337-4ce0-416b-b960-ffa159d40435",
      "parentUUID": "d96c5cda-a8d5-46c2-af21-21e8b46b7b14",
      "skipped": false
    },
    {
      "title": "should not change the state if it receives an unknown action",
      "fullTitle": "DEFAULT should not change the state if it receives an unknown action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    unitToBeMoved: \"TestUnit\",\n    tpIndexOfUnitToBeMoved: 1,\n    unitsIndexOfUnitToBeMoved: 2,\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, \"TestUnit\", null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_CourseStructure2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "289ca6be-d35a-48f2-8a9d-64dd2d64fe1e",
      "parentUUID": "936cd769-5468-4fe5-8750-7cd038fc7431",
      "skipped": false
    },
    {
      "title": "should begin fetching important dates correctly ",
      "fullTitle": "ACTION: FETCH_IMPORTANT_DATES_PENDING should begin fetching important dates correctly ",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\nvar action = {\n    type: \"FETCH_IMPORTANT_DATES_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: true,\n    importantDatesError: false\n};\ntest(_ImportantDatesReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "3a27639b-2da3-4db5-b109-6871482f582a",
      "parentUUID": "04824ed8-f3b0-474d-b08a-a1e78a1588c5",
      "skipped": false
    },
    {
      "title": "should handled failed fetch of important dates correctly ",
      "fullTitle": "ACTION: FETCH_IMPORTANT_DATES_REJECTED should handled failed fetch of important dates correctly ",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\nvar action = {\n    type: \"FETCH_IMPORTANT_DATES_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: true\n};\ntest(_ImportantDatesReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "99187651-81b5-4d08-a34b-e30a220057b5",
      "parentUUID": "72cf74f0-64cb-47e0-8fe5-6f22e155729e",
      "skipped": false
    },
    {
      "title": "should handled failed fetch of important dates correctly ",
      "fullTitle": "ACTION: FETCH_IMPORTANT_DATES_FULFILLED should handled failed fetch of important dates correctly ",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\nvar action = {\n    type: \"FETCH_IMPORTANT_DATES_FULFILLED\",\n    payload: [{\n        \"value\": \"HE IS A SAURABH\"\n    }]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    importantDates: [{ \"value\": \"HE IS A SAURABH\" }],\n    importantDatesLoading: false,\n    importantDatesError: false\n};\ntest(_ImportantDatesReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f04aeb07-3251-4c2d-9ad6-41875f798c86",
      "parentUUID": "f2b69c6d-c3b1-4071-9fde-25e4730569fe",
      "skipped": false
    },
    {
      "title": "should insert a notification from an empty list",
      "fullTitle": "ACTION: ADD_NOTIFICATION should insert a notification from an empty list",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: []\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "801e8a50-9a97-4745-b38f-f31150612903",
      "parentUUID": "a9484abd-ee4e-494a-ae69-e0195bc2da3c",
      "skipped": false
    },
    {
      "title": "should prepend a notification into an list of a few existing notifications.",
      "fullTitle": "ACTION: ADD_NOTIFICATION should prepend a notification into an list of a few existing notifications.",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    title: \"This is a test\",\n    message: \"Some message goes over here\",\n    level: \"info\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "17259477-4e56-49ed-a86f-666df2eed5c9",
      "parentUUID": "a9484abd-ee4e-494a-ae69-e0195bc2da3c",
      "skipped": false
    },
    {
      "title": "should replace a notification if it already exists with a specified ID",
      "fullTitle": "ACTION: ADD_NOTIFICATION should replace a notification if it already exists with a specified ID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"ADD_NOTIFICATION\",\n    id: \"TEST_NOTIFICATION\",\n    message: \"New message goes over here\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"New message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ec642753-5ad9-4e4e-9e7c-5e68ee3caeb0",
      "parentUUID": "a9484abd-ee4e-494a-ae69-e0195bc2da3c",
      "skipped": false
    },
    {
      "title": "Should remove a notification given its ID",
      "fullTitle": "ACTION: REMOVE_NOTIFICATION Should remove a notification given its ID",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    id: \"CONNECTION_LOST\"\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "572c5c60-33f7-4937-bf3b-f69e4524a15e",
      "parentUUID": "2b70dcd5-5d84-4a8c-b306-25b4a56640cf",
      "skipped": false
    },
    {
      "title": "Should remove a notification given its index",
      "fullTitle": "ACTION: REMOVE_NOTIFICATION Should remove a notification given its index",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"GENERIC_ERROR\",\n        title: \"Error\",\n        message: \"Something went wrong. Please try again later.\",\n        level: \"error\",\n        dismissable: true,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"REMOVE_NOTIFICATION\",\n    index: 1\n};\nvar stateAfter = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\ntest(_Notifications2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b7d64756-849c-491f-9a83-e123c56a2bca",
      "parentUUID": "2b70dcd5-5d84-4a8c-b306-25b4a56640cf",
      "skipped": false
    },
    {
      "title": "Should not change state if it does not recognise an action",
      "fullTitle": "DEFAULT Should not change state if it does not recognise an action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    notificationsList: [{\n        id: \"TEST_NOTIFICATION\",\n        title: \"This is a test\",\n        message: \"Some message goes over here\",\n        level: \"info\",\n        dismissable: undefined,\n        autoDismiss: undefined\n    }, {\n        id: \"CONNECTION_LOST\",\n        title: \"Lost connection\",\n        message: \"Please check your connection. This notification will go away once you go online.\",\n        level: \"warning\",\n        dismissable: false,\n        autoDismiss: undefined\n    }]\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_Notifications2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "9fcd2449-4784-4a46-b9b9-23869798a9f4",
      "parentUUID": "e73edd1c-4104-44cc-8e02-efb5b68377f7",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the insert teaching period UI boolean",
      "fullTitle": "ACTION: SHOW_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"SHOW_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: true,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "10eb9329-29d4-4fa5-b3c1-14dfff911bbc",
      "parentUUID": "60704bfc-7685-480d-9663-22728aa11d65",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the insert teaching period UI boolean",
      "fullTitle": "ACTION: HIDE_INSERT_TEACHING_PERIOD_UI Should correctly toggle the insert teaching period UI boolean",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: true,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"HIDE_INSERT_TEACHING_PERIOD_UI\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "950e93b8-9b5d-48ce-93e1-d800b63c2278",
      "parentUUID": "67d15777-8871-4e36-a8e4-189c11d2a121",
      "skipped": false
    },
    {
      "title": "Should correctly set the add unit UI boolean to true and correctly hide the sidebar when a unit is being added",
      "fullTitle": "ACTION: ADDING_UNIT Should correctly set the add unit UI boolean to true and correctly hide the sidebar when a unit is being added",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "daa006f0-4745-4f44-a47f-c126d1d6bda7",
      "parentUUID": "657f8daf-0e38-4fd9-b697-5d037bd8541f",
      "skipped": false
    },
    {
      "title": "Should correctly set the add unit UI boolean to false",
      "fullTitle": "ACTION: ADD_UNIT Should correctly set the add unit UI boolean to false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true\n};\nvar action = {\n    type: \"ADD_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e8b948ac-686d-4218-8663-823a2add0a0a",
      "parentUUID": "9fac209b-a2f1-43df-a40b-b6ef389b677c",
      "skipped": false
    },
    {
      "title": "Should correctly set the add unit UI boolean to false",
      "fullTitle": "ACTION: CANCEL_ADDING_UNIT Should correctly set the add unit UI boolean to false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: true\n};\nvar action = {\n    type: \"CANCEL_ADDING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "b0a33ed3-a465-431f-85b2-b7281df0d1e9",
      "parentUUID": "f832607b-4661-4bd8-8c4d-e748c1e4bab6",
      "skipped": false
    },
    {
      "title": "Should correctly set the move unit UI boolean to true",
      "fullTitle": "ACTION: MOVING_UNIT Should correctly set the move unit UI boolean to true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"MOVING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "8687eee5-4326-4511-965f-5ae3d65f9c76",
      "parentUUID": "1b4ab396-e834-4f82-b215-2261ddc89ccd",
      "skipped": false
    },
    {
      "title": "Should correctly set the move unit UI boolean to false",
      "fullTitle": "ACTION: MOVE_UNIT Should correctly set the move unit UI boolean to false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"MOVE_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "560f604e-65a4-42e5-add7-29fdd8122afd",
      "parentUUID": "061b1d0c-59ec-400d-999f-fc409d29590c",
      "skipped": false
    },
    {
      "title": "Should correctly set the move unit UI boolean to false",
      "fullTitle": "ACTION: SWAP_UNIT Should correctly set the move unit UI boolean to false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"SWAP_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "20c22ad6-cd3d-40cb-b0ec-34b044d0d387",
      "parentUUID": "80f8b026-f4fa-4524-819c-0b1f10a830fd",
      "skipped": false
    },
    {
      "title": "Should correctly set the move unit UI boolean to false",
      "fullTitle": "ACTION: CANCEL_MOVING_UNIT Should correctly set the move unit UI boolean to false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: true,\n    showingAddingUnitUI: false\n};\nvar action = {\n    type: \"CANCEL_MOVING_UNIT\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9af00d0c-bf15-493c-9f0f-61727f36bdbe",
      "parentUUID": "ec69ad0d-6c90-4092-bd76-aa41cc89b0d9",
      "skipped": false
    },
    {
      "title": "Should set the course to read only correctly",
      "fullTitle": "ACTION: SET_COURSE_READ_ONLY Should set the course to read only correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: false\n};\nvar action = {\n    type: \"SET_COURSE_READ_ONLY\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "2f6fcbc4-88ce-4a25-bf96-12e8d207408a",
      "parentUUID": "1c43288c-18bb-4fa1-94b6-64b86b2eccc6",
      "skipped": false
    },
    {
      "title": "Should set the course to allow edits correctly",
      "fullTitle": "ACTION: SET_COURSE_READ_AND_WRITE Should set the course to allow edits correctly",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: true\n};\nvar action = {\n    type: \"SET_COURSE_READ_AND_WRITE\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    readOnly: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a3d90aab-a253-4d55-9d32-fd139a799ff1",
      "parentUUID": "3b83189e-6f3b-468d-8d7f-3ab98d763235",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm delete teaching period modal UI to show",
      "fullTitle": "ACTION: SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to show",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "43363951-f33e-49de-b685-037fc001d828",
      "parentUUID": "b1663173-9e7a-446f-810a-9d76c1888326",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm delete teaching period modal UI to hide",
      "fullTitle": "ACTION: HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL Should correctly toggle the confirm delete teaching period modal UI to hide",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DELETE_TEACHING_PERIOD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDeleteTeachingPeriodModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1ae4a9d7-b565-496b-ad0f-bd220ffc4b39",
      "parentUUID": "ec2c6486-99ff-4cc5-a17d-098734dbfb3f",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm decrease study load modal UI to show",
      "fullTitle": "ACTION: SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to show",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\nvar action = {\n    type: \"SHOW_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "093dc0dd-0f8f-49e8-99ee-d8d9b6946fc3",
      "parentUUID": "98d74a0c-12f4-4bce-a894-a2f625b388f0",
      "skipped": false
    },
    {
      "title": "Should correctly toggle the confirm decrease study load modal UI to hide",
      "fullTitle": "ACTION: HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL Should correctly toggle the confirm decrease study load modal UI to hide",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: true\n};\nvar action = {\n    type: \"HIDE_CONFIRM_DECREASE_STUDY_LOAD_MODAL\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingConfirmDecreaseStudyLoadModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "8e6b98d4-3093-4b87-b543-a4cf7a5776f3",
      "parentUUID": "6a445b72-40bd-4330-a146-e5ead68deaab",
      "skipped": false
    },
    {
      "title": "Should set show flag for custom unit modal to be true",
      "fullTitle": "ACTION: SHOW_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "35e9b20c-3800-4727-bd8a-de31bed06eac",
      "parentUUID": "b8b07ef5-771e-47d4-8a7c-669260a9e901",
      "skipped": false
    },
    {
      "title": "Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
      "fullTitle": "ACTION: SHOW_CUSTOM_UNIT_MODAL Should set unit code if it exists on top of setting show flag for custom unit modal to be true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: false,\n    customUnitCode: undefined,\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\nvar action = {\n    type: \"SHOW_CUSTOM_UNIT_MODAL\",\n    unitCode: \"ABC1234\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: true,\n    customUnitCode: \"ABC1234\",\n    customTpIndex: undefined,\n    customUnitIndex: undefined\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5b4860fa-e0a1-4eb5-81cd-7e78999bb698",
      "parentUUID": "b8b07ef5-771e-47d4-8a7c-669260a9e901",
      "skipped": false
    },
    {
      "title": "Should set show flag for custom unit modal to be false",
      "fullTitle": "ACTION: HIDE_CUSTOM_UNIT_MODAL Should set show flag for custom unit modal to be false",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingCustomUnitModal: true\n};\nvar action = {\n    type: \"HIDE_CUSTOM_UNIT_MODAL\"\n};\nvar stateAfter = {\n    showingCustomUnitModal: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "3b03565d-7111-4a46-8fc3-4cdbe36ef072",
      "parentUUID": "15580cb0-15d2-4e09-b4ad-042808f36db4",
      "skipped": false
    },
    {
      "title": "Should correctly show the sidebar when called",
      "fullTitle": "ACTION: SHOW_SIDEBAR Should correctly show the sidebar when called",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: false\n};\nvar action = {\n    type: \"SHOW_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1cc0fa7b-5abd-4d5c-ac97-23a05e1afa36",
      "parentUUID": "c492f339-21ff-4ca8-a070-5785df15b2ca",
      "skipped": false
    },
    {
      "title": "Should correctly hide the sidebar when called",
      "fullTitle": "ACTION: HIDE_SIDEBAR Should correctly hide the sidebar when called",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"HIDE_SIDEBAR\"\n};\nvar stateAfter = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: false\n};\ntest(_UI2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "6a8cf231-4e75-4ff5-9ab4-3c0357b74588",
      "parentUUID": "1676eada-49db-4259-956d-8f9d417d6329",
      "skipped": false
    },
    {
      "title": "Should not change state if it does not recognise the action",
      "fullTitle": "DEFAULT Should not change state if it does not recognise the action",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    showingInsertTeachingPeriodUI: false,\n    showingMovingUnitUI: false,\n    showingAddingUnitUI: false,\n    showingSidebar: true\n};\nvar action = {\n    type: \"THIS_IS_A_LONG_NAME_FOR_AN_ACTION\",\n    value: 42\n};\ntest(_UI2.default, stateBefore, action, stateBefore);",
      "err": {},
      "isRoot": false,
      "uuid": "db7aba4e-310a-4295-888b-6d1d2738bfdc",
      "parentUUID": "362b9882-1561-44cb-a1bd-04ccbe57fa3c",
      "skipped": false
    },
    {
      "title": "Should correctly create a new cache instance if there is no local storage value saved, or it is too old",
      "fullTitle": "ACTION: INITIALISE_NEW_CACHE Should correctly create a new cache instance if there is no local storage value saved, or it is too old",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {\n        \"TEST1001\": {\n            timeOfLastAccess: \"Tue Mar 07 2017 12:07:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TEST1001\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        },\n        \"TES1002\": {\n            timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TES1002\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        }\n    },\n    cacheSize: 2,\n    MAX_CACHE_SIZE: 20\n};\nvar action = {\n    type: \"INITIALISE_NEW_CACHE\",\n    timeOfAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\"\n};\nvar stateAfter = {\n    timeOfLastAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {},\n    cacheSize: 0,\n    MAX_CACHE_SIZE: 20\n};\ntest(_UnitCacheReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7a1d2a04-bc31-47f4-a3b0-b3a448aff001",
      "parentUUID": "a12fb629-3b46-4f70-892e-82f87b557ff1",
      "skipped": false
    },
    {
      "title": "should correctly remove an item with the given key from the cache ",
      "fullTitle": "ACTION: REMOVE_ITEM_FROM_CACHE should correctly remove an item with the given key from the cache ",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {\n        \"TEST1001\": {\n            timeOfLastAccess: \"Tue Mar 07 2017 12:07:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TEST1001\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        },\n        \"TES1002\": {\n            timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TES1002\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        }\n    },\n    cacheSize: 2,\n    MAX_CACHE_SIZE: 20\n};\nvar action = {\n    type: \"REMOVE_ITEM_FROM_CACHE\",\n    keyValueToDelete: \"TEST1001\",\n    timeOfAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\"\n};\nvar stateAfter = {\n    timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {\n        \"TES1002\": {\n            timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TES1002\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        }\n    },\n    cacheSize: 1,\n    MAX_CACHE_SIZE: 20\n};\ntest(_UnitCacheReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "73aa1c4d-7753-4520-b7f7-f0fdbc1b1f72",
      "parentUUID": "1c2c4c60-45a2-44c7-aedd-0a401c7e00d9",
      "skipped": false
    },
    {
      "title": "should correctly add an item to the cache ",
      "fullTitle": "ACTION: ADD_ITEM_TO_CACHE should correctly add an item to the cache ",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    timeOfLastAccess: \"Tue Mar 07 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {},\n    cacheSize: 0,\n    MAX_CACHE_SIZE: 20\n};\nvar action = {\n    type: \"ADD_ITEM_TO_CACHE\",\n    timeOfAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCode: \"TEST1001\",\n    unitInfo: {\n        preqs: \"None\",\n        creditPoints: 6,\n        rules: [],\n        locationAndTime: [],\n        enjoyScore: 0,\n        learnScore: 0,\n        learnResponse: 0,\n        proh: \"\",\n        scaBand: 0,\n        unitName: \"\",\n        enjoyResponse: 0,\n        faculty: \"\",\n        unitCode: \"TES1002\",\n        eftsl: 0,\n        descriptions: \"\"\n    }\n};\nvar stateAfter = {\n    timeOfLastAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\",\n    unitCache: {\n        \"TEST1001\": {\n            timeOfLastAccess: \"Wed Mar 08 2017 12:09:12 GMT+1100 (AEDT)\",\n            unitInfo: {\n                preqs: \"None\",\n                creditPoints: 6,\n                rules: [],\n                locationAndTime: [],\n                enjoyScore: 0,\n                learnScore: 0,\n                learnResponse: 0,\n                proh: \"\",\n                scaBand: 0,\n                unitName: \"\",\n                enjoyResponse: 0,\n                faculty: \"\",\n                unitCode: \"TES1002\",\n                eftsl: 0,\n                descriptions: \"\"\n            }\n        }\n    },\n    cacheSize: 1,\n    MAX_CACHE_SIZE: 20\n};\ntest(_UnitCacheReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "29b6b308-0b64-4af9-a93d-0c0eb916beed",
      "parentUUID": "4c38f99d-6e06-481a-9b17-48222d52a7c5",
      "skipped": false
    },
    {
      "title": "should begin fetching important dates correctly ",
      "fullTitle": "ACTION: FETCH_UNITS_PENDING should begin fetching important dates correctly ",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [],\n    unitSearchIsLoading: false,\n    unitSearchError: true\n};\nvar action = {\n    type: \"FETCH_UNITS_PENDING\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [],\n    unitSearchIsLoading: true,\n    unitSearchError: false\n};\ntest(_UnitSearchReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "7e5bdd54-42d5-4279-b6e0-835f857bdab6",
      "parentUUID": "41240bb1-dc06-4052-a331-a6d6cc9f3f61",
      "skipped": false
    },
    {
      "title": "should handled failed fetch of important dates correctly ",
      "fullTitle": "ACTION: FETCH_UNITS_REJECTED should handled failed fetch of important dates correctly ",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [],\n    unitSearchIsLoading: true,\n    unitSearchError: false\n};\nvar action = {\n    type: \"FETCH_UNITS_REJECTED\"\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [],\n    unitSearchIsLoading: false,\n    unitSearchError: true\n};\ntest(_UnitSearchReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c0c7aed5-9028-4ffa-a62a-bf298e969c52",
      "parentUUID": "c75f9b1e-7e5e-4b4c-9028-305a4212748a",
      "skipped": false
    },
    {
      "title": "should handled failed fetch of important dates correctly ",
      "fullTitle": "ACTION: FETCH_UNITS_FULFILLED should handled failed fetch of important dates correctly ",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [],\n    unitSearchIsLoading: true,\n    unitSearchError: false\n};\nvar action = {\n    type: \"FETCH_UNITS_FULFILLED\",\n    payload: [\"unit1\", \"unit2\", \"unit3\"]\n};\nvar stateAfter = {\n    testParam1: 1,\n    testParam2: \"test\",\n    basicUnits: [\"unit1\", \"unit2\", \"unit3\"],\n    unitSearchIsLoading: false,\n    unitSearchError: false\n};\ntest(_UnitSearchReducer2.default, stateBefore, action, stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5b6f02c8-07b6-47a7-b654-eeaae2c27978",
      "parentUUID": "ff3e3f69-3bb2-4550-b60d-cf98f2807b98",
      "skipped": false
    },
    {
      "title": "Should return a non-negative number",
      "fullTitle": "UTILS: CostCalc Should return a non-negative number",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_CostCalc2.default.calculateCost(0, 0)).to.be.gte(0);\nexpect(_CostCalc2.default.calculateCost(2, 6)).to.be.gte(0);",
      "err": {},
      "isRoot": false,
      "uuid": "5f604b87-2905-48cb-a7d0-fa60cde719c4",
      "parentUUID": "e1cfdbaa-c9ba-4327-b0d9-f3a0eca1fb6c",
      "skipped": false
    },
    {
      "title": "Should multiply SCA band cost with credit points",
      "fullTitle": "UTILS: CostCalc Should multiply SCA band cost with credit points",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var scaBand = 3;\nvar creditPoints = 6;\nvar scaBandCost = _CostCalc2.default.calculateCost(scaBand, 1);\nexpect(_CostCalc2.default.calculateCost(scaBand, creditPoints)).to.equal(scaBandCost * creditPoints);",
      "err": {},
      "isRoot": false,
      "uuid": "2ef420c4-d25c-413d-86cf-31681892e39c",
      "parentUUID": "e1cfdbaa-c9ba-4327-b0d9-f3a0eca1fb6c",
      "skipped": false
    },
    {
      "title": "Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
      "fullTitle": "nextSemester Should default to semester one of start year if teachingPeriods and teachingPeriodData are both empty.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([], 2011, [])).to.deep.equal({\n    index: 0,\n    year: 2011,\n    code: \"S1-01\",\n    teachingPeriodData: []\n});",
      "err": {},
      "isRoot": false,
      "uuid": "3dc40980-41bf-485a-8a84-e0f96e9ab1b8",
      "parentUUID": "158a1d44-be5d-4614-abf3-77bc20a5f12d",
      "skipped": false
    },
    {
      "title": "Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
      "fullTitle": "nextSemester Should default to semester one of start year if teachingPeriods is empty and teachingPeriodData is populated.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([], 2029, sortedTeachingPeriodData)).to.deep.equal({\n    index: 0,\n    year: 2029,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
      "err": {},
      "isRoot": false,
      "uuid": "8cc0d65e-90fb-4288-a05f-275906975d90",
      "parentUUID": "158a1d44-be5d-4614-abf3-77bc20a5f12d",
      "skipped": false
    },
    {
      "title": "Should return semester two if the last teaching period is in semester one, with the same year",
      "fullTitle": "nextSemester Should return semester two if the last teaching period is in semester one, with the same year",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2025,\n    code: \"S1-01\"\n}, {\n    year: 2025,\n    code: \"S2-01\"\n}, {\n    year: 2026,\n    code: \"S1-01\"\n}, {\n    year: 2026,\n    code: \"S2-01\"\n}, {\n    year: 2027,\n    code: \"S1-01\"\n}], 2023, sortedTeachingPeriodData)).to.deep.equal({\n    index: 5,\n    year: 2027,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
      "err": {},
      "isRoot": false,
      "uuid": "5fc493ff-0003-47bb-9055-4d3becee71d5",
      "parentUUID": "158a1d44-be5d-4614-abf3-77bc20a5f12d",
      "skipped": false
    },
    {
      "title": "Should return semester one next year if the last teaching period is in semester two",
      "fullTitle": "nextSemester Should return semester one next year if the last teaching period is in semester two",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.nextSemester)([{\n    year: 2015,\n    code: \"FY-01\"\n}, {\n    year: 2017,\n    code: \"S2-01\"\n}], 2015, sortedTeachingPeriodData)).to.deep.equal({\n    index: 2,\n    year: 2018,\n    code: \"S1-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n});",
      "err": {},
      "isRoot": false,
      "uuid": "695008e0-8e2a-4879-a2f9-d9c0925ed8f2",
      "parentUUID": "158a1d44-be5d-4614-abf3-77bc20a5f12d",
      "skipped": false
    },
    {
      "title": "Should render a semester string",
      "fullTitle": "getSemesterString Should render a semester string",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2019,\n    code: \"S2-01\",\n    teachingPeriodData: sortedTeachingPeriodData\n})).to.equal(\"Semester 2, 2019\");",
      "err": {},
      "isRoot": false,
      "uuid": "ed2b5536-3042-4823-bfcc-8ab4536f0479",
      "parentUUID": "a6fb4764-7d7b-4d91-a01c-7bf5d49ed135",
      "skipped": false
    },
    {
      "title": "Should revert back to semester codes if teachingPeriodData is not available",
      "fullTitle": "getSemesterString Should revert back to semester codes if teachingPeriodData is not available",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect((0, _NextSemesterString.getSemesterString)({\n    year: 2015,\n    code: \"S1-01\"\n})).to.equal(\"S1-01, 2015\");",
      "err": {},
      "isRoot": false,
      "uuid": "92aa6ce4-0874-4012-83fb-5e471ffc3fd6",
      "parentUUID": "a6fb4764-7d7b-4d91-a01c-7bf5d49ed135",
      "skipped": false
    },
    {
      "title": "Should return the right year based off current month",
      "fullTitle": "UTILS: ShowYear Should return the right year based off current month",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "if (new Date().getMonth() + 1 >= 11) {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear() + 1);\n} else {\n    expect((0, _ShowYear2.default)()).to.equal(new Date().getFullYear());\n}",
      "err": {},
      "isRoot": false,
      "uuid": "d89bad3a-5572-49b1-988a-b9c9699c91e8",
      "parentUUID": "0a9ae08a-0e2b-467f-8659-1e672fd25e63",
      "skipped": false
    },
    {
      "title": "Should contain the same year as it was specified",
      "fullTitle": "UTILS: YearCalc Should contain the same year as it was specified",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getStartYearVals(2016).find(function (year) {\n    return year.value === 2016;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2017).find(function (year) {\n    return year.value === 2017;\n})).to.be.ok;",
      "err": {},
      "isRoot": false,
      "uuid": "645990e4-6d4f-458f-a34e-21d57b270233",
      "parentUUID": "361fb401-e654-4eac-bfee-41797e0c04aa",
      "skipped": false
    },
    {
      "title": "Should contain a year that is ten years from now",
      "fullTitle": "UTILS: YearCalc Should contain a year that is ten years from now",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getStartYearVals(2019).find(function (year) {\n    return year.value === 2029;\n})).to.be.ok;\nexpect(_YearCalc2.default.getStartYearVals(2012).find(function (year) {\n    return year.value === 2002;\n})).to.be.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2028;\n})).to.be.ok;",
      "err": {},
      "isRoot": false,
      "uuid": "98a1a337-1ecc-4b4d-9b5e-895fc610589b",
      "parentUUID": "361fb401-e654-4eac-bfee-41797e0c04aa",
      "skipped": false
    },
    {
      "title": "Should not contain any past year when computing end years",
      "fullTitle": "UTILS: YearCalc Should not contain any past year when computing end years",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2017;\n})).to.be.not.ok;\nexpect(_YearCalc2.default.getEndYearVals(2018).find(function (year) {\n    return year.value === 2008;\n})).to.be.not.ok;",
      "err": {},
      "isRoot": false,
      "uuid": "4f2d14cf-f691-4bd7-abd2-c15c19085b78",
      "parentUUID": "361fb401-e654-4eac-bfee-41797e0c04aa",
      "skipped": false
    },
    {
      "title": "Should have starting years go in decreasing order from one year ahead to the minimum",
      "fullTitle": "UTILS: YearCalc Should have starting years go in decreasing order from one year ahead to the minimum",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(_YearCalc2.default.getStartYearVals(2019).slice(0, 12)).to.deep.equal([{\n    text: \"2020\",\n    value: 2020\n}, {\n    text: \"2019\",\n    value: 2019\n}, {\n    text: \"2018\",\n    value: 2018\n}, {\n    text: \"2017\",\n    value: 2017\n}, {\n    text: \"2016\",\n    value: 2016\n}, {\n    text: \"2015\",\n    value: 2015\n}, {\n    text: \"2014\",\n    value: 2014\n}, {\n    text: \"2013\",\n    value: 2013\n}, {\n    text: \"2012\",\n    value: 2012\n}, {\n    text: \"2011\",\n    value: 2011\n}, {\n    text: \"2010\",\n    value: 2010\n}, {\n    text: \"2009\",\n    value: 2009\n}]);",
      "err": {},
      "isRoot": false,
      "uuid": "2df848e2-dc1d-4862-b520-9fa1cfeeebd7",
      "parentUUID": "361fb401-e654-4eac-bfee-41797e0c04aa",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2017
}