{
  "stats": {
    "suites": 27,
    "tests": 36,
    "passes": 36,
    "pending": 0,
    "failures": 0,
    "start": "2017-02-02T00:17:53.222Z",
    "end": "2017-02-02T00:17:53.404Z",
    "duration": 182,
    "testsRegistered": 36,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "REDUCER: Counter",
        "suites": [
          {
            "title": "ACTION: INCREMENT_CREDIT_POINTS",
            "suites": [],
            "tests": [
              {
                "title": "Should increment the credit point state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: INCREMENT_CREDIT_POINTS Should increment the credit point state by a given value",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 2, creditPoints: 0 };\nvar action = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 2,\n    creditPoints: 1\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _Counter2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c29d315f-ad4e-476c-8d0a-89300e85fa65",
                "parentUUID": "a94bfc12-d65d-4fb6-b74f-8e4f569657f1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "a94bfc12-d65d-4fb6-b74f-8e4f569657f1",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should increment the credit point state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: INCREMENT_CREDIT_POINTS Should increment the credit point state by a given value",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 2, creditPoints: 0 };\nvar action = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 2,\n    creditPoints: 1\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _Counter2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c29d315f-ad4e-476c-8d0a-89300e85fa65",
                "parentUUID": "a94bfc12-d65d-4fb6-b74f-8e4f569657f1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 6
          },
          {
            "title": "ACTION: DECREMENT_CREDIT_POINTS",
            "suites": [],
            "tests": [
              {
                "title": "Should decrement the credit point state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state by a given value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _Counter2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "3b7c867c-fdac-4883-8302-9ebc01426703",
                "parentUUID": "5d79643a-be47-43af-8f7f-dead9c3a62b3",
                "skipped": false
              },
              {
                "title": "Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 0\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _Counter2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1382b36a-1e3f-47c8-a3d0-88a97c1ee3ea",
                "parentUUID": "5d79643a-be47-43af-8f7f-dead9c3a62b3",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "5d79643a-be47-43af-8f7f-dead9c3a62b3",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should decrement the credit point state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state by a given value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _Counter2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "3b7c867c-fdac-4883-8302-9ebc01426703",
                "parentUUID": "5d79643a-be47-43af-8f7f-dead9c3a62b3",
                "skipped": false
              },
              {
                "title": "Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 0\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _Counter2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1382b36a-1e3f-47c8-a3d0-88a97c1ee3ea",
                "parentUUID": "5d79643a-be47-43af-8f7f-dead9c3a62b3",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: INCREMENT_COST",
            "suites": [],
            "tests": [
              {
                "title": "Should increment the cost state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: INCREMENT_COST Should increment the cost state by a given value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 20, creditPoints: 13 };\nvar action = {\n    type: \"INCREMENT_COST\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 21,\n    creditPoints: 13\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _Counter2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "71905ed3-b9fe-497e-9d5f-d9a137ff4618",
                "parentUUID": "e1a528e7-f56b-4586-b731-6fbbcd65fb48",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "e1a528e7-f56b-4586-b731-6fbbcd65fb48",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should increment the cost state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: INCREMENT_COST Should increment the cost state by a given value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 20, creditPoints: 13 };\nvar action = {\n    type: \"INCREMENT_COST\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 21,\n    creditPoints: 13\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _Counter2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "71905ed3-b9fe-497e-9d5f-d9a137ff4618",
                "parentUUID": "e1a528e7-f56b-4586-b731-6fbbcd65fb48",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: DECREMENT_COST",
            "suites": [],
            "tests": [
              {
                "title": "Should decrement the cost state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_COST Should decrement the cost state by a given value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _Counter2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c8d42e29-4285-49a0-8c19-b1bb72ab3726",
                "parentUUID": "aa085b01-314c-4bba-8a18-49faa3346234",
                "skipped": false
              },
              {
                "title": "Should decrement the cost state to 0 if a value given is larger than the current credit point value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_COST Should decrement the cost state to 0 if a value given is larger than the current credit point value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 0,\n    creditPoints: 40\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _Counter2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "df797d32-e4dc-4cf1-9051-a6e2cc2f1d59",
                "parentUUID": "aa085b01-314c-4bba-8a18-49faa3346234",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "aa085b01-314c-4bba-8a18-49faa3346234",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should decrement the cost state by a given value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_COST Should decrement the cost state by a given value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _Counter2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c8d42e29-4285-49a0-8c19-b1bb72ab3726",
                "parentUUID": "aa085b01-314c-4bba-8a18-49faa3346234",
                "skipped": false
              },
              {
                "title": "Should decrement the cost state to 0 if a value given is larger than the current credit point value",
                "fullTitle": "REDUCER: Counter ACTION: DECREMENT_COST Should decrement the cost state to 0 if a value given is larger than the current credit point value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 0,\n    creditPoints: 40\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _Counter2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "df797d32-e4dc-4cf1-9051-a6e2cc2f1d59",
                "parentUUID": "aa085b01-314c-4bba-8a18-49faa3346234",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: CLEAR_COURSE",
            "suites": [],
            "tests": [
              {
                "title": "Should reset the cost and credit point counters to 0",
                "fullTitle": "REDUCER: Counter ACTION: CLEAR_COURSE Should reset the cost and credit point counters to 0",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _Counter2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c03b50ac-af68-49d5-b3cc-3726289187dc",
                "parentUUID": "96b9baec-10dd-4d2c-8617-7a0b8049fb69",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/Counter.spec.js",
            "uuid": "96b9baec-10dd-4d2c-8617-7a0b8049fb69",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
            "passes": [
              {
                "title": "Should reset the cost and credit point counters to 0",
                "fullTitle": "REDUCER: Counter ACTION: CLEAR_COURSE Should reset the cost and credit point counters to 0",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _Counter2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c03b50ac-af68-49d5-b3cc-3726289187dc",
                "parentUUID": "96b9baec-10dd-4d2c-8617-7a0b8049fb69",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/reducers/Counter.spec.js",
        "uuid": "b37b64d3-1eb7-4ba5-9056-068ce85f35c1",
        "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/Counter.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "REDUCER: CourseStructure",
        "suites": [
          {
            "title": "ACTION: INSERT_TEACHING_PERIOD",
            "suites": [],
            "tests": [
              {
                "title": "Should insert a teaching period with the given info correctly into middle of array",
                "fullTitle": "REDUCER: CourseStructure ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into middle of array",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2018,\n    code: \"S2-01\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0292c4ab-2b67-4316-9198-dcd1a03929ea",
                "parentUUID": "68125cf6-97de-45fd-b422-e8e21461f094",
                "skipped": false
              },
              {
                "title": "Should insert a teaching period with the given info correctly into start of array",
                "fullTitle": "REDUCER: CourseStructure ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into start of array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2016,\n    code: \"S2-01\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2016, code: \"S2-01\", units: [null, null, null, null] }, { year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f5ee3511-fb75-44cf-a126-e2319cdb3208",
                "parentUUID": "68125cf6-97de-45fd-b422-e8e21461f094",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "68125cf6-97de-45fd-b422-e8e21461f094",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should insert a teaching period with the given info correctly into middle of array",
                "fullTitle": "REDUCER: CourseStructure ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into middle of array",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2018,\n    code: \"S2-01\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0292c4ab-2b67-4316-9198-dcd1a03929ea",
                "parentUUID": "68125cf6-97de-45fd-b422-e8e21461f094",
                "skipped": false
              },
              {
                "title": "Should insert a teaching period with the given info correctly into start of array",
                "fullTitle": "REDUCER: CourseStructure ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into start of array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2016,\n    code: \"S2-01\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2016, code: \"S2-01\", units: [null, null, null, null] }, { year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f5ee3511-fb75-44cf-a126-e2319cdb3208",
                "parentUUID": "68125cf6-97de-45fd-b422-e8e21461f094",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "ACTION: REMOVE_TEACHING_PERIOD",
            "suites": [],
            "tests": [
              {
                "title": "Should remove a teaching period at the given index",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the given index",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "fd85da2e-678e-483d-a237-201c9f512964",
                "parentUUID": "61bea5e8-28fd-40fa-a346-8e9b68746dc8",
                "skipped": false
              },
              {
                "title": "Should remove a teaching period at the start of the array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the start of the array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "8c690eb1-f822-4fda-956c-e33791171edb",
                "parentUUID": "61bea5e8-28fd-40fa-a346-8e9b68746dc8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "61bea5e8-28fd-40fa-a346-8e9b68746dc8",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should remove a teaching period at the given index",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the given index",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "fd85da2e-678e-483d-a237-201c9f512964",
                "parentUUID": "61bea5e8-28fd-40fa-a346-8e9b68746dc8",
                "skipped": false
              },
              {
                "title": "Should remove a teaching period at the start of the array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the start of the array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "8c690eb1-f822-4fda-956c-e33791171edb",
                "parentUUID": "61bea5e8-28fd-40fa-a346-8e9b68746dc8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: APPEND_TEACHING_PERIOD",
            "suites": [],
            "tests": [
              {
                "title": "Should add the given teaching period to the end of the array",
                "fullTitle": "REDUCER: CourseStructure ACTION: APPEND_TEACHING_PERIOD Should add the given teaching period to the end of the array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"APPEND_TEACHING_PERIOD\",\n    year: 2020,\n    code: \"S2-01\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }, { year: 2020, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c80e5524-0d58-44e0-b4ce-96e49ecd3ff6",
                "parentUUID": "bbe22a94-2d44-42d0-acfb-f3fb96d4746b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "bbe22a94-2d44-42d0-acfb-f3fb96d4746b",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should add the given teaching period to the end of the array",
                "fullTitle": "REDUCER: CourseStructure ACTION: APPEND_TEACHING_PERIOD Should add the given teaching period to the end of the array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"APPEND_TEACHING_PERIOD\",\n    year: 2020,\n    code: \"S2-01\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }, { year: 2020, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c80e5524-0d58-44e0-b4ce-96e49ecd3ff6",
                "parentUUID": "bbe22a94-2d44-42d0-acfb-f3fb96d4746b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: INCREASE_STUDY_LOAD",
            "suites": [],
            "tests": [
              {
                "title": "Should increase the study load if the study load is less than 4",
                "fullTitle": "REDUCER: CourseStructure ACTION: INCREASE_STUDY_LOAD Should increase the study load if the study load is less than 4",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0a9c941b-3582-4589-9666-cbfaf79e7457",
                "parentUUID": "c98a12b4-669c-4035-9011-6fa8b150b0cc",
                "skipped": false
              },
              {
                "title": "Should not increase the study load if the study load is 6 or greater",
                "fullTitle": "REDUCER: CourseStructure ACTION: INCREASE_STUDY_LOAD Should not increase the study load if the study load is 6 or greater",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null, null] }],\n    numberOfUnits: 6\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null, null] }],\n    numberOfUnits: 6\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9327e82b-026c-4021-9b16-2883a0e0c57a",
                "parentUUID": "c98a12b4-669c-4035-9011-6fa8b150b0cc",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "c98a12b4-669c-4035-9011-6fa8b150b0cc",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should increase the study load if the study load is less than 4",
                "fullTitle": "REDUCER: CourseStructure ACTION: INCREASE_STUDY_LOAD Should increase the study load if the study load is less than 4",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "0a9c941b-3582-4589-9666-cbfaf79e7457",
                "parentUUID": "c98a12b4-669c-4035-9011-6fa8b150b0cc",
                "skipped": false
              },
              {
                "title": "Should not increase the study load if the study load is 6 or greater",
                "fullTitle": "REDUCER: CourseStructure ACTION: INCREASE_STUDY_LOAD Should not increase the study load if the study load is 6 or greater",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null, null] }],\n    numberOfUnits: 6\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null, null] }],\n    numberOfUnits: 6\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "9327e82b-026c-4021-9b16-2883a0e0c57a",
                "parentUUID": "c98a12b4-669c-4035-9011-6fa8b150b0cc",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: DECREASE_STUDY_LOAD",
            "suites": [],
            "tests": [
              {
                "title": "Should decrease the study load if the study load is greater than 4",
                "fullTitle": "REDUCER: CourseStructure ACTION: DECREASE_STUDY_LOAD Should decrease the study load if the study load is greater than 4",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d54f81db-47f3-4df1-a4ee-72f2fa91afef",
                "parentUUID": "2bc6f4c1-854f-4c1f-83bd-0f2b3f66d793",
                "skipped": false
              },
              {
                "title": "Should not decrease the study load if the study load is 4 or less",
                "fullTitle": "REDUCER: CourseStructure ACTION: DECREASE_STUDY_LOAD Should not decrease the study load if the study load is 4 or less",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e4c6ab0f-0bcf-4c28-8f86-9df4ee20dbbe",
                "parentUUID": "2bc6f4c1-854f-4c1f-83bd-0f2b3f66d793",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "2bc6f4c1-854f-4c1f-83bd-0f2b3f66d793",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should decrease the study load if the study load is greater than 4",
                "fullTitle": "REDUCER: CourseStructure ACTION: DECREASE_STUDY_LOAD Should decrease the study load if the study load is greater than 4",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "d54f81db-47f3-4df1-a4ee-72f2fa91afef",
                "parentUUID": "2bc6f4c1-854f-4c1f-83bd-0f2b3f66d793",
                "skipped": false
              },
              {
                "title": "Should not decrease the study load if the study load is 4 or less",
                "fullTitle": "REDUCER: CourseStructure ACTION: DECREASE_STUDY_LOAD Should not decrease the study load if the study load is 4 or less",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e4c6ab0f-0bcf-4c28-8f86-9df4ee20dbbe",
                "parentUUID": "2bc6f4c1-854f-4c1f-83bd-0f2b3f66d793",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 6
          },
          {
            "title": "ACTION: CLEAR_COURSE",
            "suites": [],
            "tests": [
              {
                "title": "Should remove all teaching periods and set the amount of units to 4",
                "fullTitle": "REDUCER: CourseStructure ACTION: CLEAR_COURSE Should remove all teaching periods and set the amount of units to 4",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "503e12df-eb2f-43d5-b092-d7a5079053ab",
                "parentUUID": "74a6bc3e-01cc-4659-a4ba-b2442f21d00b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "74a6bc3e-01cc-4659-a4ba-b2442f21d00b",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should remove all teaching periods and set the amount of units to 4",
                "fullTitle": "REDUCER: CourseStructure ACTION: CLEAR_COURSE Should remove all teaching periods and set the amount of units to 4",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "503e12df-eb2f-43d5-b092-d7a5079053ab",
                "parentUUID": "74a6bc3e-01cc-4659-a4ba-b2442f21d00b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: ADD_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should add a unit correctly to the start of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: ADD_UNIT Should add a unit correctly to the start of an array",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "550184b5-fbcc-4c30-b5ce-22ca82c40f53",
                "parentUUID": "db422318-61ac-40ad-8bc0-38ad60e1c6c2",
                "skipped": false
              },
              {
                "title": "Should add a unit correctly to the middle of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: ADD_UNIT Should add a unit correctly to the middle of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "8849336f-ecd0-4ee2-b0ec-5001c2a3730e",
                "parentUUID": "db422318-61ac-40ad-8bc0-38ad60e1c6c2",
                "skipped": false
              },
              {
                "title": "Should add a unit correctly to the end of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: ADD_UNIT Should add a unit correctly to the end of an array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5c85b0ac-e032-4c8e-9091-110b7ad47695",
                "parentUUID": "db422318-61ac-40ad-8bc0-38ad60e1c6c2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "db422318-61ac-40ad-8bc0-38ad60e1c6c2",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should add a unit correctly to the start of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: ADD_UNIT Should add a unit correctly to the start of an array",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "550184b5-fbcc-4c30-b5ce-22ca82c40f53",
                "parentUUID": "db422318-61ac-40ad-8bc0-38ad60e1c6c2",
                "skipped": false
              },
              {
                "title": "Should add a unit correctly to the middle of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: ADD_UNIT Should add a unit correctly to the middle of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "8849336f-ecd0-4ee2-b0ec-5001c2a3730e",
                "parentUUID": "db422318-61ac-40ad-8bc0-38ad60e1c6c2",
                "skipped": false
              },
              {
                "title": "Should add a unit correctly to the end of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: ADD_UNIT Should add a unit correctly to the end of an array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "5c85b0ac-e032-4c8e-9091-110b7ad47695",
                "parentUUID": "db422318-61ac-40ad-8bc0-38ad60e1c6c2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          },
          {
            "title": "ACTION: REMOVE_UNIT",
            "suites": [],
            "tests": [
              {
                "title": "Should remove a unit correctly frpm the start of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_UNIT Should remove a unit correctly frpm the start of an array",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e9b784d5-0cbd-4d6c-8ada-570738bbcef8",
                "parentUUID": "41bba2c0-ac4e-40a3-913e-b66437ee8392",
                "skipped": false
              },
              {
                "title": "Should remove a unit correctly from the middle of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_UNIT Should remove a unit correctly from the middle of an array",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a8a25c40-f5c1-4731-8fca-23f541deb8f3",
                "parentUUID": "41bba2c0-ac4e-40a3-913e-b66437ee8392",
                "skipped": false
              },
              {
                "title": "Should remove a unit correctly from the end of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_UNIT Should remove a unit correctly from the end of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "95b89b6f-cb21-4367-8062-6a6191678d5d",
                "parentUUID": "41bba2c0-ac4e-40a3-913e-b66437ee8392",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "41bba2c0-ac4e-40a3-913e-b66437ee8392",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should remove a unit correctly frpm the start of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_UNIT Should remove a unit correctly frpm the start of an array",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "e9b784d5-0cbd-4d6c-8ada-570738bbcef8",
                "parentUUID": "41bba2c0-ac4e-40a3-913e-b66437ee8392",
                "skipped": false
              },
              {
                "title": "Should remove a unit correctly from the middle of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_UNIT Should remove a unit correctly from the middle of an array",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a8a25c40-f5c1-4731-8fca-23f541deb8f3",
                "parentUUID": "41bba2c0-ac4e-40a3-913e-b66437ee8392",
                "skipped": false
              },
              {
                "title": "Should remove a unit correctly from the end of an array",
                "fullTitle": "REDUCER: CourseStructure ACTION: REMOVE_UNIT Should remove a unit correctly from the end of an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "95b89b6f-cb21-4367-8062-6a6191678d5d",
                "parentUUID": "41bba2c0-ac4e-40a3-913e-b66437ee8392",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 15
          },
          {
            "title": "ACTION: GENERATE_COURSE",
            "suites": [],
            "tests": [
              {
                "title": "Should generate a course structure with valid start and end years",
                "fullTitle": "REDUCER: CourseStructure ACTION: GENERATE_COURSE Should generate a course structure with valid start and end years",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2014,\n    endYear: 2016\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "eda0b474-0473-49b4-a22f-47535cffbc15",
                "parentUUID": "eb671001-03ee-412b-b6db-4b41e4d8fa71",
                "skipped": false
              },
              {
                "title": "Should return an empty course structure with invalid start and end years.",
                "fullTitle": "REDUCER: CourseStructure ACTION: GENERATE_COURSE Should return an empty course structure with invalid start and end years.",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2017,\n    endYear: 2013\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "929770de-fabb-43be-9489-3ce0d5a7a5f2",
                "parentUUID": "eb671001-03ee-412b-b6db-4b41e4d8fa71",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "eb671001-03ee-412b-b6db-4b41e4d8fa71",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should generate a course structure with valid start and end years",
                "fullTitle": "REDUCER: CourseStructure ACTION: GENERATE_COURSE Should generate a course structure with valid start and end years",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2014,\n    endYear: 2016\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "eda0b474-0473-49b4-a22f-47535cffbc15",
                "parentUUID": "eb671001-03ee-412b-b6db-4b41e4d8fa71",
                "skipped": false
              },
              {
                "title": "Should return an empty course structure with invalid start and end years.",
                "fullTitle": "REDUCER: CourseStructure ACTION: GENERATE_COURSE Should return an empty course structure with invalid start and end years.",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2017,\n    endYear: 2013\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "929770de-fabb-43be-9489-3ce0d5a7a5f2",
                "parentUUID": "eb671001-03ee-412b-b6db-4b41e4d8fa71",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          },
          {
            "title": "ACTION: FETCH_COURSE_INFO_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show that the course info is loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_INFO_PENDING Should correctly show that the course info is loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "bf647b6c-9402-474e-8a13-334f401ab56a",
                "parentUUID": "9bfe0a63-9427-48db-94e2-05a9eb06358e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "9bfe0a63-9427-48db-94e2-05a9eb06358e",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly show that the course info is loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_INFO_PENDING Should correctly show that the course info is loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "bf647b6c-9402-474e-8a13-334f401ab56a",
                "parentUUID": "9bfe0a63-9427-48db-94e2-05a9eb06358e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_COURSE_INFO_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly return the payload and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    focusedCourse: null,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_FULFILLED\",\n    payload: { data: {\n            courseName: \"Test Course\",\n            mangFac: \"Test Faculty\",\n            creditPoints: 100,\n            courseDescrip: \"Test Description\",\n            courseDuration: \"Test Duration\",\n            modeLoc: \"Test mode and location\",\n            courseAward: \"Test awards\",\n            abrevTitle: \"Test abreviated title\"\n        } },\n    courseCode: \"COURSE101\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: {\n        courseName: \"Test Course\",\n        faculty: \"Test Faculty\",\n        creditPoints: 100,\n        courseDescription: \"Test Description\",\n        durationStr: \"Test Duration\",\n        modeAndLocation: \"Test mode and location\",\n        awards: \"Test awards\",\n        abrTitle: \"Test abreviated title\"\n    },\n    focusedCourse: \"COURSE101\"\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "12fec0f5-633c-47c2-a897-9b60c7424bfa",
                "parentUUID": "eb38b40e-1d38-4426-996c-b0d176361b80",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "eb38b40e-1d38-4426-996c-b0d176361b80",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly return the payload and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    focusedCourse: null,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_FULFILLED\",\n    payload: { data: {\n            courseName: \"Test Course\",\n            mangFac: \"Test Faculty\",\n            creditPoints: 100,\n            courseDescrip: \"Test Description\",\n            courseDuration: \"Test Duration\",\n            modeLoc: \"Test mode and location\",\n            courseAward: \"Test awards\",\n            abrevTitle: \"Test abreviated title\"\n        } },\n    courseCode: \"COURSE101\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: {\n        courseName: \"Test Course\",\n        faculty: \"Test Faculty\",\n        creditPoints: 100,\n        courseDescription: \"Test Description\",\n        durationStr: \"Test Duration\",\n        modeAndLocation: \"Test mode and location\",\n        awards: \"Test awards\",\n        abrTitle: \"Test abreviated title\"\n    },\n    focusedCourse: \"COURSE101\"\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "12fec0f5-633c-47c2-a897-9b60c7424bfa",
                "parentUUID": "eb38b40e-1d38-4426-996c-b0d176361b80",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "ACTION: FETCH_COURSE_INFO_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show that the course info fetch failed and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_INFO_REJECTED Should correctly show that the course info fetch failed and show that it is no longer loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: true,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f002ebd2-0d35-429c-a3dc-9f5bad92e73e",
                "parentUUID": "24f4b033-2db0-4696-aab4-2f1cd3b8377c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "24f4b033-2db0-4696-aab4-2f1cd3b8377c",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly show that the course info fetch failed and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_INFO_REJECTED Should correctly show that the course info fetch failed and show that it is no longer loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: true,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "f002ebd2-0d35-429c-a3dc-9f5bad92e73e",
                "parentUUID": "24f4b033-2db0-4696-aab4-2f1cd3b8377c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_COURSE_TEMPLATE_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show that the course template is loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_TEMPLATE_PENDING Should correctly show that the course template is loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "83fee5be-d192-4c6f-8a20-771e45ab7343",
                "parentUUID": "5ca018c0-7f54-403d-910f-38bb71ec2ef7",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "5ca018c0-7f54-403d-910f-38bb71ec2ef7",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly show that the course template is loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_TEMPLATE_PENDING Should correctly show that the course template is loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "83fee5be-d192-4c6f-8a20-771e45ab7343",
                "parentUUID": "5ca018c0-7f54-403d-910f-38bb71ec2ef7",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_COURSE_TEMPLATE_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly return the payload and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_TEMPLATE_FULFILLED Should correctly return the payload and show that it is no longer loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_FULFILLED\",\n    payload: { data: \"Fake Course Template\" }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: \"Fake Course Template\"\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ef8378a5-b9a6-4f9a-b770-864ba0177a12",
                "parentUUID": "9261c652-eb97-4d23-9748-5c4266f274e7",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "9261c652-eb97-4d23-9748-5c4266f274e7",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly return the payload and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_TEMPLATE_FULFILLED Should correctly return the payload and show that it is no longer loading",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_FULFILLED\",\n    payload: { data: \"Fake Course Template\" }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: \"Fake Course Template\"\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ef8378a5-b9a6-4f9a-b770-864ba0177a12",
                "parentUUID": "9261c652-eb97-4d23-9748-5c4266f274e7",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "ACTION: FETCH_COURSE_TEMPLATE_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show that the course template fetch failed and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_TEMPLATE_REJECTED Should correctly show that the course template fetch failed and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: true,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "4ec6b05f-52df-46d6-8823-e9088302917c",
                "parentUUID": "9ce6fc8e-4adb-4eb4-acb7-0112abbaf851",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "9ce6fc8e-4adb-4eb4-acb7-0112abbaf851",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly show that the course template fetch failed and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_COURSE_TEMPLATE_REJECTED Should correctly show that the course template fetch failed and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: true,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "4ec6b05f-52df-46d6-8823-e9088302917c",
                "parentUUID": "9ce6fc8e-4adb-4eb4-acb7-0112abbaf851",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_UNIT_INFO_PENDING",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show that the unit info is loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_UNIT_INFO_PENDING Should correctly show that the unit info is loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: null\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c6068d5d-c7f9-4c3f-ac07-db98b47c4309",
                "parentUUID": "033ce48f-cc6d-40b3-999c-e0c4f0653c24",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "033ce48f-cc6d-40b3-999c-e0c4f0653c24",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly show that the unit info is loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_UNIT_INFO_PENDING Should correctly show that the unit info is loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: null\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c6068d5d-c7f9-4c3f-ac07-db98b47c4309",
                "parentUUID": "033ce48f-cc6d-40b3-999c-e0c4f0653c24",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_UNIT_INFO_FULFILLED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly return the payload and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_UNIT_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_FULFILLED\",\n    payload: { data: \"Fake Unit Info\" },\n    unitCode: \"FAKE1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: \"Fake Unit Info\",\n    focusedUnitCode: \"FAKE1001\"\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ac9fe996-1ac9-401c-8944-c4b9c7e81f41",
                "parentUUID": "76412ecc-cdc2-4634-945a-dcfe395f83e9",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "76412ecc-cdc2-4634-945a-dcfe395f83e9",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly return the payload and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_UNIT_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_FULFILLED\",\n    payload: { data: \"Fake Unit Info\" },\n    unitCode: \"FAKE1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: \"Fake Unit Info\",\n    focusedUnitCode: \"FAKE1001\"\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "ac9fe996-1ac9-401c-8944-c4b9c7e81f41",
                "parentUUID": "76412ecc-cdc2-4634-945a-dcfe395f83e9",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: FETCH_UNIT_INFO_REJECTED",
            "suites": [],
            "tests": [
              {
                "title": "Should correctly show that the unit info fetch failed and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_UNIT_INFO_REJECTED Should correctly show that the unit info fetch failed and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_REJECTED\",\n    payload: \"Error Msg\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: true,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1f0b7d75-9aaa-4da9-b0c6-e073fdc22620",
                "parentUUID": "67afab9d-2b69-48aa-8d84-74d81dbfdc23",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "67afab9d-2b69-48aa-8d84-74d81dbfdc23",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should correctly show that the unit info fetch failed and show that it is no longer loading",
                "fullTitle": "REDUCER: CourseStructure ACTION: FETCH_UNIT_INFO_REJECTED Should correctly show that the unit info fetch failed and show that it is no longer loading",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_REJECTED\",\n    payload: \"Error Msg\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: true,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "1f0b7d75-9aaa-4da9-b0c6-e073fdc22620",
                "parentUUID": "67afab9d-2b69-48aa-8d84-74d81dbfdc23",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: SUBMIT_COURSE_FORM",
            "suites": [],
            "tests": [
              {
                "title": "Should accurately set the start year and the focused course on submission",
                "fullTitle": "REDUCER: CourseStructure ACTION: SUBMIT_COURSE_FORM Should accurately set the start year and the focused course on submission",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_COURSE_FORM\",\n    startYear: 2020,\n    courseCode: \"TEST1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: \"TEST1001\",\n    startYear: 2020,\n    endYear: 2020\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c82d522d-a6dc-4bea-aa51-4507bf7bcaae",
                "parentUUID": "7c9b9b22-29d9-4acf-8624-c1bdee3f1cee",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "7c9b9b22-29d9-4acf-8624-c1bdee3f1cee",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should accurately set the start year and the focused course on submission",
                "fullTitle": "REDUCER: CourseStructure ACTION: SUBMIT_COURSE_FORM Should accurately set the start year and the focused course on submission",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_COURSE_FORM\",\n    startYear: 2020,\n    courseCode: \"TEST1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: \"TEST1001\",\n    startYear: 2020,\n    endYear: 2020\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "c82d522d-a6dc-4bea-aa51-4507bf7bcaae",
                "parentUUID": "7c9b9b22-29d9-4acf-8624-c1bdee3f1cee",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "ACTION: SUBMIT_YEAR_FORM",
            "suites": [],
            "tests": [
              {
                "title": "Should accurately set the start year and end year on submission",
                "fullTitle": "REDUCER: CourseStructure ACTION: SUBMIT_YEAR_FORM Should accurately set the start year and end year on submission",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_YEAR_FORM\",\n    startYear: 2020,\n    endYear: 2025\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2020,\n    endYear: 2025\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a9bb9f9d-1767-4335-81ef-b133fe45973b",
                "parentUUID": "527175d8-75b7-4901-9700-29b65678440e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/reducers/CourseStructure.spec.js",
            "uuid": "527175d8-75b7-4901-9700-29b65678440e",
            "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
            "passes": [
              {
                "title": "Should accurately set the start year and end year on submission",
                "fullTitle": "REDUCER: CourseStructure ACTION: SUBMIT_YEAR_FORM Should accurately set the start year and end year on submission",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_YEAR_FORM\",\n    startYear: 2020,\n    endYear: 2025\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2020,\n    endYear: 2025\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
                "err": {},
                "isRoot": false,
                "uuid": "a9bb9f9d-1767-4335-81ef-b133fe45973b",
                "parentUUID": "527175d8-75b7-4901-9700-29b65678440e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/reducers/CourseStructure.spec.js",
        "uuid": "415bafb3-f918-4e85-a5c3-4bd4e07b6e2e",
        "fullFile": "/home/staff01/Documents/monPlanR/test/reducers/CourseStructure.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "4270c229-04f8-474b-ba3a-42eb6064bcec",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "Should increment the credit point state by a given value",
      "fullTitle": "ACTION: INCREMENT_CREDIT_POINTS Should increment the credit point state by a given value",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 2, creditPoints: 0 };\nvar action = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 2,\n    creditPoints: 1\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _Counter2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c29d315f-ad4e-476c-8d0a-89300e85fa65",
      "parentUUID": "a94bfc12-d65d-4fb6-b74f-8e4f569657f1",
      "skipped": false
    },
    {
      "title": "Should decrement the credit point state by a given value",
      "fullTitle": "ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state by a given value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _Counter2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "3b7c867c-fdac-4883-8302-9ebc01426703",
      "parentUUID": "5d79643a-be47-43af-8f7f-dead9c3a62b3",
      "skipped": false
    },
    {
      "title": "Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
      "fullTitle": "ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 0\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _Counter2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1382b36a-1e3f-47c8-a3d0-88a97c1ee3ea",
      "parentUUID": "5d79643a-be47-43af-8f7f-dead9c3a62b3",
      "skipped": false
    },
    {
      "title": "Should increment the cost state by a given value",
      "fullTitle": "ACTION: INCREMENT_COST Should increment the cost state by a given value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 20, creditPoints: 13 };\nvar action = {\n    type: \"INCREMENT_COST\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 21,\n    creditPoints: 13\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _Counter2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "71905ed3-b9fe-497e-9d5f-d9a137ff4618",
      "parentUUID": "e1a528e7-f56b-4586-b731-6fbbcd65fb48",
      "skipped": false
    },
    {
      "title": "Should decrement the cost state by a given value",
      "fullTitle": "ACTION: DECREMENT_COST Should decrement the cost state by a given value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _Counter2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c8d42e29-4285-49a0-8c19-b1bb72ab3726",
      "parentUUID": "aa085b01-314c-4bba-8a18-49faa3346234",
      "skipped": false
    },
    {
      "title": "Should decrement the cost state to 0 if a value given is larger than the current credit point value",
      "fullTitle": "ACTION: DECREMENT_COST Should decrement the cost state to 0 if a value given is larger than the current credit point value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 0,\n    creditPoints: 40\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _Counter2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "df797d32-e4dc-4cf1-9051-a6e2cc2f1d59",
      "parentUUID": "aa085b01-314c-4bba-8a18-49faa3346234",
      "skipped": false
    },
    {
      "title": "Should reset the cost and credit point counters to 0",
      "fullTitle": "ACTION: CLEAR_COURSE Should reset the cost and credit point counters to 0",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _Counter2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c03b50ac-af68-49d5-b3cc-3726289187dc",
      "parentUUID": "96b9baec-10dd-4d2c-8617-7a0b8049fb69",
      "skipped": false
    },
    {
      "title": "Should insert a teaching period with the given info correctly into middle of array",
      "fullTitle": "ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into middle of array",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2018,\n    code: \"S2-01\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0292c4ab-2b67-4316-9198-dcd1a03929ea",
      "parentUUID": "68125cf6-97de-45fd-b422-e8e21461f094",
      "skipped": false
    },
    {
      "title": "Should insert a teaching period with the given info correctly into start of array",
      "fullTitle": "ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into start of array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2016,\n    code: \"S2-01\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2016, code: \"S2-01\", units: [null, null, null, null] }, { year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f5ee3511-fb75-44cf-a126-e2319cdb3208",
      "parentUUID": "68125cf6-97de-45fd-b422-e8e21461f094",
      "skipped": false
    },
    {
      "title": "Should remove a teaching period at the given index",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the given index",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "fd85da2e-678e-483d-a237-201c9f512964",
      "parentUUID": "61bea5e8-28fd-40fa-a346-8e9b68746dc8",
      "skipped": false
    },
    {
      "title": "Should remove a teaching period at the start of the array",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the start of the array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "8c690eb1-f822-4fda-956c-e33791171edb",
      "parentUUID": "61bea5e8-28fd-40fa-a346-8e9b68746dc8",
      "skipped": false
    },
    {
      "title": "Should add the given teaching period to the end of the array",
      "fullTitle": "ACTION: APPEND_TEACHING_PERIOD Should add the given teaching period to the end of the array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"APPEND_TEACHING_PERIOD\",\n    year: 2020,\n    code: \"S2-01\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }, { year: 2020, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c80e5524-0d58-44e0-b4ce-96e49ecd3ff6",
      "parentUUID": "bbe22a94-2d44-42d0-acfb-f3fb96d4746b",
      "skipped": false
    },
    {
      "title": "Should increase the study load if the study load is less than 4",
      "fullTitle": "ACTION: INCREASE_STUDY_LOAD Should increase the study load if the study load is less than 4",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0a9c941b-3582-4589-9666-cbfaf79e7457",
      "parentUUID": "c98a12b4-669c-4035-9011-6fa8b150b0cc",
      "skipped": false
    },
    {
      "title": "Should not increase the study load if the study load is 6 or greater",
      "fullTitle": "ACTION: INCREASE_STUDY_LOAD Should not increase the study load if the study load is 6 or greater",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null, null] }],\n    numberOfUnits: 6\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null, null] }],\n    numberOfUnits: 6\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9327e82b-026c-4021-9b16-2883a0e0c57a",
      "parentUUID": "c98a12b4-669c-4035-9011-6fa8b150b0cc",
      "skipped": false
    },
    {
      "title": "Should decrease the study load if the study load is greater than 4",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should decrease the study load if the study load is greater than 4",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d54f81db-47f3-4df1-a4ee-72f2fa91afef",
      "parentUUID": "2bc6f4c1-854f-4c1f-83bd-0f2b3f66d793",
      "skipped": false
    },
    {
      "title": "Should not decrease the study load if the study load is 4 or less",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should not decrease the study load if the study load is 4 or less",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e4c6ab0f-0bcf-4c28-8f86-9df4ee20dbbe",
      "parentUUID": "2bc6f4c1-854f-4c1f-83bd-0f2b3f66d793",
      "skipped": false
    },
    {
      "title": "Should remove all teaching periods and set the amount of units to 4",
      "fullTitle": "ACTION: CLEAR_COURSE Should remove all teaching periods and set the amount of units to 4",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "503e12df-eb2f-43d5-b092-d7a5079053ab",
      "parentUUID": "74a6bc3e-01cc-4659-a4ba-b2442f21d00b",
      "skipped": false
    },
    {
      "title": "Should add a unit correctly to the start of an array",
      "fullTitle": "ACTION: ADD_UNIT Should add a unit correctly to the start of an array",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "550184b5-fbcc-4c30-b5ce-22ca82c40f53",
      "parentUUID": "db422318-61ac-40ad-8bc0-38ad60e1c6c2",
      "skipped": false
    },
    {
      "title": "Should add a unit correctly to the middle of an array",
      "fullTitle": "ACTION: ADD_UNIT Should add a unit correctly to the middle of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "8849336f-ecd0-4ee2-b0ec-5001c2a3730e",
      "parentUUID": "db422318-61ac-40ad-8bc0-38ad60e1c6c2",
      "skipped": false
    },
    {
      "title": "Should add a unit correctly to the end of an array",
      "fullTitle": "ACTION: ADD_UNIT Should add a unit correctly to the end of an array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5c85b0ac-e032-4c8e-9091-110b7ad47695",
      "parentUUID": "db422318-61ac-40ad-8bc0-38ad60e1c6c2",
      "skipped": false
    },
    {
      "title": "Should remove a unit correctly frpm the start of an array",
      "fullTitle": "ACTION: REMOVE_UNIT Should remove a unit correctly frpm the start of an array",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e9b784d5-0cbd-4d6c-8ada-570738bbcef8",
      "parentUUID": "41bba2c0-ac4e-40a3-913e-b66437ee8392",
      "skipped": false
    },
    {
      "title": "Should remove a unit correctly from the middle of an array",
      "fullTitle": "ACTION: REMOVE_UNIT Should remove a unit correctly from the middle of an array",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a8a25c40-f5c1-4731-8fca-23f541deb8f3",
      "parentUUID": "41bba2c0-ac4e-40a3-913e-b66437ee8392",
      "skipped": false
    },
    {
      "title": "Should remove a unit correctly from the end of an array",
      "fullTitle": "ACTION: REMOVE_UNIT Should remove a unit correctly from the end of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "95b89b6f-cb21-4367-8062-6a6191678d5d",
      "parentUUID": "41bba2c0-ac4e-40a3-913e-b66437ee8392",
      "skipped": false
    },
    {
      "title": "Should generate a course structure with valid start and end years",
      "fullTitle": "ACTION: GENERATE_COURSE Should generate a course structure with valid start and end years",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2014,\n    endYear: 2016\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "eda0b474-0473-49b4-a22f-47535cffbc15",
      "parentUUID": "eb671001-03ee-412b-b6db-4b41e4d8fa71",
      "skipped": false
    },
    {
      "title": "Should return an empty course structure with invalid start and end years.",
      "fullTitle": "ACTION: GENERATE_COURSE Should return an empty course structure with invalid start and end years.",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2017,\n    endYear: 2013\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "929770de-fabb-43be-9489-3ce0d5a7a5f2",
      "parentUUID": "eb671001-03ee-412b-b6db-4b41e4d8fa71",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course info is loading",
      "fullTitle": "ACTION: FETCH_COURSE_INFO_PENDING Should correctly show that the course info is loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "bf647b6c-9402-474e-8a13-334f401ab56a",
      "parentUUID": "9bfe0a63-9427-48db-94e2-05a9eb06358e",
      "skipped": false
    },
    {
      "title": "Should correctly return the payload and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    focusedCourse: null,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_FULFILLED\",\n    payload: { data: {\n            courseName: \"Test Course\",\n            mangFac: \"Test Faculty\",\n            creditPoints: 100,\n            courseDescrip: \"Test Description\",\n            courseDuration: \"Test Duration\",\n            modeLoc: \"Test mode and location\",\n            courseAward: \"Test awards\",\n            abrevTitle: \"Test abreviated title\"\n        } },\n    courseCode: \"COURSE101\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: {\n        courseName: \"Test Course\",\n        faculty: \"Test Faculty\",\n        creditPoints: 100,\n        courseDescription: \"Test Description\",\n        durationStr: \"Test Duration\",\n        modeAndLocation: \"Test mode and location\",\n        awards: \"Test awards\",\n        abrTitle: \"Test abreviated title\"\n    },\n    focusedCourse: \"COURSE101\"\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "12fec0f5-633c-47c2-a897-9b60c7424bfa",
      "parentUUID": "eb38b40e-1d38-4426-996c-b0d176361b80",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course info fetch failed and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_INFO_REJECTED Should correctly show that the course info fetch failed and show that it is no longer loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: true,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f002ebd2-0d35-429c-a3dc-9f5bad92e73e",
      "parentUUID": "24f4b033-2db0-4696-aab4-2f1cd3b8377c",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course template is loading",
      "fullTitle": "ACTION: FETCH_COURSE_TEMPLATE_PENDING Should correctly show that the course template is loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "83fee5be-d192-4c6f-8a20-771e45ab7343",
      "parentUUID": "5ca018c0-7f54-403d-910f-38bb71ec2ef7",
      "skipped": false
    },
    {
      "title": "Should correctly return the payload and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_TEMPLATE_FULFILLED Should correctly return the payload and show that it is no longer loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_FULFILLED\",\n    payload: { data: \"Fake Course Template\" }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: \"Fake Course Template\"\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ef8378a5-b9a6-4f9a-b770-864ba0177a12",
      "parentUUID": "9261c652-eb97-4d23-9748-5c4266f274e7",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course template fetch failed and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_TEMPLATE_REJECTED Should correctly show that the course template fetch failed and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: true,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4ec6b05f-52df-46d6-8823-e9088302917c",
      "parentUUID": "9ce6fc8e-4adb-4eb4-acb7-0112abbaf851",
      "skipped": false
    },
    {
      "title": "Should correctly show that the unit info is loading",
      "fullTitle": "ACTION: FETCH_UNIT_INFO_PENDING Should correctly show that the unit info is loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: null\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c6068d5d-c7f9-4c3f-ac07-db98b47c4309",
      "parentUUID": "033ce48f-cc6d-40b3-999c-e0c4f0653c24",
      "skipped": false
    },
    {
      "title": "Should correctly return the payload and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_UNIT_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_FULFILLED\",\n    payload: { data: \"Fake Unit Info\" },\n    unitCode: \"FAKE1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: \"Fake Unit Info\",\n    focusedUnitCode: \"FAKE1001\"\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ac9fe996-1ac9-401c-8944-c4b9c7e81f41",
      "parentUUID": "76412ecc-cdc2-4634-945a-dcfe395f83e9",
      "skipped": false
    },
    {
      "title": "Should correctly show that the unit info fetch failed and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_UNIT_INFO_REJECTED Should correctly show that the unit info fetch failed and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_REJECTED\",\n    payload: \"Error Msg\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: true,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1f0b7d75-9aaa-4da9-b0c6-e073fdc22620",
      "parentUUID": "67afab9d-2b69-48aa-8d84-74d81dbfdc23",
      "skipped": false
    },
    {
      "title": "Should accurately set the start year and the focused course on submission",
      "fullTitle": "ACTION: SUBMIT_COURSE_FORM Should accurately set the start year and the focused course on submission",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_COURSE_FORM\",\n    startYear: 2020,\n    courseCode: \"TEST1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: \"TEST1001\",\n    startYear: 2020,\n    endYear: 2020\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c82d522d-a6dc-4bea-aa51-4507bf7bcaae",
      "parentUUID": "7c9b9b22-29d9-4acf-8624-c1bdee3f1cee",
      "skipped": false
    },
    {
      "title": "Should accurately set the start year and end year on submission",
      "fullTitle": "ACTION: SUBMIT_YEAR_FORM Should accurately set the start year and end year on submission",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_YEAR_FORM\",\n    startYear: 2020,\n    endYear: 2025\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2020,\n    endYear: 2025\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a9bb9f9d-1767-4335-81ef-b133fe45973b",
      "parentUUID": "527175d8-75b7-4901-9700-29b65678440e",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "Should increment the credit point state by a given value",
      "fullTitle": "ACTION: INCREMENT_CREDIT_POINTS Should increment the credit point state by a given value",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 2, creditPoints: 0 };\nvar action = {\n    type: \"INCREMENT_CREDIT_POINTS\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 2,\n    creditPoints: 1\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _Counter2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c29d315f-ad4e-476c-8d0a-89300e85fa65",
      "parentUUID": "a94bfc12-d65d-4fb6-b74f-8e4f569657f1",
      "skipped": false
    },
    {
      "title": "Should decrement the credit point state by a given value",
      "fullTitle": "ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state by a given value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _Counter2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "3b7c867c-fdac-4883-8302-9ebc01426703",
      "parentUUID": "5d79643a-be47-43af-8f7f-dead9c3a62b3",
      "skipped": false
    },
    {
      "title": "Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
      "fullTitle": "ACTION: DECREMENT_CREDIT_POINTS Should decrement the credit point state to 0 if a value given is larger than the current credit point value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 40, creditPoints: 50 };\nvar action = {\n    type: \"DECREMENT_CREDIT_POINTS\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 0\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _Counter2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1382b36a-1e3f-47c8-a3d0-88a97c1ee3ea",
      "parentUUID": "5d79643a-be47-43af-8f7f-dead9c3a62b3",
      "skipped": false
    },
    {
      "title": "Should increment the cost state by a given value",
      "fullTitle": "ACTION: INCREMENT_COST Should increment the cost state by a given value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 20, creditPoints: 13 };\nvar action = {\n    type: \"INCREMENT_COST\",\n    value: 1\n};\nvar stateAfter = {\n    cost: 21,\n    creditPoints: 13\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _Counter2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "71905ed3-b9fe-497e-9d5f-d9a137ff4618",
      "parentUUID": "e1a528e7-f56b-4586-b731-6fbbcd65fb48",
      "skipped": false
    },
    {
      "title": "Should decrement the cost state by a given value",
      "fullTitle": "ACTION: DECREMENT_COST Should decrement the cost state by a given value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 10\n};\nvar stateAfter = {\n    cost: 40,\n    creditPoints: 40\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _Counter2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c8d42e29-4285-49a0-8c19-b1bb72ab3726",
      "parentUUID": "aa085b01-314c-4bba-8a18-49faa3346234",
      "skipped": false
    },
    {
      "title": "Should decrement the cost state to 0 if a value given is larger than the current credit point value",
      "fullTitle": "ACTION: DECREMENT_COST Should decrement the cost state to 0 if a value given is larger than the current credit point value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"DECREMENT_COST\",\n    value: 51\n};\nvar stateAfter = {\n    cost: 0,\n    creditPoints: 40\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _Counter2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "df797d32-e4dc-4cf1-9051-a6e2cc2f1d59",
      "parentUUID": "aa085b01-314c-4bba-8a18-49faa3346234",
      "skipped": false
    },
    {
      "title": "Should reset the cost and credit point counters to 0",
      "fullTitle": "ACTION: CLEAR_COURSE Should reset the cost and credit point counters to 0",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = { cost: 50, creditPoints: 40 };\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = { cost: 0, creditPoints: 0 };\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _Counter2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c03b50ac-af68-49d5-b3cc-3726289187dc",
      "parentUUID": "96b9baec-10dd-4d2c-8617-7a0b8049fb69",
      "skipped": false
    },
    {
      "title": "Should insert a teaching period with the given info correctly into middle of array",
      "fullTitle": "ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into middle of array",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2018,\n    code: \"S2-01\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0292c4ab-2b67-4316-9198-dcd1a03929ea",
      "parentUUID": "68125cf6-97de-45fd-b422-e8e21461f094",
      "skipped": false
    },
    {
      "title": "Should insert a teaching period with the given info correctly into start of array",
      "fullTitle": "ACTION: INSERT_TEACHING_PERIOD Should insert a teaching period with the given info correctly into start of array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INSERT_TEACHING_PERIOD\",\n    year: 2016,\n    code: \"S2-01\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2016, code: \"S2-01\", units: [null, null, null, null] }, { year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f5ee3511-fb75-44cf-a126-e2319cdb3208",
      "parentUUID": "68125cf6-97de-45fd-b422-e8e21461f094",
      "skipped": false
    },
    {
      "title": "Should remove a teaching period at the given index",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the given index",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "fd85da2e-678e-483d-a237-201c9f512964",
      "parentUUID": "61bea5e8-28fd-40fa-a346-8e9b68746dc8",
      "skipped": false
    },
    {
      "title": "Should remove a teaching period at the start of the array",
      "fullTitle": "ACTION: REMOVE_TEACHING_PERIOD Should remove a teaching period at the start of the array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_TEACHING_PERIOD\",\n    index: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "8c690eb1-f822-4fda-956c-e33791171edb",
      "parentUUID": "61bea5e8-28fd-40fa-a346-8e9b68746dc8",
      "skipped": false
    },
    {
      "title": "Should add the given teaching period to the end of the array",
      "fullTitle": "ACTION: APPEND_TEACHING_PERIOD Should add the given teaching period to the end of the array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"APPEND_TEACHING_PERIOD\",\n    year: 2020,\n    code: \"S2-01\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }, { year: 2020, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c80e5524-0d58-44e0-b4ce-96e49ecd3ff6",
      "parentUUID": "bbe22a94-2d44-42d0-acfb-f3fb96d4746b",
      "skipped": false
    },
    {
      "title": "Should increase the study load if the study load is less than 4",
      "fullTitle": "ACTION: INCREASE_STUDY_LOAD Should increase the study load if the study load is less than 4",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "0a9c941b-3582-4589-9666-cbfaf79e7457",
      "parentUUID": "c98a12b4-669c-4035-9011-6fa8b150b0cc",
      "skipped": false
    },
    {
      "title": "Should not increase the study load if the study load is 6 or greater",
      "fullTitle": "ACTION: INCREASE_STUDY_LOAD Should not increase the study load if the study load is 6 or greater",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null, null] }],\n    numberOfUnits: 6\n};\nvar action = {\n    type: \"INCREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null, null] }],\n    numberOfUnits: 6\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "9327e82b-026c-4021-9b16-2883a0e0c57a",
      "parentUUID": "c98a12b4-669c-4035-9011-6fa8b150b0cc",
      "skipped": false
    },
    {
      "title": "Should decrease the study load if the study load is greater than 4",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should decrease the study load if the study load is greater than 4",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "d54f81db-47f3-4df1-a4ee-72f2fa91afef",
      "parentUUID": "2bc6f4c1-854f-4c1f-83bd-0f2b3f66d793",
      "skipped": false
    },
    {
      "title": "Should not decrease the study load if the study load is 4 or less",
      "fullTitle": "ACTION: DECREASE_STUDY_LOAD Should not decrease the study load if the study load is 4 or less",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"DECREASE_STUDY_LOAD\"\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e4c6ab0f-0bcf-4c28-8f86-9df4ee20dbbe",
      "parentUUID": "2bc6f4c1-854f-4c1f-83bd-0f2b3f66d793",
      "skipped": false
    },
    {
      "title": "Should remove all teaching periods and set the amount of units to 4",
      "fullTitle": "ACTION: CLEAR_COURSE Should remove all teaching periods and set the amount of units to 4",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2018, code: \"S2-01\", units: [null, null, null, null, null] }],\n    numberOfUnits: 5\n};\nvar action = {\n    type: \"CLEAR_COURSE\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "503e12df-eb2f-43d5-b092-d7a5079053ab",
      "parentUUID": "74a6bc3e-01cc-4659-a4ba-b2442f21d00b",
      "skipped": false
    },
    {
      "title": "Should add a unit correctly to the start of an array",
      "fullTitle": "ACTION: ADD_UNIT Should add a unit correctly to the start of an array",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "550184b5-fbcc-4c30-b5ce-22ca82c40f53",
      "parentUUID": "db422318-61ac-40ad-8bc0-38ad60e1c6c2",
      "skipped": false
    },
    {
      "title": "Should add a unit correctly to the middle of an array",
      "fullTitle": "ACTION: ADD_UNIT Should add a unit correctly to the middle of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "8849336f-ecd0-4ee2-b0ec-5001c2a3730e",
      "parentUUID": "db422318-61ac-40ad-8bc0-38ad60e1c6c2",
      "skipped": false
    },
    {
      "title": "Should add a unit correctly to the end of an array",
      "fullTitle": "ACTION: ADD_UNIT Should add a unit correctly to the end of an array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"ADD_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3,\n    unit: { unitCode: \"XXX0001\", unitName: \"Test Unit\" }\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "5c85b0ac-e032-4c8e-9091-110b7ad47695",
      "parentUUID": "db422318-61ac-40ad-8bc0-38ad60e1c6c2",
      "skipped": false
    },
    {
      "title": "Should remove a unit correctly frpm the start of an array",
      "fullTitle": "ACTION: REMOVE_UNIT Should remove a unit correctly frpm the start of an array",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [{ unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 0,\n    unitIndex: 0\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "e9b784d5-0cbd-4d6c-8ada-570738bbcef8",
      "parentUUID": "41bba2c0-ac4e-40a3-913e-b66437ee8392",
      "skipped": false
    },
    {
      "title": "Should remove a unit correctly from the middle of an array",
      "fullTitle": "ACTION: REMOVE_UNIT Should remove a unit correctly from the middle of an array",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 1,\n    unitIndex: 1\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a8a25c40-f5c1-4731-8fca-23f541deb8f3",
      "parentUUID": "41bba2c0-ac4e-40a3-913e-b66437ee8392",
      "skipped": false
    },
    {
      "title": "Should remove a unit correctly from the end of an array",
      "fullTitle": "ACTION: REMOVE_UNIT Should remove a unit correctly from the end of an array",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, { unitCode: \"XXX0001\", unitName: \"Test Unit\" }] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"REMOVE_UNIT\",\n    tpIndex: 2,\n    unitIndex: 3\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2017, code: \"S2-01\", units: [null, null, null, null] }, { year: 2018, code: \"S2-01\", units: [null, null, null, null] }, { year: 2019, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "95b89b6f-cb21-4367-8062-6a6191678d5d",
      "parentUUID": "41bba2c0-ac4e-40a3-913e-b66437ee8392",
      "skipped": false
    },
    {
      "title": "Should generate a course structure with valid start and end years",
      "fullTitle": "ACTION: GENERATE_COURSE Should generate a course structure with valid start and end years",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2014,\n    endYear: 2016\n};\nvar stateAfter = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "eda0b474-0473-49b4-a22f-47535cffbc15",
      "parentUUID": "eb671001-03ee-412b-b6db-4b41e4d8fa71",
      "skipped": false
    },
    {
      "title": "Should return an empty course structure with invalid start and end years.",
      "fullTitle": "ACTION: GENERATE_COURSE Should return an empty course structure with invalid start and end years.",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [{ year: 2014, code: \"S1-01\", units: [null, null, null, null] }, { year: 2014, code: \"S2-01\", units: [null, null, null, null] }, { year: 2015, code: \"S1-01\", units: [null, null, null, null] }, { year: 2015, code: \"S2-01\", units: [null, null, null, null] }, { year: 2016, code: \"S1-01\", units: [null, null, null, null] }, { year: 2016, code: \"S2-01\", units: [null, null, null, null] }],\n    numberOfUnits: 4\n};\nvar action = {\n    type: \"GENERATE_COURSE\",\n    startYear: 2017,\n    endYear: 2013\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "929770de-fabb-43be-9489-3ce0d5a7a5f2",
      "parentUUID": "eb671001-03ee-412b-b6db-4b41e4d8fa71",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course info is loading",
      "fullTitle": "ACTION: FETCH_COURSE_INFO_PENDING Should correctly show that the course info is loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "bf647b6c-9402-474e-8a13-334f401ab56a",
      "parentUUID": "9bfe0a63-9427-48db-94e2-05a9eb06358e",
      "skipped": false
    },
    {
      "title": "Should correctly return the payload and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    focusedCourse: null,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_FULFILLED\",\n    payload: { data: {\n            courseName: \"Test Course\",\n            mangFac: \"Test Faculty\",\n            creditPoints: 100,\n            courseDescrip: \"Test Description\",\n            courseDuration: \"Test Duration\",\n            modeLoc: \"Test mode and location\",\n            courseAward: \"Test awards\",\n            abrevTitle: \"Test abreviated title\"\n        } },\n    courseCode: \"COURSE101\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: {\n        courseName: \"Test Course\",\n        faculty: \"Test Faculty\",\n        creditPoints: 100,\n        courseDescription: \"Test Description\",\n        durationStr: \"Test Duration\",\n        modeAndLocation: \"Test mode and location\",\n        awards: \"Test awards\",\n        abrTitle: \"Test abreviated title\"\n    },\n    focusedCourse: \"COURSE101\"\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "12fec0f5-633c-47c2-a897-9b60c7424bfa",
      "parentUUID": "eb38b40e-1d38-4426-996c-b0d176361b80",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course info fetch failed and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_INFO_REJECTED Should correctly show that the course info fetch failed and show that it is no longer loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: true,\n    courseInfo: null\n};\nvar action = {\n    type: \"FETCH_COURSE_INFO_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: true,\n    unitLoadError: false,\n    unitLoading: false,\n    courseInfoLoading: false,\n    courseInfo: null\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "f002ebd2-0d35-429c-a3dc-9f5bad92e73e",
      "parentUUID": "24f4b033-2db0-4696-aab4-2f1cd3b8377c",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course template is loading",
      "fullTitle": "ACTION: FETCH_COURSE_TEMPLATE_PENDING Should correctly show that the course template is loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "83fee5be-d192-4c6f-8a20-771e45ab7343",
      "parentUUID": "5ca018c0-7f54-403d-910f-38bb71ec2ef7",
      "skipped": false
    },
    {
      "title": "Should correctly return the payload and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_TEMPLATE_FULFILLED Should correctly return the payload and show that it is no longer loading",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_FULFILLED\",\n    payload: { data: \"Fake Course Template\" }\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: \"Fake Course Template\"\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ef8378a5-b9a6-4f9a-b770-864ba0177a12",
      "parentUUID": "9261c652-eb97-4d23-9748-5c4266f274e7",
      "skipped": false
    },
    {
      "title": "Should correctly show that the course template fetch failed and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_COURSE_TEMPLATE_REJECTED Should correctly show that the course template fetch failed and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: true,\n    courseTemplateData: null\n};\nvar action = {\n    type: \"FETCH_COURSE_TEMPLATE_REJECTED\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: true,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    courseTemplateData: null\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "4ec6b05f-52df-46d6-8823-e9088302917c",
      "parentUUID": "9ce6fc8e-4adb-4eb4-acb7-0112abbaf851",
      "skipped": false
    },
    {
      "title": "Should correctly show that the unit info is loading",
      "fullTitle": "ACTION: FETCH_UNIT_INFO_PENDING Should correctly show that the unit info is loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_PENDING\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: null\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c6068d5d-c7f9-4c3f-ac07-db98b47c4309",
      "parentUUID": "033ce48f-cc6d-40b3-999c-e0c4f0653c24",
      "skipped": false
    },
    {
      "title": "Should correctly return the payload and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_UNIT_INFO_FULFILLED Should correctly return the payload and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: null\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_FULFILLED\",\n    payload: { data: \"Fake Unit Info\" },\n    unitCode: \"FAKE1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: \"Fake Unit Info\",\n    focusedUnitCode: \"FAKE1001\"\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "ac9fe996-1ac9-401c-8944-c4b9c7e81f41",
      "parentUUID": "76412ecc-cdc2-4634-945a-dcfe395f83e9",
      "skipped": false
    },
    {
      "title": "Should correctly show that the unit info fetch failed and show that it is no longer loading",
      "fullTitle": "ACTION: FETCH_UNIT_INFO_REJECTED Should correctly show that the unit info fetch failed and show that it is no longer loading",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\nvar action = {\n    type: \"FETCH_UNIT_INFO_REJECTED\",\n    payload: \"Error Msg\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: true,\n    unitLoading: false,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\"\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "1f0b7d75-9aaa-4da9-b0c6-e073fdc22620",
      "parentUUID": "67afab9d-2b69-48aa-8d84-74d81dbfdc23",
      "skipped": false
    },
    {
      "title": "Should accurately set the start year and the focused course on submission",
      "fullTitle": "ACTION: SUBMIT_COURSE_FORM Should accurately set the start year and the focused course on submission",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_COURSE_FORM\",\n    startYear: 2020,\n    courseCode: \"TEST1001\"\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: \"TEST1001\",\n    startYear: 2020,\n    endYear: 2020\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "c82d522d-a6dc-4bea-aa51-4507bf7bcaae",
      "parentUUID": "7c9b9b22-29d9-4acf-8624-c1bdee3f1cee",
      "skipped": false
    },
    {
      "title": "Should accurately set the start year and end year on submission",
      "fullTitle": "ACTION: SUBMIT_YEAR_FORM Should accurately set the start year and end year on submission",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var stateBefore = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2016,\n    endYear: 2020\n};\nvar action = {\n    type: \"SUBMIT_YEAR_FORM\",\n    startYear: 2020,\n    endYear: 2025\n};\nvar stateAfter = {\n    teachingPeriods: [],\n    numberOfUnits: 4,\n    courseTemplateLoadError: false,\n    courseInfoLoadError: false,\n    unitLoadError: false,\n    unitLoading: true,\n    courseLoading: false,\n    unitInfo: null,\n    focusedUnitCode: \"FAKE1001\",\n    focusedCourse: null,\n    startYear: 2020,\n    endYear: 2025\n};\n(0, _deepFreeze2.default)(stateBefore);\n(0, _deepFreeze2.default)(action);\n(0, _expect2.default)((0, _CourseStructure2.default)(stateBefore, action)).toEqual(stateAfter);",
      "err": {},
      "isRoot": false,
      "uuid": "a9bb9f9d-1767-4335-81ef-b133fe45973b",
      "parentUUID": "527175d8-75b7-4901-9700-29b65678440e",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2017
}